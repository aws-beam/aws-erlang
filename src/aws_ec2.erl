%% WARNING: DO NOT EDIT, AUTO-GENERATED CODE!
%% See https://github.com/aws-beam/aws-codegen for more details.

%% @doc Amazon Elastic Compute Cloud
%%
%% You can access the features of Amazon Elastic Compute Cloud (Amazon EC2)
%% programmatically.
%%
%% For more information,
%% see the Amazon EC2 Developer Guide:
%% https://docs.aws.amazon.com/ec2/latest/devguide.
-module(aws_ec2).

-export([accept_address_transfer/2,
         accept_address_transfer/3,
         accept_capacity_reservation_billing_ownership/2,
         accept_capacity_reservation_billing_ownership/3,
         accept_reserved_instances_exchange_quote/2,
         accept_reserved_instances_exchange_quote/3,
         accept_transit_gateway_multicast_domain_associations/2,
         accept_transit_gateway_multicast_domain_associations/3,
         accept_transit_gateway_peering_attachment/2,
         accept_transit_gateway_peering_attachment/3,
         accept_transit_gateway_vpc_attachment/2,
         accept_transit_gateway_vpc_attachment/3,
         accept_vpc_endpoint_connections/2,
         accept_vpc_endpoint_connections/3,
         accept_vpc_peering_connection/2,
         accept_vpc_peering_connection/3,
         advertise_byoip_cidr/2,
         advertise_byoip_cidr/3,
         allocate_address/2,
         allocate_address/3,
         allocate_hosts/2,
         allocate_hosts/3,
         allocate_ipam_pool_cidr/2,
         allocate_ipam_pool_cidr/3,
         apply_security_groups_to_client_vpn_target_network/2,
         apply_security_groups_to_client_vpn_target_network/3,
         assign_ipv6_addresses/2,
         assign_ipv6_addresses/3,
         assign_private_ip_addresses/2,
         assign_private_ip_addresses/3,
         assign_private_nat_gateway_address/2,
         assign_private_nat_gateway_address/3,
         associate_address/2,
         associate_address/3,
         associate_capacity_reservation_billing_owner/2,
         associate_capacity_reservation_billing_owner/3,
         associate_client_vpn_target_network/2,
         associate_client_vpn_target_network/3,
         associate_dhcp_options/2,
         associate_dhcp_options/3,
         associate_enclave_certificate_iam_role/2,
         associate_enclave_certificate_iam_role/3,
         associate_iam_instance_profile/2,
         associate_iam_instance_profile/3,
         associate_instance_event_window/2,
         associate_instance_event_window/3,
         associate_ipam_byoasn/2,
         associate_ipam_byoasn/3,
         associate_ipam_resource_discovery/2,
         associate_ipam_resource_discovery/3,
         associate_nat_gateway_address/2,
         associate_nat_gateway_address/3,
         associate_route_server/2,
         associate_route_server/3,
         associate_route_table/2,
         associate_route_table/3,
         associate_security_group_vpc/2,
         associate_security_group_vpc/3,
         associate_subnet_cidr_block/2,
         associate_subnet_cidr_block/3,
         associate_transit_gateway_multicast_domain/2,
         associate_transit_gateway_multicast_domain/3,
         associate_transit_gateway_policy_table/2,
         associate_transit_gateway_policy_table/3,
         associate_transit_gateway_route_table/2,
         associate_transit_gateway_route_table/3,
         associate_trunk_interface/2,
         associate_trunk_interface/3,
         associate_vpc_cidr_block/2,
         associate_vpc_cidr_block/3,
         attach_classic_link_vpc/2,
         attach_classic_link_vpc/3,
         attach_internet_gateway/2,
         attach_internet_gateway/3,
         attach_network_interface/2,
         attach_network_interface/3,
         attach_verified_access_trust_provider/2,
         attach_verified_access_trust_provider/3,
         attach_volume/2,
         attach_volume/3,
         attach_vpn_gateway/2,
         attach_vpn_gateway/3,
         authorize_client_vpn_ingress/2,
         authorize_client_vpn_ingress/3,
         authorize_security_group_egress/2,
         authorize_security_group_egress/3,
         authorize_security_group_ingress/2,
         authorize_security_group_ingress/3,
         bundle_instance/2,
         bundle_instance/3,
         cancel_bundle_task/2,
         cancel_bundle_task/3,
         cancel_capacity_reservation/2,
         cancel_capacity_reservation/3,
         cancel_capacity_reservation_fleets/2,
         cancel_capacity_reservation_fleets/3,
         cancel_conversion_task/2,
         cancel_conversion_task/3,
         cancel_declarative_policies_report/2,
         cancel_declarative_policies_report/3,
         cancel_export_task/2,
         cancel_export_task/3,
         cancel_image_launch_permission/2,
         cancel_image_launch_permission/3,
         cancel_import_task/2,
         cancel_import_task/3,
         cancel_reserved_instances_listing/2,
         cancel_reserved_instances_listing/3,
         cancel_spot_fleet_requests/2,
         cancel_spot_fleet_requests/3,
         cancel_spot_instance_requests/2,
         cancel_spot_instance_requests/3,
         confirm_product_instance/2,
         confirm_product_instance/3,
         copy_fpga_image/2,
         copy_fpga_image/3,
         copy_image/2,
         copy_image/3,
         copy_snapshot/2,
         copy_snapshot/3,
         create_capacity_reservation/2,
         create_capacity_reservation/3,
         create_capacity_reservation_by_splitting/2,
         create_capacity_reservation_by_splitting/3,
         create_capacity_reservation_fleet/2,
         create_capacity_reservation_fleet/3,
         create_carrier_gateway/2,
         create_carrier_gateway/3,
         create_client_vpn_endpoint/2,
         create_client_vpn_endpoint/3,
         create_client_vpn_route/2,
         create_client_vpn_route/3,
         create_coip_cidr/2,
         create_coip_cidr/3,
         create_coip_pool/2,
         create_coip_pool/3,
         create_customer_gateway/2,
         create_customer_gateway/3,
         create_default_subnet/2,
         create_default_subnet/3,
         create_default_vpc/2,
         create_default_vpc/3,
         create_delegate_mac_volume_ownership_task/2,
         create_delegate_mac_volume_ownership_task/3,
         create_dhcp_options/2,
         create_dhcp_options/3,
         create_egress_only_internet_gateway/2,
         create_egress_only_internet_gateway/3,
         create_fleet/2,
         create_fleet/3,
         create_flow_logs/2,
         create_flow_logs/3,
         create_fpga_image/2,
         create_fpga_image/3,
         create_image/2,
         create_image/3,
         create_instance_connect_endpoint/2,
         create_instance_connect_endpoint/3,
         create_instance_event_window/2,
         create_instance_event_window/3,
         create_instance_export_task/2,
         create_instance_export_task/3,
         create_internet_gateway/2,
         create_internet_gateway/3,
         create_ipam/2,
         create_ipam/3,
         create_ipam_external_resource_verification_token/2,
         create_ipam_external_resource_verification_token/3,
         create_ipam_pool/2,
         create_ipam_pool/3,
         create_ipam_resource_discovery/2,
         create_ipam_resource_discovery/3,
         create_ipam_scope/2,
         create_ipam_scope/3,
         create_key_pair/2,
         create_key_pair/3,
         create_launch_template/2,
         create_launch_template/3,
         create_launch_template_version/2,
         create_launch_template_version/3,
         create_local_gateway_route/2,
         create_local_gateway_route/3,
         create_local_gateway_route_table/2,
         create_local_gateway_route_table/3,
         create_local_gateway_route_table_virtual_interface_group_association/2,
         create_local_gateway_route_table_virtual_interface_group_association/3,
         create_local_gateway_route_table_vpc_association/2,
         create_local_gateway_route_table_vpc_association/3,
         create_local_gateway_virtual_interface/2,
         create_local_gateway_virtual_interface/3,
         create_local_gateway_virtual_interface_group/2,
         create_local_gateway_virtual_interface_group/3,
         create_mac_system_integrity_protection_modification_task/2,
         create_mac_system_integrity_protection_modification_task/3,
         create_managed_prefix_list/2,
         create_managed_prefix_list/3,
         create_nat_gateway/2,
         create_nat_gateway/3,
         create_network_acl/2,
         create_network_acl/3,
         create_network_acl_entry/2,
         create_network_acl_entry/3,
         create_network_insights_access_scope/2,
         create_network_insights_access_scope/3,
         create_network_insights_path/2,
         create_network_insights_path/3,
         create_network_interface/2,
         create_network_interface/3,
         create_network_interface_permission/2,
         create_network_interface_permission/3,
         create_placement_group/2,
         create_placement_group/3,
         create_public_ipv4_pool/2,
         create_public_ipv4_pool/3,
         create_replace_root_volume_task/2,
         create_replace_root_volume_task/3,
         create_reserved_instances_listing/2,
         create_reserved_instances_listing/3,
         create_restore_image_task/2,
         create_restore_image_task/3,
         create_route/2,
         create_route/3,
         create_route_server/2,
         create_route_server/3,
         create_route_server_endpoint/2,
         create_route_server_endpoint/3,
         create_route_server_peer/2,
         create_route_server_peer/3,
         create_route_table/2,
         create_route_table/3,
         create_security_group/2,
         create_security_group/3,
         create_snapshot/2,
         create_snapshot/3,
         create_snapshots/2,
         create_snapshots/3,
         create_spot_datafeed_subscription/2,
         create_spot_datafeed_subscription/3,
         create_store_image_task/2,
         create_store_image_task/3,
         create_subnet/2,
         create_subnet/3,
         create_subnet_cidr_reservation/2,
         create_subnet_cidr_reservation/3,
         create_tags/2,
         create_tags/3,
         create_traffic_mirror_filter/2,
         create_traffic_mirror_filter/3,
         create_traffic_mirror_filter_rule/2,
         create_traffic_mirror_filter_rule/3,
         create_traffic_mirror_session/2,
         create_traffic_mirror_session/3,
         create_traffic_mirror_target/2,
         create_traffic_mirror_target/3,
         create_transit_gateway/2,
         create_transit_gateway/3,
         create_transit_gateway_connect/2,
         create_transit_gateway_connect/3,
         create_transit_gateway_connect_peer/2,
         create_transit_gateway_connect_peer/3,
         create_transit_gateway_multicast_domain/2,
         create_transit_gateway_multicast_domain/3,
         create_transit_gateway_peering_attachment/2,
         create_transit_gateway_peering_attachment/3,
         create_transit_gateway_policy_table/2,
         create_transit_gateway_policy_table/3,
         create_transit_gateway_prefix_list_reference/2,
         create_transit_gateway_prefix_list_reference/3,
         create_transit_gateway_route/2,
         create_transit_gateway_route/3,
         create_transit_gateway_route_table/2,
         create_transit_gateway_route_table/3,
         create_transit_gateway_route_table_announcement/2,
         create_transit_gateway_route_table_announcement/3,
         create_transit_gateway_vpc_attachment/2,
         create_transit_gateway_vpc_attachment/3,
         create_verified_access_endpoint/2,
         create_verified_access_endpoint/3,
         create_verified_access_group/2,
         create_verified_access_group/3,
         create_verified_access_instance/2,
         create_verified_access_instance/3,
         create_verified_access_trust_provider/2,
         create_verified_access_trust_provider/3,
         create_volume/2,
         create_volume/3,
         create_vpc/2,
         create_vpc/3,
         create_vpc_block_public_access_exclusion/2,
         create_vpc_block_public_access_exclusion/3,
         create_vpc_endpoint/2,
         create_vpc_endpoint/3,
         create_vpc_endpoint_connection_notification/2,
         create_vpc_endpoint_connection_notification/3,
         create_vpc_endpoint_service_configuration/2,
         create_vpc_endpoint_service_configuration/3,
         create_vpc_peering_connection/2,
         create_vpc_peering_connection/3,
         create_vpn_connection/2,
         create_vpn_connection/3,
         create_vpn_connection_route/2,
         create_vpn_connection_route/3,
         create_vpn_gateway/2,
         create_vpn_gateway/3,
         delete_carrier_gateway/2,
         delete_carrier_gateway/3,
         delete_client_vpn_endpoint/2,
         delete_client_vpn_endpoint/3,
         delete_client_vpn_route/2,
         delete_client_vpn_route/3,
         delete_coip_cidr/2,
         delete_coip_cidr/3,
         delete_coip_pool/2,
         delete_coip_pool/3,
         delete_customer_gateway/2,
         delete_customer_gateway/3,
         delete_dhcp_options/2,
         delete_dhcp_options/3,
         delete_egress_only_internet_gateway/2,
         delete_egress_only_internet_gateway/3,
         delete_fleets/2,
         delete_fleets/3,
         delete_flow_logs/2,
         delete_flow_logs/3,
         delete_fpga_image/2,
         delete_fpga_image/3,
         delete_instance_connect_endpoint/2,
         delete_instance_connect_endpoint/3,
         delete_instance_event_window/2,
         delete_instance_event_window/3,
         delete_internet_gateway/2,
         delete_internet_gateway/3,
         delete_ipam/2,
         delete_ipam/3,
         delete_ipam_external_resource_verification_token/2,
         delete_ipam_external_resource_verification_token/3,
         delete_ipam_pool/2,
         delete_ipam_pool/3,
         delete_ipam_resource_discovery/2,
         delete_ipam_resource_discovery/3,
         delete_ipam_scope/2,
         delete_ipam_scope/3,
         delete_key_pair/2,
         delete_key_pair/3,
         delete_launch_template/2,
         delete_launch_template/3,
         delete_launch_template_versions/2,
         delete_launch_template_versions/3,
         delete_local_gateway_route/2,
         delete_local_gateway_route/3,
         delete_local_gateway_route_table/2,
         delete_local_gateway_route_table/3,
         delete_local_gateway_route_table_virtual_interface_group_association/2,
         delete_local_gateway_route_table_virtual_interface_group_association/3,
         delete_local_gateway_route_table_vpc_association/2,
         delete_local_gateway_route_table_vpc_association/3,
         delete_local_gateway_virtual_interface/2,
         delete_local_gateway_virtual_interface/3,
         delete_local_gateway_virtual_interface_group/2,
         delete_local_gateway_virtual_interface_group/3,
         delete_managed_prefix_list/2,
         delete_managed_prefix_list/3,
         delete_nat_gateway/2,
         delete_nat_gateway/3,
         delete_network_acl/2,
         delete_network_acl/3,
         delete_network_acl_entry/2,
         delete_network_acl_entry/3,
         delete_network_insights_access_scope/2,
         delete_network_insights_access_scope/3,
         delete_network_insights_access_scope_analysis/2,
         delete_network_insights_access_scope_analysis/3,
         delete_network_insights_analysis/2,
         delete_network_insights_analysis/3,
         delete_network_insights_path/2,
         delete_network_insights_path/3,
         delete_network_interface/2,
         delete_network_interface/3,
         delete_network_interface_permission/2,
         delete_network_interface_permission/3,
         delete_placement_group/2,
         delete_placement_group/3,
         delete_public_ipv4_pool/2,
         delete_public_ipv4_pool/3,
         delete_queued_reserved_instances/2,
         delete_queued_reserved_instances/3,
         delete_route/2,
         delete_route/3,
         delete_route_server/2,
         delete_route_server/3,
         delete_route_server_endpoint/2,
         delete_route_server_endpoint/3,
         delete_route_server_peer/2,
         delete_route_server_peer/3,
         delete_route_table/2,
         delete_route_table/3,
         delete_security_group/2,
         delete_security_group/3,
         delete_snapshot/2,
         delete_snapshot/3,
         delete_spot_datafeed_subscription/2,
         delete_spot_datafeed_subscription/3,
         delete_subnet/2,
         delete_subnet/3,
         delete_subnet_cidr_reservation/2,
         delete_subnet_cidr_reservation/3,
         delete_tags/2,
         delete_tags/3,
         delete_traffic_mirror_filter/2,
         delete_traffic_mirror_filter/3,
         delete_traffic_mirror_filter_rule/2,
         delete_traffic_mirror_filter_rule/3,
         delete_traffic_mirror_session/2,
         delete_traffic_mirror_session/3,
         delete_traffic_mirror_target/2,
         delete_traffic_mirror_target/3,
         delete_transit_gateway/2,
         delete_transit_gateway/3,
         delete_transit_gateway_connect/2,
         delete_transit_gateway_connect/3,
         delete_transit_gateway_connect_peer/2,
         delete_transit_gateway_connect_peer/3,
         delete_transit_gateway_multicast_domain/2,
         delete_transit_gateway_multicast_domain/3,
         delete_transit_gateway_peering_attachment/2,
         delete_transit_gateway_peering_attachment/3,
         delete_transit_gateway_policy_table/2,
         delete_transit_gateway_policy_table/3,
         delete_transit_gateway_prefix_list_reference/2,
         delete_transit_gateway_prefix_list_reference/3,
         delete_transit_gateway_route/2,
         delete_transit_gateway_route/3,
         delete_transit_gateway_route_table/2,
         delete_transit_gateway_route_table/3,
         delete_transit_gateway_route_table_announcement/2,
         delete_transit_gateway_route_table_announcement/3,
         delete_transit_gateway_vpc_attachment/2,
         delete_transit_gateway_vpc_attachment/3,
         delete_verified_access_endpoint/2,
         delete_verified_access_endpoint/3,
         delete_verified_access_group/2,
         delete_verified_access_group/3,
         delete_verified_access_instance/2,
         delete_verified_access_instance/3,
         delete_verified_access_trust_provider/2,
         delete_verified_access_trust_provider/3,
         delete_volume/2,
         delete_volume/3,
         delete_vpc/2,
         delete_vpc/3,
         delete_vpc_block_public_access_exclusion/2,
         delete_vpc_block_public_access_exclusion/3,
         delete_vpc_endpoint_connection_notifications/2,
         delete_vpc_endpoint_connection_notifications/3,
         delete_vpc_endpoint_service_configurations/2,
         delete_vpc_endpoint_service_configurations/3,
         delete_vpc_endpoints/2,
         delete_vpc_endpoints/3,
         delete_vpc_peering_connection/2,
         delete_vpc_peering_connection/3,
         delete_vpn_connection/2,
         delete_vpn_connection/3,
         delete_vpn_connection_route/2,
         delete_vpn_connection_route/3,
         delete_vpn_gateway/2,
         delete_vpn_gateway/3,
         deprovision_byoip_cidr/2,
         deprovision_byoip_cidr/3,
         deprovision_ipam_byoasn/2,
         deprovision_ipam_byoasn/3,
         deprovision_ipam_pool_cidr/2,
         deprovision_ipam_pool_cidr/3,
         deprovision_public_ipv4_pool_cidr/2,
         deprovision_public_ipv4_pool_cidr/3,
         deregister_image/2,
         deregister_image/3,
         deregister_instance_event_notification_attributes/2,
         deregister_instance_event_notification_attributes/3,
         deregister_transit_gateway_multicast_group_members/2,
         deregister_transit_gateway_multicast_group_members/3,
         deregister_transit_gateway_multicast_group_sources/2,
         deregister_transit_gateway_multicast_group_sources/3,
         describe_account_attributes/2,
         describe_account_attributes/3,
         describe_address_transfers/2,
         describe_address_transfers/3,
         describe_addresses/2,
         describe_addresses/3,
         describe_addresses_attribute/2,
         describe_addresses_attribute/3,
         describe_aggregate_id_format/2,
         describe_aggregate_id_format/3,
         describe_availability_zones/2,
         describe_availability_zones/3,
         describe_aws_network_performance_metric_subscriptions/2,
         describe_aws_network_performance_metric_subscriptions/3,
         describe_bundle_tasks/2,
         describe_bundle_tasks/3,
         describe_byoip_cidrs/2,
         describe_byoip_cidrs/3,
         describe_capacity_block_extension_history/2,
         describe_capacity_block_extension_history/3,
         describe_capacity_block_extension_offerings/2,
         describe_capacity_block_extension_offerings/3,
         describe_capacity_block_offerings/2,
         describe_capacity_block_offerings/3,
         describe_capacity_block_status/2,
         describe_capacity_block_status/3,
         describe_capacity_blocks/2,
         describe_capacity_blocks/3,
         describe_capacity_reservation_billing_requests/2,
         describe_capacity_reservation_billing_requests/3,
         describe_capacity_reservation_fleets/2,
         describe_capacity_reservation_fleets/3,
         describe_capacity_reservations/2,
         describe_capacity_reservations/3,
         describe_carrier_gateways/2,
         describe_carrier_gateways/3,
         describe_classic_link_instances/2,
         describe_classic_link_instances/3,
         describe_client_vpn_authorization_rules/2,
         describe_client_vpn_authorization_rules/3,
         describe_client_vpn_connections/2,
         describe_client_vpn_connections/3,
         describe_client_vpn_endpoints/2,
         describe_client_vpn_endpoints/3,
         describe_client_vpn_routes/2,
         describe_client_vpn_routes/3,
         describe_client_vpn_target_networks/2,
         describe_client_vpn_target_networks/3,
         describe_coip_pools/2,
         describe_coip_pools/3,
         describe_conversion_tasks/2,
         describe_conversion_tasks/3,
         describe_customer_gateways/2,
         describe_customer_gateways/3,
         describe_declarative_policies_reports/2,
         describe_declarative_policies_reports/3,
         describe_dhcp_options/2,
         describe_dhcp_options/3,
         describe_egress_only_internet_gateways/2,
         describe_egress_only_internet_gateways/3,
         describe_elastic_gpus/2,
         describe_elastic_gpus/3,
         describe_export_image_tasks/2,
         describe_export_image_tasks/3,
         describe_export_tasks/2,
         describe_export_tasks/3,
         describe_fast_launch_images/2,
         describe_fast_launch_images/3,
         describe_fast_snapshot_restores/2,
         describe_fast_snapshot_restores/3,
         describe_fleet_history/2,
         describe_fleet_history/3,
         describe_fleet_instances/2,
         describe_fleet_instances/3,
         describe_fleets/2,
         describe_fleets/3,
         describe_flow_logs/2,
         describe_flow_logs/3,
         describe_fpga_image_attribute/2,
         describe_fpga_image_attribute/3,
         describe_fpga_images/2,
         describe_fpga_images/3,
         describe_host_reservation_offerings/2,
         describe_host_reservation_offerings/3,
         describe_host_reservations/2,
         describe_host_reservations/3,
         describe_hosts/2,
         describe_hosts/3,
         describe_iam_instance_profile_associations/2,
         describe_iam_instance_profile_associations/3,
         describe_id_format/2,
         describe_id_format/3,
         describe_identity_id_format/2,
         describe_identity_id_format/3,
         describe_image_attribute/2,
         describe_image_attribute/3,
         describe_images/2,
         describe_images/3,
         describe_import_image_tasks/2,
         describe_import_image_tasks/3,
         describe_import_snapshot_tasks/2,
         describe_import_snapshot_tasks/3,
         describe_instance_attribute/2,
         describe_instance_attribute/3,
         describe_instance_connect_endpoints/2,
         describe_instance_connect_endpoints/3,
         describe_instance_credit_specifications/2,
         describe_instance_credit_specifications/3,
         describe_instance_event_notification_attributes/2,
         describe_instance_event_notification_attributes/3,
         describe_instance_event_windows/2,
         describe_instance_event_windows/3,
         describe_instance_image_metadata/2,
         describe_instance_image_metadata/3,
         describe_instance_status/2,
         describe_instance_status/3,
         describe_instance_topology/2,
         describe_instance_topology/3,
         describe_instance_type_offerings/2,
         describe_instance_type_offerings/3,
         describe_instance_types/2,
         describe_instance_types/3,
         describe_instances/2,
         describe_instances/3,
         describe_internet_gateways/2,
         describe_internet_gateways/3,
         describe_ipam_byoasn/2,
         describe_ipam_byoasn/3,
         describe_ipam_external_resource_verification_tokens/2,
         describe_ipam_external_resource_verification_tokens/3,
         describe_ipam_pools/2,
         describe_ipam_pools/3,
         describe_ipam_resource_discoveries/2,
         describe_ipam_resource_discoveries/3,
         describe_ipam_resource_discovery_associations/2,
         describe_ipam_resource_discovery_associations/3,
         describe_ipam_scopes/2,
         describe_ipam_scopes/3,
         describe_ipams/2,
         describe_ipams/3,
         describe_ipv6_pools/2,
         describe_ipv6_pools/3,
         describe_key_pairs/2,
         describe_key_pairs/3,
         describe_launch_template_versions/2,
         describe_launch_template_versions/3,
         describe_launch_templates/2,
         describe_launch_templates/3,
         describe_local_gateway_route_table_virtual_interface_group_associations/2,
         describe_local_gateway_route_table_virtual_interface_group_associations/3,
         describe_local_gateway_route_table_vpc_associations/2,
         describe_local_gateway_route_table_vpc_associations/3,
         describe_local_gateway_route_tables/2,
         describe_local_gateway_route_tables/3,
         describe_local_gateway_virtual_interface_groups/2,
         describe_local_gateway_virtual_interface_groups/3,
         describe_local_gateway_virtual_interfaces/2,
         describe_local_gateway_virtual_interfaces/3,
         describe_local_gateways/2,
         describe_local_gateways/3,
         describe_locked_snapshots/2,
         describe_locked_snapshots/3,
         describe_mac_hosts/2,
         describe_mac_hosts/3,
         describe_mac_modification_tasks/2,
         describe_mac_modification_tasks/3,
         describe_managed_prefix_lists/2,
         describe_managed_prefix_lists/3,
         describe_moving_addresses/2,
         describe_moving_addresses/3,
         describe_nat_gateways/2,
         describe_nat_gateways/3,
         describe_network_acls/2,
         describe_network_acls/3,
         describe_network_insights_access_scope_analyses/2,
         describe_network_insights_access_scope_analyses/3,
         describe_network_insights_access_scopes/2,
         describe_network_insights_access_scopes/3,
         describe_network_insights_analyses/2,
         describe_network_insights_analyses/3,
         describe_network_insights_paths/2,
         describe_network_insights_paths/3,
         describe_network_interface_attribute/2,
         describe_network_interface_attribute/3,
         describe_network_interface_permissions/2,
         describe_network_interface_permissions/3,
         describe_network_interfaces/2,
         describe_network_interfaces/3,
         describe_outpost_lags/2,
         describe_outpost_lags/3,
         describe_placement_groups/2,
         describe_placement_groups/3,
         describe_prefix_lists/2,
         describe_prefix_lists/3,
         describe_principal_id_format/2,
         describe_principal_id_format/3,
         describe_public_ipv4_pools/2,
         describe_public_ipv4_pools/3,
         describe_regions/2,
         describe_regions/3,
         describe_replace_root_volume_tasks/2,
         describe_replace_root_volume_tasks/3,
         describe_reserved_instances/2,
         describe_reserved_instances/3,
         describe_reserved_instances_listings/2,
         describe_reserved_instances_listings/3,
         describe_reserved_instances_modifications/2,
         describe_reserved_instances_modifications/3,
         describe_reserved_instances_offerings/2,
         describe_reserved_instances_offerings/3,
         describe_route_server_endpoints/2,
         describe_route_server_endpoints/3,
         describe_route_server_peers/2,
         describe_route_server_peers/3,
         describe_route_servers/2,
         describe_route_servers/3,
         describe_route_tables/2,
         describe_route_tables/3,
         describe_scheduled_instance_availability/2,
         describe_scheduled_instance_availability/3,
         describe_scheduled_instances/2,
         describe_scheduled_instances/3,
         describe_security_group_references/2,
         describe_security_group_references/3,
         describe_security_group_rules/2,
         describe_security_group_rules/3,
         describe_security_group_vpc_associations/2,
         describe_security_group_vpc_associations/3,
         describe_security_groups/2,
         describe_security_groups/3,
         describe_service_link_virtual_interfaces/2,
         describe_service_link_virtual_interfaces/3,
         describe_snapshot_attribute/2,
         describe_snapshot_attribute/3,
         describe_snapshot_tier_status/2,
         describe_snapshot_tier_status/3,
         describe_snapshots/2,
         describe_snapshots/3,
         describe_spot_datafeed_subscription/2,
         describe_spot_datafeed_subscription/3,
         describe_spot_fleet_instances/2,
         describe_spot_fleet_instances/3,
         describe_spot_fleet_request_history/2,
         describe_spot_fleet_request_history/3,
         describe_spot_fleet_requests/2,
         describe_spot_fleet_requests/3,
         describe_spot_instance_requests/2,
         describe_spot_instance_requests/3,
         describe_spot_price_history/2,
         describe_spot_price_history/3,
         describe_stale_security_groups/2,
         describe_stale_security_groups/3,
         describe_store_image_tasks/2,
         describe_store_image_tasks/3,
         describe_subnets/2,
         describe_subnets/3,
         describe_tags/2,
         describe_tags/3,
         describe_traffic_mirror_filter_rules/2,
         describe_traffic_mirror_filter_rules/3,
         describe_traffic_mirror_filters/2,
         describe_traffic_mirror_filters/3,
         describe_traffic_mirror_sessions/2,
         describe_traffic_mirror_sessions/3,
         describe_traffic_mirror_targets/2,
         describe_traffic_mirror_targets/3,
         describe_transit_gateway_attachments/2,
         describe_transit_gateway_attachments/3,
         describe_transit_gateway_connect_peers/2,
         describe_transit_gateway_connect_peers/3,
         describe_transit_gateway_connects/2,
         describe_transit_gateway_connects/3,
         describe_transit_gateway_multicast_domains/2,
         describe_transit_gateway_multicast_domains/3,
         describe_transit_gateway_peering_attachments/2,
         describe_transit_gateway_peering_attachments/3,
         describe_transit_gateway_policy_tables/2,
         describe_transit_gateway_policy_tables/3,
         describe_transit_gateway_route_table_announcements/2,
         describe_transit_gateway_route_table_announcements/3,
         describe_transit_gateway_route_tables/2,
         describe_transit_gateway_route_tables/3,
         describe_transit_gateway_vpc_attachments/2,
         describe_transit_gateway_vpc_attachments/3,
         describe_transit_gateways/2,
         describe_transit_gateways/3,
         describe_trunk_interface_associations/2,
         describe_trunk_interface_associations/3,
         describe_verified_access_endpoints/2,
         describe_verified_access_endpoints/3,
         describe_verified_access_groups/2,
         describe_verified_access_groups/3,
         describe_verified_access_instance_logging_configurations/2,
         describe_verified_access_instance_logging_configurations/3,
         describe_verified_access_instances/2,
         describe_verified_access_instances/3,
         describe_verified_access_trust_providers/2,
         describe_verified_access_trust_providers/3,
         describe_volume_attribute/2,
         describe_volume_attribute/3,
         describe_volume_status/2,
         describe_volume_status/3,
         describe_volumes/2,
         describe_volumes/3,
         describe_volumes_modifications/2,
         describe_volumes_modifications/3,
         describe_vpc_attribute/2,
         describe_vpc_attribute/3,
         describe_vpc_block_public_access_exclusions/2,
         describe_vpc_block_public_access_exclusions/3,
         describe_vpc_block_public_access_options/2,
         describe_vpc_block_public_access_options/3,
         describe_vpc_classic_link/2,
         describe_vpc_classic_link/3,
         describe_vpc_classic_link_dns_support/2,
         describe_vpc_classic_link_dns_support/3,
         describe_vpc_endpoint_associations/2,
         describe_vpc_endpoint_associations/3,
         describe_vpc_endpoint_connection_notifications/2,
         describe_vpc_endpoint_connection_notifications/3,
         describe_vpc_endpoint_connections/2,
         describe_vpc_endpoint_connections/3,
         describe_vpc_endpoint_service_configurations/2,
         describe_vpc_endpoint_service_configurations/3,
         describe_vpc_endpoint_service_permissions/2,
         describe_vpc_endpoint_service_permissions/3,
         describe_vpc_endpoint_services/2,
         describe_vpc_endpoint_services/3,
         describe_vpc_endpoints/2,
         describe_vpc_endpoints/3,
         describe_vpc_peering_connections/2,
         describe_vpc_peering_connections/3,
         describe_vpcs/2,
         describe_vpcs/3,
         describe_vpn_connections/2,
         describe_vpn_connections/3,
         describe_vpn_gateways/2,
         describe_vpn_gateways/3,
         detach_classic_link_vpc/2,
         detach_classic_link_vpc/3,
         detach_internet_gateway/2,
         detach_internet_gateway/3,
         detach_network_interface/2,
         detach_network_interface/3,
         detach_verified_access_trust_provider/2,
         detach_verified_access_trust_provider/3,
         detach_volume/2,
         detach_volume/3,
         detach_vpn_gateway/2,
         detach_vpn_gateway/3,
         disable_address_transfer/2,
         disable_address_transfer/3,
         disable_allowed_images_settings/2,
         disable_allowed_images_settings/3,
         disable_aws_network_performance_metric_subscription/2,
         disable_aws_network_performance_metric_subscription/3,
         disable_ebs_encryption_by_default/2,
         disable_ebs_encryption_by_default/3,
         disable_fast_launch/2,
         disable_fast_launch/3,
         disable_fast_snapshot_restores/2,
         disable_fast_snapshot_restores/3,
         disable_image/2,
         disable_image/3,
         disable_image_block_public_access/2,
         disable_image_block_public_access/3,
         disable_image_deprecation/2,
         disable_image_deprecation/3,
         disable_image_deregistration_protection/2,
         disable_image_deregistration_protection/3,
         disable_ipam_organization_admin_account/2,
         disable_ipam_organization_admin_account/3,
         disable_route_server_propagation/2,
         disable_route_server_propagation/3,
         disable_serial_console_access/2,
         disable_serial_console_access/3,
         disable_snapshot_block_public_access/2,
         disable_snapshot_block_public_access/3,
         disable_transit_gateway_route_table_propagation/2,
         disable_transit_gateway_route_table_propagation/3,
         disable_vgw_route_propagation/2,
         disable_vgw_route_propagation/3,
         disable_vpc_classic_link/2,
         disable_vpc_classic_link/3,
         disable_vpc_classic_link_dns_support/2,
         disable_vpc_classic_link_dns_support/3,
         disassociate_address/2,
         disassociate_address/3,
         disassociate_capacity_reservation_billing_owner/2,
         disassociate_capacity_reservation_billing_owner/3,
         disassociate_client_vpn_target_network/2,
         disassociate_client_vpn_target_network/3,
         disassociate_enclave_certificate_iam_role/2,
         disassociate_enclave_certificate_iam_role/3,
         disassociate_iam_instance_profile/2,
         disassociate_iam_instance_profile/3,
         disassociate_instance_event_window/2,
         disassociate_instance_event_window/3,
         disassociate_ipam_byoasn/2,
         disassociate_ipam_byoasn/3,
         disassociate_ipam_resource_discovery/2,
         disassociate_ipam_resource_discovery/3,
         disassociate_nat_gateway_address/2,
         disassociate_nat_gateway_address/3,
         disassociate_route_server/2,
         disassociate_route_server/3,
         disassociate_route_table/2,
         disassociate_route_table/3,
         disassociate_security_group_vpc/2,
         disassociate_security_group_vpc/3,
         disassociate_subnet_cidr_block/2,
         disassociate_subnet_cidr_block/3,
         disassociate_transit_gateway_multicast_domain/2,
         disassociate_transit_gateway_multicast_domain/3,
         disassociate_transit_gateway_policy_table/2,
         disassociate_transit_gateway_policy_table/3,
         disassociate_transit_gateway_route_table/2,
         disassociate_transit_gateway_route_table/3,
         disassociate_trunk_interface/2,
         disassociate_trunk_interface/3,
         disassociate_vpc_cidr_block/2,
         disassociate_vpc_cidr_block/3,
         enable_address_transfer/2,
         enable_address_transfer/3,
         enable_allowed_images_settings/2,
         enable_allowed_images_settings/3,
         enable_aws_network_performance_metric_subscription/2,
         enable_aws_network_performance_metric_subscription/3,
         enable_ebs_encryption_by_default/2,
         enable_ebs_encryption_by_default/3,
         enable_fast_launch/2,
         enable_fast_launch/3,
         enable_fast_snapshot_restores/2,
         enable_fast_snapshot_restores/3,
         enable_image/2,
         enable_image/3,
         enable_image_block_public_access/2,
         enable_image_block_public_access/3,
         enable_image_deprecation/2,
         enable_image_deprecation/3,
         enable_image_deregistration_protection/2,
         enable_image_deregistration_protection/3,
         enable_ipam_organization_admin_account/2,
         enable_ipam_organization_admin_account/3,
         enable_reachability_analyzer_organization_sharing/2,
         enable_reachability_analyzer_organization_sharing/3,
         enable_route_server_propagation/2,
         enable_route_server_propagation/3,
         enable_serial_console_access/2,
         enable_serial_console_access/3,
         enable_snapshot_block_public_access/2,
         enable_snapshot_block_public_access/3,
         enable_transit_gateway_route_table_propagation/2,
         enable_transit_gateway_route_table_propagation/3,
         enable_vgw_route_propagation/2,
         enable_vgw_route_propagation/3,
         enable_volume_i_o/2,
         enable_volume_i_o/3,
         enable_vpc_classic_link/2,
         enable_vpc_classic_link/3,
         enable_vpc_classic_link_dns_support/2,
         enable_vpc_classic_link_dns_support/3,
         export_client_vpn_client_certificate_revocation_list/2,
         export_client_vpn_client_certificate_revocation_list/3,
         export_client_vpn_client_configuration/2,
         export_client_vpn_client_configuration/3,
         export_image/2,
         export_image/3,
         export_transit_gateway_routes/2,
         export_transit_gateway_routes/3,
         export_verified_access_instance_client_configuration/2,
         export_verified_access_instance_client_configuration/3,
         get_active_vpn_tunnel_status/2,
         get_active_vpn_tunnel_status/3,
         get_allowed_images_settings/2,
         get_allowed_images_settings/3,
         get_associated_enclave_certificate_iam_roles/2,
         get_associated_enclave_certificate_iam_roles/3,
         get_associated_ipv6_pool_cidrs/2,
         get_associated_ipv6_pool_cidrs/3,
         get_aws_network_performance_data/2,
         get_aws_network_performance_data/3,
         get_capacity_reservation_usage/2,
         get_capacity_reservation_usage/3,
         get_coip_pool_usage/2,
         get_coip_pool_usage/3,
         get_console_output/2,
         get_console_output/3,
         get_console_screenshot/2,
         get_console_screenshot/3,
         get_declarative_policies_report_summary/2,
         get_declarative_policies_report_summary/3,
         get_default_credit_specification/2,
         get_default_credit_specification/3,
         get_ebs_default_kms_key_id/2,
         get_ebs_default_kms_key_id/3,
         get_ebs_encryption_by_default/2,
         get_ebs_encryption_by_default/3,
         get_flow_logs_integration_template/2,
         get_flow_logs_integration_template/3,
         get_groups_for_capacity_reservation/2,
         get_groups_for_capacity_reservation/3,
         get_host_reservation_purchase_preview/2,
         get_host_reservation_purchase_preview/3,
         get_image_block_public_access_state/2,
         get_image_block_public_access_state/3,
         get_instance_metadata_defaults/2,
         get_instance_metadata_defaults/3,
         get_instance_tpm_ek_pub/2,
         get_instance_tpm_ek_pub/3,
         get_instance_types_from_instance_requirements/2,
         get_instance_types_from_instance_requirements/3,
         get_instance_uefi_data/2,
         get_instance_uefi_data/3,
         get_ipam_address_history/2,
         get_ipam_address_history/3,
         get_ipam_discovered_accounts/2,
         get_ipam_discovered_accounts/3,
         get_ipam_discovered_public_addresses/2,
         get_ipam_discovered_public_addresses/3,
         get_ipam_discovered_resource_cidrs/2,
         get_ipam_discovered_resource_cidrs/3,
         get_ipam_pool_allocations/2,
         get_ipam_pool_allocations/3,
         get_ipam_pool_cidrs/2,
         get_ipam_pool_cidrs/3,
         get_ipam_resource_cidrs/2,
         get_ipam_resource_cidrs/3,
         get_launch_template_data/2,
         get_launch_template_data/3,
         get_managed_prefix_list_associations/2,
         get_managed_prefix_list_associations/3,
         get_managed_prefix_list_entries/2,
         get_managed_prefix_list_entries/3,
         get_network_insights_access_scope_analysis_findings/2,
         get_network_insights_access_scope_analysis_findings/3,
         get_network_insights_access_scope_content/2,
         get_network_insights_access_scope_content/3,
         get_password_data/2,
         get_password_data/3,
         get_reserved_instances_exchange_quote/2,
         get_reserved_instances_exchange_quote/3,
         get_route_server_associations/2,
         get_route_server_associations/3,
         get_route_server_propagations/2,
         get_route_server_propagations/3,
         get_route_server_routing_database/2,
         get_route_server_routing_database/3,
         get_security_groups_for_vpc/2,
         get_security_groups_for_vpc/3,
         get_serial_console_access_status/2,
         get_serial_console_access_status/3,
         get_snapshot_block_public_access_state/2,
         get_snapshot_block_public_access_state/3,
         get_spot_placement_scores/2,
         get_spot_placement_scores/3,
         get_subnet_cidr_reservations/2,
         get_subnet_cidr_reservations/3,
         get_transit_gateway_attachment_propagations/2,
         get_transit_gateway_attachment_propagations/3,
         get_transit_gateway_multicast_domain_associations/2,
         get_transit_gateway_multicast_domain_associations/3,
         get_transit_gateway_policy_table_associations/2,
         get_transit_gateway_policy_table_associations/3,
         get_transit_gateway_policy_table_entries/2,
         get_transit_gateway_policy_table_entries/3,
         get_transit_gateway_prefix_list_references/2,
         get_transit_gateway_prefix_list_references/3,
         get_transit_gateway_route_table_associations/2,
         get_transit_gateway_route_table_associations/3,
         get_transit_gateway_route_table_propagations/2,
         get_transit_gateway_route_table_propagations/3,
         get_verified_access_endpoint_policy/2,
         get_verified_access_endpoint_policy/3,
         get_verified_access_endpoint_targets/2,
         get_verified_access_endpoint_targets/3,
         get_verified_access_group_policy/2,
         get_verified_access_group_policy/3,
         get_vpn_connection_device_sample_configuration/2,
         get_vpn_connection_device_sample_configuration/3,
         get_vpn_connection_device_types/2,
         get_vpn_connection_device_types/3,
         get_vpn_tunnel_replacement_status/2,
         get_vpn_tunnel_replacement_status/3,
         import_client_vpn_client_certificate_revocation_list/2,
         import_client_vpn_client_certificate_revocation_list/3,
         import_image/2,
         import_image/3,
         import_instance/2,
         import_instance/3,
         import_key_pair/2,
         import_key_pair/3,
         import_snapshot/2,
         import_snapshot/3,
         import_volume/2,
         import_volume/3,
         list_images_in_recycle_bin/2,
         list_images_in_recycle_bin/3,
         list_snapshots_in_recycle_bin/2,
         list_snapshots_in_recycle_bin/3,
         lock_snapshot/2,
         lock_snapshot/3,
         modify_address_attribute/2,
         modify_address_attribute/3,
         modify_availability_zone_group/2,
         modify_availability_zone_group/3,
         modify_capacity_reservation/2,
         modify_capacity_reservation/3,
         modify_capacity_reservation_fleet/2,
         modify_capacity_reservation_fleet/3,
         modify_client_vpn_endpoint/2,
         modify_client_vpn_endpoint/3,
         modify_default_credit_specification/2,
         modify_default_credit_specification/3,
         modify_ebs_default_kms_key_id/2,
         modify_ebs_default_kms_key_id/3,
         modify_fleet/2,
         modify_fleet/3,
         modify_fpga_image_attribute/2,
         modify_fpga_image_attribute/3,
         modify_hosts/2,
         modify_hosts/3,
         modify_id_format/2,
         modify_id_format/3,
         modify_identity_id_format/2,
         modify_identity_id_format/3,
         modify_image_attribute/2,
         modify_image_attribute/3,
         modify_instance_attribute/2,
         modify_instance_attribute/3,
         modify_instance_capacity_reservation_attributes/2,
         modify_instance_capacity_reservation_attributes/3,
         modify_instance_cpu_options/2,
         modify_instance_cpu_options/3,
         modify_instance_credit_specification/2,
         modify_instance_credit_specification/3,
         modify_instance_event_start_time/2,
         modify_instance_event_start_time/3,
         modify_instance_event_window/2,
         modify_instance_event_window/3,
         modify_instance_maintenance_options/2,
         modify_instance_maintenance_options/3,
         modify_instance_metadata_defaults/2,
         modify_instance_metadata_defaults/3,
         modify_instance_metadata_options/2,
         modify_instance_metadata_options/3,
         modify_instance_network_performance_options/2,
         modify_instance_network_performance_options/3,
         modify_instance_placement/2,
         modify_instance_placement/3,
         modify_ipam/2,
         modify_ipam/3,
         modify_ipam_pool/2,
         modify_ipam_pool/3,
         modify_ipam_resource_cidr/2,
         modify_ipam_resource_cidr/3,
         modify_ipam_resource_discovery/2,
         modify_ipam_resource_discovery/3,
         modify_ipam_scope/2,
         modify_ipam_scope/3,
         modify_launch_template/2,
         modify_launch_template/3,
         modify_local_gateway_route/2,
         modify_local_gateway_route/3,
         modify_managed_prefix_list/2,
         modify_managed_prefix_list/3,
         modify_network_interface_attribute/2,
         modify_network_interface_attribute/3,
         modify_private_dns_name_options/2,
         modify_private_dns_name_options/3,
         modify_public_ip_dns_name_options/2,
         modify_public_ip_dns_name_options/3,
         modify_reserved_instances/2,
         modify_reserved_instances/3,
         modify_route_server/2,
         modify_route_server/3,
         modify_security_group_rules/2,
         modify_security_group_rules/3,
         modify_snapshot_attribute/2,
         modify_snapshot_attribute/3,
         modify_snapshot_tier/2,
         modify_snapshot_tier/3,
         modify_spot_fleet_request/2,
         modify_spot_fleet_request/3,
         modify_subnet_attribute/2,
         modify_subnet_attribute/3,
         modify_traffic_mirror_filter_network_services/2,
         modify_traffic_mirror_filter_network_services/3,
         modify_traffic_mirror_filter_rule/2,
         modify_traffic_mirror_filter_rule/3,
         modify_traffic_mirror_session/2,
         modify_traffic_mirror_session/3,
         modify_transit_gateway/2,
         modify_transit_gateway/3,
         modify_transit_gateway_prefix_list_reference/2,
         modify_transit_gateway_prefix_list_reference/3,
         modify_transit_gateway_vpc_attachment/2,
         modify_transit_gateway_vpc_attachment/3,
         modify_verified_access_endpoint/2,
         modify_verified_access_endpoint/3,
         modify_verified_access_endpoint_policy/2,
         modify_verified_access_endpoint_policy/3,
         modify_verified_access_group/2,
         modify_verified_access_group/3,
         modify_verified_access_group_policy/2,
         modify_verified_access_group_policy/3,
         modify_verified_access_instance/2,
         modify_verified_access_instance/3,
         modify_verified_access_instance_logging_configuration/2,
         modify_verified_access_instance_logging_configuration/3,
         modify_verified_access_trust_provider/2,
         modify_verified_access_trust_provider/3,
         modify_volume/2,
         modify_volume/3,
         modify_volume_attribute/2,
         modify_volume_attribute/3,
         modify_vpc_attribute/2,
         modify_vpc_attribute/3,
         modify_vpc_block_public_access_exclusion/2,
         modify_vpc_block_public_access_exclusion/3,
         modify_vpc_block_public_access_options/2,
         modify_vpc_block_public_access_options/3,
         modify_vpc_endpoint/2,
         modify_vpc_endpoint/3,
         modify_vpc_endpoint_connection_notification/2,
         modify_vpc_endpoint_connection_notification/3,
         modify_vpc_endpoint_service_configuration/2,
         modify_vpc_endpoint_service_configuration/3,
         modify_vpc_endpoint_service_payer_responsibility/2,
         modify_vpc_endpoint_service_payer_responsibility/3,
         modify_vpc_endpoint_service_permissions/2,
         modify_vpc_endpoint_service_permissions/3,
         modify_vpc_peering_connection_options/2,
         modify_vpc_peering_connection_options/3,
         modify_vpc_tenancy/2,
         modify_vpc_tenancy/3,
         modify_vpn_connection/2,
         modify_vpn_connection/3,
         modify_vpn_connection_options/2,
         modify_vpn_connection_options/3,
         modify_vpn_tunnel_certificate/2,
         modify_vpn_tunnel_certificate/3,
         modify_vpn_tunnel_options/2,
         modify_vpn_tunnel_options/3,
         monitor_instances/2,
         monitor_instances/3,
         move_address_to_vpc/2,
         move_address_to_vpc/3,
         move_byoip_cidr_to_ipam/2,
         move_byoip_cidr_to_ipam/3,
         move_capacity_reservation_instances/2,
         move_capacity_reservation_instances/3,
         provision_byoip_cidr/2,
         provision_byoip_cidr/3,
         provision_ipam_byoasn/2,
         provision_ipam_byoasn/3,
         provision_ipam_pool_cidr/2,
         provision_ipam_pool_cidr/3,
         provision_public_ipv4_pool_cidr/2,
         provision_public_ipv4_pool_cidr/3,
         purchase_capacity_block/2,
         purchase_capacity_block/3,
         purchase_capacity_block_extension/2,
         purchase_capacity_block_extension/3,
         purchase_host_reservation/2,
         purchase_host_reservation/3,
         purchase_reserved_instances_offering/2,
         purchase_reserved_instances_offering/3,
         purchase_scheduled_instances/2,
         purchase_scheduled_instances/3,
         reboot_instances/2,
         reboot_instances/3,
         register_image/2,
         register_image/3,
         register_instance_event_notification_attributes/2,
         register_instance_event_notification_attributes/3,
         register_transit_gateway_multicast_group_members/2,
         register_transit_gateway_multicast_group_members/3,
         register_transit_gateway_multicast_group_sources/2,
         register_transit_gateway_multicast_group_sources/3,
         reject_capacity_reservation_billing_ownership/2,
         reject_capacity_reservation_billing_ownership/3,
         reject_transit_gateway_multicast_domain_associations/2,
         reject_transit_gateway_multicast_domain_associations/3,
         reject_transit_gateway_peering_attachment/2,
         reject_transit_gateway_peering_attachment/3,
         reject_transit_gateway_vpc_attachment/2,
         reject_transit_gateway_vpc_attachment/3,
         reject_vpc_endpoint_connections/2,
         reject_vpc_endpoint_connections/3,
         reject_vpc_peering_connection/2,
         reject_vpc_peering_connection/3,
         release_address/2,
         release_address/3,
         release_hosts/2,
         release_hosts/3,
         release_ipam_pool_allocation/2,
         release_ipam_pool_allocation/3,
         replace_iam_instance_profile_association/2,
         replace_iam_instance_profile_association/3,
         replace_image_criteria_in_allowed_images_settings/2,
         replace_image_criteria_in_allowed_images_settings/3,
         replace_network_acl_association/2,
         replace_network_acl_association/3,
         replace_network_acl_entry/2,
         replace_network_acl_entry/3,
         replace_route/2,
         replace_route/3,
         replace_route_table_association/2,
         replace_route_table_association/3,
         replace_transit_gateway_route/2,
         replace_transit_gateway_route/3,
         replace_vpn_tunnel/2,
         replace_vpn_tunnel/3,
         report_instance_status/2,
         report_instance_status/3,
         request_spot_fleet/2,
         request_spot_fleet/3,
         request_spot_instances/2,
         request_spot_instances/3,
         reset_address_attribute/2,
         reset_address_attribute/3,
         reset_ebs_default_kms_key_id/2,
         reset_ebs_default_kms_key_id/3,
         reset_fpga_image_attribute/2,
         reset_fpga_image_attribute/3,
         reset_image_attribute/2,
         reset_image_attribute/3,
         reset_instance_attribute/2,
         reset_instance_attribute/3,
         reset_network_interface_attribute/2,
         reset_network_interface_attribute/3,
         reset_snapshot_attribute/2,
         reset_snapshot_attribute/3,
         restore_address_to_classic/2,
         restore_address_to_classic/3,
         restore_image_from_recycle_bin/2,
         restore_image_from_recycle_bin/3,
         restore_managed_prefix_list_version/2,
         restore_managed_prefix_list_version/3,
         restore_snapshot_from_recycle_bin/2,
         restore_snapshot_from_recycle_bin/3,
         restore_snapshot_tier/2,
         restore_snapshot_tier/3,
         revoke_client_vpn_ingress/2,
         revoke_client_vpn_ingress/3,
         revoke_security_group_egress/2,
         revoke_security_group_egress/3,
         revoke_security_group_ingress/2,
         revoke_security_group_ingress/3,
         run_instances/2,
         run_instances/3,
         run_scheduled_instances/2,
         run_scheduled_instances/3,
         search_local_gateway_routes/2,
         search_local_gateway_routes/3,
         search_transit_gateway_multicast_groups/2,
         search_transit_gateway_multicast_groups/3,
         search_transit_gateway_routes/2,
         search_transit_gateway_routes/3,
         send_diagnostic_interrupt/2,
         send_diagnostic_interrupt/3,
         start_declarative_policies_report/2,
         start_declarative_policies_report/3,
         start_instances/2,
         start_instances/3,
         start_network_insights_access_scope_analysis/2,
         start_network_insights_access_scope_analysis/3,
         start_network_insights_analysis/2,
         start_network_insights_analysis/3,
         start_vpc_endpoint_service_private_dns_verification/2,
         start_vpc_endpoint_service_private_dns_verification/3,
         stop_instances/2,
         stop_instances/3,
         terminate_client_vpn_connections/2,
         terminate_client_vpn_connections/3,
         terminate_instances/2,
         terminate_instances/3,
         unassign_ipv6_addresses/2,
         unassign_ipv6_addresses/3,
         unassign_private_ip_addresses/2,
         unassign_private_ip_addresses/3,
         unassign_private_nat_gateway_address/2,
         unassign_private_nat_gateway_address/3,
         unlock_snapshot/2,
         unlock_snapshot/3,
         unmonitor_instances/2,
         unmonitor_instances/3,
         update_security_group_rule_descriptions_egress/2,
         update_security_group_rule_descriptions_egress/3,
         update_security_group_rule_descriptions_ingress/2,
         update_security_group_rule_descriptions_ingress/3,
         withdraw_byoip_cidr/2,
         withdraw_byoip_cidr/3]).

-include_lib("hackney/include/hackney_lib.hrl").


%% Example:
%% describe_traffic_mirror_targets_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TrafficMirrorTargetIds">> => list(string())
%% }
-type describe_traffic_mirror_targets_request() :: #{binary() => any()}.

%% Example:
%% ipam_pool_allocation() :: #{
%%   <<"Cidr">> => string(),
%%   <<"Description">> => string(),
%%   <<"IpamPoolAllocationId">> => string(),
%%   <<"ResourceId">> => string(),
%%   <<"ResourceOwner">> => string(),
%%   <<"ResourceRegion">> => string(),
%%   <<"ResourceType">> => list(any())
%% }
-type ipam_pool_allocation() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_connects_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayAttachmentIds">> => list(string())
%% }
-type describe_transit_gateway_connects_request() :: #{binary() => any()}.

%% Example:
%% verified_access_instance_open_vpn_client_configuration() :: #{
%%   <<"Config">> => string(),
%%   <<"Routes">> => list(verified_access_instance_open_vpn_client_configuration_route())
%% }
-type verified_access_instance_open_vpn_client_configuration() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_peering_attachments_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayPeeringAttachments">> => list(transit_gateway_peering_attachment())
%% }
-type describe_transit_gateway_peering_attachments_result() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_prefix_list_reference_request() :: #{
%%   <<"Blackhole">> => boolean(),
%%   <<"DryRun">> => boolean(),
%%   <<"PrefixListId">> := string(),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type create_transit_gateway_prefix_list_reference_request() :: #{binary() => any()}.

%% Example:
%% stale_ip_permission() :: #{
%%   <<"FromPort">> => integer(),
%%   <<"IpProtocol">> => string(),
%%   <<"IpRanges">> => list(string()),
%%   <<"PrefixListIds">> => list(string()),
%%   <<"ToPort">> => integer(),
%%   <<"UserIdGroupPairs">> => list(user_id_group_pair())
%% }
-type stale_ip_permission() :: #{binary() => any()}.

%% Example:
%% address_transfer() :: #{
%%   <<"AddressTransferStatus">> => list(any()),
%%   <<"AllocationId">> => string(),
%%   <<"PublicIp">> => string(),
%%   <<"TransferAccountId">> => string(),
%%   <<"TransferOfferAcceptedTimestamp">> => non_neg_integer(),
%%   <<"TransferOfferExpirationTimestamp">> => non_neg_integer()
%% }
-type address_transfer() :: #{binary() => any()}.

%% Example:
%% get_verified_access_endpoint_policy_result() :: #{
%%   <<"PolicyDocument">> => string(),
%%   <<"PolicyEnabled">> => boolean()
%% }
-type get_verified_access_endpoint_policy_result() :: #{binary() => any()}.

%% Example:
%% purchase_host_reservation_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"CurrencyCode">> => list(any()),
%%   <<"HostIdSet">> := list(string()),
%%   <<"LimitPrice">> => string(),
%%   <<"OfferingId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type purchase_host_reservation_request() :: #{binary() => any()}.

%% Example:
%% create_ipam_result() :: #{
%%   <<"Ipam">> => ipam()
%% }
-type create_ipam_result() :: #{binary() => any()}.

%% Example:
%% register_transit_gateway_multicast_group_members_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupIpAddress">> => string(),
%%   <<"NetworkInterfaceIds">> := list(string()),
%%   <<"TransitGatewayMulticastDomainId">> := string()
%% }
-type register_transit_gateway_multicast_group_members_request() :: #{binary() => any()}.

%% Example:
%% memory_mi_b() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type memory_mi_b() :: #{binary() => any()}.

%% Example:
%% instance_requirements_request() :: #{
%%   <<"AcceleratorCount">> => accelerator_count_request(),
%%   <<"AcceleratorManufacturers">> => list(list(any())()),
%%   <<"AcceleratorNames">> => list(list(any())()),
%%   <<"AcceleratorTotalMemoryMiB">> => accelerator_total_memory_mi_b_request(),
%%   <<"AcceleratorTypes">> => list(list(any())()),
%%   <<"AllowedInstanceTypes">> => list(string()),
%%   <<"BareMetal">> => list(any()),
%%   <<"BaselineEbsBandwidthMbps">> => baseline_ebs_bandwidth_mbps_request(),
%%   <<"BaselinePerformanceFactors">> => baseline_performance_factors_request(),
%%   <<"BurstablePerformance">> => list(any()),
%%   <<"CpuManufacturers">> => list(list(any())()),
%%   <<"ExcludedInstanceTypes">> => list(string()),
%%   <<"InstanceGenerations">> => list(list(any())()),
%%   <<"LocalStorage">> => list(any()),
%%   <<"LocalStorageTypes">> => list(list(any())()),
%%   <<"MaxSpotPriceAsPercentageOfOptimalOnDemandPrice">> => integer(),
%%   <<"MemoryGiBPerVCpu">> => memory_gi_b_per_v_cpu_request(),
%%   <<"MemoryMiB">> => memory_mi_b_request(),
%%   <<"NetworkBandwidthGbps">> => network_bandwidth_gbps_request(),
%%   <<"NetworkInterfaceCount">> => network_interface_count_request(),
%%   <<"OnDemandMaxPricePercentageOverLowestPrice">> => integer(),
%%   <<"RequireHibernateSupport">> => boolean(),
%%   <<"SpotMaxPricePercentageOverLowestPrice">> => integer(),
%%   <<"TotalLocalStorageGB">> => total_local_storage_g_b_request(),
%%   <<"VCpuCount">> => v_cpu_count_range_request()
%% }
-type instance_requirements_request() :: #{binary() => any()}.

%% Example:
%% describe_network_insights_access_scopes_result() :: #{
%%   <<"NetworkInsightsAccessScopes">> => list(network_insights_access_scope()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_insights_access_scopes_result() :: #{binary() => any()}.

%% Example:
%% ena_srd_specification() :: #{
%%   <<"EnaSrdEnabled">> => boolean(),
%%   <<"EnaSrdUdpSpecification">> => ena_srd_udp_specification()
%% }
-type ena_srd_specification() :: #{binary() => any()}.

%% Example:
%% enable_image_block_public_access_result() :: #{
%%   <<"ImageBlockPublicAccessState">> => list(any())
%% }
-type enable_image_block_public_access_result() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_vpc_attachment_result() :: #{
%%   <<"TransitGatewayVpcAttachment">> => transit_gateway_vpc_attachment()
%% }
-type create_transit_gateway_vpc_attachment_result() :: #{binary() => any()}.

%% Example:
%% assign_private_ip_addresses_result() :: #{
%%   <<"AssignedIpv4Prefixes">> => list(ipv4_prefix_specification()),
%%   <<"AssignedPrivateIpAddresses">> => list(assigned_private_ip_address()),
%%   <<"NetworkInterfaceId">> => string()
%% }
-type assign_private_ip_addresses_result() :: #{binary() => any()}.

%% Example:
%% get_console_screenshot_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"WakeUp">> => boolean()
%% }
-type get_console_screenshot_request() :: #{binary() => any()}.

%% Example:
%% inference_accelerator_info() :: #{
%%   <<"Accelerators">> => list(inference_device_info()),
%%   <<"TotalInferenceMemoryInMiB">> => integer()
%% }
-type inference_accelerator_info() :: #{binary() => any()}.

%% Example:
%% associate_trunk_interface_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"InterfaceAssociation">> => trunk_interface_association()
%% }
-type associate_trunk_interface_result() :: #{binary() => any()}.

%% Example:
%% create_instance_export_task_result() :: #{
%%   <<"ExportTask">> => export_task()
%% }
-type create_instance_export_task_result() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_request() :: #{
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Options">> => transit_gateway_request_options(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_transit_gateway_request() :: #{binary() => any()}.

%% Example:
%% network_acl_entry() :: #{
%%   <<"CidrBlock">> => string(),
%%   <<"Egress">> => boolean(),
%%   <<"IcmpTypeCode">> => icmp_type_code(),
%%   <<"Ipv6CidrBlock">> => string(),
%%   <<"PortRange">> => port_range(),
%%   <<"Protocol">> => string(),
%%   <<"RuleAction">> => list(any()),
%%   <<"RuleNumber">> => integer()
%% }
-type network_acl_entry() :: #{binary() => any()}.

%% Example:
%% network_interface_attachment_changes() :: #{
%%   <<"AttachmentId">> => string(),
%%   <<"DefaultEnaQueueCount">> => boolean(),
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"EnaQueueCount">> => integer()
%% }
-type network_interface_attachment_changes() :: #{binary() => any()}.

%% Example:
%% launch_template_and_overrides_response() :: #{
%%   <<"LaunchTemplateSpecification">> => fleet_launch_template_specification(),
%%   <<"Overrides">> => fleet_launch_template_overrides()
%% }
-type launch_template_and_overrides_response() :: #{binary() => any()}.

%% Example:
%% phase2_integrity_algorithms_request_list_value() :: #{
%%   <<"Value">> => string()
%% }
-type phase2_integrity_algorithms_request_list_value() :: #{binary() => any()}.

%% Example:
%% vpn_gateway() :: #{
%%   <<"AmazonSideAsn">> => float(),
%%   <<"AvailabilityZone">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"Type">> => list(any()),
%%   <<"VpcAttachments">> => list(vpc_attachment()),
%%   <<"VpnGatewayId">> => string()
%% }
-type vpn_gateway() :: #{binary() => any()}.

%% Example:
%% get_flow_logs_integration_template_request() :: #{
%%   <<"ConfigDeliveryS3DestinationArn">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"FlowLogId">> := string(),
%%   <<"IntegrateServices">> := integrate_services()
%% }
-type get_flow_logs_integration_template_request() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_connect_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Options">> := create_transit_gateway_connect_request_options(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TransportTransitGatewayAttachmentId">> := string()
%% }
-type create_transit_gateway_connect_request() :: #{binary() => any()}.

%% Example:
%% ena_srd_specification_request() :: #{
%%   <<"EnaSrdEnabled">> => boolean(),
%%   <<"EnaSrdUdpSpecification">> => ena_srd_udp_specification_request()
%% }
-type ena_srd_specification_request() :: #{binary() => any()}.

%% Example:
%% client_vpn_route() :: #{
%%   <<"ClientVpnEndpointId">> => string(),
%%   <<"Description">> => string(),
%%   <<"DestinationCidr">> => string(),
%%   <<"Origin">> => string(),
%%   <<"Status">> => client_vpn_route_status(),
%%   <<"TargetSubnet">> => string(),
%%   <<"Type">> => string()
%% }
-type client_vpn_route() :: #{binary() => any()}.

%% Example:
%% byoip_cidr() :: #{
%%   <<"AsnAssociations">> => list(asn_association()),
%%   <<"Cidr">> => string(),
%%   <<"Description">> => string(),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"State">> => list(any()),
%%   <<"StatusMessage">> => string()
%% }
-type byoip_cidr() :: #{binary() => any()}.

%% Example:
%% describe_availability_zones_result() :: #{
%%   <<"AvailabilityZones">> => list(availability_zone())
%% }
-type describe_availability_zones_result() :: #{binary() => any()}.

%% Example:
%% describe_ipam_resource_discoveries_result() :: #{
%%   <<"IpamResourceDiscoveries">> => list(ipam_resource_discovery()),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_resource_discoveries_result() :: #{binary() => any()}.

%% Example:
%% update_security_group_rule_descriptions_egress_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type update_security_group_rule_descriptions_egress_result() :: #{binary() => any()}.

%% Example:
%% describe_reserved_instances_listings_request() :: #{
%%   <<"Filters">> => list(filter()),
%%   <<"ReservedInstancesId">> => string(),
%%   <<"ReservedInstancesListingId">> => string()
%% }
-type describe_reserved_instances_listings_request() :: #{binary() => any()}.

%% Example:
%% vpn_static_route() :: #{
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"Source">> => list(any()),
%%   <<"State">> => list(any())
%% }
-type vpn_static_route() :: #{binary() => any()}.

%% Example:
%% transit_gateway_prefix_list_attachment() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"TransitGatewayAttachmentId">> => string()
%% }
-type transit_gateway_prefix_list_attachment() :: #{binary() => any()}.

%% Example:
%% scheduled_instance_recurrence() :: #{
%%   <<"Frequency">> => string(),
%%   <<"Interval">> => integer(),
%%   <<"OccurrenceDaySet">> => list(integer()),
%%   <<"OccurrenceRelativeToEnd">> => boolean(),
%%   <<"OccurrenceUnit">> => string()
%% }
-type scheduled_instance_recurrence() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_attachments_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayAttachmentIds">> => list(string())
%% }
-type describe_transit_gateway_attachments_request() :: #{binary() => any()}.

%% Example:
%% verified_access_endpoint_port_range() :: #{
%%   <<"FromPort">> => integer(),
%%   <<"ToPort">> => integer()
%% }
-type verified_access_endpoint_port_range() :: #{binary() => any()}.

%% Example:
%% describe_snapshot_tier_status_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"SnapshotTierStatuses">> => list(snapshot_tier_status())
%% }
-type describe_snapshot_tier_status_result() :: #{binary() => any()}.

%% Example:
%% modify_vpn_tunnel_options_specification() :: #{
%%   <<"DPDTimeoutAction">> => string(),
%%   <<"DPDTimeoutSeconds">> => integer(),
%%   <<"EnableTunnelLifecycleControl">> => boolean(),
%%   <<"IKEVersions">> => list(i_k_e_versions_request_list_value()),
%%   <<"LogOptions">> => vpn_tunnel_log_options_specification(),
%%   <<"Phase1DHGroupNumbers">> => list(phase1_d_h_group_numbers_request_list_value()),
%%   <<"Phase1EncryptionAlgorithms">> => list(phase1_encryption_algorithms_request_list_value()),
%%   <<"Phase1IntegrityAlgorithms">> => list(phase1_integrity_algorithms_request_list_value()),
%%   <<"Phase1LifetimeSeconds">> => integer(),
%%   <<"Phase2DHGroupNumbers">> => list(phase2_d_h_group_numbers_request_list_value()),
%%   <<"Phase2EncryptionAlgorithms">> => list(phase2_encryption_algorithms_request_list_value()),
%%   <<"Phase2IntegrityAlgorithms">> => list(phase2_integrity_algorithms_request_list_value()),
%%   <<"Phase2LifetimeSeconds">> => integer(),
%%   <<"PreSharedKey">> => string(),
%%   <<"RekeyFuzzPercentage">> => integer(),
%%   <<"RekeyMarginTimeSeconds">> => integer(),
%%   <<"ReplayWindowSize">> => integer(),
%%   <<"StartupAction">> => string(),
%%   <<"TunnelInsideCidr">> => string(),
%%   <<"TunnelInsideIpv6Cidr">> => string()
%% }
-type modify_vpn_tunnel_options_specification() :: #{binary() => any()}.

%% Example:
%% launch_templates_monitoring() :: #{
%%   <<"Enabled">> => boolean()
%% }
-type launch_templates_monitoring() :: #{binary() => any()}.

%% Example:
%% peering_attachment_status() :: #{
%%   <<"Code">> => string(),
%%   <<"Message">> => string()
%% }
-type peering_attachment_status() :: #{binary() => any()}.

%% Example:
%% describe_vpc_attribute_result() :: #{
%%   <<"EnableDnsHostnames">> => attribute_boolean_value(),
%%   <<"EnableDnsSupport">> => attribute_boolean_value(),
%%   <<"EnableNetworkAddressUsageMetrics">> => attribute_boolean_value(),
%%   <<"VpcId">> => string()
%% }
-type describe_vpc_attribute_result() :: #{binary() => any()}.

%% Example:
%% instance_network_performance_options_request() :: #{
%%   <<"BandwidthWeighting">> => list(any())
%% }
-type instance_network_performance_options_request() :: #{binary() => any()}.

%% Example:
%% modify_id_format_request() :: #{
%%   <<"Resource">> := string(),
%%   <<"UseLongIds">> := boolean()
%% }
-type modify_id_format_request() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_connect_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> := string()
%% }
-type delete_transit_gateway_connect_request() :: #{binary() => any()}.

%% Example:
%% launch_template_elastic_inference_accelerator_response() :: #{
%%   <<"Count">> => integer(),
%%   <<"Type">> => string()
%% }
-type launch_template_elastic_inference_accelerator_response() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_multicast_domain_result() :: #{
%%   <<"TransitGatewayMulticastDomain">> => transit_gateway_multicast_domain()
%% }
-type create_transit_gateway_multicast_domain_result() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_peering_attachment_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Options">> => create_transit_gateway_peering_attachment_request_options(),
%%   <<"PeerAccountId">> := string(),
%%   <<"PeerRegion">> := string(),
%%   <<"PeerTransitGatewayId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TransitGatewayId">> := string()
%% }
-type create_transit_gateway_peering_attachment_request() :: #{binary() => any()}.

%% Example:
%% unsuccessful_instance_credit_specification_item_error() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type unsuccessful_instance_credit_specification_item_error() :: #{binary() => any()}.

%% Example:
%% register_instance_event_notification_attributes_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceTagAttribute">> := register_instance_tag_attribute_request()
%% }
-type register_instance_event_notification_attributes_request() :: #{binary() => any()}.

%% Example:
%% describe_client_vpn_connections_result() :: #{
%%   <<"Connections">> => list(client_vpn_connection()),
%%   <<"NextToken">> => string()
%% }
-type describe_client_vpn_connections_result() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_virtual_interface_result() :: #{
%%   <<"LocalGatewayVirtualInterface">> => local_gateway_virtual_interface()
%% }
-type create_local_gateway_virtual_interface_result() :: #{binary() => any()}.

%% Example:
%% subnet_association() :: #{
%%   <<"State">> => list(any()),
%%   <<"SubnetId">> => string()
%% }
-type subnet_association() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_result() :: #{
%%   <<"TransitGateway">> => transit_gateway()
%% }
-type delete_transit_gateway_result() :: #{binary() => any()}.

%% Example:
%% instance_maintenance_options() :: #{
%%   <<"AutoRecovery">> => list(any()),
%%   <<"RebootMigration">> => list(any())
%% }
-type instance_maintenance_options() :: #{binary() => any()}.

%% Example:
%% instance_network_interface() :: #{
%%   <<"Association">> => instance_network_interface_association(),
%%   <<"Attachment">> => instance_network_interface_attachment(),
%%   <<"ConnectionTrackingConfiguration">> => connection_tracking_specification_response(),
%%   <<"Description">> => string(),
%%   <<"Groups">> => list(group_identifier()),
%%   <<"InterfaceType">> => string(),
%%   <<"Ipv4Prefixes">> => list(instance_ipv4_prefix()),
%%   <<"Ipv6Addresses">> => list(instance_ipv6_address()),
%%   <<"Ipv6Prefixes">> => list(instance_ipv6_prefix()),
%%   <<"MacAddress">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"Operator">> => operator_response(),
%%   <<"OwnerId">> => string(),
%%   <<"PrivateDnsName">> => string(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"PrivateIpAddresses">> => list(instance_private_ip_address()),
%%   <<"SourceDestCheck">> => boolean(),
%%   <<"Status">> => list(any()),
%%   <<"SubnetId">> => string(),
%%   <<"VpcId">> => string()
%% }
-type instance_network_interface() :: #{binary() => any()}.

%% Example:
%% describe_fast_launch_images_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"ImageIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_fast_launch_images_request() :: #{binary() => any()}.

%% Example:
%% instance_specification() :: #{
%%   <<"ExcludeBootVolume">> => boolean(),
%%   <<"ExcludeDataVolumeIds">> => list(string()),
%%   <<"InstanceId">> => string()
%% }
-type instance_specification() :: #{binary() => any()}.

%% Example:
%% disable_address_transfer_result() :: #{
%%   <<"AddressTransfer">> => address_transfer()
%% }
-type disable_address_transfer_result() :: #{binary() => any()}.

%% Example:
%% create_route_server_peer_result() :: #{
%%   <<"RouteServerPeer">> => route_server_peer()
%% }
-type create_route_server_peer_result() :: #{binary() => any()}.

%% Example:
%% create_coip_pool_result() :: #{
%%   <<"CoipPool">> => coip_pool()
%% }
-type create_coip_pool_result() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_virtual_interface_group_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalBgpAsn">> => integer(),
%%   <<"LocalBgpAsnExtended">> => float(),
%%   <<"LocalGatewayId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_local_gateway_virtual_interface_group_request() :: #{binary() => any()}.

%% Example:
%% stop_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Force">> => boolean(),
%%   <<"Hibernate">> => boolean(),
%%   <<"InstanceIds">> := list(string()),
%%   <<"SkipOsShutdown">> => boolean()
%% }
-type stop_instances_request() :: #{binary() => any()}.

%% Example:
%% delete_vpn_gateway_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpnGatewayId">> := string()
%% }
-type delete_vpn_gateway_request() :: #{binary() => any()}.

%% Example:
%% detach_network_interface_request() :: #{
%%   <<"AttachmentId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Force">> => boolean()
%% }
-type detach_network_interface_request() :: #{binary() => any()}.

%% Example:
%% describe_route_servers_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"RouteServers">> => list(route_server())
%% }
-type describe_route_servers_result() :: #{binary() => any()}.

%% Example:
%% unmonitor_instances_result() :: #{
%%   <<"InstanceMonitorings">> => list(instance_monitoring())
%% }
-type unmonitor_instances_result() :: #{binary() => any()}.

%% Example:
%% reject_vpc_peering_connection_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpcPeeringConnectionId">> := string()
%% }
-type reject_vpc_peering_connection_request() :: #{binary() => any()}.

%% Example:
%% associate_transit_gateway_policy_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> := string(),
%%   <<"TransitGatewayPolicyTableId">> := string()
%% }
-type associate_transit_gateway_policy_table_request() :: #{binary() => any()}.

%% Example:
%% vpc_peering_connection_options_description() :: #{
%%   <<"AllowDnsResolutionFromRemoteVpc">> => boolean(),
%%   <<"AllowEgressFromLocalClassicLinkToRemoteVpc">> => boolean(),
%%   <<"AllowEgressFromLocalVpcToRemoteClassicLink">> => boolean()
%% }
-type vpc_peering_connection_options_description() :: #{binary() => any()}.

%% Example:
%% license_configuration() :: #{
%%   <<"LicenseConfigurationArn">> => string()
%% }
-type license_configuration() :: #{binary() => any()}.

%% Example:
%% describe_fpga_image_attribute_result() :: #{
%%   <<"FpgaImageAttribute">> => fpga_image_attribute()
%% }
-type describe_fpga_image_attribute_result() :: #{binary() => any()}.

%% Example:
%% delete_instance_event_window_result() :: #{
%%   <<"InstanceEventWindowState">> => instance_event_window_state_change()
%% }
-type delete_instance_event_window_result() :: #{binary() => any()}.

%% Example:
%% describe_capacity_block_status_result() :: #{
%%   <<"CapacityBlockStatuses">> => list(capacity_block_status()),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_block_status_result() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_route_tables_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayRouteTables">> => list(transit_gateway_route_table())
%% }
-type describe_transit_gateway_route_tables_result() :: #{binary() => any()}.

%% Example:
%% create_route_table_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"RouteTable">> => route_table()
%% }
-type create_route_table_result() :: #{binary() => any()}.

%% Example:
%% revoked_security_group_rule() :: #{
%%   <<"CidrIpv4">> => string(),
%%   <<"CidrIpv6">> => string(),
%%   <<"Description">> => string(),
%%   <<"FromPort">> => integer(),
%%   <<"GroupId">> => string(),
%%   <<"IpProtocol">> => string(),
%%   <<"IsEgress">> => boolean(),
%%   <<"PrefixListId">> => string(),
%%   <<"ReferencedGroupId">> => string(),
%%   <<"SecurityGroupRuleId">> => string(),
%%   <<"ToPort">> => integer()
%% }
-type revoked_security_group_rule() :: #{binary() => any()}.

%% Example:
%% cpu_performance_factor() :: #{
%%   <<"References">> => list(performance_factor_reference())
%% }
-type cpu_performance_factor() :: #{binary() => any()}.

%% Example:
%% delete_snapshot_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SnapshotId">> := string()
%% }
-type delete_snapshot_request() :: #{binary() => any()}.

%% Example:
%% disable_aws_network_performance_metric_subscription_result() :: #{
%%   <<"Output">> => boolean()
%% }
-type disable_aws_network_performance_metric_subscription_result() :: #{binary() => any()}.

%% Example:
%% delete_route_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"RouteTableId">> := string()
%% }
-type delete_route_table_request() :: #{binary() => any()}.

%% Example:
%% describe_address_transfers_result() :: #{
%%   <<"AddressTransfers">> => list(address_transfer()),
%%   <<"NextToken">> => string()
%% }
-type describe_address_transfers_result() :: #{binary() => any()}.

%% Example:
%% describe_service_link_virtual_interfaces_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"ServiceLinkVirtualInterfaceIds">> => list(string())
%% }
-type describe_service_link_virtual_interfaces_request() :: #{binary() => any()}.

%% Example:
%% cancel_spot_fleet_requests_error_item() :: #{
%%   <<"Error">> => cancel_spot_fleet_requests_error(),
%%   <<"SpotFleetRequestId">> => string()
%% }
-type cancel_spot_fleet_requests_error_item() :: #{binary() => any()}.

%% Example:
%% spot_price() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"InstanceType">> => list(any()),
%%   <<"ProductDescription">> => list(any()),
%%   <<"SpotPrice">> => string(),
%%   <<"Timestamp">> => non_neg_integer()
%% }
-type spot_price() :: #{binary() => any()}.

%% Example:
%% capacity_reservation() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"AvailableInstanceCount">> => integer(),
%%   <<"CapacityAllocations">> => list(capacity_allocation()),
%%   <<"CapacityBlockId">> => string(),
%%   <<"CapacityReservationArn">> => string(),
%%   <<"CapacityReservationFleetId">> => string(),
%%   <<"CapacityReservationId">> => string(),
%%   <<"CommitmentInfo">> => capacity_reservation_commitment_info(),
%%   <<"CreateDate">> => non_neg_integer(),
%%   <<"DeliveryPreference">> => list(any()),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"EndDate">> => non_neg_integer(),
%%   <<"EndDateType">> => list(any()),
%%   <<"EphemeralStorage">> => boolean(),
%%   <<"InstanceMatchCriteria">> => list(any()),
%%   <<"InstancePlatform">> => list(any()),
%%   <<"InstanceType">> => string(),
%%   <<"OutpostArn">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"PlacementGroupArn">> => string(),
%%   <<"ReservationType">> => list(any()),
%%   <<"StartDate">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"Tenancy">> => list(any()),
%%   <<"TotalInstanceCount">> => integer(),
%%   <<"UnusedReservationBillingOwnerId">> => string()
%% }
-type capacity_reservation() :: #{binary() => any()}.

%% Example:
%% create_delegate_mac_volume_ownership_task_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"MacCredentials">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_delegate_mac_volume_ownership_task_request() :: #{binary() => any()}.

%% Example:
%% move_address_to_vpc_result() :: #{
%%   <<"AllocationId">> => string(),
%%   <<"Status">> => list(any())
%% }
-type move_address_to_vpc_result() :: #{binary() => any()}.

%% Example:
%% launch_template_instance_metadata_options_request() :: #{
%%   <<"HttpEndpoint">> => list(any()),
%%   <<"HttpProtocolIpv6">> => list(any()),
%%   <<"HttpPutResponseHopLimit">> => integer(),
%%   <<"HttpTokens">> => list(any()),
%%   <<"InstanceMetadataTags">> => list(any())
%% }
-type launch_template_instance_metadata_options_request() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_peering_attachment_result() :: #{
%%   <<"TransitGatewayPeeringAttachment">> => transit_gateway_peering_attachment()
%% }
-type delete_transit_gateway_peering_attachment_result() :: #{binary() => any()}.

%% Example:
%% internet_gateway() :: #{
%%   <<"Attachments">> => list(internet_gateway_attachment()),
%%   <<"InternetGatewayId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type internet_gateway() :: #{binary() => any()}.

%% Example:
%% launch_template_placement() :: #{
%%   <<"Affinity">> => string(),
%%   <<"AvailabilityZone">> => string(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"HostId">> => string(),
%%   <<"HostResourceGroupArn">> => string(),
%%   <<"PartitionNumber">> => integer(),
%%   <<"SpreadDomain">> => string(),
%%   <<"Tenancy">> => list(any())
%% }
-type launch_template_placement() :: #{binary() => any()}.

%% Example:
%% volume_status_item() :: #{
%%   <<"Actions">> => list(volume_status_action()),
%%   <<"AttachmentStatuses">> => list(volume_status_attachment_status()),
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"Events">> => list(volume_status_event()),
%%   <<"InitializationStatusDetails">> => initialization_status_details(),
%%   <<"OutpostArn">> => string(),
%%   <<"VolumeId">> => string(),
%%   <<"VolumeStatus">> => volume_status_info()
%% }
-type volume_status_item() :: #{binary() => any()}.

%% Example:
%% replace_route_table_association_request() :: #{
%%   <<"AssociationId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"RouteTableId">> := string()
%% }
-type replace_route_table_association_request() :: #{binary() => any()}.

%% Example:
%% launch_template_instance_maintenance_options() :: #{
%%   <<"AutoRecovery">> => list(any())
%% }
-type launch_template_instance_maintenance_options() :: #{binary() => any()}.

%% Example:
%% delete_network_interface_permission_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type delete_network_interface_permission_result() :: #{binary() => any()}.

%% Example:
%% disassociate_enclave_certificate_iam_role_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type disassociate_enclave_certificate_iam_role_result() :: #{binary() => any()}.

%% Example:
%% fleet_block_device_mapping_request() :: #{
%%   <<"DeviceName">> => string(),
%%   <<"Ebs">> => fleet_ebs_block_device_request(),
%%   <<"NoDevice">> => string(),
%%   <<"VirtualName">> => string()
%% }
-type fleet_block_device_mapping_request() :: #{binary() => any()}.

%% Example:
%% describe_spot_instance_requests_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"SpotInstanceRequests">> => list(spot_instance_request())
%% }
-type describe_spot_instance_requests_result() :: #{binary() => any()}.

%% Example:
%% import_client_vpn_client_certificate_revocation_list_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type import_client_vpn_client_certificate_revocation_list_result() :: #{binary() => any()}.

%% Example:
%% network_acl() :: #{
%%   <<"Associations">> => list(network_acl_association()),
%%   <<"Entries">> => list(network_acl_entry()),
%%   <<"IsDefault">> => boolean(),
%%   <<"NetworkAclId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type network_acl() :: #{binary() => any()}.

%% Example:
%% search_transit_gateway_routes_result() :: #{
%%   <<"AdditionalRoutesAvailable">> => boolean(),
%%   <<"Routes">> => list(transit_gateway_route())
%% }
-type search_transit_gateway_routes_result() :: #{binary() => any()}.

%% Example:
%% snapshot_detail() :: #{
%%   <<"Description">> => string(),
%%   <<"DeviceName">> => string(),
%%   <<"DiskImageSize">> => float(),
%%   <<"Format">> => string(),
%%   <<"Progress">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"Status">> => string(),
%%   <<"StatusMessage">> => string(),
%%   <<"Url">> => string(),
%%   <<"UserBucket">> => user_bucket_details()
%% }
-type snapshot_detail() :: #{binary() => any()}.

%% Example:
%% ipam_discovered_resource_cidr() :: #{
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"IpSource">> => list(any()),
%%   <<"IpUsage">> => float(),
%%   <<"IpamResourceDiscoveryId">> => string(),
%%   <<"NetworkInterfaceAttachmentStatus">> => list(any()),
%%   <<"ResourceCidr">> => string(),
%%   <<"ResourceId">> => string(),
%%   <<"ResourceOwnerId">> => string(),
%%   <<"ResourceRegion">> => string(),
%%   <<"ResourceTags">> => list(ipam_resource_tag()),
%%   <<"ResourceType">> => list(any()),
%%   <<"SampleTime">> => non_neg_integer(),
%%   <<"SubnetId">> => string(),
%%   <<"VpcId">> => string()
%% }
-type ipam_discovered_resource_cidr() :: #{binary() => any()}.

%% Example:
%% get_subnet_cidr_reservations_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"SubnetIpv4CidrReservations">> => list(subnet_cidr_reservation()),
%%   <<"SubnetIpv6CidrReservations">> => list(subnet_cidr_reservation())
%% }
-type get_subnet_cidr_reservations_result() :: #{binary() => any()}.

%% Example:
%% asn_authorization_context() :: #{
%%   <<"Message">> => string(),
%%   <<"Signature">> => string()
%% }
-type asn_authorization_context() :: #{binary() => any()}.

%% Example:
%% snapshot_recycle_bin_info() :: #{
%%   <<"Description">> => string(),
%%   <<"RecycleBinEnterTime">> => non_neg_integer(),
%%   <<"RecycleBinExitTime">> => non_neg_integer(),
%%   <<"SnapshotId">> => string(),
%%   <<"VolumeId">> => string()
%% }
-type snapshot_recycle_bin_info() :: #{binary() => any()}.

%% Example:
%% transit_gateway_options() :: #{
%%   <<"AmazonSideAsn">> => float(),
%%   <<"AssociationDefaultRouteTableId">> => string(),
%%   <<"AutoAcceptSharedAttachments">> => list(any()),
%%   <<"DefaultRouteTableAssociation">> => list(any()),
%%   <<"DefaultRouteTablePropagation">> => list(any()),
%%   <<"DnsSupport">> => list(any()),
%%   <<"MulticastSupport">> => list(any()),
%%   <<"PropagationDefaultRouteTableId">> => string(),
%%   <<"SecurityGroupReferencingSupport">> => list(any()),
%%   <<"TransitGatewayCidrBlocks">> => list(string()),
%%   <<"VpnEcmpSupport">> => list(any())
%% }
-type transit_gateway_options() :: #{binary() => any()}.

%% Example:
%% describe_managed_prefix_lists_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"PrefixLists">> => list(managed_prefix_list())
%% }
-type describe_managed_prefix_lists_result() :: #{binary() => any()}.

%% Example:
%% detach_verified_access_trust_provider_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessInstanceId">> := string(),
%%   <<"VerifiedAccessTrustProviderId">> := string()
%% }
-type detach_verified_access_trust_provider_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_prefix_list_reference() :: #{
%%   <<"Blackhole">> => boolean(),
%%   <<"PrefixListId">> => string(),
%%   <<"PrefixListOwnerId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"TransitGatewayAttachment">> => transit_gateway_prefix_list_attachment(),
%%   <<"TransitGatewayRouteTableId">> => string()
%% }
-type transit_gateway_prefix_list_reference() :: #{binary() => any()}.

%% Example:
%% describe_instance_status_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IncludeAllInstances">> => boolean(),
%%   <<"InstanceIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_status_request() :: #{binary() => any()}.

%% Example:
%% get_route_server_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"RouteServerId">> := string()
%% }
-type get_route_server_associations_request() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_connect_peer_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayConnectPeerId">> := string()
%% }
-type delete_transit_gateway_connect_peer_request() :: #{binary() => any()}.

%% Example:
%% disable_fast_snapshot_restore_state_error_item() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"Error">> => disable_fast_snapshot_restore_state_error()
%% }
-type disable_fast_snapshot_restore_state_error_item() :: #{binary() => any()}.

%% Example:
%% phase1_integrity_algorithms_list_value() :: #{
%%   <<"Value">> => string()
%% }
-type phase1_integrity_algorithms_list_value() :: #{binary() => any()}.

%% Example:
%% create_capacity_reservation_fleet_result() :: #{
%%   <<"AllocationStrategy">> => string(),
%%   <<"CapacityReservationFleetId">> => string(),
%%   <<"CreateTime">> => non_neg_integer(),
%%   <<"EndDate">> => non_neg_integer(),
%%   <<"FleetCapacityReservations">> => list(fleet_capacity_reservation()),
%%   <<"InstanceMatchCriteria">> => list(any()),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"Tenancy">> => list(any()),
%%   <<"TotalFulfilledCapacity">> => float(),
%%   <<"TotalTargetCapacity">> => integer()
%% }
-type create_capacity_reservation_fleet_result() :: #{binary() => any()}.

%% Example:
%% spot_market_options() :: #{
%%   <<"BlockDurationMinutes">> => integer(),
%%   <<"InstanceInterruptionBehavior">> => list(any()),
%%   <<"MaxPrice">> => string(),
%%   <<"SpotInstanceType">> => list(any()),
%%   <<"ValidUntil">> => non_neg_integer()
%% }
-type spot_market_options() :: #{binary() => any()}.

%% Example:
%% reject_capacity_reservation_billing_ownership_request() :: #{
%%   <<"CapacityReservationId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type reject_capacity_reservation_billing_ownership_request() :: #{binary() => any()}.

%% Example:
%% authorize_security_group_egress_result() :: #{
%%   <<"Return">> => boolean(),
%%   <<"SecurityGroupRules">> => list(security_group_rule())
%% }
-type authorize_security_group_egress_result() :: #{binary() => any()}.

%% Example:
%% import_instance_request() :: #{
%%   <<"Description">> => string(),
%%   <<"DiskImages">> => list(disk_image()),
%%   <<"DryRun">> => boolean(),
%%   <<"LaunchSpecification">> => import_instance_launch_specification(),
%%   <<"Platform">> := list(any())
%% }
-type import_instance_request() :: #{binary() => any()}.

%% Example:
%% get_managed_prefix_list_entries_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"PrefixListId">> := string(),
%%   <<"TargetVersion">> => float()
%% }
-type get_managed_prefix_list_entries_request() :: #{binary() => any()}.

%% Example:
%% describe_instance_types_result() :: #{
%%   <<"InstanceTypes">> => list(instance_type_info()),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_types_result() :: #{binary() => any()}.

%% Example:
%% modify_ipam_resource_cidr_result() :: #{
%%   <<"IpamResourceCidr">> => ipam_resource_cidr()
%% }
-type modify_ipam_resource_cidr_result() :: #{binary() => any()}.

%% Example:
%% create_spot_datafeed_subscription_request() :: #{
%%   <<"Bucket">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Prefix">> => string()
%% }
-type create_spot_datafeed_subscription_request() :: #{binary() => any()}.

%% Example:
%% describe_egress_only_internet_gateways_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"EgressOnlyInternetGatewayIds">> => list(string()),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_egress_only_internet_gateways_request() :: #{binary() => any()}.

%% Example:
%% delete_egress_only_internet_gateway_result() :: #{
%%   <<"ReturnCode">> => boolean()
%% }
-type delete_egress_only_internet_gateway_result() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_group_result() :: #{
%%   <<"VerifiedAccessGroup">> => verified_access_group()
%% }
-type modify_verified_access_group_result() :: #{binary() => any()}.

%% Example:
%% delete_managed_prefix_list_result() :: #{
%%   <<"PrefixList">> => managed_prefix_list()
%% }
-type delete_managed_prefix_list_result() :: #{binary() => any()}.

%% Example:
%% asn_association() :: #{
%%   <<"Asn">> => string(),
%%   <<"Cidr">> => string(),
%%   <<"State">> => list(any()),
%%   <<"StatusMessage">> => string()
%% }
-type asn_association() :: #{binary() => any()}.

%% Example:
%% deregister_transit_gateway_multicast_group_members_result() :: #{
%%   <<"DeregisteredMulticastGroupMembers">> => transit_gateway_multicast_deregistered_group_members()
%% }
-type deregister_transit_gateway_multicast_group_members_result() :: #{binary() => any()}.

%% Example:
%% describe_launch_template_versions_result() :: #{
%%   <<"LaunchTemplateVersions">> => list(launch_template_version()),
%%   <<"NextToken">> => string()
%% }
-type describe_launch_template_versions_result() :: #{binary() => any()}.

%% Example:
%% modify_transit_gateway_prefix_list_reference_request() :: #{
%%   <<"Blackhole">> => boolean(),
%%   <<"DryRun">> => boolean(),
%%   <<"PrefixListId">> := string(),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type modify_transit_gateway_prefix_list_reference_request() :: #{binary() => any()}.

%% Example:
%% delete_tags_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Resources">> := list(string()),
%%   <<"Tags">> => list(tag())
%% }
-type delete_tags_request() :: #{binary() => any()}.

%% Example:
%% disassociate_ipam_resource_discovery_result() :: #{
%%   <<"IpamResourceDiscoveryAssociation">> => ipam_resource_discovery_association()
%% }
-type disassociate_ipam_resource_discovery_result() :: #{binary() => any()}.

%% Example:
%% target_groups_config() :: #{
%%   <<"TargetGroups">> => list(target_group())
%% }
-type target_groups_config() :: #{binary() => any()}.

%% Example:
%% instance_metadata_options_request() :: #{
%%   <<"HttpEndpoint">> => list(any()),
%%   <<"HttpProtocolIpv6">> => list(any()),
%%   <<"HttpPutResponseHopLimit">> => integer(),
%%   <<"HttpTokens">> => list(any()),
%%   <<"InstanceMetadataTags">> => list(any())
%% }
-type instance_metadata_options_request() :: #{binary() => any()}.

%% Example:
%% modify_vpn_tunnel_certificate_result() :: #{
%%   <<"VpnConnection">> => vpn_connection()
%% }
-type modify_vpn_tunnel_certificate_result() :: #{binary() => any()}.

%% Example:
%% deregister_instance_tag_attribute_request() :: #{
%%   <<"IncludeAllTagsOfInstance">> => boolean(),
%%   <<"InstanceTagKeys">> => list(string())
%% }
-type deregister_instance_tag_attribute_request() :: #{binary() => any()}.

%% Example:
%% modify_instance_capacity_reservation_attributes_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_instance_capacity_reservation_attributes_result() :: #{binary() => any()}.

%% Example:
%% spot_instance_state_fault() :: #{
%%   <<"Code">> => string(),
%%   <<"Message">> => string()
%% }
-type spot_instance_state_fault() :: #{binary() => any()}.

%% Example:
%% delete_queued_reserved_instances_result() :: #{
%%   <<"FailedQueuedPurchaseDeletions">> => list(failed_queued_purchase_deletion()),
%%   <<"SuccessfulQueuedPurchaseDeletions">> => list(successful_queued_purchase_deletion())
%% }
-type delete_queued_reserved_instances_result() :: #{binary() => any()}.

%% Example:
%% describe_local_gateway_virtual_interface_groups_result() :: #{
%%   <<"LocalGatewayVirtualInterfaceGroups">> => list(local_gateway_virtual_interface_group()),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateway_virtual_interface_groups_result() :: #{binary() => any()}.

%% Example:
%% delete_traffic_mirror_filter_rule_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TrafficMirrorFilterRuleId">> := string()
%% }
-type delete_traffic_mirror_filter_rule_request() :: #{binary() => any()}.

%% Example:
%% get_managed_prefix_list_associations_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"PrefixListAssociations">> => list(prefix_list_association())
%% }
-type get_managed_prefix_list_associations_result() :: #{binary() => any()}.

%% Example:
%% create_route_server_peer_request() :: #{
%%   <<"BgpOptions">> := route_server_bgp_options_request(),
%%   <<"DryRun">> => boolean(),
%%   <<"PeerAddress">> := string(),
%%   <<"RouteServerEndpointId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_route_server_peer_request() :: #{binary() => any()}.

%% Example:
%% associate_vpc_cidr_block_request() :: #{
%%   <<"AmazonProvidedIpv6CidrBlock">> => boolean(),
%%   <<"CidrBlock">> => string(),
%%   <<"Ipv4IpamPoolId">> => string(),
%%   <<"Ipv4NetmaskLength">> => integer(),
%%   <<"Ipv6CidrBlock">> => string(),
%%   <<"Ipv6CidrBlockNetworkBorderGroup">> => string(),
%%   <<"Ipv6IpamPoolId">> => string(),
%%   <<"Ipv6NetmaskLength">> => integer(),
%%   <<"Ipv6Pool">> => string(),
%%   <<"VpcId">> := string()
%% }
-type associate_vpc_cidr_block_request() :: #{binary() => any()}.

%% Example:
%% path_component() :: #{
%%   <<"AclRule">> => analysis_acl_rule(),
%%   <<"AdditionalDetails">> => list(additional_detail()),
%%   <<"AttachedTo">> => analysis_component(),
%%   <<"Component">> => analysis_component(),
%%   <<"DestinationVpc">> => analysis_component(),
%%   <<"ElasticLoadBalancerListener">> => analysis_component(),
%%   <<"Explanations">> => list(explanation()),
%%   <<"FirewallStatefulRule">> => firewall_stateful_rule(),
%%   <<"FirewallStatelessRule">> => firewall_stateless_rule(),
%%   <<"InboundHeader">> => analysis_packet_header(),
%%   <<"OutboundHeader">> => analysis_packet_header(),
%%   <<"RouteTableRoute">> => analysis_route_table_route(),
%%   <<"SecurityGroupRule">> => analysis_security_group_rule(),
%%   <<"SequenceNumber">> => integer(),
%%   <<"ServiceName">> => string(),
%%   <<"SourceVpc">> => analysis_component(),
%%   <<"Subnet">> => analysis_component(),
%%   <<"TransitGateway">> => analysis_component(),
%%   <<"TransitGatewayRouteTableRoute">> => transit_gateway_route_table_route(),
%%   <<"Vpc">> => analysis_component()
%% }
-type path_component() :: #{binary() => any()}.

%% Example:
%% provision_public_ipv4_pool_cidr_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"IpamPoolId">> := string(),
%%   <<"NetmaskLength">> := integer(),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"PoolId">> := string()
%% }
-type provision_public_ipv4_pool_cidr_request() :: #{binary() => any()}.

%% Example:
%% export_transit_gateway_routes_result() :: #{
%%   <<"S3Location">> => string()
%% }
-type export_transit_gateway_routes_result() :: #{binary() => any()}.

%% Example:
%% image_attribute() :: #{
%%   <<"BlockDeviceMappings">> => list(block_device_mapping()),
%%   <<"BootMode">> => attribute_value(),
%%   <<"DeregistrationProtection">> => attribute_value(),
%%   <<"Description">> => attribute_value(),
%%   <<"ImageId">> => string(),
%%   <<"ImdsSupport">> => attribute_value(),
%%   <<"KernelId">> => attribute_value(),
%%   <<"LastLaunchedTime">> => attribute_value(),
%%   <<"LaunchPermissions">> => list(launch_permission()),
%%   <<"ProductCodes">> => list(product_code()),
%%   <<"RamdiskId">> => attribute_value(),
%%   <<"SriovNetSupport">> => attribute_value(),
%%   <<"TpmSupport">> => attribute_value(),
%%   <<"UefiData">> => attribute_value()
%% }
-type image_attribute() :: #{binary() => any()}.

%% Example:
%% export_client_vpn_client_configuration_request() :: #{
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type export_client_vpn_client_configuration_request() :: #{binary() => any()}.

%% Example:
%% delete_network_insights_access_scope_analysis_result() :: #{
%%   <<"NetworkInsightsAccessScopeAnalysisId">> => string()
%% }
-type delete_network_insights_access_scope_analysis_result() :: #{binary() => any()}.

%% Example:
%% disk_image_volume_description() :: #{
%%   <<"Id">> => string(),
%%   <<"Size">> => float()
%% }
-type disk_image_volume_description() :: #{binary() => any()}.

%% Example:
%% import_volume_request() :: #{
%%   <<"AvailabilityZone">> := string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Image">> := disk_image_detail(),
%%   <<"Volume">> := volume_detail()
%% }
-type import_volume_request() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_multicast_domain_associations_result() :: #{
%%   <<"MulticastDomainAssociations">> => list(transit_gateway_multicast_domain_association()),
%%   <<"NextToken">> => string()
%% }
-type get_transit_gateway_multicast_domain_associations_result() :: #{binary() => any()}.

%% Example:
%% create_instance_event_window_result() :: #{
%%   <<"InstanceEventWindow">> => instance_event_window()
%% }
-type create_instance_event_window_result() :: #{binary() => any()}.

%% Example:
%% deregister_instance_event_notification_attributes_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceTagAttribute">> := deregister_instance_tag_attribute_request()
%% }
-type deregister_instance_event_notification_attributes_request() :: #{binary() => any()}.

%% Example:
%% attribute_summary() :: #{
%%   <<"AttributeName">> => string(),
%%   <<"MostFrequentValue">> => string(),
%%   <<"NumberOfMatchedAccounts">> => integer(),
%%   <<"NumberOfUnmatchedAccounts">> => integer(),
%%   <<"RegionalSummaries">> => list(regional_summary())
%% }
-type attribute_summary() :: #{binary() => any()}.

%% Example:
%% associate_transit_gateway_multicast_domain_result() :: #{
%%   <<"Associations">> => transit_gateway_multicast_domain_associations()
%% }
-type associate_transit_gateway_multicast_domain_result() :: #{binary() => any()}.

%% Example:
%% launch_template_spot_market_options_request() :: #{
%%   <<"BlockDurationMinutes">> => integer(),
%%   <<"InstanceInterruptionBehavior">> => list(any()),
%%   <<"MaxPrice">> => string(),
%%   <<"SpotInstanceType">> => list(any()),
%%   <<"ValidUntil">> => non_neg_integer()
%% }
-type launch_template_spot_market_options_request() :: #{binary() => any()}.

%% Example:
%% security_group_vpc_association() :: #{
%%   <<"GroupId">> => string(),
%%   <<"GroupOwnerId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"StateReason">> => string(),
%%   <<"VpcId">> => string(),
%%   <<"VpcOwnerId">> => string()
%% }
-type security_group_vpc_association() :: #{binary() => any()}.

%% Example:
%% verified_access_log_s3_destination_options() :: #{
%%   <<"BucketName">> => string(),
%%   <<"BucketOwner">> => string(),
%%   <<"Enabled">> => boolean(),
%%   <<"Prefix">> => string()
%% }
-type verified_access_log_s3_destination_options() :: #{binary() => any()}.

%% Example:
%% delete_verified_access_endpoint_result() :: #{
%%   <<"VerifiedAccessEndpoint">> => verified_access_endpoint()
%% }
-type delete_verified_access_endpoint_result() :: #{binary() => any()}.

%% Example:
%% peering_connection_options() :: #{
%%   <<"AllowDnsResolutionFromRemoteVpc">> => boolean(),
%%   <<"AllowEgressFromLocalClassicLinkToRemoteVpc">> => boolean(),
%%   <<"AllowEgressFromLocalVpcToRemoteClassicLink">> => boolean()
%% }
-type peering_connection_options() :: #{binary() => any()}.

%% Example:
%% delete_vpc_endpoints_result() :: #{
%%   <<"Unsuccessful">> => list(unsuccessful_item())
%% }
-type delete_vpc_endpoints_result() :: #{binary() => any()}.

%% Example:
%% create_carrier_gateway_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VpcId">> := string()
%% }
-type create_carrier_gateway_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_multicast_registered_group_sources() :: #{
%%   <<"GroupIpAddress">> => string(),
%%   <<"RegisteredNetworkInterfaceIds">> => list(string()),
%%   <<"TransitGatewayMulticastDomainId">> => string()
%% }
-type transit_gateway_multicast_registered_group_sources() :: #{binary() => any()}.

%% Example:
%% create_subnet_cidr_reservation_result() :: #{
%%   <<"SubnetCidrReservation">> => subnet_cidr_reservation()
%% }
-type create_subnet_cidr_reservation_result() :: #{binary() => any()}.

%% Example:
%% availability_zone() :: #{
%%   <<"GroupLongName">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"Messages">> => list(availability_zone_message()),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"OptInStatus">> => list(any()),
%%   <<"ParentZoneId">> => string(),
%%   <<"ParentZoneName">> => string(),
%%   <<"RegionName">> => string(),
%%   <<"State">> => list(any()),
%%   <<"ZoneId">> => string(),
%%   <<"ZoneName">> => string(),
%%   <<"ZoneType">> => string()
%% }
-type availability_zone() :: #{binary() => any()}.

%% Example:
%% delete_ipam_pool_request() :: #{
%%   <<"Cascade">> => boolean(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamPoolId">> := string()
%% }
-type delete_ipam_pool_request() :: #{binary() => any()}.

%% Example:
%% get_network_insights_access_scope_content_result() :: #{
%%   <<"NetworkInsightsAccessScopeContent">> => network_insights_access_scope_content()
%% }
-type get_network_insights_access_scope_content_result() :: #{binary() => any()}.

%% Example:
%% enable_serial_console_access_result() :: #{
%%   <<"SerialConsoleAccessEnabled">> => boolean()
%% }
-type enable_serial_console_access_result() :: #{binary() => any()}.

%% Example:
%% disassociate_nat_gateway_address_result() :: #{
%%   <<"NatGatewayAddresses">> => list(nat_gateway_address()),
%%   <<"NatGatewayId">> => string()
%% }
-type disassociate_nat_gateway_address_result() :: #{binary() => any()}.

%% Example:
%% s3_object_tag() :: #{
%%   <<"Key">> => string(),
%%   <<"Value">> => string()
%% }
-type s3_object_tag() :: #{binary() => any()}.

%% Example:
%% get_associated_ipv6_pool_cidrs_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"PoolId">> := string()
%% }
-type get_associated_ipv6_pool_cidrs_request() :: #{binary() => any()}.

%% Example:
%% modify_volume_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Iops">> => integer(),
%%   <<"MultiAttachEnabled">> => boolean(),
%%   <<"Size">> => integer(),
%%   <<"Throughput">> => integer(),
%%   <<"VolumeId">> := string(),
%%   <<"VolumeType">> => list(any())
%% }
-type modify_volume_request() :: #{binary() => any()}.

%% Example:
%% create_customer_gateway_result() :: #{
%%   <<"CustomerGateway">> => customer_gateway()
%% }
-type create_customer_gateway_result() :: #{binary() => any()}.

%% Example:
%% security_group_rule_description() :: #{
%%   <<"Description">> => string(),
%%   <<"SecurityGroupRuleId">> => string()
%% }
-type security_group_rule_description() :: #{binary() => any()}.

%% Example:
%% describe_addresses_attribute_request() :: #{
%%   <<"AllocationIds">> => list(string()),
%%   <<"Attribute">> => list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_addresses_attribute_request() :: #{binary() => any()}.

%% Example:
%% modify_transit_gateway_prefix_list_reference_result() :: #{
%%   <<"TransitGatewayPrefixListReference">> => transit_gateway_prefix_list_reference()
%% }
-type modify_transit_gateway_prefix_list_reference_result() :: #{binary() => any()}.

%% Example:
%% disable_snapshot_block_public_access_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type disable_snapshot_block_public_access_request() :: #{binary() => any()}.

%% Example:
%% unsuccessful_item_error() :: #{
%%   <<"Code">> => string(),
%%   <<"Message">> => string()
%% }
-type unsuccessful_item_error() :: #{binary() => any()}.

%% Example:
%% delete_route_server_endpoint_result() :: #{
%%   <<"RouteServerEndpoint">> => route_server_endpoint()
%% }
-type delete_route_server_endpoint_result() :: #{binary() => any()}.

%% Example:
%% create_verified_access_endpoint_port_range() :: #{
%%   <<"FromPort">> => integer(),
%%   <<"ToPort">> => integer()
%% }
-type create_verified_access_endpoint_port_range() :: #{binary() => any()}.

%% Example:
%% volume_status_info() :: #{
%%   <<"Details">> => list(volume_status_details()),
%%   <<"Status">> => list(any())
%% }
-type volume_status_info() :: #{binary() => any()}.

%% Example:
%% describe_coip_pools_result() :: #{
%%   <<"CoipPools">> => list(coip_pool()),
%%   <<"NextToken">> => string()
%% }
-type describe_coip_pools_result() :: #{binary() => any()}.

%% Example:
%% modify_snapshot_tier_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SnapshotId">> := string(),
%%   <<"StorageTier">> => list(any())
%% }
-type modify_snapshot_tier_request() :: #{binary() => any()}.

%% Example:
%% reserved_instances_modification() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"CreateDate">> => non_neg_integer(),
%%   <<"EffectiveDate">> => non_neg_integer(),
%%   <<"ModificationResults">> => list(reserved_instances_modification_result()),
%%   <<"ReservedInstancesIds">> => list(reserved_instances_id()),
%%   <<"ReservedInstancesModificationId">> => string(),
%%   <<"Status">> => string(),
%%   <<"StatusMessage">> => string(),
%%   <<"UpdateDate">> => non_neg_integer()
%% }
-type reserved_instances_modification() :: #{binary() => any()}.

%% Example:
%% allocate_address_result() :: #{
%%   <<"AllocationId">> => string(),
%%   <<"CarrierIp">> => string(),
%%   <<"CustomerOwnedIp">> => string(),
%%   <<"CustomerOwnedIpv4Pool">> => string(),
%%   <<"Domain">> => list(any()),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"PublicIp">> => string(),
%%   <<"PublicIpv4Pool">> => string()
%% }
-type allocate_address_result() :: #{binary() => any()}.

%% Example:
%% active_vpn_tunnel_status() :: #{
%%   <<"IkeVersion">> => string(),
%%   <<"Phase1DHGroup">> => integer(),
%%   <<"Phase1EncryptionAlgorithm">> => string(),
%%   <<"Phase1IntegrityAlgorithm">> => string(),
%%   <<"Phase2DHGroup">> => integer(),
%%   <<"Phase2EncryptionAlgorithm">> => string(),
%%   <<"Phase2IntegrityAlgorithm">> => string(),
%%   <<"ProvisioningStatus">> => list(any()),
%%   <<"ProvisioningStatusReason">> => string()
%% }
-type active_vpn_tunnel_status() :: #{binary() => any()}.

%% Example:
%% create_coip_pool_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayRouteTableId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_coip_pool_request() :: #{binary() => any()}.

%% Example:
%% get_ebs_default_kms_key_id_result() :: #{
%%   <<"KmsKeyId">> => string()
%% }
-type get_ebs_default_kms_key_id_result() :: #{binary() => any()}.

%% Example:
%% delete_volume_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VolumeId">> := string()
%% }
-type delete_volume_request() :: #{binary() => any()}.

%% Example:
%% describe_capacity_block_status_request() :: #{
%%   <<"CapacityBlockIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_block_status_request() :: #{binary() => any()}.

%% Example:
%% describe_dhcp_options_request() :: #{
%%   <<"DhcpOptionsIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_dhcp_options_request() :: #{binary() => any()}.

%% Example:
%% describe_vpc_classic_link_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"VpcIds">> => list(string())
%% }
-type describe_vpc_classic_link_request() :: #{binary() => any()}.

%% Example:
%% describe_vpcs_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Vpcs">> => list(vpc())
%% }
-type describe_vpcs_result() :: #{binary() => any()}.

%% Example:
%% modify_vpc_peering_connection_options_result() :: #{
%%   <<"AccepterPeeringConnectionOptions">> => peering_connection_options(),
%%   <<"RequesterPeeringConnectionOptions">> => peering_connection_options()
%% }
-type modify_vpc_peering_connection_options_result() :: #{binary() => any()}.

%% Example:
%% modify_vpc_block_public_access_options_result() :: #{
%%   <<"VpcBlockPublicAccessOptions">> => vpc_block_public_access_options()
%% }
-type modify_vpc_block_public_access_options_result() :: #{binary() => any()}.

%% Example:
%% instance_network_interface_association() :: #{
%%   <<"CarrierIp">> => string(),
%%   <<"CustomerOwnedIp">> => string(),
%%   <<"IpOwnerId">> => string(),
%%   <<"PublicDnsName">> => string(),
%%   <<"PublicIp">> => string()
%% }
-type instance_network_interface_association() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_connect_peer_result() :: #{
%%   <<"TransitGatewayConnectPeer">> => transit_gateway_connect_peer()
%% }
-type create_transit_gateway_connect_peer_result() :: #{binary() => any()}.

%% Example:
%% describe_traffic_mirror_filter_rules_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TrafficMirrorFilterRules">> => list(traffic_mirror_filter_rule())
%% }
-type describe_traffic_mirror_filter_rules_result() :: #{binary() => any()}.

%% Example:
%% accept_vpc_peering_connection_result() :: #{
%%   <<"VpcPeeringConnection">> => vpc_peering_connection()
%% }
-type accept_vpc_peering_connection_result() :: #{binary() => any()}.

%% Example:
%% fpga_image() :: #{
%%   <<"CreateTime">> => non_neg_integer(),
%%   <<"DataRetentionSupport">> => boolean(),
%%   <<"Description">> => string(),
%%   <<"FpgaImageGlobalId">> => string(),
%%   <<"FpgaImageId">> => string(),
%%   <<"InstanceTypes">> => list(string()),
%%   <<"Name">> => string(),
%%   <<"OwnerAlias">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"PciId">> => pci_id(),
%%   <<"ProductCodes">> => list(product_code()),
%%   <<"Public">> => boolean(),
%%   <<"ShellVersion">> => string(),
%%   <<"State">> => fpga_image_state(),
%%   <<"Tags">> => list(tag()),
%%   <<"UpdateTime">> => non_neg_integer()
%% }
-type fpga_image() :: #{binary() => any()}.

%% Example:
%% create_vpc_peering_connection_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"PeerOwnerId">> => string(),
%%   <<"PeerRegion">> => string(),
%%   <<"PeerVpcId">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VpcId">> := string()
%% }
-type create_vpc_peering_connection_request() :: #{binary() => any()}.

%% Example:
%% disassociate_ipam_byoasn_request() :: #{
%%   <<"Asn">> := string(),
%%   <<"Cidr">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type disassociate_ipam_byoasn_request() :: #{binary() => any()}.

%% Example:
%% scheduled_instance_availability() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailableInstanceCount">> => integer(),
%%   <<"FirstSlotStartTime">> => non_neg_integer(),
%%   <<"HourlyPrice">> => string(),
%%   <<"InstanceType">> => string(),
%%   <<"MaxTermDurationInDays">> => integer(),
%%   <<"MinTermDurationInDays">> => integer(),
%%   <<"NetworkPlatform">> => string(),
%%   <<"Platform">> => string(),
%%   <<"PurchaseToken">> => string(),
%%   <<"Recurrence">> => scheduled_instance_recurrence(),
%%   <<"SlotDurationInHours">> => integer(),
%%   <<"TotalScheduledInstanceHours">> => integer()
%% }
-type scheduled_instance_availability() :: #{binary() => any()}.

%% Example:
%% import_snapshot_request() :: #{
%%   <<"ClientData">> => client_data(),
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DiskContainer">> => snapshot_disk_container(),
%%   <<"DryRun">> => boolean(),
%%   <<"Encrypted">> => boolean(),
%%   <<"KmsKeyId">> => string(),
%%   <<"RoleName">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type import_snapshot_request() :: #{binary() => any()}.

%% Example:
%% ipam_resource_discovery_association() :: #{
%%   <<"IpamArn">> => string(),
%%   <<"IpamId">> => string(),
%%   <<"IpamRegion">> => string(),
%%   <<"IpamResourceDiscoveryAssociationArn">> => string(),
%%   <<"IpamResourceDiscoveryAssociationId">> => string(),
%%   <<"IpamResourceDiscoveryId">> => string(),
%%   <<"IsDefault">> => boolean(),
%%   <<"OwnerId">> => string(),
%%   <<"ResourceDiscoveryStatus">> => list(any()),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type ipam_resource_discovery_association() :: #{binary() => any()}.

%% Example:
%% associate_security_group_vpc_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupId">> := string(),
%%   <<"VpcId">> := string()
%% }
-type associate_security_group_vpc_request() :: #{binary() => any()}.

%% Example:
%% reset_instance_attribute_request() :: #{
%%   <<"Attribute">> := list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string()
%% }
-type reset_instance_attribute_request() :: #{binary() => any()}.

%% Example:
%% detach_volume_request() :: #{
%%   <<"Device">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Force">> => boolean(),
%%   <<"InstanceId">> => string(),
%%   <<"VolumeId">> := string()
%% }
-type detach_volume_request() :: #{binary() => any()}.

%% Example:
%% scheduled_instances_iam_instance_profile() :: #{
%%   <<"Arn">> => string(),
%%   <<"Name">> => string()
%% }
-type scheduled_instances_iam_instance_profile() :: #{binary() => any()}.

%% Example:
%% network_interface_count() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type network_interface_count() :: #{binary() => any()}.

%% Example:
%% create_flow_logs_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DeliverCrossAccountRole">> => string(),
%%   <<"DeliverLogsPermissionArn">> => string(),
%%   <<"DestinationOptions">> => destination_options_request(),
%%   <<"DryRun">> => boolean(),
%%   <<"LogDestination">> => string(),
%%   <<"LogDestinationType">> => list(any()),
%%   <<"LogFormat">> => string(),
%%   <<"LogGroupName">> => string(),
%%   <<"MaxAggregationInterval">> => integer(),
%%   <<"ResourceIds">> := list(string()),
%%   <<"ResourceType">> := list(any()),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TrafficType">> => list(any())
%% }
-type create_flow_logs_request() :: #{binary() => any()}.

%% Example:
%% register_instance_event_notification_attributes_result() :: #{
%%   <<"InstanceTagAttribute">> => instance_tag_notification_attribute()
%% }
-type register_instance_event_notification_attributes_result() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_endpoint_cidr_options() :: #{
%%   <<"PortRanges">> => list(modify_verified_access_endpoint_port_range())
%% }
-type modify_verified_access_endpoint_cidr_options() :: #{binary() => any()}.

%% Example:
%% export_task_s3_location_request() :: #{
%%   <<"S3Bucket">> => string(),
%%   <<"S3Prefix">> => string()
%% }
-type export_task_s3_location_request() :: #{binary() => any()}.

%% Example:
%% enable_fast_snapshot_restore_state_error_item() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"Error">> => enable_fast_snapshot_restore_state_error()
%% }
-type enable_fast_snapshot_restore_state_error_item() :: #{binary() => any()}.

%% Example:
%% modify_image_attribute_request() :: #{
%%   <<"Attribute">> => string(),
%%   <<"Description">> => attribute_value(),
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string(),
%%   <<"ImdsSupport">> => attribute_value(),
%%   <<"LaunchPermission">> => launch_permission_modifications(),
%%   <<"OperationType">> => list(any()),
%%   <<"OrganizationArns">> => list(string()),
%%   <<"OrganizationalUnitArns">> => list(string()),
%%   <<"ProductCodes">> => list(string()),
%%   <<"UserGroups">> => list(string()),
%%   <<"UserIds">> => list(string()),
%%   <<"Value">> => string()
%% }
-type modify_image_attribute_request() :: #{binary() => any()}.

%% Example:
%% reject_vpc_peering_connection_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type reject_vpc_peering_connection_result() :: #{binary() => any()}.

%% Example:
%% launch_template_instance_network_interface_specification_request() :: #{
%%   <<"AssociateCarrierIpAddress">> => boolean(),
%%   <<"AssociatePublicIpAddress">> => boolean(),
%%   <<"ConnectionTrackingSpecification">> => connection_tracking_specification_request(),
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Description">> => string(),
%%   <<"DeviceIndex">> => integer(),
%%   <<"EnaQueueCount">> => integer(),
%%   <<"EnaSrdSpecification">> => ena_srd_specification_request(),
%%   <<"Groups">> => list(string()),
%%   <<"InterfaceType">> => string(),
%%   <<"Ipv4PrefixCount">> => integer(),
%%   <<"Ipv4Prefixes">> => list(ipv4_prefix_specification_request()),
%%   <<"Ipv6AddressCount">> => integer(),
%%   <<"Ipv6Addresses">> => list(instance_ipv6_address_request()),
%%   <<"Ipv6PrefixCount">> => integer(),
%%   <<"Ipv6Prefixes">> => list(ipv6_prefix_specification_request()),
%%   <<"NetworkCardIndex">> => integer(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"PrimaryIpv6">> => boolean(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"PrivateIpAddresses">> => list(private_ip_address_specification()),
%%   <<"SecondaryPrivateIpAddressCount">> => integer(),
%%   <<"SubnetId">> => string()
%% }
-type launch_template_instance_network_interface_specification_request() :: #{binary() => any()}.

%% Example:
%% modify_address_attribute_result() :: #{
%%   <<"Address">> => address_attribute()
%% }
-type modify_address_attribute_result() :: #{binary() => any()}.

%% Example:
%% dns_servers_options_modify_structure() :: #{
%%   <<"CustomDnsServers">> => list(string()),
%%   <<"Enabled">> => boolean()
%% }
-type dns_servers_options_modify_structure() :: #{binary() => any()}.

%% Example:
%% describe_prefix_lists_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"PrefixLists">> => list(prefix_list())
%% }
-type describe_prefix_lists_result() :: #{binary() => any()}.

%% Example:
%% launch_templates_monitoring_request() :: #{
%%   <<"Enabled">> => boolean()
%% }
-type launch_templates_monitoring_request() :: #{binary() => any()}.

%% Example:
%% modify_instance_event_start_time_result() :: #{
%%   <<"Event">> => instance_status_event()
%% }
-type modify_instance_event_start_time_result() :: #{binary() => any()}.

%% Example:
%% describe_customer_gateways_result() :: #{
%%   <<"CustomerGateways">> => list(customer_gateway())
%% }
-type describe_customer_gateways_result() :: #{binary() => any()}.

%% Example:
%% modify_instance_cpu_options_request() :: #{
%%   <<"CoreCount">> := integer(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"ThreadsPerCore">> := integer()
%% }
-type modify_instance_cpu_options_request() :: #{binary() => any()}.

%% Example:
%% verified_access_log_kinesis_data_firehose_destination_options() :: #{
%%   <<"DeliveryStream">> => string(),
%%   <<"Enabled">> => boolean()
%% }
-type verified_access_log_kinesis_data_firehose_destination_options() :: #{binary() => any()}.

%% Example:
%% ipam_resource_cidr() :: #{
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"ComplianceStatus">> => list(any()),
%%   <<"IpUsage">> => float(),
%%   <<"IpamId">> => string(),
%%   <<"IpamPoolId">> => string(),
%%   <<"IpamScopeId">> => string(),
%%   <<"ManagementState">> => list(any()),
%%   <<"OverlapStatus">> => list(any()),
%%   <<"ResourceCidr">> => string(),
%%   <<"ResourceId">> => string(),
%%   <<"ResourceName">> => string(),
%%   <<"ResourceOwnerId">> => string(),
%%   <<"ResourceRegion">> => string(),
%%   <<"ResourceTags">> => list(ipam_resource_tag()),
%%   <<"ResourceType">> => list(any()),
%%   <<"VpcId">> => string()
%% }
-type ipam_resource_cidr() :: #{binary() => any()}.

%% Example:
%% associate_client_vpn_target_network_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"SubnetId">> := string()
%% }
-type associate_client_vpn_target_network_request() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_route_result() :: #{
%%   <<"Route">> => transit_gateway_route()
%% }
-type delete_transit_gateway_route_result() :: #{binary() => any()}.

%% Example:
%% volume_status_event() :: #{
%%   <<"Description">> => string(),
%%   <<"EventId">> => string(),
%%   <<"EventType">> => string(),
%%   <<"InstanceId">> => string(),
%%   <<"NotAfter">> => non_neg_integer(),
%%   <<"NotBefore">> => non_neg_integer()
%% }
-type volume_status_event() :: #{binary() => any()}.

%% Example:
%% revoke_security_group_egress_result() :: #{
%%   <<"Return">> => boolean(),
%%   <<"RevokedSecurityGroupRules">> => list(revoked_security_group_rule()),
%%   <<"UnknownIpPermissions">> => list(ip_permission())
%% }
-type revoke_security_group_egress_result() :: #{binary() => any()}.

%% Example:
%% efa_info() :: #{
%%   <<"MaximumEfaInterfaces">> => integer()
%% }
-type efa_info() :: #{binary() => any()}.

%% Example:
%% instance_market_options_request() :: #{
%%   <<"MarketType">> => list(any()),
%%   <<"SpotOptions">> => spot_market_options()
%% }
-type instance_market_options_request() :: #{binary() => any()}.

%% Example:
%% replace_vpn_tunnel_request() :: #{
%%   <<"ApplyPendingMaintenance">> => boolean(),
%%   <<"DryRun">> => boolean(),
%%   <<"VpnConnectionId">> := string(),
%%   <<"VpnTunnelOutsideIpAddress">> := string()
%% }
-type replace_vpn_tunnel_request() :: #{binary() => any()}.

%% Example:
%% reboot_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceIds">> := list(string())
%% }
-type reboot_instances_request() :: #{binary() => any()}.

%% Example:
%% disassociate_transit_gateway_route_table_result() :: #{
%%   <<"Association">> => transit_gateway_association()
%% }
-type disassociate_transit_gateway_route_table_result() :: #{binary() => any()}.

%% Example:
%% volume_attachment() :: #{
%%   <<"AssociatedResource">> => string(),
%%   <<"AttachTime">> => non_neg_integer(),
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Device">> => string(),
%%   <<"InstanceId">> => string(),
%%   <<"InstanceOwningService">> => string(),
%%   <<"State">> => list(any()),
%%   <<"VolumeId">> => string()
%% }
-type volume_attachment() :: #{binary() => any()}.

%% Example:
%% modify_transit_gateway_request() :: #{
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Options">> => modify_transit_gateway_options(),
%%   <<"TransitGatewayId">> := string()
%% }
-type modify_transit_gateway_request() :: #{binary() => any()}.

%% Example:
%% get_instance_uefi_data_result() :: #{
%%   <<"InstanceId">> => string(),
%%   <<"UefiData">> => string()
%% }
-type get_instance_uefi_data_result() :: #{binary() => any()}.

%% Example:
%% describe_local_gateway_route_table_vpc_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"LocalGatewayRouteTableVpcAssociationIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateway_route_table_vpc_associations_request() :: #{binary() => any()}.

%% Example:
%% update_security_group_rule_descriptions_ingress_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type update_security_group_rule_descriptions_ingress_result() :: #{binary() => any()}.

%% Example:
%% describe_store_image_tasks_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"ImageIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_store_image_tasks_request() :: #{binary() => any()}.

%% Example:
%% modify_vpc_endpoint_connection_notification_request() :: #{
%%   <<"ConnectionEvents">> => list(string()),
%%   <<"ConnectionNotificationArn">> => string(),
%%   <<"ConnectionNotificationId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type modify_vpc_endpoint_connection_notification_request() :: #{binary() => any()}.

%% Example:
%% terminate_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceIds">> := list(string()),
%%   <<"SkipOsShutdown">> => boolean()
%% }
-type terminate_instances_request() :: #{binary() => any()}.

%% Example:
%% network_interface_permission_state() :: #{
%%   <<"State">> => list(any()),
%%   <<"StatusMessage">> => string()
%% }
-type network_interface_permission_state() :: #{binary() => any()}.

%% Example:
%% modify_vpc_endpoint_service_payer_responsibility_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"PayerResponsibility">> := list(any()),
%%   <<"ServiceId">> := string()
%% }
-type modify_vpc_endpoint_service_payer_responsibility_request() :: #{binary() => any()}.

%% Example:
%% access_scope_analysis_finding() :: #{
%%   <<"FindingComponents">> => list(path_component()),
%%   <<"FindingId">> => string(),
%%   <<"NetworkInsightsAccessScopeAnalysisId">> => string(),
%%   <<"NetworkInsightsAccessScopeId">> => string()
%% }
-type access_scope_analysis_finding() :: #{binary() => any()}.

%% Example:
%% instance_count() :: #{
%%   <<"InstanceCount">> => integer(),
%%   <<"State">> => list(any())
%% }
-type instance_count() :: #{binary() => any()}.

%% Example:
%% describe_scheduled_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"ScheduledInstanceIds">> => list(string()),
%%   <<"SlotStartTimeRange">> => slot_start_time_range_request()
%% }
-type describe_scheduled_instances_request() :: #{binary() => any()}.

%% Example:
%% s3_storage() :: #{
%%   <<"AWSAccessKeyId">> => string(),
%%   <<"Bucket">> => string(),
%%   <<"Prefix">> => string(),
%%   <<"UploadPolicy">> => binary(),
%%   <<"UploadPolicySignature">> => string()
%% }
-type s3_storage() :: #{binary() => any()}.

%% Example:
%% disable_vpc_classic_link_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpcId">> := string()
%% }
-type disable_vpc_classic_link_request() :: #{binary() => any()}.

%% Example:
%% delete_vpc_block_public_access_exclusion_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ExclusionId">> := string()
%% }
-type delete_vpc_block_public_access_exclusion_request() :: #{binary() => any()}.

%% Example:
%% vpc_attachment() :: #{
%%   <<"State">> => list(any()),
%%   <<"VpcId">> => string()
%% }
-type vpc_attachment() :: #{binary() => any()}.

%% Example:
%% enable_image_block_public_access_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ImageBlockPublicAccessState">> := list(any())
%% }
-type enable_image_block_public_access_request() :: #{binary() => any()}.

%% Example:
%% describe_volume_attribute_request() :: #{
%%   <<"Attribute">> := list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"VolumeId">> := string()
%% }
-type describe_volume_attribute_request() :: #{binary() => any()}.

%% Example:
%% authorization_rule() :: #{
%%   <<"AccessAll">> => boolean(),
%%   <<"ClientVpnEndpointId">> => string(),
%%   <<"Description">> => string(),
%%   <<"DestinationCidr">> => string(),
%%   <<"GroupId">> => string(),
%%   <<"Status">> => client_vpn_authorization_rule_status()
%% }
-type authorization_rule() :: #{binary() => any()}.

%% Example:
%% create_nat_gateway_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"NatGateway">> => nat_gateway()
%% }
-type create_nat_gateway_result() :: #{binary() => any()}.

%% Example:
%% route_table() :: #{
%%   <<"Associations">> => list(route_table_association()),
%%   <<"OwnerId">> => string(),
%%   <<"PropagatingVgws">> => list(propagating_vgw()),
%%   <<"RouteTableId">> => string(),
%%   <<"Routes">> => list(route()),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type route_table() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_policy_table_result() :: #{
%%   <<"TransitGatewayPolicyTable">> => transit_gateway_policy_table()
%% }
-type create_transit_gateway_policy_table_result() :: #{binary() => any()}.

%% Example:
%% added_principal() :: #{
%%   <<"Principal">> => string(),
%%   <<"PrincipalType">> => list(any()),
%%   <<"ServiceId">> => string(),
%%   <<"ServicePermissionId">> => string()
%% }
-type added_principal() :: #{binary() => any()}.

%% Example:
%% create_ipam_external_resource_verification_token_result() :: #{
%%   <<"IpamExternalResourceVerificationToken">> => ipam_external_resource_verification_token()
%% }
-type create_ipam_external_resource_verification_token_result() :: #{binary() => any()}.

%% Example:
%% create_vpc_endpoint_service_configuration_request() :: #{
%%   <<"AcceptanceRequired">> => boolean(),
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"GatewayLoadBalancerArns">> => list(string()),
%%   <<"NetworkLoadBalancerArns">> => list(string()),
%%   <<"PrivateDnsName">> => string(),
%%   <<"SupportedIpAddressTypes">> => list(string()),
%%   <<"SupportedRegions">> => list(string()),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_vpc_endpoint_service_configuration_request() :: #{binary() => any()}.

%% Example:
%% enable_ebs_encryption_by_default_result() :: #{
%%   <<"EbsEncryptionByDefault">> => boolean()
%% }
-type enable_ebs_encryption_by_default_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_route_table_announcement() :: #{
%%   <<"AnnouncementDirection">> => list(any()),
%%   <<"CoreNetworkId">> => string(),
%%   <<"CreationTime">> => non_neg_integer(),
%%   <<"PeerCoreNetworkId">> => string(),
%%   <<"PeerTransitGatewayId">> => string(),
%%   <<"PeeringAttachmentId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TransitGatewayId">> => string(),
%%   <<"TransitGatewayRouteTableAnnouncementId">> => string(),
%%   <<"TransitGatewayRouteTableId">> => string()
%% }
-type transit_gateway_route_table_announcement() :: #{binary() => any()}.

%% Example:
%% spot_maintenance_strategies() :: #{
%%   <<"CapacityRebalance">> => spot_capacity_rebalance()
%% }
-type spot_maintenance_strategies() :: #{binary() => any()}.

%% Example:
%% block_device_mapping() :: #{
%%   <<"DeviceName">> => string(),
%%   <<"Ebs">> => ebs_block_device(),
%%   <<"NoDevice">> => string(),
%%   <<"VirtualName">> => string()
%% }
-type block_device_mapping() :: #{binary() => any()}.

%% Example:
%% request_spot_fleet_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SpotFleetRequestConfig">> := spot_fleet_request_config_data()
%% }
-type request_spot_fleet_request() :: #{binary() => any()}.

%% Example:
%% delete_coip_pool_request() :: #{
%%   <<"CoipPoolId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type delete_coip_pool_request() :: #{binary() => any()}.

%% Example:
%% neuron_device_memory_info() :: #{
%%   <<"SizeInMiB">> => integer()
%% }
-type neuron_device_memory_info() :: #{binary() => any()}.

%% Example:
%% unmonitor_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceIds">> := list(string())
%% }
-type unmonitor_instances_request() :: #{binary() => any()}.

%% Example:
%% get_groups_for_capacity_reservation_request() :: #{
%%   <<"CapacityReservationId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type get_groups_for_capacity_reservation_request() :: #{binary() => any()}.

%% Example:
%% target_configuration_request() :: #{
%%   <<"InstanceCount">> => integer(),
%%   <<"OfferingId">> => string()
%% }
-type target_configuration_request() :: #{binary() => any()}.

%% Example:
%% local_gateway_route() :: #{
%%   <<"CoipPoolId">> => string(),
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"DestinationPrefixListId">> => string(),
%%   <<"LocalGatewayRouteTableArn">> => string(),
%%   <<"LocalGatewayRouteTableId">> => string(),
%%   <<"LocalGatewayVirtualInterfaceGroupId">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"SubnetId">> => string(),
%%   <<"Type">> => list(any())
%% }
-type local_gateway_route() :: #{binary() => any()}.

%% Example:
%% describe_spot_fleet_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"SpotFleetRequestId">> := string()
%% }
-type describe_spot_fleet_instances_request() :: #{binary() => any()}.

%% Example:
%% launch_template_license_configuration() :: #{
%%   <<"LicenseConfigurationArn">> => string()
%% }
-type launch_template_license_configuration() :: #{binary() => any()}.

%% Example:
%% request_spot_instances_request() :: #{
%%   <<"AvailabilityZoneGroup">> => string(),
%%   <<"BlockDurationMinutes">> => integer(),
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceCount">> => integer(),
%%   <<"InstanceInterruptionBehavior">> => list(any()),
%%   <<"LaunchGroup">> => string(),
%%   <<"LaunchSpecification">> => request_spot_launch_specification(),
%%   <<"SpotPrice">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"Type">> => list(any()),
%%   <<"ValidFrom">> => non_neg_integer(),
%%   <<"ValidUntil">> => non_neg_integer()
%% }
-type request_spot_instances_request() :: #{binary() => any()}.

%% Example:
%% delete_launch_template_result() :: #{
%%   <<"LaunchTemplate">> => launch_template()
%% }
-type delete_launch_template_result() :: #{binary() => any()}.

%% Example:
%% create_launch_template_version_result() :: #{
%%   <<"LaunchTemplateVersion">> => launch_template_version(),
%%   <<"Warning">> => validation_warning()
%% }
-type create_launch_template_version_result() :: #{binary() => any()}.

%% Example:
%% provision_ipam_pool_cidr_request() :: #{
%%   <<"Cidr">> => string(),
%%   <<"CidrAuthorizationContext">> => ipam_cidr_authorization_context(),
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamExternalResourceVerificationTokenId">> => string(),
%%   <<"IpamPoolId">> := string(),
%%   <<"NetmaskLength">> => integer(),
%%   <<"VerificationMethod">> => list(any())
%% }
-type provision_ipam_pool_cidr_request() :: #{binary() => any()}.

%% Example:
%% describe_trunk_interface_associations_request() :: #{
%%   <<"AssociationIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_trunk_interface_associations_request() :: #{binary() => any()}.

%% Example:
%% fleet_ebs_block_device_request() :: #{
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Encrypted">> => boolean(),
%%   <<"Iops">> => integer(),
%%   <<"KmsKeyId">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"Throughput">> => integer(),
%%   <<"VolumeSize">> => integer(),
%%   <<"VolumeType">> => list(any())
%% }
-type fleet_ebs_block_device_request() :: #{binary() => any()}.

%% Example:
%% associate_enclave_certificate_iam_role_request() :: #{
%%   <<"CertificateArn">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"RoleArn">> := string()
%% }
-type associate_enclave_certificate_iam_role_request() :: #{binary() => any()}.

%% Example:
%% modify_instance_event_start_time_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceEventId">> := string(),
%%   <<"InstanceId">> := string(),
%%   <<"NotBefore">> := non_neg_integer()
%% }
-type modify_instance_event_start_time_request() :: #{binary() => any()}.

%% Example:
%% ebs_info() :: #{
%%   <<"EbsOptimizedInfo">> => ebs_optimized_info(),
%%   <<"EbsOptimizedSupport">> => list(any()),
%%   <<"EncryptionSupport">> => list(any()),
%%   <<"NvmeSupport">> => list(any())
%% }
-type ebs_info() :: #{binary() => any()}.

%% Example:
%% enable_vgw_route_propagation_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GatewayId">> := string(),
%%   <<"RouteTableId">> := string()
%% }
-type enable_vgw_route_propagation_request() :: #{binary() => any()}.

%% Example:
%% modify_ipam_resource_cidr_request() :: #{
%%   <<"CurrentIpamScopeId">> := string(),
%%   <<"DestinationIpamScopeId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Monitored">> := boolean(),
%%   <<"ResourceCidr">> := string(),
%%   <<"ResourceId">> := string(),
%%   <<"ResourceRegion">> := string()
%% }
-type modify_ipam_resource_cidr_request() :: #{binary() => any()}.

%% Example:
%% disassociate_subnet_cidr_block_request() :: #{
%%   <<"AssociationId">> := string()
%% }
-type disassociate_subnet_cidr_block_request() :: #{binary() => any()}.

%% Example:
%% accelerator_count() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type accelerator_count() :: #{binary() => any()}.

%% Example:
%% connection_notification() :: #{
%%   <<"ConnectionEvents">> => list(string()),
%%   <<"ConnectionNotificationArn">> => string(),
%%   <<"ConnectionNotificationId">> => string(),
%%   <<"ConnectionNotificationState">> => list(any()),
%%   <<"ConnectionNotificationType">> => list(any()),
%%   <<"ServiceId">> => string(),
%%   <<"ServiceRegion">> => string(),
%%   <<"VpcEndpointId">> => string()
%% }
-type connection_notification() :: #{binary() => any()}.

%% Example:
%% create_default_subnet_result() :: #{
%%   <<"Subnet">> => subnet()
%% }
-type create_default_subnet_result() :: #{binary() => any()}.

%% Example:
%% provision_ipam_byoasn_request() :: #{
%%   <<"Asn">> := string(),
%%   <<"AsnAuthorizationContext">> := asn_authorization_context(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamId">> := string()
%% }
-type provision_ipam_byoasn_request() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_route_table_associations_result() :: #{
%%   <<"Associations">> => list(transit_gateway_route_table_association()),
%%   <<"NextToken">> => string()
%% }
-type get_transit_gateway_route_table_associations_result() :: #{binary() => any()}.

%% Example:
%% register_transit_gateway_multicast_group_sources_result() :: #{
%%   <<"RegisteredMulticastGroupSources">> => transit_gateway_multicast_registered_group_sources()
%% }
-type register_transit_gateway_multicast_group_sources_result() :: #{binary() => any()}.

%% Example:
%% vpc() :: #{
%%   <<"BlockPublicAccessStates">> => block_public_access_states(),
%%   <<"CidrBlock">> => string(),
%%   <<"CidrBlockAssociationSet">> => list(vpc_cidr_block_association()),
%%   <<"DhcpOptionsId">> => string(),
%%   <<"EncryptionControl">> => vpc_encryption_control(),
%%   <<"InstanceTenancy">> => list(any()),
%%   <<"Ipv6CidrBlockAssociationSet">> => list(vpc_ipv6_cidr_block_association()),
%%   <<"IsDefault">> => boolean(),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type vpc() :: #{binary() => any()}.

%% Example:
%% get_route_server_associations_result() :: #{
%%   <<"RouteServerAssociations">> => list(route_server_association())
%% }
-type get_route_server_associations_result() :: #{binary() => any()}.

%% Example:
%% cancel_bundle_task_request() :: #{
%%   <<"BundleId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type cancel_bundle_task_request() :: #{binary() => any()}.

%% Example:
%% disassociate_capacity_reservation_billing_owner_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type disassociate_capacity_reservation_billing_owner_result() :: #{binary() => any()}.

%% Example:
%% describe_images_result() :: #{
%%   <<"Images">> => list(image()),
%%   <<"NextToken">> => string()
%% }
-type describe_images_result() :: #{binary() => any()}.

%% Example:
%% associate_route_server_result() :: #{
%%   <<"RouteServerAssociation">> => route_server_association()
%% }
-type associate_route_server_result() :: #{binary() => any()}.

%% Example:
%% active_instance() :: #{
%%   <<"InstanceHealth">> => list(any()),
%%   <<"InstanceId">> => string(),
%%   <<"InstanceType">> => string(),
%%   <<"SpotInstanceRequestId">> => string()
%% }
-type active_instance() :: #{binary() => any()}.

%% Example:
%% launch_template_network_performance_options_request() :: #{
%%   <<"BandwidthWeighting">> => list(any())
%% }
-type launch_template_network_performance_options_request() :: #{binary() => any()}.

%% Example:
%% ipam_external_resource_verification_token() :: #{
%%   <<"IpamArn">> => string(),
%%   <<"IpamExternalResourceVerificationTokenArn">> => string(),
%%   <<"IpamExternalResourceVerificationTokenId">> => string(),
%%   <<"IpamId">> => string(),
%%   <<"IpamRegion">> => string(),
%%   <<"NotAfter">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"Status">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TokenName">> => string(),
%%   <<"TokenValue">> => string()
%% }
-type ipam_external_resource_verification_token() :: #{binary() => any()}.

%% Example:
%% import_image_license_configuration_request() :: #{
%%   <<"LicenseConfigurationArn">> => string()
%% }
-type import_image_license_configuration_request() :: #{binary() => any()}.

%% Example:
%% client_data() :: #{
%%   <<"Comment">> => string(),
%%   <<"UploadEnd">> => non_neg_integer(),
%%   <<"UploadSize">> => float(),
%%   <<"UploadStart">> => non_neg_integer()
%% }
-type client_data() :: #{binary() => any()}.

%% Example:
%% purchase_host_reservation_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"CurrencyCode">> => list(any()),
%%   <<"Purchase">> => list(purchase()),
%%   <<"TotalHourlyPrice">> => string(),
%%   <<"TotalUpfrontPrice">> => string()
%% }
-type purchase_host_reservation_result() :: #{binary() => any()}.

%% Example:
%% phase1_encryption_algorithms_request_list_value() :: #{
%%   <<"Value">> => string()
%% }
-type phase1_encryption_algorithms_request_list_value() :: #{binary() => any()}.

%% Example:
%% ipam_scope() :: #{
%%   <<"Description">> => string(),
%%   <<"IpamArn">> => string(),
%%   <<"IpamRegion">> => string(),
%%   <<"IpamScopeArn">> => string(),
%%   <<"IpamScopeId">> => string(),
%%   <<"IpamScopeType">> => list(any()),
%%   <<"IsDefault">> => boolean(),
%%   <<"OwnerId">> => string(),
%%   <<"PoolCount">> => integer(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type ipam_scope() :: #{binary() => any()}.

%% Example:
%% create_fleet_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Context">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"ExcessCapacityTerminationPolicy">> => list(any()),
%%   <<"LaunchTemplateConfigs">> := list(fleet_launch_template_config_request()),
%%   <<"OnDemandOptions">> => on_demand_options_request(),
%%   <<"ReplaceUnhealthyInstances">> => boolean(),
%%   <<"SpotOptions">> => spot_options_request(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TargetCapacitySpecification">> := target_capacity_specification_request(),
%%   <<"TerminateInstancesWithExpiration">> => boolean(),
%%   <<"Type">> => list(any()),
%%   <<"ValidFrom">> => non_neg_integer(),
%%   <<"ValidUntil">> => non_neg_integer()
%% }
-type create_fleet_request() :: #{binary() => any()}.

%% Example:
%% disable_ipam_organization_admin_account_request() :: #{
%%   <<"DelegatedAdminAccountId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type disable_ipam_organization_admin_account_request() :: #{binary() => any()}.

%% Example:
%% describe_flow_logs_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filter">> => list(filter()),
%%   <<"FlowLogIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_flow_logs_request() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_commitment_info() :: #{
%%   <<"CommitmentEndDate">> => non_neg_integer(),
%%   <<"CommittedInstanceCount">> => integer()
%% }
-type capacity_reservation_commitment_info() :: #{binary() => any()}.

%% Example:
%% client_route_enforcement_options() :: #{
%%   <<"Enforced">> => boolean()
%% }
-type client_route_enforcement_options() :: #{binary() => any()}.

%% Example:
%% elastic_gpu_association() :: #{
%%   <<"ElasticGpuAssociationId">> => string(),
%%   <<"ElasticGpuAssociationState">> => string(),
%%   <<"ElasticGpuAssociationTime">> => string(),
%%   <<"ElasticGpuId">> => string()
%% }
-type elastic_gpu_association() :: #{binary() => any()}.

%% Example:
%% transit_gateway_peering_attachment_options() :: #{
%%   <<"DynamicRouting">> => list(any())
%% }
-type transit_gateway_peering_attachment_options() :: #{binary() => any()}.

%% Example:
%% attach_vpn_gateway_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpcId">> := string(),
%%   <<"VpnGatewayId">> := string()
%% }
-type attach_vpn_gateway_request() :: #{binary() => any()}.

%% Example:
%% create_instance_connect_endpoint_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"InstanceConnectEndpoint">> => ec2_instance_connect_endpoint()
%% }
-type create_instance_connect_endpoint_result() :: #{binary() => any()}.

%% Example:
%% detach_classic_link_vpc_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type detach_classic_link_vpc_result() :: #{binary() => any()}.

%% Example:
%% assign_private_nat_gateway_address_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NatGatewayId">> := string(),
%%   <<"PrivateIpAddressCount">> => integer(),
%%   <<"PrivateIpAddresses">> => list(string())
%% }
-type assign_private_nat_gateway_address_request() :: #{binary() => any()}.

%% Example:
%% create_ipam_scope_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_ipam_scope_request() :: #{binary() => any()}.

%% Example:
%% private_dns_name_options_response() :: #{
%%   <<"EnableResourceNameDnsAAAARecord">> => boolean(),
%%   <<"EnableResourceNameDnsARecord">> => boolean(),
%%   <<"HostnameType">> => list(any())
%% }
-type private_dns_name_options_response() :: #{binary() => any()}.

%% Example:
%% reset_address_attribute_request() :: #{
%%   <<"AllocationId">> := string(),
%%   <<"Attribute">> := list(any()),
%%   <<"DryRun">> => boolean()
%% }
-type reset_address_attribute_request() :: #{binary() => any()}.

%% Example:
%% federated_authentication_request() :: #{
%%   <<"SAMLProviderArn">> => string(),
%%   <<"SelfServiceSAMLProviderArn">> => string()
%% }
-type federated_authentication_request() :: #{binary() => any()}.

%% Example:
%% elastic_gpu_specification() :: #{
%%   <<"Type">> => string()
%% }
-type elastic_gpu_specification() :: #{binary() => any()}.

%% Example:
%% create_snapshot_request() :: #{
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Location">> => list(any()),
%%   <<"OutpostArn">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VolumeId">> := string()
%% }
-type create_snapshot_request() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_route_table_announcement_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"PeeringAttachmentId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type create_transit_gateway_route_table_announcement_request() :: #{binary() => any()}.

%% Example:
%% associate_nat_gateway_address_result() :: #{
%%   <<"NatGatewayAddresses">> => list(nat_gateway_address()),
%%   <<"NatGatewayId">> => string()
%% }
-type associate_nat_gateway_address_result() :: #{binary() => any()}.

%% Example:
%% ipv6_prefix_specification() :: #{
%%   <<"Ipv6Prefix">> => string()
%% }
-type ipv6_prefix_specification() :: #{binary() => any()}.

%% Example:
%% route_server_endpoint() :: #{
%%   <<"EniAddress">> => string(),
%%   <<"EniId">> => string(),
%%   <<"FailureReason">> => string(),
%%   <<"RouteServerEndpointId">> => string(),
%%   <<"RouteServerId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"SubnetId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type route_server_endpoint() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_route_table_result() :: #{
%%   <<"LocalGatewayRouteTable">> => local_gateway_route_table()
%% }
-type create_local_gateway_route_table_result() :: #{binary() => any()}.

%% Example:
%% launch_template_cpu_options_request() :: #{
%%   <<"AmdSevSnp">> => list(any()),
%%   <<"CoreCount">> => integer(),
%%   <<"ThreadsPerCore">> => integer()
%% }
-type launch_template_cpu_options_request() :: #{binary() => any()}.

%% Example:
%% accept_vpc_peering_connection_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpcPeeringConnectionId">> := string()
%% }
-type accept_vpc_peering_connection_request() :: #{binary() => any()}.

%% Example:
%% delete_instance_event_window_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ForceDelete">> => boolean(),
%%   <<"InstanceEventWindowId">> := string()
%% }
-type delete_instance_event_window_request() :: #{binary() => any()}.

%% Example:
%% capacity_block_extension() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"CapacityBlockExtensionDurationHours">> => integer(),
%%   <<"CapacityBlockExtensionEndDate">> => non_neg_integer(),
%%   <<"CapacityBlockExtensionOfferingId">> => string(),
%%   <<"CapacityBlockExtensionPurchaseDate">> => non_neg_integer(),
%%   <<"CapacityBlockExtensionStartDate">> => non_neg_integer(),
%%   <<"CapacityBlockExtensionStatus">> => list(any()),
%%   <<"CapacityReservationId">> => string(),
%%   <<"CurrencyCode">> => string(),
%%   <<"InstanceCount">> => integer(),
%%   <<"InstanceType">> => string(),
%%   <<"UpfrontFee">> => string()
%% }
-type capacity_block_extension() :: #{binary() => any()}.

%% Example:
%% disassociate_transit_gateway_multicast_domain_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SubnetIds">> := list(string()),
%%   <<"TransitGatewayAttachmentId">> := string(),
%%   <<"TransitGatewayMulticastDomainId">> := string()
%% }
-type disassociate_transit_gateway_multicast_domain_request() :: #{binary() => any()}.

%% Example:
%% import_image_task() :: #{
%%   <<"Architecture">> => string(),
%%   <<"BootMode">> => list(any()),
%%   <<"Description">> => string(),
%%   <<"Encrypted">> => boolean(),
%%   <<"Hypervisor">> => string(),
%%   <<"ImageId">> => string(),
%%   <<"ImportTaskId">> => string(),
%%   <<"KmsKeyId">> => string(),
%%   <<"LicenseSpecifications">> => list(import_image_license_configuration_response()),
%%   <<"LicenseType">> => string(),
%%   <<"Platform">> => string(),
%%   <<"Progress">> => string(),
%%   <<"SnapshotDetails">> => list(snapshot_detail()),
%%   <<"Status">> => string(),
%%   <<"StatusMessage">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"UsageOperation">> => string()
%% }
-type import_image_task() :: #{binary() => any()}.

%% Example:
%% reset_snapshot_attribute_request() :: #{
%%   <<"Attribute">> := list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"SnapshotId">> := string()
%% }
-type reset_snapshot_attribute_request() :: #{binary() => any()}.

%% Example:
%% event_information() :: #{
%%   <<"EventDescription">> => string(),
%%   <<"EventSubType">> => string(),
%%   <<"InstanceId">> => string()
%% }
-type event_information() :: #{binary() => any()}.

%% Example:
%% pci_id() :: #{
%%   <<"DeviceId">> => string(),
%%   <<"SubsystemId">> => string(),
%%   <<"SubsystemVendorId">> => string(),
%%   <<"VendorId">> => string()
%% }
-type pci_id() :: #{binary() => any()}.

%% Example:
%% v_cpu_count_range() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type v_cpu_count_range() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_info() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"InstanceType">> => string(),
%%   <<"Tenancy">> => list(any())
%% }
-type capacity_reservation_info() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoints_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VpcEndpointIds">> => list(string())
%% }
-type describe_vpc_endpoints_request() :: #{binary() => any()}.

%% Example:
%% purchase_request() :: #{
%%   <<"InstanceCount">> => integer(),
%%   <<"PurchaseToken">> => string()
%% }
-type purchase_request() :: #{binary() => any()}.

%% Example:
%% delete_route_server_endpoint_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"RouteServerEndpointId">> := string()
%% }
-type delete_route_server_endpoint_request() :: #{binary() => any()}.

%% Example:
%% instance_block_device_mapping() :: #{
%%   <<"DeviceName">> => string(),
%%   <<"Ebs">> => ebs_instance_block_device()
%% }
-type instance_block_device_mapping() :: #{binary() => any()}.

%% Example:
%% describe_network_insights_paths_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NetworkInsightsPathIds">> => list(string()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_insights_paths_request() :: #{binary() => any()}.

%% Example:
%% restore_image_from_recycle_bin_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type restore_image_from_recycle_bin_result() :: #{binary() => any()}.

%% Example:
%% create_network_interface_permission_result() :: #{
%%   <<"InterfacePermission">> => network_interface_permission()
%% }
-type create_network_interface_permission_result() :: #{binary() => any()}.

%% Example:
%% get_host_reservation_purchase_preview_result() :: #{
%%   <<"CurrencyCode">> => list(any()),
%%   <<"Purchase">> => list(purchase()),
%%   <<"TotalHourlyPrice">> => string(),
%%   <<"TotalUpfrontPrice">> => string()
%% }
-type get_host_reservation_purchase_preview_result() :: #{binary() => any()}.

%% Example:
%% search_transit_gateway_multicast_groups_result() :: #{
%%   <<"MulticastGroups">> => list(transit_gateway_multicast_group()),
%%   <<"NextToken">> => string()
%% }
-type search_transit_gateway_multicast_groups_result() :: #{binary() => any()}.

%% Example:
%% instance_ipv6_prefix() :: #{
%%   <<"Ipv6Prefix">> => string()
%% }
-type instance_ipv6_prefix() :: #{binary() => any()}.

%% Example:
%% assign_ipv6_addresses_request() :: #{
%%   <<"Ipv6AddressCount">> => integer(),
%%   <<"Ipv6Addresses">> => list(string()),
%%   <<"Ipv6PrefixCount">> => integer(),
%%   <<"Ipv6Prefixes">> => list(string()),
%%   <<"NetworkInterfaceId">> := string()
%% }
-type assign_ipv6_addresses_request() :: #{binary() => any()}.

%% Example:
%% private_dns_details() :: #{
%%   <<"PrivateDnsName">> => string()
%% }
-type private_dns_details() :: #{binary() => any()}.

%% Example:
%% describe_images_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ExecutableUsers">> => list(string()),
%%   <<"Filters">> => list(filter()),
%%   <<"ImageIds">> => list(string()),
%%   <<"IncludeDeprecated">> => boolean(),
%%   <<"IncludeDisabled">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"Owners">> => list(string())
%% }
-type describe_images_request() :: #{binary() => any()}.

%% Example:
%% launch_template_iam_instance_profile_specification_request() :: #{
%%   <<"Arn">> => string(),
%%   <<"Name">> => string()
%% }
-type launch_template_iam_instance_profile_specification_request() :: #{binary() => any()}.

%% Example:
%% create_volume_permission() :: #{
%%   <<"Group">> => list(any()),
%%   <<"UserId">> => string()
%% }
-type create_volume_permission() :: #{binary() => any()}.

%% Example:
%% instance_event_window() :: #{
%%   <<"AssociationTarget">> => instance_event_window_association_target(),
%%   <<"CronExpression">> => string(),
%%   <<"InstanceEventWindowId">> => string(),
%%   <<"Name">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TimeRanges">> => list(instance_event_window_time_range())
%% }
-type instance_event_window() :: #{binary() => any()}.

%% Example:
%% connection_log_response_options() :: #{
%%   <<"CloudwatchLogGroup">> => string(),
%%   <<"CloudwatchLogStream">> => string(),
%%   <<"Enabled">> => boolean()
%% }
-type connection_log_response_options() :: #{binary() => any()}.

%% Example:
%% copy_image_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"CopyImageTags">> => boolean(),
%%   <<"Description">> => string(),
%%   <<"DestinationOutpostArn">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Encrypted">> => boolean(),
%%   <<"KmsKeyId">> => string(),
%%   <<"Name">> := string(),
%%   <<"SnapshotCopyCompletionDurationMinutes">> => float(),
%%   <<"SourceImageId">> := string(),
%%   <<"SourceRegion">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type copy_image_request() :: #{binary() => any()}.

%% Example:
%% delete_ipam_pool_result() :: #{
%%   <<"IpamPool">> => ipam_pool()
%% }
-type delete_ipam_pool_result() :: #{binary() => any()}.

%% Example:
%% ebs_instance_block_device_specification() :: #{
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"VolumeId">> => string()
%% }
-type ebs_instance_block_device_specification() :: #{binary() => any()}.

%% Example:
%% describe_security_group_references_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupId">> := list(string())
%% }
-type describe_security_group_references_request() :: #{binary() => any()}.

%% Example:
%% describe_security_group_vpc_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_security_group_vpc_associations_request() :: #{binary() => any()}.

%% Example:
%% describe_security_groups_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"SecurityGroups">> => list(security_group())
%% }
-type describe_security_groups_result() :: #{binary() => any()}.

%% Example:
%% modify_fleet_request() :: #{
%%   <<"Context">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"ExcessCapacityTerminationPolicy">> => list(any()),
%%   <<"FleetId">> := string(),
%%   <<"LaunchTemplateConfigs">> => list(fleet_launch_template_config_request()),
%%   <<"TargetCapacitySpecification">> => target_capacity_specification_request()
%% }
-type modify_fleet_request() :: #{binary() => any()}.

%% Example:
%% revoke_client_vpn_ingress_result() :: #{
%%   <<"Status">> => client_vpn_authorization_rule_status()
%% }
-type revoke_client_vpn_ingress_result() :: #{binary() => any()}.

%% Example:
%% baseline_performance_factors_request() :: #{
%%   <<"Cpu">> => cpu_performance_factor_request()
%% }
-type baseline_performance_factors_request() :: #{binary() => any()}.

%% Example:
%% register_transit_gateway_multicast_group_members_result() :: #{
%%   <<"RegisteredMulticastGroupMembers">> => transit_gateway_multicast_registered_group_members()
%% }
-type register_transit_gateway_multicast_group_members_result() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_attachments_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayAttachments">> => list(transit_gateway_attachment())
%% }
-type describe_transit_gateway_attachments_result() :: #{binary() => any()}.

%% Example:
%% spot_fleet_request_config() :: #{
%%   <<"ActivityStatus">> => list(any()),
%%   <<"CreateTime">> => non_neg_integer(),
%%   <<"SpotFleetRequestConfig">> => spot_fleet_request_config_data(),
%%   <<"SpotFleetRequestId">> => string(),
%%   <<"SpotFleetRequestState">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type spot_fleet_request_config() :: #{binary() => any()}.

%% Example:
%% describe_store_image_tasks_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"StoreImageTaskResults">> => list(store_image_task_result())
%% }
-type describe_store_image_tasks_result() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_vpc_attachment_request_options() :: #{
%%   <<"ApplianceModeSupport">> => list(any()),
%%   <<"DnsSupport">> => list(any()),
%%   <<"Ipv6Support">> => list(any()),
%%   <<"SecurityGroupReferencingSupport">> => list(any())
%% }
-type create_transit_gateway_vpc_attachment_request_options() :: #{binary() => any()}.

%% Example:
%% describe_key_pairs_result() :: #{
%%   <<"KeyPairs">> => list(key_pair_info())
%% }
-type describe_key_pairs_result() :: #{binary() => any()}.

%% Example:
%% recurring_charge() :: #{
%%   <<"Amount">> => float(),
%%   <<"Frequency">> => list(any())
%% }
-type recurring_charge() :: #{binary() => any()}.

%% Example:
%% get_ebs_encryption_by_default_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type get_ebs_encryption_by_default_request() :: #{binary() => any()}.

%% Example:
%% account_attribute_value() :: #{
%%   <<"AttributeValue">> => string()
%% }
-type account_attribute_value() :: #{binary() => any()}.

%% Example:
%% associate_capacity_reservation_billing_owner_request() :: #{
%%   <<"CapacityReservationId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"UnusedReservationBillingOwnerId">> := string()
%% }
-type associate_capacity_reservation_billing_owner_request() :: #{binary() => any()}.

%% Example:
%% describe_internet_gateways_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"InternetGatewayIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_internet_gateways_request() :: #{binary() => any()}.

%% Example:
%% modify_subnet_attribute_request() :: #{
%%   <<"AssignIpv6AddressOnCreation">> => attribute_boolean_value(),
%%   <<"CustomerOwnedIpv4Pool">> => string(),
%%   <<"DisableLniAtDeviceIndex">> => attribute_boolean_value(),
%%   <<"EnableDns64">> => attribute_boolean_value(),
%%   <<"EnableLniAtDeviceIndex">> => integer(),
%%   <<"EnableResourceNameDnsAAAARecordOnLaunch">> => attribute_boolean_value(),
%%   <<"EnableResourceNameDnsARecordOnLaunch">> => attribute_boolean_value(),
%%   <<"MapCustomerOwnedIpOnLaunch">> => attribute_boolean_value(),
%%   <<"MapPublicIpOnLaunch">> => attribute_boolean_value(),
%%   <<"PrivateDnsHostnameTypeOnLaunch">> => list(any()),
%%   <<"SubnetId">> := string()
%% }
-type modify_subnet_attribute_request() :: #{binary() => any()}.

%% Example:
%% create_network_acl_entry_request() :: #{
%%   <<"CidrBlock">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Egress">> := boolean(),
%%   <<"IcmpTypeCode">> => icmp_type_code(),
%%   <<"Ipv6CidrBlock">> => string(),
%%   <<"NetworkAclId">> := string(),
%%   <<"PortRange">> => port_range(),
%%   <<"Protocol">> := string(),
%%   <<"RuleAction">> := list(any()),
%%   <<"RuleNumber">> := integer()
%% }
-type create_network_acl_entry_request() :: #{binary() => any()}.

%% Example:
%% disable_fast_snapshot_restores_request() :: #{
%%   <<"AvailabilityZones">> := list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"SourceSnapshotIds">> := list(string())
%% }
-type disable_fast_snapshot_restores_request() :: #{binary() => any()}.

%% Example:
%% modify_ipam_pool_result() :: #{
%%   <<"IpamPool">> => ipam_pool()
%% }
-type modify_ipam_pool_result() :: #{binary() => any()}.

%% Example:
%% verified_access_endpoint_target() :: #{
%%   <<"VerifiedAccessEndpointId">> => string(),
%%   <<"VerifiedAccessEndpointTargetDns">> => string(),
%%   <<"VerifiedAccessEndpointTargetIpAddress">> => string()
%% }
-type verified_access_endpoint_target() :: #{binary() => any()}.

%% Example:
%% managed_prefix_list() :: #{
%%   <<"AddressFamily">> => string(),
%%   <<"MaxEntries">> => integer(),
%%   <<"OwnerId">> => string(),
%%   <<"PrefixListArn">> => string(),
%%   <<"PrefixListId">> => string(),
%%   <<"PrefixListName">> => string(),
%%   <<"State">> => list(any()),
%%   <<"StateMessage">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"Version">> => float()
%% }
-type managed_prefix_list() :: #{binary() => any()}.

%% Example:
%% enable_volume_i_o_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VolumeId">> := string()
%% }
-type enable_volume_i_o_request() :: #{binary() => any()}.

%% Example:
%% remove_ipam_operating_region() :: #{
%%   <<"RegionName">> => string()
%% }
-type remove_ipam_operating_region() :: #{binary() => any()}.

%% Example:
%% unassign_ipv6_addresses_result() :: #{
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"UnassignedIpv6Addresses">> => list(string()),
%%   <<"UnassignedIpv6Prefixes">> => list(string())
%% }
-type unassign_ipv6_addresses_result() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_route_table_vpc_association_result() :: #{
%%   <<"LocalGatewayRouteTableVpcAssociation">> => local_gateway_route_table_vpc_association()
%% }
-type create_local_gateway_route_table_vpc_association_result() :: #{binary() => any()}.

%% Example:
%% create_route_server_endpoint_result() :: #{
%%   <<"RouteServerEndpoint">> => route_server_endpoint()
%% }
-type create_route_server_endpoint_result() :: #{binary() => any()}.

%% Example:
%% import_image_request() :: #{
%%   <<"Architecture">> => string(),
%%   <<"BootMode">> => list(any()),
%%   <<"ClientData">> => client_data(),
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DiskContainers">> => list(image_disk_container()),
%%   <<"DryRun">> => boolean(),
%%   <<"Encrypted">> => boolean(),
%%   <<"Hypervisor">> => string(),
%%   <<"KmsKeyId">> => string(),
%%   <<"LicenseSpecifications">> => list(import_image_license_configuration_request()),
%%   <<"LicenseType">> => string(),
%%   <<"Platform">> => string(),
%%   <<"RoleName">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"UsageOperation">> => string()
%% }
-type import_image_request() :: #{binary() => any()}.

%% Example:
%% delete_vpc_endpoint_service_configurations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ServiceIds">> := list(string())
%% }
-type delete_vpc_endpoint_service_configurations_request() :: #{binary() => any()}.

%% Example:
%% describe_volumes_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VolumeIds">> => list(string())
%% }
-type describe_volumes_request() :: #{binary() => any()}.

%% Example:
%% unassign_private_nat_gateway_address_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxDrainDurationSeconds">> => integer(),
%%   <<"NatGatewayId">> := string(),
%%   <<"PrivateIpAddresses">> := list(string())
%% }
-type unassign_private_nat_gateway_address_request() :: #{binary() => any()}.

%% Example:
%% launch_template_license_configuration_request() :: #{
%%   <<"LicenseConfigurationArn">> => string()
%% }
-type launch_template_license_configuration_request() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_policy_table_entries_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayPolicyTableId">> := string()
%% }
-type get_transit_gateway_policy_table_entries_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_attachment_propagation() :: #{
%%   <<"State">> => list(any()),
%%   <<"TransitGatewayRouteTableId">> => string()
%% }
-type transit_gateway_attachment_propagation() :: #{binary() => any()}.

%% Example:
%% provision_byoip_cidr_result() :: #{
%%   <<"ByoipCidr">> => byoip_cidr()
%% }
-type provision_byoip_cidr_result() :: #{binary() => any()}.

%% Example:
%% delete_instance_connect_endpoint_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceConnectEndpointId">> := string()
%% }
-type delete_instance_connect_endpoint_request() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_policy_table_entries_result() :: #{
%%   <<"TransitGatewayPolicyTableEntries">> => list(transit_gateway_policy_table_entry())
%% }
-type get_transit_gateway_policy_table_entries_result() :: #{binary() => any()}.

%% Example:
%% modify_instance_metadata_options_result() :: #{
%%   <<"InstanceId">> => string(),
%%   <<"InstanceMetadataOptions">> => instance_metadata_options_response()
%% }
-type modify_instance_metadata_options_result() :: #{binary() => any()}.

%% Example:
%% modify_instance_network_performance_request() :: #{
%%   <<"BandwidthWeighting">> := list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string()
%% }
-type modify_instance_network_performance_request() :: #{binary() => any()}.

%% Example:
%% network_interface() :: #{
%%   <<"AssociatedSubnets">> => list(string()),
%%   <<"Association">> => network_interface_association(),
%%   <<"Attachment">> => network_interface_attachment(),
%%   <<"AvailabilityZone">> => string(),
%%   <<"ConnectionTrackingConfiguration">> => connection_tracking_configuration(),
%%   <<"DenyAllIgwTraffic">> => boolean(),
%%   <<"Description">> => string(),
%%   <<"Groups">> => list(group_identifier()),
%%   <<"InterfaceType">> => list(any()),
%%   <<"Ipv4Prefixes">> => list(ipv4_prefix_specification()),
%%   <<"Ipv6Address">> => string(),
%%   <<"Ipv6Addresses">> => list(network_interface_ipv6_address()),
%%   <<"Ipv6Native">> => boolean(),
%%   <<"Ipv6Prefixes">> => list(ipv6_prefix_specification()),
%%   <<"MacAddress">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"Operator">> => operator_response(),
%%   <<"OutpostArn">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"PrivateDnsName">> => string(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"PrivateIpAddresses">> => list(network_interface_private_ip_address()),
%%   <<"PublicDnsName">> => string(),
%%   <<"PublicIpDnsNameOptions">> => public_ip_dns_name_options(),
%%   <<"RequesterId">> => string(),
%%   <<"RequesterManaged">> => boolean(),
%%   <<"SourceDestCheck">> => boolean(),
%%   <<"Status">> => list(any()),
%%   <<"SubnetId">> => string(),
%%   <<"TagSet">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type network_interface() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_target() :: #{
%%   <<"CapacityReservationId">> => string(),
%%   <<"CapacityReservationResourceGroupArn">> => string()
%% }
-type capacity_reservation_target() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_route_table_vpc_association_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayRouteTableId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VpcId">> := string()
%% }
-type create_local_gateway_route_table_vpc_association_request() :: #{binary() => any()}.

%% Example:
%% get_console_screenshot_result() :: #{
%%   <<"ImageData">> => string(),
%%   <<"InstanceId">> => string()
%% }
-type get_console_screenshot_result() :: #{binary() => any()}.

%% Example:
%% delete_vpc_peering_connection_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type delete_vpc_peering_connection_result() :: #{binary() => any()}.

%% Example:
%% describe_principal_id_format_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"Resources">> => list(string())
%% }
-type describe_principal_id_format_request() :: #{binary() => any()}.

%% Example:
%% conversion_task() :: #{
%%   <<"ConversionTaskId">> => string(),
%%   <<"ExpirationTime">> => string(),
%%   <<"ImportInstance">> => import_instance_task_details(),
%%   <<"ImportVolume">> => import_volume_task_details(),
%%   <<"State">> => list(any()),
%%   <<"StatusMessage">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type conversion_task() :: #{binary() => any()}.

%% Example:
%% load_permission_request() :: #{
%%   <<"Group">> => list(any()),
%%   <<"UserId">> => string()
%% }
-type load_permission_request() :: #{binary() => any()}.

%% Example:
%% disassociate_security_group_vpc_result() :: #{
%%   <<"State">> => list(any())
%% }
-type disassociate_security_group_vpc_result() :: #{binary() => any()}.

%% Example:
%% describe_route_server_endpoints_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"RouteServerEndpointIds">> => list(string())
%% }
-type describe_route_server_endpoints_request() :: #{binary() => any()}.

%% Example:
%% nat_gateway_address() :: #{
%%   <<"AllocationId">> => string(),
%%   <<"AssociationId">> => string(),
%%   <<"FailureMessage">> => string(),
%%   <<"IsPrimary">> => boolean(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"PrivateIp">> => string(),
%%   <<"PublicIp">> => string(),
%%   <<"Status">> => list(any())
%% }
-type nat_gateway_address() :: #{binary() => any()}.

%% Example:
%% association_status() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type association_status() :: #{binary() => any()}.

%% Example:
%% describe_ipam_scopes_result() :: #{
%%   <<"IpamScopes">> => list(ipam_scope()),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_scopes_result() :: #{binary() => any()}.

%% Example:
%% get_aws_network_performance_data_result() :: #{
%%   <<"DataResponses">> => list(data_response()),
%%   <<"NextToken">> => string()
%% }
-type get_aws_network_performance_data_result() :: #{binary() => any()}.

%% Example:
%% subnet() :: #{
%%   <<"AssignIpv6AddressOnCreation">> => boolean(),
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"AvailableIpAddressCount">> => integer(),
%%   <<"BlockPublicAccessStates">> => block_public_access_states(),
%%   <<"CidrBlock">> => string(),
%%   <<"CustomerOwnedIpv4Pool">> => string(),
%%   <<"DefaultForAz">> => boolean(),
%%   <<"EnableDns64">> => boolean(),
%%   <<"EnableLniAtDeviceIndex">> => integer(),
%%   <<"Ipv6CidrBlockAssociationSet">> => list(subnet_ipv6_cidr_block_association()),
%%   <<"Ipv6Native">> => boolean(),
%%   <<"MapCustomerOwnedIpOnLaunch">> => boolean(),
%%   <<"MapPublicIpOnLaunch">> => boolean(),
%%   <<"OutpostArn">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"PrivateDnsNameOptionsOnLaunch">> => private_dns_name_options_on_launch(),
%%   <<"State">> => list(any()),
%%   <<"SubnetArn">> => string(),
%%   <<"SubnetId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"Type">> => string(),
%%   <<"VpcId">> => string()
%% }
-type subnet() :: #{binary() => any()}.

%% Example:
%% disable_vgw_route_propagation_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GatewayId">> := string(),
%%   <<"RouteTableId">> := string()
%% }
-type disable_vgw_route_propagation_request() :: #{binary() => any()}.

%% Example:
%% cancel_spot_fleet_requests_success_item() :: #{
%%   <<"CurrentSpotFleetRequestState">> => list(any()),
%%   <<"PreviousSpotFleetRequestState">> => list(any()),
%%   <<"SpotFleetRequestId">> => string()
%% }
-type cancel_spot_fleet_requests_success_item() :: #{binary() => any()}.

%% Example:
%% describe_nat_gateways_result() :: #{
%%   <<"NatGateways">> => list(nat_gateway()),
%%   <<"NextToken">> => string()
%% }
-type describe_nat_gateways_result() :: #{binary() => any()}.

%% Example:
%% mac_modification_task() :: #{
%%   <<"InstanceId">> => string(),
%%   <<"MacModificationTaskId">> => string(),
%%   <<"MacSystemIntegrityProtectionConfig">> => mac_system_integrity_protection_configuration(),
%%   <<"StartTime">> => non_neg_integer(),
%%   <<"Tags">> => list(tag()),
%%   <<"TaskState">> => list(any()),
%%   <<"TaskType">> => list(any())
%% }
-type mac_modification_task() :: #{binary() => any()}.

%% Example:
%% get_groups_for_capacity_reservation_result() :: #{
%%   <<"CapacityReservationGroups">> => list(capacity_reservation_group()),
%%   <<"NextToken">> => string()
%% }
-type get_groups_for_capacity_reservation_result() :: #{binary() => any()}.

%% Example:
%% add_prefix_list_entry() :: #{
%%   <<"Cidr">> => string(),
%%   <<"Description">> => string()
%% }
-type add_prefix_list_entry() :: #{binary() => any()}.

%% Example:
%% successful_queued_purchase_deletion() :: #{
%%   <<"ReservedInstancesId">> => string()
%% }
-type successful_queued_purchase_deletion() :: #{binary() => any()}.

%% Example:
%% launch_template_instance_market_options_request() :: #{
%%   <<"MarketType">> => list(any()),
%%   <<"SpotOptions">> => launch_template_spot_market_options_request()
%% }
-type launch_template_instance_market_options_request() :: #{binary() => any()}.

%% Example:
%% delete_key_pair_result() :: #{
%%   <<"KeyPairId">> => string(),
%%   <<"Return">> => boolean()
%% }
-type delete_key_pair_result() :: #{binary() => any()}.

%% Example:
%% public_ipv4_pool_range() :: #{
%%   <<"AddressCount">> => integer(),
%%   <<"AvailableAddressCount">> => integer(),
%%   <<"FirstAddress">> => string(),
%%   <<"LastAddress">> => string()
%% }
-type public_ipv4_pool_range() :: #{binary() => any()}.

%% Example:
%% transit_gateway_multicast_domain_associations() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceOwnerId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"Subnets">> => list(subnet_association()),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayMulticastDomainId">> => string()
%% }
-type transit_gateway_multicast_domain_associations() :: #{binary() => any()}.

%% Example:
%% reject_transit_gateway_peering_attachment_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> := string()
%% }
-type reject_transit_gateway_peering_attachment_request() :: #{binary() => any()}.

%% Example:
%% get_ipam_discovered_resource_cidrs_result() :: #{
%%   <<"IpamDiscoveredResourceCidrs">> => list(ipam_discovered_resource_cidr()),
%%   <<"NextToken">> => string()
%% }
-type get_ipam_discovered_resource_cidrs_result() :: #{binary() => any()}.

%% Example:
%% describe_moving_addresses_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"PublicIps">> => list(string())
%% }
-type describe_moving_addresses_request() :: #{binary() => any()}.

%% Example:
%% subnet_ipv6_cidr_block_association() :: #{
%%   <<"AssociationId">> => string(),
%%   <<"IpSource">> => list(any()),
%%   <<"Ipv6AddressAttribute">> => list(any()),
%%   <<"Ipv6CidrBlock">> => string(),
%%   <<"Ipv6CidrBlockState">> => subnet_cidr_block_state()
%% }
-type subnet_ipv6_cidr_block_association() :: #{binary() => any()}.

%% Example:
%% analysis_load_balancer_listener() :: #{
%%   <<"InstancePort">> => integer(),
%%   <<"LoadBalancerPort">> => integer()
%% }
-type analysis_load_balancer_listener() :: #{binary() => any()}.

%% Example:
%% vpc_encryption_control_exclusion() :: #{
%%   <<"State">> => list(any()),
%%   <<"StateMessage">> => string()
%% }
-type vpc_encryption_control_exclusion() :: #{binary() => any()}.

%% Example:
%% memory_gi_b_per_v_cpu_request() :: #{
%%   <<"Max">> => float(),
%%   <<"Min">> => float()
%% }
-type memory_gi_b_per_v_cpu_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_policy_rule() :: #{
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"DestinationPortRange">> => string(),
%%   <<"MetaData">> => transit_gateway_policy_rule_meta_data(),
%%   <<"Protocol">> => string(),
%%   <<"SourceCidrBlock">> => string(),
%%   <<"SourcePortRange">> => string()
%% }
-type transit_gateway_policy_rule() :: #{binary() => any()}.

%% Example:
%% describe_spot_price_history_request() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EndTime">> => non_neg_integer(),
%%   <<"Filters">> => list(filter()),
%%   <<"InstanceTypes">> => list(list(any())()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"ProductDescriptions">> => list(string()),
%%   <<"StartTime">> => non_neg_integer()
%% }
-type describe_spot_price_history_request() :: #{binary() => any()}.

%% Example:
%% delete_subnet_cidr_reservation_result() :: #{
%%   <<"DeletedSubnetCidrReservation">> => subnet_cidr_reservation()
%% }
-type delete_subnet_cidr_reservation_result() :: #{binary() => any()}.

%% Example:
%% disassociate_client_vpn_target_network_request() :: #{
%%   <<"AssociationId">> := string(),
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type disassociate_client_vpn_target_network_request() :: #{binary() => any()}.

%% Example:
%% describe_client_vpn_target_networks_request() :: #{
%%   <<"AssociationIds">> => list(string()),
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_client_vpn_target_networks_request() :: #{binary() => any()}.

%% Example:
%% verified_access_endpoint_rds_options() :: #{
%%   <<"Port">> => integer(),
%%   <<"Protocol">> => list(any()),
%%   <<"RdsDbClusterArn">> => string(),
%%   <<"RdsDbInstanceArn">> => string(),
%%   <<"RdsDbProxyArn">> => string(),
%%   <<"RdsEndpoint">> => string(),
%%   <<"SubnetIds">> => list(string())
%% }
-type verified_access_endpoint_rds_options() :: #{binary() => any()}.

%% Example:
%% describe_spot_fleet_instances_response() :: #{
%%   <<"ActiveInstances">> => list(active_instance()),
%%   <<"NextToken">> => string(),
%%   <<"SpotFleetRequestId">> => string()
%% }
-type describe_spot_fleet_instances_response() :: #{binary() => any()}.

%% Example:
%% create_ipam_pool_result() :: #{
%%   <<"IpamPool">> => ipam_pool()
%% }
-type create_ipam_pool_result() :: #{binary() => any()}.

%% Example:
%% verified_access_log_cloud_watch_logs_destination_options() :: #{
%%   <<"Enabled">> => boolean(),
%%   <<"LogGroup">> => string()
%% }
-type verified_access_log_cloud_watch_logs_destination_options() :: #{binary() => any()}.

%% Example:
%% disable_image_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string()
%% }
-type disable_image_request() :: #{binary() => any()}.

%% Example:
%% deregister_image_result() :: #{
%%   <<"DeleteSnapshotResults">> => list(delete_snapshot_return_code()),
%%   <<"Return">> => boolean()
%% }
-type deregister_image_result() :: #{binary() => any()}.

%% Example:
%% create_spot_datafeed_subscription_result() :: #{
%%   <<"SpotDatafeedSubscription">> => spot_datafeed_subscription()
%% }
-type create_spot_datafeed_subscription_result() :: #{binary() => any()}.

%% Example:
%% modify_private_dns_name_options_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"EnableResourceNameDnsAAAARecord">> => boolean(),
%%   <<"EnableResourceNameDnsARecord">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"PrivateDnsHostnameType">> => list(any())
%% }
-type modify_private_dns_name_options_request() :: #{binary() => any()}.

%% Example:
%% subnet_configuration() :: #{
%%   <<"Ipv4">> => string(),
%%   <<"Ipv6">> => string(),
%%   <<"SubnetId">> => string()
%% }
-type subnet_configuration() :: #{binary() => any()}.

%% Example:
%% cpu_options_request() :: #{
%%   <<"AmdSevSnp">> => list(any()),
%%   <<"CoreCount">> => integer(),
%%   <<"ThreadsPerCore">> => integer()
%% }
-type cpu_options_request() :: #{binary() => any()}.

%% Example:
%% create_flow_logs_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"FlowLogIds">> => list(string()),
%%   <<"Unsuccessful">> => list(unsuccessful_item())
%% }
-type create_flow_logs_result() :: #{binary() => any()}.

%% Example:
%% capacity_block_status() :: #{
%%   <<"CapacityBlockId">> => string(),
%%   <<"CapacityReservationStatuses">> => list(capacity_reservation_status()),
%%   <<"InterconnectStatus">> => list(any()),
%%   <<"TotalAvailableCapacity">> => integer(),
%%   <<"TotalCapacity">> => integer(),
%%   <<"TotalUnavailableCapacity">> => integer()
%% }
-type capacity_block_status() :: #{binary() => any()}.

%% Example:
%% neuron_device_info() :: #{
%%   <<"CoreInfo">> => neuron_device_core_info(),
%%   <<"Count">> => integer(),
%%   <<"MemoryInfo">> => neuron_device_memory_info(),
%%   <<"Name">> => string()
%% }
-type neuron_device_info() :: #{binary() => any()}.

%% Example:
%% client_route_enforcement_response_options() :: #{
%%   <<"Enforced">> => boolean()
%% }
-type client_route_enforcement_response_options() :: #{binary() => any()}.

%% Example:
%% describe_placement_groups_result() :: #{
%%   <<"PlacementGroups">> => list(placement_group())
%% }
-type describe_placement_groups_result() :: #{binary() => any()}.

%% Example:
%% ipam_pool_cidr() :: #{
%%   <<"Cidr">> => string(),
%%   <<"FailureReason">> => ipam_pool_cidr_failure_reason(),
%%   <<"IpamPoolCidrId">> => string(),
%%   <<"NetmaskLength">> => integer(),
%%   <<"State">> => list(any())
%% }
-type ipam_pool_cidr() :: #{binary() => any()}.

%% Example:
%% modify_vpn_connection_request() :: #{
%%   <<"CustomerGatewayId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayId">> => string(),
%%   <<"VpnConnectionId">> := string(),
%%   <<"VpnGatewayId">> => string()
%% }
-type modify_vpn_connection_request() :: #{binary() => any()}.

%% Example:
%% describe_traffic_mirror_filters_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TrafficMirrorFilters">> => list(traffic_mirror_filter())
%% }
-type describe_traffic_mirror_filters_result() :: #{binary() => any()}.

%% Example:
%% modify_route_server_result() :: #{
%%   <<"RouteServer">> => route_server()
%% }
-type modify_route_server_result() :: #{binary() => any()}.

%% Example:
%% disable_route_server_propagation_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"RouteServerId">> := string(),
%%   <<"RouteTableId">> := string()
%% }
-type disable_route_server_propagation_request() :: #{binary() => any()}.

%% Example:
%% ipam_pool_cidr_failure_reason() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type ipam_pool_cidr_failure_reason() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_route_result() :: #{
%%   <<"Route">> => local_gateway_route()
%% }
-type delete_local_gateway_route_result() :: #{binary() => any()}.

%% Example:
%% describe_vpc_block_public_access_options_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type describe_vpc_block_public_access_options_request() :: #{binary() => any()}.

%% Example:
%% disable_image_deregistration_protection_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string()
%% }
-type disable_image_deregistration_protection_request() :: #{binary() => any()}.

%% Example:
%% delete_ipam_external_resource_verification_token_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"IpamExternalResourceVerificationTokenId">> := string()
%% }
-type delete_ipam_external_resource_verification_token_request() :: #{binary() => any()}.

%% Example:
%% delete_spot_datafeed_subscription_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type delete_spot_datafeed_subscription_request() :: #{binary() => any()}.

%% Example:
%% create_route_table_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VpcId">> := string()
%% }
-type create_route_table_request() :: #{binary() => any()}.

%% Example:
%% create_ipam_scope_result() :: #{
%%   <<"IpamScope">> => ipam_scope()
%% }
-type create_ipam_scope_result() :: #{binary() => any()}.

%% Example:
%% delete_ipam_external_resource_verification_token_result() :: #{
%%   <<"IpamExternalResourceVerificationToken">> => ipam_external_resource_verification_token()
%% }
-type delete_ipam_external_resource_verification_token_result() :: #{binary() => any()}.

%% Example:
%% deprovision_ipam_byoasn_request() :: #{
%%   <<"Asn">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamId">> := string()
%% }
-type deprovision_ipam_byoasn_request() :: #{binary() => any()}.

%% Example:
%% move_capacity_reservation_instances_result() :: #{
%%   <<"DestinationCapacityReservation">> => capacity_reservation(),
%%   <<"InstanceCount">> => integer(),
%%   <<"SourceCapacityReservation">> => capacity_reservation()
%% }
-type move_capacity_reservation_instances_result() :: #{binary() => any()}.

%% Example:
%% start_network_insights_access_scope_analysis_request() :: #{
%%   <<"ClientToken">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkInsightsAccessScopeId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type start_network_insights_access_scope_analysis_request() :: #{binary() => any()}.

%% Example:
%% modify_fleet_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_fleet_result() :: #{binary() => any()}.

%% Example:
%% delete_verified_access_endpoint_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessEndpointId">> := string()
%% }
-type delete_verified_access_endpoint_request() :: #{binary() => any()}.

%% Example:
%% explanation() :: #{
%%   <<"SecurityGroup">> => analysis_component(),
%%   <<"Port">> => integer(),
%%   <<"ClassicLoadBalancerListener">> => analysis_load_balancer_listener(),
%%   <<"LoadBalancerArn">> => string(),
%%   <<"PrefixList">> => analysis_component(),
%%   <<"LoadBalancerTarget">> => analysis_load_balancer_target(),
%%   <<"DestinationVpc">> => analysis_component(),
%%   <<"LoadBalancerTargetPort">> => integer(),
%%   <<"AclRule">> => analysis_acl_rule(),
%%   <<"LoadBalancerTargetGroup">> => analysis_component(),
%%   <<"ComponentAccount">> => string(),
%%   <<"MissingComponent">> => string(),
%%   <<"CustomerGateway">> => analysis_component(),
%%   <<"TransitGatewayAttachment">> => analysis_component(),
%%   <<"ComponentRegion">> => string(),
%%   <<"VpcEndpoint">> => analysis_component(),
%%   <<"InternetGateway">> => analysis_component(),
%%   <<"Acl">> => analysis_component(),
%%   <<"RouteTable">> => analysis_component(),
%%   <<"Addresses">> => list(string()),
%%   <<"Protocols">> => list(string()),
%%   <<"State">> => string(),
%%   <<"LoadBalancerListenerPort">> => integer(),
%%   <<"TransitGatewayRouteTableRoute">> => transit_gateway_route_table_route(),
%%   <<"ExplanationCode">> => string(),
%%   <<"Subnet">> => analysis_component(),
%%   <<"AttachedTo">> => analysis_component(),
%%   <<"Direction">> => string(),
%%   <<"SourceVpc">> => analysis_component(),
%%   <<"VpnGateway">> => analysis_component(),
%%   <<"SubnetRouteTable">> => analysis_component(),
%%   <<"FirewallStatelessRule">> => firewall_stateless_rule(),
%%   <<"PortRanges">> => list(port_range()),
%%   <<"LoadBalancerTargetGroups">> => list(analysis_component()),
%%   <<"VpnConnection">> => analysis_component(),
%%   <<"AvailabilityZones">> => list(string()),
%%   <<"SecurityGroups">> => list(analysis_component()),
%%   <<"PacketField">> => string(),
%%   <<"ElasticLoadBalancerListener">> => analysis_component(),
%%   <<"VpcPeeringConnection">> => analysis_component(),
%%   <<"AvailabilityZoneIds">> => list(string()),
%%   <<"RouteTableRoute">> => analysis_route_table_route(),
%%   <<"NatGateway">> => analysis_component(),
%%   <<"FirewallStatefulRule">> => firewall_stateful_rule(),
%%   <<"NetworkInterface">> => analysis_component(),
%%   <<"TransitGatewayRouteTable">> => analysis_component(),
%%   <<"Address">> => string(),
%%   <<"Vpc">> => analysis_component(),
%%   <<"TransitGateway">> => analysis_component(),
%%   <<"IngressRouteTable">> => analysis_component(),
%%   <<"Component">> => analysis_component(),
%%   <<"Cidrs">> => list(string()),
%%   <<"Destination">> => analysis_component(),
%%   <<"SecurityGroupRule">> => analysis_security_group_rule()
%% }
-type explanation() :: #{binary() => any()}.

%% Example:
%% disassociate_nat_gateway_address_request() :: #{
%%   <<"AssociationIds">> := list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"MaxDrainDurationSeconds">> => integer(),
%%   <<"NatGatewayId">> := string()
%% }
-type disassociate_nat_gateway_address_request() :: #{binary() => any()}.

%% Example:
%% placement_group() :: #{
%%   <<"GroupArn">> => string(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"PartitionCount">> => integer(),
%%   <<"SpreadLevel">> => list(any()),
%%   <<"State">> => list(any()),
%%   <<"Strategy">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type placement_group() :: #{binary() => any()}.

%% Example:
%% modify_identity_id_format_request() :: #{
%%   <<"PrincipalArn">> := string(),
%%   <<"Resource">> := string(),
%%   <<"UseLongIds">> := boolean()
%% }
-type modify_identity_id_format_request() :: #{binary() => any()}.

%% Example:
%% enable_reachability_analyzer_organization_sharing_result() :: #{
%%   <<"ReturnValue">> => boolean()
%% }
-type enable_reachability_analyzer_organization_sharing_result() :: #{binary() => any()}.

%% Example:
%% delete_vpc_endpoint_connection_notifications_result() :: #{
%%   <<"Unsuccessful">> => list(unsuccessful_item())
%% }
-type delete_vpc_endpoint_connection_notifications_result() :: #{binary() => any()}.

%% Example:
%% describe_route_servers_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"RouteServerIds">> => list(string())
%% }
-type describe_route_servers_request() :: #{binary() => any()}.

%% Example:
%% associate_enclave_certificate_iam_role_result() :: #{
%%   <<"CertificateS3BucketName">> => string(),
%%   <<"CertificateS3ObjectKey">> => string(),
%%   <<"EncryptionKmsKeyId">> => string()
%% }
-type associate_enclave_certificate_iam_role_result() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_route_table_result() :: #{
%%   <<"TransitGatewayRouteTable">> => transit_gateway_route_table()
%% }
-type delete_transit_gateway_route_table_result() :: #{binary() => any()}.

%% Example:
%% get_snapshot_block_public_access_state_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type get_snapshot_block_public_access_state_request() :: #{binary() => any()}.

%% Example:
%% ena_srd_udp_specification() :: #{
%%   <<"EnaSrdUdpEnabled">> => boolean()
%% }
-type ena_srd_udp_specification() :: #{binary() => any()}.

%% Example:
%% delete_fleet_success_item() :: #{
%%   <<"CurrentFleetState">> => list(any()),
%%   <<"FleetId">> => string(),
%%   <<"PreviousFleetState">> => list(any())
%% }
-type delete_fleet_success_item() :: #{binary() => any()}.

%% Example:
%% replace_image_criteria_in_allowed_images_settings_result() :: #{
%%   <<"ReturnValue">> => boolean()
%% }
-type replace_image_criteria_in_allowed_images_settings_result() :: #{binary() => any()}.

%% Example:
%% verified_access_instance_open_vpn_client_configuration_route() :: #{
%%   <<"Cidr">> => string()
%% }
-type verified_access_instance_open_vpn_client_configuration_route() :: #{binary() => any()}.

%% Example:
%% delete_network_insights_path_result() :: #{
%%   <<"NetworkInsightsPathId">> => string()
%% }
-type delete_network_insights_path_result() :: #{binary() => any()}.

%% Example:
%% native_application_oidc_options() :: #{
%%   <<"AuthorizationEndpoint">> => string(),
%%   <<"ClientId">> => string(),
%%   <<"Issuer">> => string(),
%%   <<"PublicSigningKeyEndpoint">> => string(),
%%   <<"Scope">> => string(),
%%   <<"TokenEndpoint">> => string(),
%%   <<"UserInfoEndpoint">> => string()
%% }
-type native_application_oidc_options() :: #{binary() => any()}.

%% Example:
%% delete_traffic_mirror_filter_result() :: #{
%%   <<"TrafficMirrorFilterId">> => string()
%% }
-type delete_traffic_mirror_filter_result() :: #{binary() => any()}.

%% Example:
%% spot_instance_status() :: #{
%%   <<"Code">> => string(),
%%   <<"Message">> => string(),
%%   <<"UpdateTime">> => non_neg_integer()
%% }
-type spot_instance_status() :: #{binary() => any()}.

%% Example:
%% describe_placement_groups_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"GroupIds">> => list(string()),
%%   <<"GroupNames">> => list(string())
%% }
-type describe_placement_groups_request() :: #{binary() => any()}.

%% Example:
%% host_offering() :: #{
%%   <<"CurrencyCode">> => list(any()),
%%   <<"Duration">> => integer(),
%%   <<"HourlyPrice">> => string(),
%%   <<"InstanceFamily">> => string(),
%%   <<"OfferingId">> => string(),
%%   <<"PaymentOption">> => list(any()),
%%   <<"UpfrontPrice">> => string()
%% }
-type host_offering() :: #{binary() => any()}.

%% Example:
%% describe_network_insights_access_scope_analyses_result() :: #{
%%   <<"NetworkInsightsAccessScopeAnalyses">> => list(network_insights_access_scope_analysis()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_insights_access_scope_analyses_result() :: #{binary() => any()}.

%% Example:
%% scheduled_instances_network_interface() :: #{
%%   <<"AssociatePublicIpAddress">> => boolean(),
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Description">> => string(),
%%   <<"DeviceIndex">> => integer(),
%%   <<"Groups">> => list(string()),
%%   <<"Ipv6AddressCount">> => integer(),
%%   <<"Ipv6Addresses">> => list(scheduled_instances_ipv6_address()),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"PrivateIpAddressConfigs">> => list(scheduled_instances_private_ip_address_config()),
%%   <<"SecondaryPrivateIpAddressCount">> => integer(),
%%   <<"SubnetId">> => string()
%% }
-type scheduled_instances_network_interface() :: #{binary() => any()}.

%% Example:
%% enable_ipam_organization_admin_account_result() :: #{
%%   <<"Success">> => boolean()
%% }
-type enable_ipam_organization_admin_account_result() :: #{binary() => any()}.

%% Example:
%% get_instance_uefi_data_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string()
%% }
-type get_instance_uefi_data_request() :: #{binary() => any()}.

%% Example:
%% enable_snapshot_block_public_access_result() :: #{
%%   <<"State">> => list(any())
%% }
-type enable_snapshot_block_public_access_result() :: #{binary() => any()}.

%% Example:
%% certificate_authentication() :: #{
%%   <<"ClientRootCertificateChain">> => string()
%% }
-type certificate_authentication() :: #{binary() => any()}.

%% Example:
%% cancel_conversion_request() :: #{
%%   <<"ConversionTaskId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"ReasonMessage">> => string()
%% }
-type cancel_conversion_request() :: #{binary() => any()}.

%% Example:
%% create_security_group_request() :: #{
%%   <<"Description">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"GroupName">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VpcId">> => string()
%% }
-type create_security_group_request() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_connections_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_vpc_endpoint_connections_request() :: #{binary() => any()}.

%% Example:
%% reset_fpga_image_attribute_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type reset_fpga_image_attribute_result() :: #{binary() => any()}.

%% Example:
%% delete_flow_logs_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"FlowLogIds">> := list(string())
%% }
-type delete_flow_logs_request() :: #{binary() => any()}.

%% Example:
%% accept_capacity_reservation_billing_ownership_request() :: #{
%%   <<"CapacityReservationId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type accept_capacity_reservation_billing_ownership_request() :: #{binary() => any()}.

%% Example:
%% disable_aws_network_performance_metric_subscription_request() :: #{
%%   <<"Destination">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Metric">> => list(any()),
%%   <<"Source">> => string(),
%%   <<"Statistic">> => list(any())
%% }
-type disable_aws_network_performance_metric_subscription_request() :: #{binary() => any()}.

%% Example:
%% get_network_insights_access_scope_analysis_findings_result() :: #{
%%   <<"AnalysisFindings">> => list(access_scope_analysis_finding()),
%%   <<"AnalysisStatus">> => list(any()),
%%   <<"NetworkInsightsAccessScopeAnalysisId">> => string(),
%%   <<"NextToken">> => string()
%% }
-type get_network_insights_access_scope_analysis_findings_result() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_peering_attachments_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayAttachmentIds">> => list(string())
%% }
-type describe_transit_gateway_peering_attachments_request() :: #{binary() => any()}.

%% Example:
%% describe_security_group_references_result() :: #{
%%   <<"SecurityGroupReferenceSet">> => list(security_group_reference())
%% }
-type describe_security_group_references_result() :: #{binary() => any()}.

%% Example:
%% client_login_banner_response_options() :: #{
%%   <<"BannerText">> => string(),
%%   <<"Enabled">> => boolean()
%% }
-type client_login_banner_response_options() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_group_policy_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"PolicyDocument">> => string(),
%%   <<"PolicyEnabled">> => boolean(),
%%   <<"SseSpecification">> => verified_access_sse_specification_request(),
%%   <<"VerifiedAccessGroupId">> := string()
%% }
-type modify_verified_access_group_policy_request() :: #{binary() => any()}.

%% Example:
%% cancel_capacity_reservation_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type cancel_capacity_reservation_result() :: #{binary() => any()}.

%% Example:
%% lock_snapshot_result() :: #{
%%   <<"CoolOffPeriod">> => integer(),
%%   <<"CoolOffPeriodExpiresOn">> => non_neg_integer(),
%%   <<"LockCreatedOn">> => non_neg_integer(),
%%   <<"LockDuration">> => integer(),
%%   <<"LockDurationStartTime">> => non_neg_integer(),
%%   <<"LockExpiresOn">> => non_neg_integer(),
%%   <<"LockState">> => list(any()),
%%   <<"SnapshotId">> => string()
%% }
-type lock_snapshot_result() :: #{binary() => any()}.

%% Example:
%% get_managed_prefix_list_entries_result() :: #{
%%   <<"Entries">> => list(prefix_list_entry()),
%%   <<"NextToken">> => string()
%% }
-type get_managed_prefix_list_entries_result() :: #{binary() => any()}.

%% Example:
%% describe_reserved_instances_modifications_request() :: #{
%%   <<"Filters">> => list(filter()),
%%   <<"NextToken">> => string(),
%%   <<"ReservedInstancesModificationIds">> => list(string())
%% }
-type describe_reserved_instances_modifications_request() :: #{binary() => any()}.

%% Example:
%% get_instance_types_from_instance_requirements_request() :: #{
%%   <<"ArchitectureTypes">> := list(list(any())()),
%%   <<"Context">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceRequirements">> := instance_requirements_request(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VirtualizationTypes">> := list(list(any())())
%% }
-type get_instance_types_from_instance_requirements_request() :: #{binary() => any()}.

%% Example:
%% describe_hosts_result() :: #{
%%   <<"Hosts">> => list(host()),
%%   <<"NextToken">> => string()
%% }
-type describe_hosts_result() :: #{binary() => any()}.

%% Example:
%% describe_capacity_reservation_billing_requests_result() :: #{
%%   <<"CapacityReservationBillingRequests">> => list(capacity_reservation_billing_request()),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_reservation_billing_requests_result() :: #{binary() => any()}.

%% Example:
%% add_ipam_organizational_unit_exclusion() :: #{
%%   <<"OrganizationsEntityPath">> => string()
%% }
-type add_ipam_organizational_unit_exclusion() :: #{binary() => any()}.

%% Example:
%% transit_gateway_multicast_registered_group_members() :: #{
%%   <<"GroupIpAddress">> => string(),
%%   <<"RegisteredNetworkInterfaceIds">> => list(string()),
%%   <<"TransitGatewayMulticastDomainId">> => string()
%% }
-type transit_gateway_multicast_registered_group_members() :: #{binary() => any()}.

%% Example:
%% create_traffic_mirror_session_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"TrafficMirrorSession">> => traffic_mirror_session()
%% }
-type create_traffic_mirror_session_result() :: #{binary() => any()}.

%% Example:
%% connection_tracking_specification_request() :: #{
%%   <<"TcpEstablishedTimeout">> => integer(),
%%   <<"UdpStreamTimeout">> => integer(),
%%   <<"UdpTimeout">> => integer()
%% }
-type connection_tracking_specification_request() :: #{binary() => any()}.

%% Example:
%% disassociate_vpc_cidr_block_request() :: #{
%%   <<"AssociationId">> := string()
%% }
-type disassociate_vpc_cidr_block_request() :: #{binary() => any()}.

%% Example:
%% run_scheduled_instances_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceCount">> => integer(),
%%   <<"LaunchSpecification">> := scheduled_instances_launch_specification(),
%%   <<"ScheduledInstanceId">> := string()
%% }
-type run_scheduled_instances_request() :: #{binary() => any()}.

%% Example:
%% verified_access_trust_provider_condensed() :: #{
%%   <<"Description">> => string(),
%%   <<"DeviceTrustProviderType">> => list(any()),
%%   <<"TrustProviderType">> => list(any()),
%%   <<"UserTrustProviderType">> => list(any()),
%%   <<"VerifiedAccessTrustProviderId">> => string()
%% }
-type verified_access_trust_provider_condensed() :: #{binary() => any()}.

%% Example:
%% describe_capacity_reservation_billing_requests_request() :: #{
%%   <<"CapacityReservationIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"Role">> := list(any())
%% }
-type describe_capacity_reservation_billing_requests_request() :: #{binary() => any()}.

%% Example:
%% rule_group_type_pair() :: #{
%%   <<"RuleGroupArn">> => string(),
%%   <<"RuleGroupType">> => string()
%% }
-type rule_group_type_pair() :: #{binary() => any()}.

%% Example:
%% ipv6_range() :: #{
%%   <<"CidrIpv6">> => string(),
%%   <<"Description">> => string()
%% }
-type ipv6_range() :: #{binary() => any()}.

%% Example:
%% vpc_peering_connection_state_reason() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type vpc_peering_connection_state_reason() :: #{binary() => any()}.

%% Example:
%% credit_specification() :: #{
%%   <<"CpuCredits">> => string()
%% }
-type credit_specification() :: #{binary() => any()}.

%% Example:
%% cloud_watch_log_options_specification() :: #{
%%   <<"LogEnabled">> => boolean(),
%%   <<"LogGroupArn">> => string(),
%%   <<"LogOutputFormat">> => string()
%% }
-type cloud_watch_log_options_specification() :: #{binary() => any()}.

%% Example:
%% ipam_discovery_failure_reason() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type ipam_discovery_failure_reason() :: #{binary() => any()}.

%% Example:
%% phase2_integrity_algorithms_list_value() :: #{
%%   <<"Value">> => string()
%% }
-type phase2_integrity_algorithms_list_value() :: #{binary() => any()}.

%% Example:
%% describe_reserved_instances_listings_result() :: #{
%%   <<"ReservedInstancesListings">> => list(reserved_instances_listing())
%% }
-type describe_reserved_instances_listings_result() :: #{binary() => any()}.

%% Example:
%% modify_vpc_endpoint_request() :: #{
%%   <<"AddRouteTableIds">> => list(string()),
%%   <<"AddSecurityGroupIds">> => list(string()),
%%   <<"AddSubnetIds">> => list(string()),
%%   <<"DnsOptions">> => dns_options_specification(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpAddressType">> => list(any()),
%%   <<"PolicyDocument">> => string(),
%%   <<"PrivateDnsEnabled">> => boolean(),
%%   <<"RemoveRouteTableIds">> => list(string()),
%%   <<"RemoveSecurityGroupIds">> => list(string()),
%%   <<"RemoveSubnetIds">> => list(string()),
%%   <<"ResetPolicy">> => boolean(),
%%   <<"SubnetConfigurations">> => list(subnet_configuration()),
%%   <<"VpcEndpointId">> := string()
%% }
-type modify_vpc_endpoint_request() :: #{binary() => any()}.

%% Example:
%% fpga_device_info() :: #{
%%   <<"Count">> => integer(),
%%   <<"Manufacturer">> => string(),
%%   <<"MemoryInfo">> => fpga_device_memory_info(),
%%   <<"Name">> => string()
%% }
-type fpga_device_info() :: #{binary() => any()}.

%% Example:
%% describe_identity_id_format_request() :: #{
%%   <<"PrincipalArn">> := string(),
%%   <<"Resource">> => string()
%% }
-type describe_identity_id_format_request() :: #{binary() => any()}.

%% Example:
%% image_criterion() :: #{
%%   <<"ImageProviders">> => list(string())
%% }
-type image_criterion() :: #{binary() => any()}.

%% Example:
%% modify_capacity_reservation_fleet_request() :: #{
%%   <<"CapacityReservationFleetId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EndDate">> => non_neg_integer(),
%%   <<"RemoveEndDate">> => boolean(),
%%   <<"TotalTargetCapacity">> => integer()
%% }
-type modify_capacity_reservation_fleet_request() :: #{binary() => any()}.

%% Example:
%% disable_fast_snapshot_restore_error_item() :: #{
%%   <<"FastSnapshotRestoreStateErrors">> => list(disable_fast_snapshot_restore_state_error_item()),
%%   <<"SnapshotId">> => string()
%% }
-type disable_fast_snapshot_restore_error_item() :: #{binary() => any()}.

%% Example:
%% create_subnet_cidr_reservation_request() :: #{
%%   <<"Cidr">> := string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"ReservationType">> := list(any()),
%%   <<"SubnetId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_subnet_cidr_reservation_request() :: #{binary() => any()}.

%% Example:
%% cancel_spot_instance_requests_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SpotInstanceRequestIds">> := list(string())
%% }
-type cancel_spot_instance_requests_request() :: #{binary() => any()}.

%% Example:
%% access_scope_path_request() :: #{
%%   <<"Destination">> => path_statement_request(),
%%   <<"Source">> => path_statement_request(),
%%   <<"ThroughResources">> => list(through_resources_statement_request())
%% }
-type access_scope_path_request() :: #{binary() => any()}.

%% Example:
%% describe_reserved_instances_modifications_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"ReservedInstancesModifications">> => list(reserved_instances_modification())
%% }
-type describe_reserved_instances_modifications_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_route_table() :: #{
%%   <<"CreationTime">> => non_neg_integer(),
%%   <<"DefaultAssociationRouteTable">> => boolean(),
%%   <<"DefaultPropagationRouteTable">> => boolean(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TransitGatewayId">> => string(),
%%   <<"TransitGatewayRouteTableId">> => string()
%% }
-type transit_gateway_route_table() :: #{binary() => any()}.

%% Example:
%% get_coip_pool_usage_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"PoolId">> := string()
%% }
-type get_coip_pool_usage_request() :: #{binary() => any()}.

%% Example:
%% analysis_route_table_route() :: #{
%%   <<"CarrierGatewayId">> => string(),
%%   <<"CoreNetworkArn">> => string(),
%%   <<"DestinationCidr">> => string(),
%%   <<"DestinationPrefixListId">> => string(),
%%   <<"EgressOnlyInternetGatewayId">> => string(),
%%   <<"GatewayId">> => string(),
%%   <<"InstanceId">> => string(),
%%   <<"LocalGatewayId">> => string(),
%%   <<"NatGatewayId">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"Origin">> => string(),
%%   <<"State">> => string(),
%%   <<"TransitGatewayId">> => string(),
%%   <<"VpcPeeringConnectionId">> => string()
%% }
-type analysis_route_table_route() :: #{binary() => any()}.

%% Example:
%% ipam_pool() :: #{
%%   <<"AddressFamily">> => list(any()),
%%   <<"AllocationDefaultNetmaskLength">> => integer(),
%%   <<"AllocationMaxNetmaskLength">> => integer(),
%%   <<"AllocationMinNetmaskLength">> => integer(),
%%   <<"AllocationResourceTags">> => list(ipam_resource_tag()),
%%   <<"AutoImport">> => boolean(),
%%   <<"AwsService">> => list(any()),
%%   <<"Description">> => string(),
%%   <<"IpamArn">> => string(),
%%   <<"IpamPoolArn">> => string(),
%%   <<"IpamPoolId">> => string(),
%%   <<"IpamRegion">> => string(),
%%   <<"IpamScopeArn">> => string(),
%%   <<"IpamScopeType">> => list(any()),
%%   <<"Locale">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"PoolDepth">> => integer(),
%%   <<"PublicIpSource">> => list(any()),
%%   <<"PubliclyAdvertisable">> => boolean(),
%%   <<"SourceIpamPoolId">> => string(),
%%   <<"SourceResource">> => ipam_pool_source_resource(),
%%   <<"State">> => list(any()),
%%   <<"StateMessage">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type ipam_pool() :: #{binary() => any()}.

%% Example:
%% block_public_access_states() :: #{
%%   <<"InternetGatewayBlockMode">> => list(any())
%% }
-type block_public_access_states() :: #{binary() => any()}.

%% Example:
%% modify_vpn_connection_options_result() :: #{
%%   <<"VpnConnection">> => vpn_connection()
%% }
-type modify_vpn_connection_options_result() :: #{binary() => any()}.

%% Example:
%% disassociate_address_request() :: #{
%%   <<"AssociationId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"PublicIp">> => string()
%% }
-type disassociate_address_request() :: #{binary() => any()}.

%% Example:
%% associate_iam_instance_profile_request() :: #{
%%   <<"IamInstanceProfile">> := iam_instance_profile_specification(),
%%   <<"InstanceId">> := string()
%% }
-type associate_iam_instance_profile_request() :: #{binary() => any()}.

%% Example:
%% inference_device_memory_info() :: #{
%%   <<"SizeInMiB">> => integer()
%% }
-type inference_device_memory_info() :: #{binary() => any()}.

%% Example:
%% launch_permission() :: #{
%%   <<"Group">> => list(any()),
%%   <<"OrganizationArn">> => string(),
%%   <<"OrganizationalUnitArn">> => string(),
%%   <<"UserId">> => string()
%% }
-type launch_permission() :: #{binary() => any()}.

%% Example:
%% describe_stale_security_groups_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"StaleSecurityGroupSet">> => list(stale_security_group())
%% }
-type describe_stale_security_groups_result() :: #{binary() => any()}.

%% Example:
%% delete_vpc_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpcId">> := string()
%% }
-type delete_vpc_request() :: #{binary() => any()}.

%% Example:
%% volume_detail() :: #{
%%   <<"Size">> => float()
%% }
-type volume_detail() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_route_table_virtual_interface_group_association_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayRouteTableVirtualInterfaceGroupAssociationId">> := string()
%% }
-type delete_local_gateway_route_table_virtual_interface_group_association_request() :: #{binary() => any()}.

%% Example:
%% describe_managed_prefix_lists_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"PrefixListIds">> => list(string())
%% }
-type describe_managed_prefix_lists_request() :: #{binary() => any()}.

%% Example:
%% delete_verified_access_group_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessGroupId">> := string()
%% }
-type delete_verified_access_group_request() :: #{binary() => any()}.

%% Example:
%% enable_route_server_propagation_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"RouteServerId">> := string(),
%%   <<"RouteTableId">> := string()
%% }
-type enable_route_server_propagation_request() :: #{binary() => any()}.

%% Example:
%% classic_link_instance() :: #{
%%   <<"Groups">> => list(group_identifier()),
%%   <<"InstanceId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type classic_link_instance() :: #{binary() => any()}.

%% Example:
%% i_k_e_versions_request_list_value() :: #{
%%   <<"Value">> => string()
%% }
-type i_k_e_versions_request_list_value() :: #{binary() => any()}.

%% Example:
%% cancel_spot_fleet_requests_response() :: #{
%%   <<"SuccessfulFleetRequests">> => list(cancel_spot_fleet_requests_success_item()),
%%   <<"UnsuccessfulFleetRequests">> => list(cancel_spot_fleet_requests_error_item())
%% }
-type cancel_spot_fleet_requests_response() :: #{binary() => any()}.

%% Example:
%% fast_launch_launch_template_specification_request() :: #{
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"Version">> => string()
%% }
-type fast_launch_launch_template_specification_request() :: #{binary() => any()}.

%% Example:
%% describe_vpc_block_public_access_exclusions_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ExclusionIds">> => list(string()),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_vpc_block_public_access_exclusions_request() :: #{binary() => any()}.

%% Example:
%% modify_network_interface_attribute_request() :: #{
%%   <<"AssociatePublicIpAddress">> => boolean(),
%%   <<"AssociatedSubnetIds">> => list(string()),
%%   <<"Attachment">> => network_interface_attachment_changes(),
%%   <<"ConnectionTrackingSpecification">> => connection_tracking_specification_request(),
%%   <<"Description">> => attribute_value(),
%%   <<"DryRun">> => boolean(),
%%   <<"EnaSrdSpecification">> => ena_srd_specification(),
%%   <<"EnablePrimaryIpv6">> => boolean(),
%%   <<"Groups">> => list(string()),
%%   <<"NetworkInterfaceId">> := string(),
%%   <<"SourceDestCheck">> => attribute_boolean_value()
%% }
-type modify_network_interface_attribute_request() :: #{binary() => any()}.

%% Example:
%% describe_nat_gateways_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filter">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NatGatewayIds">> => list(string()),
%%   <<"NextToken">> => string()
%% }
-type describe_nat_gateways_request() :: #{binary() => any()}.

%% Example:
%% move_byoip_cidr_to_ipam_result() :: #{
%%   <<"ByoipCidr">> => byoip_cidr()
%% }
-type move_byoip_cidr_to_ipam_result() :: #{binary() => any()}.

%% Example:
%% traffic_mirror_filter() :: #{
%%   <<"Description">> => string(),
%%   <<"EgressFilterRules">> => list(traffic_mirror_filter_rule()),
%%   <<"IngressFilterRules">> => list(traffic_mirror_filter_rule()),
%%   <<"NetworkServices">> => list(list(any())()),
%%   <<"Tags">> => list(tag()),
%%   <<"TrafficMirrorFilterId">> => string()
%% }
-type traffic_mirror_filter() :: #{binary() => any()}.

%% Example:
%% capacity_block() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"CapacityBlockId">> => string(),
%%   <<"CapacityReservationIds">> => list(string()),
%%   <<"CreateDate">> => non_neg_integer(),
%%   <<"EndDate">> => non_neg_integer(),
%%   <<"StartDate">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"UltraserverType">> => string()
%% }
-type capacity_block() :: #{binary() => any()}.

%% Example:
%% modify_security_group_rules_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupId">> := string(),
%%   <<"SecurityGroupRules">> := list(security_group_rule_update())
%% }
-type modify_security_group_rules_request() :: #{binary() => any()}.

%% Example:
%% describe_bundle_tasks_request() :: #{
%%   <<"BundleIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter())
%% }
-type describe_bundle_tasks_request() :: #{binary() => any()}.

%% Example:
%% modify_ebs_default_kms_key_id_result() :: #{
%%   <<"KmsKeyId">> => string()
%% }
-type modify_ebs_default_kms_key_id_result() :: #{binary() => any()}.

%% Example:
%% modify_traffic_mirror_filter_network_services_request() :: #{
%%   <<"AddNetworkServices">> => list(list(any())()),
%%   <<"DryRun">> => boolean(),
%%   <<"RemoveNetworkServices">> => list(list(any())()),
%%   <<"TrafficMirrorFilterId">> := string()
%% }
-type modify_traffic_mirror_filter_network_services_request() :: #{binary() => any()}.

%% Example:
%% describe_instance_credit_specifications_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"InstanceIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_credit_specifications_request() :: #{binary() => any()}.

%% Example:
%% create_vpc_request() :: #{
%%   <<"AmazonProvidedIpv6CidrBlock">> => boolean(),
%%   <<"CidrBlock">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceTenancy">> => list(any()),
%%   <<"Ipv4IpamPoolId">> => string(),
%%   <<"Ipv4NetmaskLength">> => integer(),
%%   <<"Ipv6CidrBlock">> => string(),
%%   <<"Ipv6CidrBlockNetworkBorderGroup">> => string(),
%%   <<"Ipv6IpamPoolId">> => string(),
%%   <<"Ipv6NetmaskLength">> => integer(),
%%   <<"Ipv6Pool">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_vpc_request() :: #{binary() => any()}.

%% Example:
%% describe_replace_root_volume_tasks_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"ReplaceRootVolumeTasks">> => list(replace_root_volume_task())
%% }
-type describe_replace_root_volume_tasks_result() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_specification_response() :: #{
%%   <<"CapacityReservationPreference">> => list(any()),
%%   <<"CapacityReservationTarget">> => capacity_reservation_target_response()
%% }
-type capacity_reservation_specification_response() :: #{binary() => any()}.

%% Example:
%% get_ipam_discovered_accounts_request() :: #{
%%   <<"DiscoveryRegion">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamResourceDiscoveryId">> := string(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type get_ipam_discovered_accounts_request() :: #{binary() => any()}.

%% Example:
%% get_associated_enclave_certificate_iam_roles_request() :: #{
%%   <<"CertificateArn">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type get_associated_enclave_certificate_iam_roles_request() :: #{binary() => any()}.

%% Example:
%% run_instances_request() :: #{
%%   <<"Placement">> => placement(),
%%   <<"Monitoring">> => run_instances_monitoring_enabled(),
%%   <<"SubnetId">> => string(),
%%   <<"MinCount">> := integer(),
%%   <<"Ipv6Addresses">> => list(instance_ipv6_address()),
%%   <<"ElasticGpuSpecification">> => list(elastic_gpu_specification()),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"NetworkPerformanceOptions">> => instance_network_performance_options_request(),
%%   <<"MaintenanceOptions">> => instance_maintenance_options_request(),
%%   <<"NetworkInterfaces">> => list(instance_network_interface_specification()),
%%   <<"KernelId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"DisableApiStop">> => boolean(),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"CreditSpecification">> => credit_specification_request(),
%%   <<"KeyName">> => string(),
%%   <<"BlockDeviceMappings">> => list(block_device_mapping()),
%%   <<"PrivateDnsNameOptions">> => private_dns_name_options_request(),
%%   <<"InstanceInitiatedShutdownBehavior">> => list(any()),
%%   <<"MetadataOptions">> => instance_metadata_options_request(),
%%   <<"EnclaveOptions">> => enclave_options_request(),
%%   <<"MaxCount">> := integer(),
%%   <<"AdditionalInfo">> => string(),
%%   <<"EnablePrimaryIpv6">> => boolean(),
%%   <<"CapacityReservationSpecification">> => capacity_reservation_specification(),
%%   <<"InstanceType">> => list(any()),
%%   <<"HibernationOptions">> => hibernation_options_request(),
%%   <<"LicenseSpecifications">> => list(license_configuration_request()),
%%   <<"RamdiskId">> => string(),
%%   <<"CpuOptions">> => cpu_options_request(),
%%   <<"ClientToken">> => string(),
%%   <<"ElasticInferenceAccelerators">> => list(elastic_inference_accelerator()),
%%   <<"IamInstanceProfile">> => iam_instance_profile_specification(),
%%   <<"UserData">> => string(),
%%   <<"LaunchTemplate">> => launch_template_specification(),
%%   <<"SecurityGroups">> => list(string()),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"DisableApiTermination">> => boolean(),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"Ipv6AddressCount">> => integer(),
%%   <<"Operator">> => operator_request(),
%%   <<"ImageId">> => string(),
%%   <<"InstanceMarketOptions">> => instance_market_options_request()
%% }
-type run_instances_request() :: #{binary() => any()}.

%% Example:
%% elastic_gpus() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"ElasticGpuHealth">> => elastic_gpu_health(),
%%   <<"ElasticGpuId">> => string(),
%%   <<"ElasticGpuState">> => list(any()),
%%   <<"ElasticGpuType">> => string(),
%%   <<"InstanceId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type elastic_gpus() :: #{binary() => any()}.

%% Example:
%% modify_vpc_endpoint_service_configuration_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_vpc_endpoint_service_configuration_result() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_route_result() :: #{
%%   <<"Route">> => local_gateway_route()
%% }
-type create_local_gateway_route_result() :: #{binary() => any()}.

%% Example:
%% instance_attachment_ena_srd_specification() :: #{
%%   <<"EnaSrdEnabled">> => boolean(),
%%   <<"EnaSrdUdpSpecification">> => instance_attachment_ena_srd_udp_specification()
%% }
-type instance_attachment_ena_srd_specification() :: #{binary() => any()}.

%% Example:
%% disable_transit_gateway_route_table_propagation_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayRouteTableAnnouncementId">> => string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type disable_transit_gateway_route_table_propagation_request() :: #{binary() => any()}.

%% Example:
%% snapshot_task_detail() :: #{
%%   <<"Description">> => string(),
%%   <<"DiskImageSize">> => float(),
%%   <<"Encrypted">> => boolean(),
%%   <<"Format">> => string(),
%%   <<"KmsKeyId">> => string(),
%%   <<"Progress">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"Status">> => string(),
%%   <<"StatusMessage">> => string(),
%%   <<"Url">> => string(),
%%   <<"UserBucket">> => user_bucket_details()
%% }
-type snapshot_task_detail() :: #{binary() => any()}.

%% Example:
%% scheduled_instances_private_ip_address_config() :: #{
%%   <<"Primary">> => boolean(),
%%   <<"PrivateIpAddress">> => string()
%% }
-type scheduled_instances_private_ip_address_config() :: #{binary() => any()}.

%% Example:
%% traffic_mirror_filter_rule() :: #{
%%   <<"Description">> => string(),
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"DestinationPortRange">> => traffic_mirror_port_range(),
%%   <<"Protocol">> => integer(),
%%   <<"RuleAction">> => list(any()),
%%   <<"RuleNumber">> => integer(),
%%   <<"SourceCidrBlock">> => string(),
%%   <<"SourcePortRange">> => traffic_mirror_port_range(),
%%   <<"Tags">> => list(tag()),
%%   <<"TrafficDirection">> => list(any()),
%%   <<"TrafficMirrorFilterId">> => string(),
%%   <<"TrafficMirrorFilterRuleId">> => string()
%% }
-type traffic_mirror_filter_rule() :: #{binary() => any()}.

%% Example:
%% cancel_spot_fleet_requests_error() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type cancel_spot_fleet_requests_error() :: #{binary() => any()}.

%% Example:
%% describe_capacity_reservations_result() :: #{
%%   <<"CapacityReservations">> => list(capacity_reservation()),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_reservations_result() :: #{binary() => any()}.

%% Example:
%% describe_fleet_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"FleetId">> := string(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_fleet_instances_request() :: #{binary() => any()}.

%% Example:
%% describe_image_attribute_request() :: #{
%%   <<"Attribute">> := list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string()
%% }
-type describe_image_attribute_request() :: #{binary() => any()}.

%% Example:
%% delete_verified_access_trust_provider_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessTrustProviderId">> := string()
%% }
-type delete_verified_access_trust_provider_request() :: #{binary() => any()}.

%% Example:
%% describe_vpc_classic_link_dns_support_request() :: #{
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VpcIds">> => list(string())
%% }
-type describe_vpc_classic_link_dns_support_request() :: #{binary() => any()}.

%% Example:
%% get_ipam_discovered_resource_cidrs_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamResourceDiscoveryId">> := string(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"ResourceRegion">> := string()
%% }
-type get_ipam_discovered_resource_cidrs_request() :: #{binary() => any()}.

%% Example:
%% fast_launch_snapshot_configuration_request() :: #{
%%   <<"TargetResourceCount">> => integer()
%% }
-type fast_launch_snapshot_configuration_request() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_route_table_virtual_interface_group_association_result() :: #{
%%   <<"LocalGatewayRouteTableVirtualInterfaceGroupAssociation">> => local_gateway_route_table_virtual_interface_group_association()
%% }
-type delete_local_gateway_route_table_virtual_interface_group_association_result() :: #{binary() => any()}.

%% Example:
%% create_verified_access_native_application_oidc_options() :: #{
%%   <<"AuthorizationEndpoint">> => string(),
%%   <<"ClientId">> => string(),
%%   <<"ClientSecret">> => string(),
%%   <<"Issuer">> => string(),
%%   <<"PublicSigningKeyEndpoint">> => string(),
%%   <<"Scope">> => string(),
%%   <<"TokenEndpoint">> => string(),
%%   <<"UserInfoEndpoint">> => string()
%% }
-type create_verified_access_native_application_oidc_options() :: #{binary() => any()}.

%% Example:
%% modify_capacity_reservation_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_capacity_reservation_result() :: #{binary() => any()}.

%% Example:
%% search_local_gateway_routes_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"LocalGatewayRouteTableId">> := string(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type search_local_gateway_routes_request() :: #{binary() => any()}.

%% Example:
%% create_placement_group_result() :: #{
%%   <<"PlacementGroup">> => placement_group()
%% }
-type create_placement_group_result() :: #{binary() => any()}.

%% Example:
%% confirm_product_instance_result() :: #{
%%   <<"OwnerId">> => string(),
%%   <<"Return">> => boolean()
%% }
-type confirm_product_instance_result() :: #{binary() => any()}.

%% Example:
%% history_record_entry() :: #{
%%   <<"EventInformation">> => event_information(),
%%   <<"EventType">> => list(any()),
%%   <<"Timestamp">> => non_neg_integer()
%% }
-type history_record_entry() :: #{binary() => any()}.

%% Example:
%% instance_topology() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"CapacityBlockId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"InstanceId">> => string(),
%%   <<"InstanceType">> => string(),
%%   <<"NetworkNodes">> => list(string()),
%%   <<"ZoneId">> => string()
%% }
-type instance_topology() :: #{binary() => any()}.

%% Example:
%% filter_port_range() :: #{
%%   <<"FromPort">> => integer(),
%%   <<"ToPort">> => integer()
%% }
-type filter_port_range() :: #{binary() => any()}.

%% Example:
%% snapshot_info() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"Description">> => string(),
%%   <<"Encrypted">> => boolean(),
%%   <<"OutpostArn">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"Progress">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"SseType">> => list(any()),
%%   <<"StartTime">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"VolumeId">> => string(),
%%   <<"VolumeSize">> => integer()
%% }
-type snapshot_info() :: #{binary() => any()}.

%% Example:
%% user_bucket_details() :: #{
%%   <<"S3Bucket">> => string(),
%%   <<"S3Key">> => string()
%% }
-type user_bucket_details() :: #{binary() => any()}.

%% Example:
%% enable_image_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string()
%% }
-type enable_image_request() :: #{binary() => any()}.

%% Example:
%% verified_access_endpoint() :: #{
%%   <<"ApplicationDomain">> => string(),
%%   <<"AttachmentType">> => list(any()),
%%   <<"CidrOptions">> => verified_access_endpoint_cidr_options(),
%%   <<"CreationTime">> => string(),
%%   <<"DeletionTime">> => string(),
%%   <<"Description">> => string(),
%%   <<"DeviceValidationDomain">> => string(),
%%   <<"DomainCertificateArn">> => string(),
%%   <<"EndpointDomain">> => string(),
%%   <<"EndpointType">> => list(any()),
%%   <<"LastUpdatedTime">> => string(),
%%   <<"LoadBalancerOptions">> => verified_access_endpoint_load_balancer_options(),
%%   <<"NetworkInterfaceOptions">> => verified_access_endpoint_eni_options(),
%%   <<"RdsOptions">> => verified_access_endpoint_rds_options(),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"SseSpecification">> => verified_access_sse_specification_response(),
%%   <<"Status">> => verified_access_endpoint_status(),
%%   <<"Tags">> => list(tag()),
%%   <<"VerifiedAccessEndpointId">> => string(),
%%   <<"VerifiedAccessGroupId">> => string(),
%%   <<"VerifiedAccessInstanceId">> => string()
%% }
-type verified_access_endpoint() :: #{binary() => any()}.

%% Example:
%% get_ipam_address_history_request() :: #{
%%   <<"Cidr">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EndTime">> => non_neg_integer(),
%%   <<"IpamScopeId">> := string(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"StartTime">> => non_neg_integer(),
%%   <<"VpcId">> => string()
%% }
-type get_ipam_address_history_request() :: #{binary() => any()}.

%% Example:
%% enable_image_deprecation_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type enable_image_deprecation_result() :: #{binary() => any()}.

%% Example:
%% describe_verified_access_instance_logging_configurations_result() :: #{
%%   <<"LoggingConfigurations">> => list(verified_access_instance_logging_configuration()),
%%   <<"NextToken">> => string()
%% }
-type describe_verified_access_instance_logging_configurations_result() :: #{binary() => any()}.

%% Example:
%% describe_scheduled_instance_availability_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"ScheduledInstanceAvailabilitySet">> => list(scheduled_instance_availability())
%% }
-type describe_scheduled_instance_availability_result() :: #{binary() => any()}.

%% Example:
%% restore_snapshot_from_recycle_bin_result() :: #{
%%   <<"Description">> => string(),
%%   <<"Encrypted">> => boolean(),
%%   <<"OutpostArn">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"Progress">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"SseType">> => list(any()),
%%   <<"StartTime">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"VolumeId">> => string(),
%%   <<"VolumeSize">> => integer()
%% }
-type restore_snapshot_from_recycle_bin_result() :: #{binary() => any()}.

%% Example:
%% replace_route_request() :: #{
%%   <<"CarrierGatewayId">> => string(),
%%   <<"CoreNetworkArn">> => string(),
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"DestinationIpv6CidrBlock">> => string(),
%%   <<"DestinationPrefixListId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EgressOnlyInternetGatewayId">> => string(),
%%   <<"GatewayId">> => string(),
%%   <<"InstanceId">> => string(),
%%   <<"LocalGatewayId">> => string(),
%%   <<"LocalTarget">> => boolean(),
%%   <<"NatGatewayId">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"OdbNetworkArn">> => string(),
%%   <<"RouteTableId">> := string(),
%%   <<"TransitGatewayId">> => string(),
%%   <<"VpcEndpointId">> => string(),
%%   <<"VpcPeeringConnectionId">> => string()
%% }
-type replace_route_request() :: #{binary() => any()}.

%% Example:
%% connection_tracking_specification_response() :: #{
%%   <<"TcpEstablishedTimeout">> => integer(),
%%   <<"UdpStreamTimeout">> => integer(),
%%   <<"UdpTimeout">> => integer()
%% }
-type connection_tracking_specification_response() :: #{binary() => any()}.

%% Example:
%% move_byoip_cidr_to_ipam_request() :: #{
%%   <<"Cidr">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamPoolId">> := string(),
%%   <<"IpamPoolOwner">> := string()
%% }
-type move_byoip_cidr_to_ipam_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_connect_peer() :: #{
%%   <<"ConnectPeerConfiguration">> => transit_gateway_connect_peer_configuration(),
%%   <<"CreationTime">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayConnectPeerId">> => string()
%% }
-type transit_gateway_connect_peer() :: #{binary() => any()}.

%% Example:
%% get_serial_console_access_status_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type get_serial_console_access_status_request() :: #{binary() => any()}.

%% Example:
%% describe_instance_status_result() :: #{
%%   <<"InstanceStatuses">> => list(instance_status()),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_status_result() :: #{binary() => any()}.

%% Example:
%% create_verified_access_endpoint_eni_options() :: #{
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"Port">> => integer(),
%%   <<"PortRanges">> => list(create_verified_access_endpoint_port_range()),
%%   <<"Protocol">> => list(any())
%% }
-type create_verified_access_endpoint_eni_options() :: #{binary() => any()}.

%% Example:
%% ipam() :: #{
%%   <<"DefaultResourceDiscoveryAssociationId">> => string(),
%%   <<"DefaultResourceDiscoveryId">> => string(),
%%   <<"Description">> => string(),
%%   <<"EnablePrivateGua">> => boolean(),
%%   <<"IpamArn">> => string(),
%%   <<"IpamId">> => string(),
%%   <<"IpamRegion">> => string(),
%%   <<"MeteredAccount">> => list(any()),
%%   <<"OperatingRegions">> => list(ipam_operating_region()),
%%   <<"OwnerId">> => string(),
%%   <<"PrivateDefaultScopeId">> => string(),
%%   <<"PublicDefaultScopeId">> => string(),
%%   <<"ResourceDiscoveryAssociationCount">> => integer(),
%%   <<"ScopeCount">> => integer(),
%%   <<"State">> => list(any()),
%%   <<"StateMessage">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"Tier">> => list(any())
%% }
-type ipam() :: #{binary() => any()}.

%% Example:
%% describe_egress_only_internet_gateways_result() :: #{
%%   <<"EgressOnlyInternetGateways">> => list(egress_only_internet_gateway()),
%%   <<"NextToken">> => string()
%% }
-type describe_egress_only_internet_gateways_result() :: #{binary() => any()}.

%% Example:
%% vpc_peering_connection_vpc_info() :: #{
%%   <<"CidrBlock">> => string(),
%%   <<"CidrBlockSet">> => list(cidr_block()),
%%   <<"Ipv6CidrBlockSet">> => list(ipv6_cidr_block()),
%%   <<"OwnerId">> => string(),
%%   <<"PeeringOptions">> => vpc_peering_connection_options_description(),
%%   <<"Region">> => string(),
%%   <<"VpcId">> => string()
%% }
-type vpc_peering_connection_vpc_info() :: #{binary() => any()}.

%% Example:
%% import_image_result() :: #{
%%   <<"Architecture">> => string(),
%%   <<"Description">> => string(),
%%   <<"Encrypted">> => boolean(),
%%   <<"Hypervisor">> => string(),
%%   <<"ImageId">> => string(),
%%   <<"ImportTaskId">> => string(),
%%   <<"KmsKeyId">> => string(),
%%   <<"LicenseSpecifications">> => list(import_image_license_configuration_response()),
%%   <<"LicenseType">> => string(),
%%   <<"Platform">> => string(),
%%   <<"Progress">> => string(),
%%   <<"SnapshotDetails">> => list(snapshot_detail()),
%%   <<"Status">> => string(),
%%   <<"StatusMessage">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"UsageOperation">> => string()
%% }
-type import_image_result() :: #{binary() => any()}.

%% Example:
%% modify_vpc_tenancy_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceTenancy">> := list(any()),
%%   <<"VpcId">> := string()
%% }
-type modify_vpc_tenancy_request() :: #{binary() => any()}.

%% Example:
%% create_replace_root_volume_task_result() :: #{
%%   <<"ReplaceRootVolumeTask">> => replace_root_volume_task()
%% }
-type create_replace_root_volume_task_result() :: #{binary() => any()}.

%% Example:
%% cancel_import_task_result() :: #{
%%   <<"ImportTaskId">> => string(),
%%   <<"PreviousState">> => string(),
%%   <<"State">> => string()
%% }
-type cancel_import_task_result() :: #{binary() => any()}.

%% Example:
%% instance_ipv6_address_request() :: #{
%%   <<"Ipv6Address">> => string()
%% }
-type instance_ipv6_address_request() :: #{binary() => any()}.

%% Example:
%% group_identifier() :: #{
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string()
%% }
-type group_identifier() :: #{binary() => any()}.

%% Example:
%% accept_transit_gateway_multicast_domain_associations_result() :: #{
%%   <<"Associations">> => transit_gateway_multicast_domain_associations()
%% }
-type accept_transit_gateway_multicast_domain_associations_result() :: #{binary() => any()}.

%% Example:
%% describe_hosts_request() :: #{
%%   <<"Filter">> => list(filter()),
%%   <<"HostIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_hosts_request() :: #{binary() => any()}.

%% Example:
%% create_traffic_mirror_target_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"GatewayLoadBalancerEndpointId">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"NetworkLoadBalancerArn">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_traffic_mirror_target_request() :: #{binary() => any()}.

%% Example:
%% purchase_capacity_block_request() :: #{
%%   <<"CapacityBlockOfferingId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstancePlatform">> := list(any()),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type purchase_capacity_block_request() :: #{binary() => any()}.

%% Example:
%% modify_instance_event_window_request() :: #{
%%   <<"CronExpression">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceEventWindowId">> := string(),
%%   <<"Name">> => string(),
%%   <<"TimeRanges">> => list(instance_event_window_time_range_request())
%% }
-type modify_instance_event_window_request() :: #{binary() => any()}.

%% Example:
%% certificate_authentication_request() :: #{
%%   <<"ClientRootCertificateChainArn">> => string()
%% }
-type certificate_authentication_request() :: #{binary() => any()}.

%% Example:
%% disable_image_deregistration_protection_result() :: #{
%%   <<"Return">> => string()
%% }
-type disable_image_deregistration_protection_result() :: #{binary() => any()}.

%% Example:
%% performance_factor_reference() :: #{
%%   <<"InstanceFamily">> => string()
%% }
-type performance_factor_reference() :: #{binary() => any()}.

%% Example:
%% neuron_info() :: #{
%%   <<"NeuronDevices">> => list(neuron_device_info()),
%%   <<"TotalNeuronDeviceMemoryInMiB">> => integer()
%% }
-type neuron_info() :: #{binary() => any()}.

%% Example:
%% ipam_operating_region() :: #{
%%   <<"RegionName">> => string()
%% }
-type ipam_operating_region() :: #{binary() => any()}.

%% Example:
%% modify_snapshot_tier_result() :: #{
%%   <<"SnapshotId">> => string(),
%%   <<"TieringStartTime">> => non_neg_integer()
%% }
-type modify_snapshot_tier_result() :: #{binary() => any()}.

%% Example:
%% spot_fleet_tag_specification() :: #{
%%   <<"ResourceType">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type spot_fleet_tag_specification() :: #{binary() => any()}.

%% Example:
%% modify_hosts_result() :: #{
%%   <<"Successful">> => list(string()),
%%   <<"Unsuccessful">> => list(unsuccessful_item())
%% }
-type modify_hosts_result() :: #{binary() => any()}.

%% Example:
%% enable_transit_gateway_route_table_propagation_result() :: #{
%%   <<"Propagation">> => transit_gateway_propagation()
%% }
-type enable_transit_gateway_route_table_propagation_result() :: #{binary() => any()}.

%% Example:
%% get_vpn_connection_device_types_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VpnConnectionDeviceTypes">> => list(vpn_connection_device_type())
%% }
-type get_vpn_connection_device_types_result() :: #{binary() => any()}.

%% Example:
%% cancel_capacity_reservation_fleets_result() :: #{
%%   <<"FailedFleetCancellations">> => list(failed_capacity_reservation_fleet_cancellation_result()),
%%   <<"SuccessfulFleetCancellations">> => list(capacity_reservation_fleet_cancellation_state())
%% }
-type cancel_capacity_reservation_fleets_result() :: #{binary() => any()}.

%% Example:
%% analysis_packet_header() :: #{
%%   <<"DestinationAddresses">> => list(string()),
%%   <<"DestinationPortRanges">> => list(port_range()),
%%   <<"Protocol">> => string(),
%%   <<"SourceAddresses">> => list(string()),
%%   <<"SourcePortRanges">> => list(port_range())
%% }
-type analysis_packet_header() :: #{binary() => any()}.

%% Example:
%% directory_service_authentication_request() :: #{
%%   <<"DirectoryId">> => string()
%% }
-type directory_service_authentication_request() :: #{binary() => any()}.

%% Example:
%% delete_key_pair_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"KeyName">> => string(),
%%   <<"KeyPairId">> => string()
%% }
-type delete_key_pair_request() :: #{binary() => any()}.

%% Example:
%% create_snapshots_request() :: #{
%%   <<"CopyTagsFromSource">> => list(any()),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceSpecification">> := instance_specification(),
%%   <<"Location">> => list(any()),
%%   <<"OutpostArn">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_snapshots_request() :: #{binary() => any()}.

%% Example:
%% assign_private_ip_addresses_request() :: #{
%%   <<"AllowReassignment">> => boolean(),
%%   <<"Ipv4PrefixCount">> => integer(),
%%   <<"Ipv4Prefixes">> => list(string()),
%%   <<"NetworkInterfaceId">> := string(),
%%   <<"PrivateIpAddresses">> => list(string()),
%%   <<"SecondaryPrivateIpAddressCount">> => integer()
%% }
-type assign_private_ip_addresses_request() :: #{binary() => any()}.

%% Example:
%% modify_route_server_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"PersistRoutes">> => list(any()),
%%   <<"PersistRoutesDuration">> => float(),
%%   <<"RouteServerId">> := string(),
%%   <<"SnsNotificationsEnabled">> => boolean()
%% }
-type modify_route_server_request() :: #{binary() => any()}.

%% Example:
%% describe_classic_link_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"InstanceIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_classic_link_instances_request() :: #{binary() => any()}.

%% Example:
%% get_vpn_connection_device_types_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type get_vpn_connection_device_types_request() :: #{binary() => any()}.

%% Example:
%% get_ipam_discovered_public_addresses_result() :: #{
%%   <<"IpamDiscoveredPublicAddresses">> => list(ipam_discovered_public_address()),
%%   <<"NextToken">> => string(),
%%   <<"OldestSampleTime">> => non_neg_integer()
%% }
-type get_ipam_discovered_public_addresses_result() :: #{binary() => any()}.

%% Example:
%% export_to_s3_task_specification() :: #{
%%   <<"ContainerFormat">> => list(any()),
%%   <<"DiskImageFormat">> => list(any()),
%%   <<"S3Bucket">> => string(),
%%   <<"S3Prefix">> => string()
%% }
-type export_to_s3_task_specification() :: #{binary() => any()}.

%% Example:
%% assign_private_nat_gateway_address_result() :: #{
%%   <<"NatGatewayAddresses">> => list(nat_gateway_address()),
%%   <<"NatGatewayId">> => string()
%% }
-type assign_private_nat_gateway_address_result() :: #{binary() => any()}.

%% Example:
%% describe_id_format_request() :: #{
%%   <<"Resource">> => string()
%% }
-type describe_id_format_request() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_route_table_announcements_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayRouteTableAnnouncementIds">> => list(string())
%% }
-type describe_transit_gateway_route_table_announcements_request() :: #{binary() => any()}.

%% Example:
%% export_image_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DiskImageFormat">> := list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string(),
%%   <<"RoleName">> => string(),
%%   <<"S3ExportLocation">> := export_task_s3_location_request(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type export_image_request() :: #{binary() => any()}.

%% Example:
%% describe_identity_id_format_result() :: #{
%%   <<"Statuses">> => list(id_format())
%% }
-type describe_identity_id_format_result() :: #{binary() => any()}.

%% Example:
%% instance_attachment_ena_srd_udp_specification() :: #{
%%   <<"EnaSrdUdpEnabled">> => boolean()
%% }
-type instance_attachment_ena_srd_udp_specification() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_endpoint_load_balancer_options() :: #{
%%   <<"Port">> => integer(),
%%   <<"PortRanges">> => list(modify_verified_access_endpoint_port_range()),
%%   <<"Protocol">> => list(any()),
%%   <<"SubnetIds">> => list(string())
%% }
-type modify_verified_access_endpoint_load_balancer_options() :: #{binary() => any()}.

%% Example:
%% modify_managed_prefix_list_request() :: #{
%%   <<"AddEntries">> => list(add_prefix_list_entry()),
%%   <<"CurrentVersion">> => float(),
%%   <<"DryRun">> => boolean(),
%%   <<"MaxEntries">> => integer(),
%%   <<"PrefixListId">> := string(),
%%   <<"PrefixListName">> => string(),
%%   <<"RemoveEntries">> => list(remove_prefix_list_entry())
%% }
-type modify_managed_prefix_list_request() :: #{binary() => any()}.

%% Example:
%% move_capacity_reservation_instances_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DestinationCapacityReservationId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceCount">> := integer(),
%%   <<"SourceCapacityReservationId">> := string()
%% }
-type move_capacity_reservation_instances_request() :: #{binary() => any()}.

%% Example:
%% launch_template_cpu_options() :: #{
%%   <<"AmdSevSnp">> => list(any()),
%%   <<"CoreCount">> => integer(),
%%   <<"ThreadsPerCore">> => integer()
%% }
-type launch_template_cpu_options() :: #{binary() => any()}.

%% Example:
%% attachment_ena_srd_specification() :: #{
%%   <<"EnaSrdEnabled">> => boolean(),
%%   <<"EnaSrdUdpSpecification">> => attachment_ena_srd_udp_specification()
%% }
-type attachment_ena_srd_specification() :: #{binary() => any()}.

%% Example:
%% describe_byoip_cidrs_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> := integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_byoip_cidrs_request() :: #{binary() => any()}.

%% Example:
%% network_insights_access_scope_content() :: #{
%%   <<"ExcludePaths">> => list(access_scope_path()),
%%   <<"MatchPaths">> => list(access_scope_path()),
%%   <<"NetworkInsightsAccessScopeId">> => string()
%% }
-type network_insights_access_scope_content() :: #{binary() => any()}.

%% Example:
%% create_network_insights_path_result() :: #{
%%   <<"NetworkInsightsPath">> => network_insights_path()
%% }
-type create_network_insights_path_result() :: #{binary() => any()}.

%% Example:
%% reject_transit_gateway_vpc_attachment_result() :: #{
%%   <<"TransitGatewayVpcAttachment">> => transit_gateway_vpc_attachment()
%% }
-type reject_transit_gateway_vpc_attachment_result() :: #{binary() => any()}.

%% Example:
%% modify_instance_attribute_request() :: #{
%%   <<"Attribute">> => list(any()),
%%   <<"BlockDeviceMappings">> => list(instance_block_device_mapping_specification()),
%%   <<"DisableApiStop">> => attribute_boolean_value(),
%%   <<"DisableApiTermination">> => attribute_boolean_value(),
%%   <<"DryRun">> => boolean(),
%%   <<"EbsOptimized">> => attribute_boolean_value(),
%%   <<"EnaSupport">> => attribute_boolean_value(),
%%   <<"Groups">> => list(string()),
%%   <<"InstanceId">> := string(),
%%   <<"InstanceInitiatedShutdownBehavior">> => attribute_value(),
%%   <<"InstanceType">> => attribute_value(),
%%   <<"Kernel">> => attribute_value(),
%%   <<"Ramdisk">> => attribute_value(),
%%   <<"SourceDestCheck">> => attribute_boolean_value(),
%%   <<"SriovNetSupport">> => attribute_value(),
%%   <<"UserData">> => blob_attribute_value(),
%%   <<"Value">> => string()
%% }
-type modify_instance_attribute_request() :: #{binary() => any()}.

%% Example:
%% describe_import_snapshot_tasks_result() :: #{
%%   <<"ImportSnapshotTasks">> => list(import_snapshot_task()),
%%   <<"NextToken">> => string()
%% }
-type describe_import_snapshot_tasks_result() :: #{binary() => any()}.

%% Example:
%% associate_ipam_resource_discovery_result() :: #{
%%   <<"IpamResourceDiscoveryAssociation">> => ipam_resource_discovery_association()
%% }
-type associate_ipam_resource_discovery_result() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_group_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessGroupId">> := string(),
%%   <<"VerifiedAccessInstanceId">> => string()
%% }
-type modify_verified_access_group_request() :: #{binary() => any()}.

%% Example:
%% describe_verified_access_instance_logging_configurations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VerifiedAccessInstanceIds">> => list(string())
%% }
-type describe_verified_access_instance_logging_configurations_request() :: #{binary() => any()}.

%% Example:
%% associate_capacity_reservation_billing_owner_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type associate_capacity_reservation_billing_owner_result() :: #{binary() => any()}.

%% Example:
%% delete_security_group_result() :: #{
%%   <<"GroupId">> => string(),
%%   <<"Return">> => boolean()
%% }
-type delete_security_group_result() :: #{binary() => any()}.

%% Example:
%% modify_instance_network_performance_result() :: #{
%%   <<"BandwidthWeighting">> => list(any()),
%%   <<"InstanceId">> => string()
%% }
-type modify_instance_network_performance_result() :: #{binary() => any()}.

%% Example:
%% ipv6_prefix_specification_request() :: #{
%%   <<"Ipv6Prefix">> => string()
%% }
-type ipv6_prefix_specification_request() :: #{binary() => any()}.

%% Example:
%% delete_network_acl_entry_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Egress">> := boolean(),
%%   <<"NetworkAclId">> := string(),
%%   <<"RuleNumber">> := integer()
%% }
-type delete_network_acl_entry_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_route_table_propagation() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"State">> => list(any()),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayRouteTableAnnouncementId">> => string()
%% }
-type transit_gateway_route_table_propagation() :: #{binary() => any()}.

%% Example:
%% describe_route_server_endpoints_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"RouteServerEndpoints">> => list(route_server_endpoint())
%% }
-type describe_route_server_endpoints_result() :: #{binary() => any()}.

%% Example:
%% fleet_launch_template_specification_request() :: #{
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"Version">> => string()
%% }
-type fleet_launch_template_specification_request() :: #{binary() => any()}.

%% Example:
%% delete_flow_logs_result() :: #{
%%   <<"Unsuccessful">> => list(unsuccessful_item())
%% }
-type delete_flow_logs_result() :: #{binary() => any()}.

%% Example:
%% ipam_address_history_record() :: #{
%%   <<"ResourceCidr">> => string(),
%%   <<"ResourceComplianceStatus">> => list(any()),
%%   <<"ResourceId">> => string(),
%%   <<"ResourceName">> => string(),
%%   <<"ResourceOverlapStatus">> => list(any()),
%%   <<"ResourceOwnerId">> => string(),
%%   <<"ResourceRegion">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"SampledEndTime">> => non_neg_integer(),
%%   <<"SampledStartTime">> => non_neg_integer(),
%%   <<"VpcId">> => string()
%% }
-type ipam_address_history_record() :: #{binary() => any()}.

%% Example:
%% describe_security_group_rules_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"SecurityGroupRules">> => list(security_group_rule())
%% }
-type describe_security_group_rules_result() :: #{binary() => any()}.

%% Example:
%% describe_moving_addresses_result() :: #{
%%   <<"MovingAddressStatuses">> => list(moving_address_status()),
%%   <<"NextToken">> => string()
%% }
-type describe_moving_addresses_result() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_instance_request() :: #{
%%   <<"CidrEndpointsCustomSubDomain">> => string(),
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessInstanceId">> := string()
%% }
-type modify_verified_access_instance_request() :: #{binary() => any()}.

%% Example:
%% enclave_options_request() :: #{
%%   <<"Enabled">> => boolean()
%% }
-type enclave_options_request() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_group() :: #{
%%   <<"GroupArn">> => string(),
%%   <<"OwnerId">> => string()
%% }
-type capacity_reservation_group() :: #{binary() => any()}.

%% Example:
%% get_subnet_cidr_reservations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"SubnetId">> := string()
%% }
-type get_subnet_cidr_reservations_request() :: #{binary() => any()}.

%% Example:
%% describe_coip_pools_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"PoolIds">> => list(string())
%% }
-type describe_coip_pools_request() :: #{binary() => any()}.

%% Example:
%% describe_route_tables_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"RouteTables">> => list(route_table())
%% }
-type describe_route_tables_result() :: #{binary() => any()}.

%% Example:
%% import_volume_result() :: #{
%%   <<"ConversionTask">> => conversion_task()
%% }
-type import_volume_result() :: #{binary() => any()}.

%% Example:
%% create_coip_cidr_request() :: #{
%%   <<"Cidr">> := string(),
%%   <<"CoipPoolId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type create_coip_cidr_request() :: #{binary() => any()}.

%% Example:
%% get_security_groups_for_vpc_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"SecurityGroupForVpcs">> => list(security_group_for_vpc())
%% }
-type get_security_groups_for_vpc_result() :: #{binary() => any()}.

%% Example:
%% create_traffic_mirror_filter_rule_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"TrafficMirrorFilterRule">> => traffic_mirror_filter_rule()
%% }
-type create_traffic_mirror_filter_rule_result() :: #{binary() => any()}.

%% Example:
%% launch_template_elastic_inference_accelerator() :: #{
%%   <<"Count">> => integer(),
%%   <<"Type">> => string()
%% }
-type launch_template_elastic_inference_accelerator() :: #{binary() => any()}.

%% Example:
%% launch_template_instance_network_interface_specification() :: #{
%%   <<"AssociateCarrierIpAddress">> => boolean(),
%%   <<"AssociatePublicIpAddress">> => boolean(),
%%   <<"ConnectionTrackingSpecification">> => connection_tracking_specification(),
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Description">> => string(),
%%   <<"DeviceIndex">> => integer(),
%%   <<"EnaQueueCount">> => integer(),
%%   <<"EnaSrdSpecification">> => launch_template_ena_srd_specification(),
%%   <<"Groups">> => list(string()),
%%   <<"InterfaceType">> => string(),
%%   <<"Ipv4PrefixCount">> => integer(),
%%   <<"Ipv4Prefixes">> => list(ipv4_prefix_specification_response()),
%%   <<"Ipv6AddressCount">> => integer(),
%%   <<"Ipv6Addresses">> => list(instance_ipv6_address()),
%%   <<"Ipv6PrefixCount">> => integer(),
%%   <<"Ipv6Prefixes">> => list(ipv6_prefix_specification_response()),
%%   <<"NetworkCardIndex">> => integer(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"PrimaryIpv6">> => boolean(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"PrivateIpAddresses">> => list(private_ip_address_specification()),
%%   <<"SecondaryPrivateIpAddressCount">> => integer(),
%%   <<"SubnetId">> => string()
%% }
-type launch_template_instance_network_interface_specification() :: #{binary() => any()}.

%% Example:
%% associated_role() :: #{
%%   <<"AssociatedRoleArn">> => string(),
%%   <<"CertificateS3BucketName">> => string(),
%%   <<"CertificateS3ObjectKey">> => string(),
%%   <<"EncryptionKmsKeyId">> => string()
%% }
-type associated_role() :: #{binary() => any()}.

%% Example:
%% launch_template_iam_instance_profile_specification() :: #{
%%   <<"Arn">> => string(),
%%   <<"Name">> => string()
%% }
-type launch_template_iam_instance_profile_specification() :: #{binary() => any()}.

%% Example:
%% elastic_gpu_health() :: #{
%%   <<"Status">> => list(any())
%% }
-type elastic_gpu_health() :: #{binary() => any()}.

%% Example:
%% disassociate_transit_gateway_policy_table_result() :: #{
%%   <<"Association">> => transit_gateway_policy_table_association()
%% }
-type disassociate_transit_gateway_policy_table_result() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_route_request() :: #{
%%   <<"DestinationCidrBlock">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type delete_transit_gateway_route_request() :: #{binary() => any()}.

%% Example:
%% get_reserved_instances_exchange_quote_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ReservedInstanceIds">> := list(string()),
%%   <<"TargetConfigurations">> => list(target_configuration_request())
%% }
-type get_reserved_instances_exchange_quote_request() :: #{binary() => any()}.

%% Example:
%% ipam_resource_discovery() :: #{
%%   <<"Description">> => string(),
%%   <<"IpamResourceDiscoveryArn">> => string(),
%%   <<"IpamResourceDiscoveryId">> => string(),
%%   <<"IpamResourceDiscoveryRegion">> => string(),
%%   <<"IsDefault">> => boolean(),
%%   <<"OperatingRegions">> => list(ipam_operating_region()),
%%   <<"OrganizationalUnitExclusions">> => list(ipam_organizational_unit_exclusion()),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type ipam_resource_discovery() :: #{binary() => any()}.

%% Example:
%% enable_fast_snapshot_restores_request() :: #{
%%   <<"AvailabilityZones">> := list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"SourceSnapshotIds">> := list(string())
%% }
-type enable_fast_snapshot_restores_request() :: #{binary() => any()}.

%% Example:
%% delete_vpc_endpoints_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpcEndpointIds">> := list(string())
%% }
-type delete_vpc_endpoints_request() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateways_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGateways">> => list(transit_gateway())
%% }
-type describe_transit_gateways_result() :: #{binary() => any()}.

%% Example:
%% associate_vpc_cidr_block_result() :: #{
%%   <<"CidrBlockAssociation">> => vpc_cidr_block_association(),
%%   <<"Ipv6CidrBlockAssociation">> => vpc_ipv6_cidr_block_association(),
%%   <<"VpcId">> => string()
%% }
-type associate_vpc_cidr_block_result() :: #{binary() => any()}.

%% Example:
%% get_managed_prefix_list_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"PrefixListId">> := string()
%% }
-type get_managed_prefix_list_associations_request() :: #{binary() => any()}.

%% Example:
%% describe_principal_id_format_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Principals">> => list(principal_id_format())
%% }
-type describe_principal_id_format_result() :: #{binary() => any()}.

%% Example:
%% modify_instance_maintenance_options_request() :: #{
%%   <<"AutoRecovery">> => list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"RebootMigration">> => list(any())
%% }
-type modify_instance_maintenance_options_request() :: #{binary() => any()}.

%% Example:
%% placement_group_info() :: #{
%%   <<"SupportedStrategies">> => list(list(any())())
%% }
-type placement_group_info() :: #{binary() => any()}.

%% Example:
%% modify_capacity_reservation_fleet_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_capacity_reservation_fleet_result() :: #{binary() => any()}.

%% Example:
%% describe_spot_price_history_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"SpotPriceHistory">> => list(spot_price())
%% }
-type describe_spot_price_history_result() :: #{binary() => any()}.

%% Example:
%% modify_volume_result() :: #{
%%   <<"VolumeModification">> => volume_modification()
%% }
-type modify_volume_result() :: #{binary() => any()}.

%% Example:
%% describe_local_gateway_virtual_interfaces_result() :: #{
%%   <<"LocalGatewayVirtualInterfaces">> => list(local_gateway_virtual_interface()),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateway_virtual_interfaces_result() :: #{binary() => any()}.

%% Example:
%% describe_addresses_request() :: #{
%%   <<"AllocationIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"PublicIps">> => list(string())
%% }
-type describe_addresses_request() :: #{binary() => any()}.

%% Example:
%% outpost_lag() :: #{
%%   <<"LocalGatewayVirtualInterfaceIds">> => list(string()),
%%   <<"OutpostArn">> => string(),
%%   <<"OutpostLagId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"ServiceLinkVirtualInterfaceIds">> => list(string()),
%%   <<"State">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type outpost_lag() :: #{binary() => any()}.

%% Example:
%% vpn_connection() :: #{
%%   <<"Category">> => string(),
%%   <<"CoreNetworkArn">> => string(),
%%   <<"CoreNetworkAttachmentArn">> => string(),
%%   <<"CustomerGatewayConfiguration">> => string(),
%%   <<"CustomerGatewayId">> => string(),
%%   <<"GatewayAssociationState">> => list(any()),
%%   <<"Options">> => vpn_connection_options(),
%%   <<"PreSharedKeyArn">> => string(),
%%   <<"Routes">> => list(vpn_static_route()),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TransitGatewayId">> => string(),
%%   <<"Type">> => list(any()),
%%   <<"VgwTelemetry">> => list(vgw_telemetry()),
%%   <<"VpnConnectionId">> => string(),
%%   <<"VpnGatewayId">> => string()
%% }
-type vpn_connection() :: #{binary() => any()}.

%% Example:
%% user_data() :: #{
%%   <<"Data">> => string()
%% }
-type user_data() :: #{binary() => any()}.

%% Example:
%% get_active_vpn_tunnel_status_result() :: #{
%%   <<"ActiveVpnTunnelStatus">> => active_vpn_tunnel_status()
%% }
-type get_active_vpn_tunnel_status_result() :: #{binary() => any()}.

%% Example:
%% available_capacity() :: #{
%%   <<"AvailableInstanceCapacity">> => list(instance_capacity()),
%%   <<"AvailableVCpus">> => integer()
%% }
-type available_capacity() :: #{binary() => any()}.

%% Example:
%% get_ipam_pool_cidrs_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamPoolId">> := string(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type get_ipam_pool_cidrs_request() :: #{binary() => any()}.

%% Example:
%% describe_spot_instance_requests_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"SpotInstanceRequestIds">> => list(string())
%% }
-type describe_spot_instance_requests_request() :: #{binary() => any()}.

%% Example:
%% create_default_vpc_result() :: #{
%%   <<"Vpc">> => vpc()
%% }
-type create_default_vpc_result() :: #{binary() => any()}.

%% Example:
%% launch_template_tag_specification_request() :: #{
%%   <<"ResourceType">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type launch_template_tag_specification_request() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_route_table_virtual_interface_group_association_result() :: #{
%%   <<"LocalGatewayRouteTableVirtualInterfaceGroupAssociation">> => local_gateway_route_table_virtual_interface_group_association()
%% }
-type create_local_gateway_route_table_virtual_interface_group_association_result() :: #{binary() => any()}.

%% Example:
%% create_vpc_result() :: #{
%%   <<"Vpc">> => vpc()
%% }
-type create_vpc_result() :: #{binary() => any()}.

%% Example:
%% deprovision_ipam_pool_cidr_result() :: #{
%%   <<"IpamPoolCidr">> => ipam_pool_cidr()
%% }
-type deprovision_ipam_pool_cidr_result() :: #{binary() => any()}.

%% Example:
%% replace_root_volume_task() :: #{
%%   <<"CompleteTime">> => string(),
%%   <<"DeleteReplacedRootVolume">> => boolean(),
%%   <<"ImageId">> => string(),
%%   <<"InstanceId">> => string(),
%%   <<"ReplaceRootVolumeTaskId">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"StartTime">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"TaskState">> => list(any())
%% }
-type replace_root_volume_task() :: #{binary() => any()}.

%% Example:
%% target_network() :: #{
%%   <<"AssociationId">> => string(),
%%   <<"ClientVpnEndpointId">> => string(),
%%   <<"SecurityGroups">> => list(string()),
%%   <<"Status">> => association_status(),
%%   <<"TargetNetworkId">> => string(),
%%   <<"VpcId">> => string()
%% }
-type target_network() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_route_table_vpc_association_result() :: #{
%%   <<"LocalGatewayRouteTableVpcAssociation">> => local_gateway_route_table_vpc_association()
%% }
-type delete_local_gateway_route_table_vpc_association_result() :: #{binary() => any()}.

%% Example:
%% byoasn() :: #{
%%   <<"Asn">> => string(),
%%   <<"IpamId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"StatusMessage">> => string()
%% }
-type byoasn() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_endpoint_eni_options() :: #{
%%   <<"Port">> => integer(),
%%   <<"PortRanges">> => list(modify_verified_access_endpoint_port_range()),
%%   <<"Protocol">> => list(any())
%% }
-type modify_verified_access_endpoint_eni_options() :: #{binary() => any()}.

%% Example:
%% attach_verified_access_trust_provider_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessInstanceId">> := string(),
%%   <<"VerifiedAccessTrustProviderId">> := string()
%% }
-type attach_verified_access_trust_provider_request() :: #{binary() => any()}.

%% Example:
%% disassociate_security_group_vpc_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupId">> := string(),
%%   <<"VpcId">> := string()
%% }
-type disassociate_security_group_vpc_request() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_connect_peer_result() :: #{
%%   <<"TransitGatewayConnectPeer">> => transit_gateway_connect_peer()
%% }
-type delete_transit_gateway_connect_peer_result() :: #{binary() => any()}.

%% Example:
%% search_transit_gateway_multicast_groups_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayMulticastDomainId">> := string()
%% }
-type search_transit_gateway_multicast_groups_request() :: #{binary() => any()}.

%% Example:
%% start_declarative_policies_report_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"S3Bucket">> := string(),
%%   <<"S3Prefix">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TargetId">> := string()
%% }
-type start_declarative_policies_report_request() :: #{binary() => any()}.

%% Example:
%% cidr_block() :: #{
%%   <<"CidrBlock">> => string()
%% }
-type cidr_block() :: #{binary() => any()}.

%% Example:
%% transit_gateway_multicast_domain_association() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceOwnerId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"Subnet">> => subnet_association(),
%%   <<"TransitGatewayAttachmentId">> => string()
%% }
-type transit_gateway_multicast_domain_association() :: #{binary() => any()}.

%% Example:
%% describe_trunk_interface_associations_result() :: #{
%%   <<"InterfaceAssociations">> => list(trunk_interface_association()),
%%   <<"NextToken">> => string()
%% }
-type describe_trunk_interface_associations_result() :: #{binary() => any()}.

%% Example:
%% create_internet_gateway_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_internet_gateway_request() :: #{binary() => any()}.

%% Example:
%% initialization_status_details() :: #{
%%   <<"EstimatedTimeToCompleteInSeconds">> => float(),
%%   <<"InitializationType">> => list(any()),
%%   <<"Progress">> => float()
%% }
-type initialization_status_details() :: #{binary() => any()}.

%% Example:
%% describe_reserved_instances_result() :: #{
%%   <<"ReservedInstances">> => list(reserved_instances())
%% }
-type describe_reserved_instances_result() :: #{binary() => any()}.

%% Example:
%% credit_specification_request() :: #{
%%   <<"CpuCredits">> => string()
%% }
-type credit_specification_request() :: #{binary() => any()}.

%% Example:
%% spot_fleet_launch_specification() :: #{
%%   <<"AddressingType">> => string(),
%%   <<"BlockDeviceMappings">> => list(block_device_mapping()),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"IamInstanceProfile">> => iam_instance_profile_specification(),
%%   <<"ImageId">> => string(),
%%   <<"InstanceRequirements">> => instance_requirements(),
%%   <<"InstanceType">> => list(any()),
%%   <<"KernelId">> => string(),
%%   <<"KeyName">> => string(),
%%   <<"Monitoring">> => spot_fleet_monitoring(),
%%   <<"NetworkInterfaces">> => list(instance_network_interface_specification()),
%%   <<"Placement">> => spot_placement(),
%%   <<"RamdiskId">> => string(),
%%   <<"SecurityGroups">> => list(group_identifier()),
%%   <<"SpotPrice">> => string(),
%%   <<"SubnetId">> => string(),
%%   <<"TagSpecifications">> => list(spot_fleet_tag_specification()),
%%   <<"UserData">> => string(),
%%   <<"WeightedCapacity">> => float()
%% }
-type spot_fleet_launch_specification() :: #{binary() => any()}.

%% Example:
%% transit_gateway_connect_options() :: #{
%%   <<"Protocol">> => list(any())
%% }
-type transit_gateway_connect_options() :: #{binary() => any()}.

%% Example:
%% describe_client_vpn_authorization_rules_result() :: #{
%%   <<"AuthorizationRules">> => list(authorization_rule()),
%%   <<"NextToken">> => string()
%% }
-type describe_client_vpn_authorization_rules_result() :: #{binary() => any()}.

%% Example:
%% accept_reserved_instances_exchange_quote_result() :: #{
%%   <<"ExchangeId">> => string()
%% }
-type accept_reserved_instances_exchange_quote_result() :: #{binary() => any()}.

%% Example:
%% delete_vpc_block_public_access_exclusion_result() :: #{
%%   <<"VpcBlockPublicAccessExclusion">> => vpc_block_public_access_exclusion()
%% }
-type delete_vpc_block_public_access_exclusion_result() :: #{binary() => any()}.

%% Example:
%% spot_placement_score() :: #{
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"Region">> => string(),
%%   <<"Score">> => integer()
%% }
-type spot_placement_score() :: #{binary() => any()}.

%% Example:
%% describe_fleet_instances_result() :: #{
%%   <<"ActiveInstances">> => list(active_instance()),
%%   <<"FleetId">> => string(),
%%   <<"NextToken">> => string()
%% }
-type describe_fleet_instances_result() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_endpoint_request() :: #{
%%   <<"CidrOptions">> => modify_verified_access_endpoint_cidr_options(),
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"LoadBalancerOptions">> => modify_verified_access_endpoint_load_balancer_options(),
%%   <<"NetworkInterfaceOptions">> => modify_verified_access_endpoint_eni_options(),
%%   <<"RdsOptions">> => modify_verified_access_endpoint_rds_options(),
%%   <<"VerifiedAccessEndpointId">> := string(),
%%   <<"VerifiedAccessGroupId">> => string()
%% }
-type modify_verified_access_endpoint_request() :: #{binary() => any()}.

%% Example:
%% ena_srd_udp_specification_request() :: #{
%%   <<"EnaSrdUdpEnabled">> => boolean()
%% }
-type ena_srd_udp_specification_request() :: #{binary() => any()}.

%% Example:
%% describe_instance_connect_endpoints_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"InstanceConnectEndpointIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_connect_endpoints_request() :: #{binary() => any()}.

%% Example:
%% create_tags_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Resources">> := list(string()),
%%   <<"Tags">> := list(tag())
%% }
-type create_tags_request() :: #{binary() => any()}.

%% Example:
%% create_network_insights_access_scope_result() :: #{
%%   <<"NetworkInsightsAccessScope">> => network_insights_access_scope(),
%%   <<"NetworkInsightsAccessScopeContent">> => network_insights_access_scope_content()
%% }
-type create_network_insights_access_scope_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_peering_attachment() :: #{
%%   <<"AccepterTgwInfo">> => peering_tgw_info(),
%%   <<"AccepterTransitGatewayAttachmentId">> => string(),
%%   <<"CreationTime">> => non_neg_integer(),
%%   <<"Options">> => transit_gateway_peering_attachment_options(),
%%   <<"RequesterTgwInfo">> => peering_tgw_info(),
%%   <<"State">> => list(any()),
%%   <<"Status">> => peering_attachment_status(),
%%   <<"Tags">> => list(tag()),
%%   <<"TransitGatewayAttachmentId">> => string()
%% }
-type transit_gateway_peering_attachment() :: #{binary() => any()}.

%% Example:
%% update_security_group_rule_descriptions_ingress_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"IpPermissions">> => list(ip_permission()),
%%   <<"SecurityGroupRuleDescriptions">> => list(security_group_rule_description())
%% }
-type update_security_group_rule_descriptions_ingress_request() :: #{binary() => any()}.

%% Example:
%% verified_access_endpoint_eni_options() :: #{
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"Port">> => integer(),
%%   <<"PortRanges">> => list(verified_access_endpoint_port_range()),
%%   <<"Protocol">> => list(any())
%% }
-type verified_access_endpoint_eni_options() :: #{binary() => any()}.

%% Example:
%% replace_network_acl_association_request() :: #{
%%   <<"AssociationId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkAclId">> := string()
%% }
-type replace_network_acl_association_request() :: #{binary() => any()}.

%% Example:
%% vpn_connection_device_type() :: #{
%%   <<"Platform">> => string(),
%%   <<"Software">> => string(),
%%   <<"Vendor">> => string(),
%%   <<"VpnConnectionDeviceTypeId">> => string()
%% }
-type vpn_connection_device_type() :: #{binary() => any()}.

%% Example:
%% delete_ipam_request() :: #{
%%   <<"Cascade">> => boolean(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamId">> := string()
%% }
-type delete_ipam_request() :: #{binary() => any()}.

%% Example:
%% disassociate_capacity_reservation_billing_owner_request() :: #{
%%   <<"CapacityReservationId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"UnusedReservationBillingOwnerId">> := string()
%% }
-type disassociate_capacity_reservation_billing_owner_request() :: #{binary() => any()}.

%% Example:
%% mac_system_integrity_protection_configuration() :: #{
%%   <<"AppleInternal">> => list(any()),
%%   <<"BaseSystem">> => list(any()),
%%   <<"DTraceRestrictions">> => list(any()),
%%   <<"DebuggingRestrictions">> => list(any()),
%%   <<"FilesystemProtections">> => list(any()),
%%   <<"KextSigning">> => list(any()),
%%   <<"NvramProtections">> => list(any()),
%%   <<"Status">> => list(any())
%% }
-type mac_system_integrity_protection_configuration() :: #{binary() => any()}.

%% Example:
%% create_ipam_resource_discovery_result() :: #{
%%   <<"IpamResourceDiscovery">> => ipam_resource_discovery()
%% }
-type create_ipam_resource_discovery_result() :: #{binary() => any()}.

%% Example:
%% describe_regions_request() :: #{
%%   <<"AllRegions">> => boolean(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"RegionNames">> => list(string())
%% }
-type describe_regions_request() :: #{binary() => any()}.

%% Example:
%% deregister_instance_event_notification_attributes_result() :: #{
%%   <<"InstanceTagAttribute">> => instance_tag_notification_attribute()
%% }
-type deregister_instance_event_notification_attributes_result() :: #{binary() => any()}.

%% Example:
%% run_scheduled_instances_result() :: #{
%%   <<"InstanceIdSet">> => list(string())
%% }
-type run_scheduled_instances_result() :: #{binary() => any()}.

%% Example:
%% request_spot_launch_specification() :: #{
%%   <<"AddressingType">> => string(),
%%   <<"BlockDeviceMappings">> => list(block_device_mapping()),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"IamInstanceProfile">> => iam_instance_profile_specification(),
%%   <<"ImageId">> => string(),
%%   <<"InstanceType">> => list(any()),
%%   <<"KernelId">> => string(),
%%   <<"KeyName">> => string(),
%%   <<"Monitoring">> => run_instances_monitoring_enabled(),
%%   <<"NetworkInterfaces">> => list(instance_network_interface_specification()),
%%   <<"Placement">> => spot_placement(),
%%   <<"RamdiskId">> => string(),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"SecurityGroups">> => list(string()),
%%   <<"SubnetId">> => string(),
%%   <<"UserData">> => string()
%% }
-type request_spot_launch_specification() :: #{binary() => any()}.

%% Example:
%% describe_verified_access_endpoints_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VerifiedAccessEndpointIds">> => list(string()),
%%   <<"VerifiedAccessGroupId">> => string(),
%%   <<"VerifiedAccessInstanceId">> => string()
%% }
-type describe_verified_access_endpoints_request() :: #{binary() => any()}.

%% Example:
%% region() :: #{
%%   <<"Endpoint">> => string(),
%%   <<"OptInStatus">> => string(),
%%   <<"RegionName">> => string()
%% }
-type region() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_policy_tables_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayPolicyTableIds">> => list(string())
%% }
-type describe_transit_gateway_policy_tables_request() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_virtual_interface_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayVirtualInterfaceId">> := string()
%% }
-type delete_local_gateway_virtual_interface_request() :: #{binary() => any()}.

%% Example:
%% classic_load_balancer() :: #{
%%   <<"Name">> => string()
%% }
-type classic_load_balancer() :: #{binary() => any()}.

%% Example:
%% instance_attribute() :: #{
%%   <<"BlockDeviceMappings">> => list(instance_block_device_mapping()),
%%   <<"DisableApiStop">> => attribute_boolean_value(),
%%   <<"DisableApiTermination">> => attribute_boolean_value(),
%%   <<"EbsOptimized">> => attribute_boolean_value(),
%%   <<"EnaSupport">> => attribute_boolean_value(),
%%   <<"EnclaveOptions">> => enclave_options(),
%%   <<"Groups">> => list(group_identifier()),
%%   <<"InstanceId">> => string(),
%%   <<"InstanceInitiatedShutdownBehavior">> => attribute_value(),
%%   <<"InstanceType">> => attribute_value(),
%%   <<"KernelId">> => attribute_value(),
%%   <<"ProductCodes">> => list(product_code()),
%%   <<"RamdiskId">> => attribute_value(),
%%   <<"RootDeviceName">> => attribute_value(),
%%   <<"SourceDestCheck">> => attribute_boolean_value(),
%%   <<"SriovNetSupport">> => attribute_value(),
%%   <<"UserData">> => attribute_value()
%% }
-type instance_attribute() :: #{binary() => any()}.

%% Example:
%% describe_instance_credit_specifications_result() :: #{
%%   <<"InstanceCreditSpecifications">> => list(instance_credit_specification()),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_credit_specifications_result() :: #{binary() => any()}.

%% Example:
%% create_capacity_reservation_result() :: #{
%%   <<"CapacityReservation">> => capacity_reservation()
%% }
-type create_capacity_reservation_result() :: #{binary() => any()}.

%% Example:
%% route_server_association() :: #{
%%   <<"RouteServerId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"VpcId">> => string()
%% }
-type route_server_association() :: #{binary() => any()}.

%% Example:
%% deregister_image_request() :: #{
%%   <<"DeleteAssociatedSnapshots">> => boolean(),
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string()
%% }
-type deregister_image_request() :: #{binary() => any()}.

%% Example:
%% attach_classic_link_vpc_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type attach_classic_link_vpc_result() :: #{binary() => any()}.

%% Example:
%% phase2_d_h_group_numbers_list_value() :: #{
%%   <<"Value">> => integer()
%% }
-type phase2_d_h_group_numbers_list_value() :: #{binary() => any()}.

%% Example:
%% create_network_acl_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VpcId">> := string()
%% }
-type create_network_acl_request() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_connection_notifications_result() :: #{
%%   <<"ConnectionNotificationSet">> => list(connection_notification()),
%%   <<"NextToken">> => string()
%% }
-type describe_vpc_endpoint_connection_notifications_result() :: #{binary() => any()}.

%% Example:
%% describe_ipam_pools_result() :: #{
%%   <<"IpamPools">> => list(ipam_pool()),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_pools_result() :: #{binary() => any()}.

%% Example:
%% client_vpn_authentication_request() :: #{
%%   <<"ActiveDirectory">> => directory_service_authentication_request(),
%%   <<"FederatedAuthentication">> => federated_authentication_request(),
%%   <<"MutualAuthentication">> => certificate_authentication_request(),
%%   <<"Type">> => list(any())
%% }
-type client_vpn_authentication_request() :: #{binary() => any()}.

%% Example:
%% modify_public_ip_dns_name_options_result() :: #{
%%   <<"Successful">> => boolean()
%% }
-type modify_public_ip_dns_name_options_result() :: #{binary() => any()}.

%% Example:
%% attach_internet_gateway_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InternetGatewayId">> := string(),
%%   <<"VpcId">> := string()
%% }
-type attach_internet_gateway_request() :: #{binary() => any()}.

%% Example:
%% provision_ipam_pool_cidr_result() :: #{
%%   <<"IpamPoolCidr">> => ipam_pool_cidr()
%% }
-type provision_ipam_pool_cidr_result() :: #{binary() => any()}.

%% Example:
%% ipam_cidr_authorization_context() :: #{
%%   <<"Message">> => string(),
%%   <<"Signature">> => string()
%% }
-type ipam_cidr_authorization_context() :: #{binary() => any()}.

%% Example:
%% create_traffic_mirror_filter_rule_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DestinationCidrBlock">> := string(),
%%   <<"DestinationPortRange">> => traffic_mirror_port_range_request(),
%%   <<"DryRun">> => boolean(),
%%   <<"Protocol">> => integer(),
%%   <<"RuleAction">> := list(any()),
%%   <<"RuleNumber">> := integer(),
%%   <<"SourceCidrBlock">> := string(),
%%   <<"SourcePortRange">> => traffic_mirror_port_range_request(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TrafficDirection">> := list(any()),
%%   <<"TrafficMirrorFilterId">> := string()
%% }
-type create_traffic_mirror_filter_rule_request() :: #{binary() => any()}.

%% Example:
%% describe_network_interfaces_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NetworkInterfaceIds">> => list(string()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_interfaces_request() :: #{binary() => any()}.

%% Example:
%% disable_route_server_propagation_result() :: #{
%%   <<"RouteServerPropagation">> => route_server_propagation()
%% }
-type disable_route_server_propagation_result() :: #{binary() => any()}.

%% Example:
%% create_verified_access_trust_provider_device_options() :: #{
%%   <<"PublicSigningKeyUrl">> => string(),
%%   <<"TenantId">> => string()
%% }
-type create_verified_access_trust_provider_device_options() :: #{binary() => any()}.

%% Example:
%% delete_launch_template_versions_response_success_item() :: #{
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"VersionNumber">> => float()
%% }
-type delete_launch_template_versions_response_success_item() :: #{binary() => any()}.

%% Example:
%% modify_vpc_block_public_access_options_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InternetGatewayBlockMode">> := list(any())
%% }
-type modify_vpc_block_public_access_options_request() :: #{binary() => any()}.

%% Example:
%% describe_network_interface_attribute_result() :: #{
%%   <<"AssociatePublicIpAddress">> => boolean(),
%%   <<"Attachment">> => network_interface_attachment(),
%%   <<"Description">> => attribute_value(),
%%   <<"Groups">> => list(group_identifier()),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"SourceDestCheck">> => attribute_boolean_value()
%% }
-type describe_network_interface_attribute_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_attachment_bgp_configuration() :: #{
%%   <<"BgpStatus">> => list(any()),
%%   <<"PeerAddress">> => string(),
%%   <<"PeerAsn">> => float(),
%%   <<"TransitGatewayAddress">> => string(),
%%   <<"TransitGatewayAsn">> => float()
%% }
-type transit_gateway_attachment_bgp_configuration() :: #{binary() => any()}.

%% Example:
%% describe_reserved_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"OfferingClass">> => list(any()),
%%   <<"OfferingType">> => list(any()),
%%   <<"ReservedInstancesIds">> => list(string())
%% }
-type describe_reserved_instances_request() :: #{binary() => any()}.

%% Example:
%% describe_bundle_tasks_result() :: #{
%%   <<"BundleTasks">> => list(bundle_task())
%% }
-type describe_bundle_tasks_result() :: #{binary() => any()}.

%% Example:
%% get_vpn_connection_device_sample_configuration_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InternetKeyExchangeVersion">> => string(),
%%   <<"SampleType">> => string(),
%%   <<"VpnConnectionDeviceTypeId">> := string(),
%%   <<"VpnConnectionId">> := string()
%% }
-type get_vpn_connection_device_sample_configuration_request() :: #{binary() => any()}.

%% Example:
%% disassociate_route_server_result() :: #{
%%   <<"RouteServerAssociation">> => route_server_association()
%% }
-type disassociate_route_server_result() :: #{binary() => any()}.

%% Example:
%% network_interface_association() :: #{
%%   <<"AllocationId">> => string(),
%%   <<"AssociationId">> => string(),
%%   <<"CarrierIp">> => string(),
%%   <<"CustomerOwnedIp">> => string(),
%%   <<"IpOwnerId">> => string(),
%%   <<"PublicDnsName">> => string(),
%%   <<"PublicIp">> => string()
%% }
-type network_interface_association() :: #{binary() => any()}.

%% Example:
%% reserved_instances_id() :: #{
%%   <<"ReservedInstancesId">> => string()
%% }
-type reserved_instances_id() :: #{binary() => any()}.

%% Example:
%% import_instance_result() :: #{
%%   <<"ConversionTask">> => conversion_task()
%% }
-type import_instance_result() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_route_request() :: #{
%%   <<"Blackhole">> => boolean(),
%%   <<"DestinationCidrBlock">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type create_transit_gateway_route_request() :: #{binary() => any()}.

%% Example:
%% describe_vpn_connections_result() :: #{
%%   <<"VpnConnections">> => list(vpn_connection())
%% }
-type describe_vpn_connections_result() :: #{binary() => any()}.

%% Example:
%% terminate_client_vpn_connections_result() :: #{
%%   <<"ClientVpnEndpointId">> => string(),
%%   <<"ConnectionStatuses">> => list(terminate_connection_status()),
%%   <<"Username">> => string()
%% }
-type terminate_client_vpn_connections_result() :: #{binary() => any()}.

%% Example:
%% get_instance_tpm_ek_pub_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"KeyFormat">> := list(any()),
%%   <<"KeyType">> := list(any())
%% }
-type get_instance_tpm_ek_pub_request() :: #{binary() => any()}.

%% Example:
%% describe_replace_root_volume_tasks_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"ReplaceRootVolumeTaskIds">> => list(string())
%% }
-type describe_replace_root_volume_tasks_request() :: #{binary() => any()}.

%% Example:
%% enable_aws_network_performance_metric_subscription_result() :: #{
%%   <<"Output">> => boolean()
%% }
-type enable_aws_network_performance_metric_subscription_result() :: #{binary() => any()}.

%% Example:
%% delete_security_group_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string()
%% }
-type delete_security_group_request() :: #{binary() => any()}.

%% Example:
%% vpc_classic_link() :: #{
%%   <<"ClassicLinkEnabled">> => boolean(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type vpc_classic_link() :: #{binary() => any()}.

%% Example:
%% delete_egress_only_internet_gateway_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"EgressOnlyInternetGatewayId">> := string()
%% }
-type delete_egress_only_internet_gateway_request() :: #{binary() => any()}.

%% Example:
%% describe_public_ipv4_pools_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"PublicIpv4Pools">> => list(public_ipv4_pool())
%% }
-type describe_public_ipv4_pools_result() :: #{binary() => any()}.

%% Example:
%% vpc_ipv6_cidr_block_association() :: #{
%%   <<"AssociationId">> => string(),
%%   <<"IpSource">> => list(any()),
%%   <<"Ipv6AddressAttribute">> => list(any()),
%%   <<"Ipv6CidrBlock">> => string(),
%%   <<"Ipv6CidrBlockState">> => vpc_cidr_block_state(),
%%   <<"Ipv6Pool">> => string(),
%%   <<"NetworkBorderGroup">> => string()
%% }
-type vpc_ipv6_cidr_block_association() :: #{binary() => any()}.

%% Example:
%% route_server_bgp_options_request() :: #{
%%   <<"PeerAsn">> => float(),
%%   <<"PeerLivenessDetection">> => list(any())
%% }
-type route_server_bgp_options_request() :: #{binary() => any()}.

%% Example:
%% delete_queued_reserved_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ReservedInstancesIds">> := list(string())
%% }
-type delete_queued_reserved_instances_request() :: #{binary() => any()}.

%% Example:
%% disable_image_block_public_access_result() :: #{
%%   <<"ImageBlockPublicAccessState">> => list(any())
%% }
-type disable_image_block_public_access_result() :: #{binary() => any()}.

%% Example:
%% private_dns_name_configuration() :: #{
%%   <<"Name">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Type">> => string(),
%%   <<"Value">> => string()
%% }
-type private_dns_name_configuration() :: #{binary() => any()}.

%% Example:
%% create_vpc_peering_connection_result() :: #{
%%   <<"VpcPeeringConnection">> => vpc_peering_connection()
%% }
-type create_vpc_peering_connection_result() :: #{binary() => any()}.

%% Example:
%% create_launch_template_version_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"LaunchTemplateData">> := request_launch_template_data(),
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"ResolveAlias">> => boolean(),
%%   <<"SourceVersion">> => string(),
%%   <<"VersionDescription">> => string()
%% }
-type create_launch_template_version_request() :: #{binary() => any()}.

%% Example:
%% modify_client_vpn_endpoint_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_client_vpn_endpoint_result() :: #{binary() => any()}.

%% Example:
%% create_ipam_external_resource_verification_token_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_ipam_external_resource_verification_token_request() :: #{binary() => any()}.

%% Example:
%% disassociate_transit_gateway_multicast_domain_result() :: #{
%%   <<"Associations">> => transit_gateway_multicast_domain_associations()
%% }
-type disassociate_transit_gateway_multicast_domain_result() :: #{binary() => any()}.

%% Example:
%% modify_spot_fleet_request_request() :: #{
%%   <<"Context">> => string(),
%%   <<"ExcessCapacityTerminationPolicy">> => list(any()),
%%   <<"LaunchTemplateConfigs">> => list(launch_template_config()),
%%   <<"OnDemandTargetCapacity">> => integer(),
%%   <<"SpotFleetRequestId">> := string(),
%%   <<"TargetCapacity">> => integer()
%% }
-type modify_spot_fleet_request_request() :: #{binary() => any()}.

%% Example:
%% delete_subnet_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SubnetId">> := string()
%% }
-type delete_subnet_request() :: #{binary() => any()}.

%% Example:
%% start_declarative_policies_report_result() :: #{
%%   <<"ReportId">> => string()
%% }
-type start_declarative_policies_report_result() :: #{binary() => any()}.

%% Example:
%% create_capacity_reservation_request() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"ClientToken">> => string(),
%%   <<"CommitmentDuration">> => float(),
%%   <<"DeliveryPreference">> => list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"EndDate">> => non_neg_integer(),
%%   <<"EndDateType">> => list(any()),
%%   <<"EphemeralStorage">> => boolean(),
%%   <<"InstanceCount">> := integer(),
%%   <<"InstanceMatchCriteria">> => list(any()),
%%   <<"InstancePlatform">> := list(any()),
%%   <<"InstanceType">> := string(),
%%   <<"OutpostArn">> => string(),
%%   <<"PlacementGroupArn">> => string(),
%%   <<"StartDate">> => non_neg_integer(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"Tenancy">> => list(any())
%% }
-type create_capacity_reservation_request() :: #{binary() => any()}.

%% Example:
%% describe_network_insights_analyses_result() :: #{
%%   <<"NetworkInsightsAnalyses">> => list(network_insights_analysis()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_insights_analyses_result() :: #{binary() => any()}.

%% Example:
%% disable_fast_launch_result() :: #{
%%   <<"ImageId">> => string(),
%%   <<"LaunchTemplate">> => fast_launch_launch_template_specification_response(),
%%   <<"MaxParallelLaunches">> => integer(),
%%   <<"OwnerId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"SnapshotConfiguration">> => fast_launch_snapshot_configuration_response(),
%%   <<"State">> => list(any()),
%%   <<"StateTransitionReason">> => string(),
%%   <<"StateTransitionTime">> => non_neg_integer()
%% }
-type disable_fast_launch_result() :: #{binary() => any()}.

%% Example:
%% describe_traffic_mirror_sessions_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TrafficMirrorSessionIds">> => list(string())
%% }
-type describe_traffic_mirror_sessions_request() :: #{binary() => any()}.

%% Example:
%% delete_carrier_gateway_result() :: #{
%%   <<"CarrierGateway">> => carrier_gateway()
%% }
-type delete_carrier_gateway_result() :: #{binary() => any()}.

%% Example:
%% describe_instance_attribute_request() :: #{
%%   <<"Attribute">> := list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string()
%% }
-type describe_instance_attribute_request() :: #{binary() => any()}.

%% Example:
%% create_client_vpn_route_result() :: #{
%%   <<"Status">> => client_vpn_route_status()
%% }
-type create_client_vpn_route_result() :: #{binary() => any()}.

%% Example:
%% spot_options_request() :: #{
%%   <<"AllocationStrategy">> => list(any()),
%%   <<"InstanceInterruptionBehavior">> => list(any()),
%%   <<"InstancePoolsToUseCount">> => integer(),
%%   <<"MaintenanceStrategies">> => fleet_spot_maintenance_strategies_request(),
%%   <<"MaxTotalPrice">> => string(),
%%   <<"MinTargetCapacity">> => integer(),
%%   <<"SingleAvailabilityZone">> => boolean(),
%%   <<"SingleInstanceType">> => boolean()
%% }
-type spot_options_request() :: #{binary() => any()}.

%% Example:
%% describe_fleets_instances() :: #{
%%   <<"InstanceIds">> => list(string()),
%%   <<"InstanceType">> => list(any()),
%%   <<"LaunchTemplateAndOverrides">> => launch_template_and_overrides_response(),
%%   <<"Lifecycle">> => list(any()),
%%   <<"Platform">> => list(any())
%% }
-type describe_fleets_instances() :: #{binary() => any()}.

%% Example:
%% accept_address_transfer_request() :: #{
%%   <<"Address">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type accept_address_transfer_request() :: #{binary() => any()}.

%% Example:
%% start_network_insights_access_scope_analysis_result() :: #{
%%   <<"NetworkInsightsAccessScopeAnalysis">> => network_insights_access_scope_analysis()
%% }
-type start_network_insights_access_scope_analysis_result() :: #{binary() => any()}.

%% Example:
%% launch_template_instance_maintenance_options_request() :: #{
%%   <<"AutoRecovery">> => list(any())
%% }
-type launch_template_instance_maintenance_options_request() :: #{binary() => any()}.

%% Example:
%% describe_security_groups_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"GroupIds">> => list(string()),
%%   <<"GroupNames">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_security_groups_request() :: #{binary() => any()}.

%% Example:
%% cancel_import_task_request() :: #{
%%   <<"CancelReason">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"ImportTaskId">> => string()
%% }
-type cancel_import_task_request() :: #{binary() => any()}.

%% Example:
%% delete_client_vpn_route_request() :: #{
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DestinationCidrBlock">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TargetVpcSubnetId">> => string()
%% }
-type delete_client_vpn_route_request() :: #{binary() => any()}.

%% Example:
%% modify_vpn_tunnel_options_result() :: #{
%%   <<"VpnConnection">> => vpn_connection()
%% }
-type modify_vpn_tunnel_options_result() :: #{binary() => any()}.

%% Example:
%% network_card_info() :: #{
%%   <<"BaselineBandwidthInGbps">> => float(),
%%   <<"DefaultEnaQueueCountPerInterface">> => integer(),
%%   <<"MaximumEnaQueueCount">> => integer(),
%%   <<"MaximumEnaQueueCountPerInterface">> => integer(),
%%   <<"MaximumNetworkInterfaces">> => integer(),
%%   <<"NetworkCardIndex">> => integer(),
%%   <<"NetworkPerformance">> => string(),
%%   <<"PeakBandwidthInGbps">> => float()
%% }
-type network_card_info() :: #{binary() => any()}.

%% Example:
%% id_format() :: #{
%%   <<"Deadline">> => non_neg_integer(),
%%   <<"Resource">> => string(),
%%   <<"UseLongIds">> => boolean()
%% }
-type id_format() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_virtual_interface_group_result() :: #{
%%   <<"LocalGatewayVirtualInterfaceGroup">> => local_gateway_virtual_interface_group()
%% }
-type delete_local_gateway_virtual_interface_group_result() :: #{binary() => any()}.

%% Example:
%% enable_allowed_images_settings_result() :: #{
%%   <<"AllowedImagesSettingsState">> => list(any())
%% }
-type enable_allowed_images_settings_result() :: #{binary() => any()}.

%% Example:
%% describe_capacity_reservations_request() :: #{
%%   <<"CapacityReservationIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_reservations_request() :: #{binary() => any()}.

%% Example:
%% host_properties() :: #{
%%   <<"Cores">> => integer(),
%%   <<"InstanceFamily">> => string(),
%%   <<"InstanceType">> => string(),
%%   <<"Sockets">> => integer(),
%%   <<"TotalVCpus">> => integer()
%% }
-type host_properties() :: #{binary() => any()}.

%% Example:
%% fleet_launch_template_overrides() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"BlockDeviceMappings">> => list(block_device_mapping_response()),
%%   <<"ImageId">> => string(),
%%   <<"InstanceRequirements">> => instance_requirements(),
%%   <<"InstanceType">> => list(any()),
%%   <<"MaxPrice">> => string(),
%%   <<"Placement">> => placement_response(),
%%   <<"Priority">> => float(),
%%   <<"SubnetId">> => string(),
%%   <<"WeightedCapacity">> => float()
%% }
-type fleet_launch_template_overrides() :: #{binary() => any()}.

%% Example:
%% describe_spot_fleet_request_history_response() :: #{
%%   <<"HistoryRecords">> => list(history_record()),
%%   <<"LastEvaluatedTime">> => non_neg_integer(),
%%   <<"NextToken">> => string(),
%%   <<"SpotFleetRequestId">> => string(),
%%   <<"StartTime">> => non_neg_integer()
%% }
-type describe_spot_fleet_request_history_response() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_route_table_announcements_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayRouteTableAnnouncements">> => list(transit_gateway_route_table_announcement())
%% }
-type describe_transit_gateway_route_table_announcements_result() :: #{binary() => any()}.

%% Example:
%% detach_classic_link_vpc_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"VpcId">> := string()
%% }
-type detach_classic_link_vpc_request() :: #{binary() => any()}.

%% Example:
%% describe_export_tasks_result() :: #{
%%   <<"ExportTasks">> => list(export_task())
%% }
-type describe_export_tasks_result() :: #{binary() => any()}.

%% Example:
%% disassociate_transit_gateway_route_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> := string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type disassociate_transit_gateway_route_table_request() :: #{binary() => any()}.

%% Example:
%% launch_template_network_performance_options() :: #{
%%   <<"BandwidthWeighting">> => list(any())
%% }
-type launch_template_network_performance_options() :: #{binary() => any()}.

%% Example:
%% describe_vpc_classic_link_dns_support_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Vpcs">> => list(classic_link_dns_support())
%% }
-type describe_vpc_classic_link_dns_support_result() :: #{binary() => any()}.

%% Example:
%% create_delegate_mac_volume_ownership_task_result() :: #{
%%   <<"MacModificationTask">> => mac_modification_task()
%% }
-type create_delegate_mac_volume_ownership_task_result() :: #{binary() => any()}.

%% Example:
%% delete_carrier_gateway_request() :: #{
%%   <<"CarrierGatewayId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type delete_carrier_gateway_request() :: #{binary() => any()}.

%% Example:
%% describe_dhcp_options_result() :: #{
%%   <<"DhcpOptions">> => list(dhcp_options()),
%%   <<"NextToken">> => string()
%% }
-type describe_dhcp_options_result() :: #{binary() => any()}.

%% Example:
%% create_placement_group_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupName">> => string(),
%%   <<"PartitionCount">> => integer(),
%%   <<"SpreadLevel">> => list(any()),
%%   <<"Strategy">> => list(any()),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_placement_group_request() :: #{binary() => any()}.

%% Example:
%% modify_transit_gateway_options() :: #{
%%   <<"AddTransitGatewayCidrBlocks">> => list(string()),
%%   <<"AmazonSideAsn">> => float(),
%%   <<"AssociationDefaultRouteTableId">> => string(),
%%   <<"AutoAcceptSharedAttachments">> => list(any()),
%%   <<"DefaultRouteTableAssociation">> => list(any()),
%%   <<"DefaultRouteTablePropagation">> => list(any()),
%%   <<"DnsSupport">> => list(any()),
%%   <<"PropagationDefaultRouteTableId">> => string(),
%%   <<"RemoveTransitGatewayCidrBlocks">> => list(string()),
%%   <<"SecurityGroupReferencingSupport">> => list(any()),
%%   <<"VpnEcmpSupport">> => list(any())
%% }
-type modify_transit_gateway_options() :: #{binary() => any()}.

%% Example:
%% enable_fast_snapshot_restore_state_error() :: #{
%%   <<"Code">> => string(),
%%   <<"Message">> => string()
%% }
-type enable_fast_snapshot_restore_state_error() :: #{binary() => any()}.

%% Example:
%% nitro_tpm_info() :: #{
%%   <<"SupportedVersions">> => list(string())
%% }
-type nitro_tpm_info() :: #{binary() => any()}.

%% Example:
%% propagating_vgw() :: #{
%%   <<"GatewayId">> => string()
%% }
-type propagating_vgw() :: #{binary() => any()}.

%% Example:
%% create_nat_gateway_request() :: #{
%%   <<"AllocationId">> => string(),
%%   <<"ClientToken">> => string(),
%%   <<"ConnectivityType">> => list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"SecondaryAllocationIds">> => list(string()),
%%   <<"SecondaryPrivateIpAddressCount">> => integer(),
%%   <<"SecondaryPrivateIpAddresses">> => list(string()),
%%   <<"SubnetId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_nat_gateway_request() :: #{binary() => any()}.

%% Example:
%% tag() :: #{
%%   <<"Key">> => string(),
%%   <<"Value">> => string()
%% }
-type tag() :: #{binary() => any()}.

%% Example:
%% advertise_byoip_cidr_request() :: #{
%%   <<"Asn">> => string(),
%%   <<"Cidr">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkBorderGroup">> => string()
%% }
-type advertise_byoip_cidr_request() :: #{binary() => any()}.

%% Example:
%% describe_export_tasks_request() :: #{
%%   <<"ExportTaskIds">> => list(string()),
%%   <<"Filters">> => list(filter())
%% }
-type describe_export_tasks_request() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_vpc_attachment_result() :: #{
%%   <<"TransitGatewayVpcAttachment">> => transit_gateway_vpc_attachment()
%% }
-type delete_transit_gateway_vpc_attachment_result() :: #{binary() => any()}.

%% Example:
%% delete_subnet_cidr_reservation_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SubnetCidrReservationId">> := string()
%% }
-type delete_subnet_cidr_reservation_request() :: #{binary() => any()}.

%% Example:
%% access_scope_path() :: #{
%%   <<"Destination">> => path_statement(),
%%   <<"Source">> => path_statement(),
%%   <<"ThroughResources">> => list(through_resources_statement())
%% }
-type access_scope_path() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_result() :: #{
%%   <<"TransitGateway">> => transit_gateway()
%% }
-type create_transit_gateway_result() :: #{binary() => any()}.

%% Example:
%% request_filter_port_range() :: #{
%%   <<"FromPort">> => integer(),
%%   <<"ToPort">> => integer()
%% }
-type request_filter_port_range() :: #{binary() => any()}.

%% Example:
%% elastic_inference_accelerator() :: #{
%%   <<"Count">> => integer(),
%%   <<"Type">> => string()
%% }
-type elastic_inference_accelerator() :: #{binary() => any()}.

%% Example:
%% allocate_ipam_pool_cidr_request() :: #{
%%   <<"AllowedCidrs">> => list(string()),
%%   <<"Cidr">> => string(),
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DisallowedCidrs">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamPoolId">> := string(),
%%   <<"NetmaskLength">> => integer(),
%%   <<"PreviewNextCidr">> => boolean()
%% }
-type allocate_ipam_pool_cidr_request() :: #{binary() => any()}.

%% Example:
%% describe_locked_snapshots_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"SnapshotIds">> => list(string())
%% }
-type describe_locked_snapshots_request() :: #{binary() => any()}.

%% Example:
%% describe_mac_hosts_result() :: #{
%%   <<"MacHosts">> => list(mac_host()),
%%   <<"NextToken">> => string()
%% }
-type describe_mac_hosts_result() :: #{binary() => any()}.

%% Example:
%% create_reserved_instances_listing_result() :: #{
%%   <<"ReservedInstancesListings">> => list(reserved_instances_listing())
%% }
-type create_reserved_instances_listing_result() :: #{binary() => any()}.

%% Example:
%% describe_launch_templates_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"LaunchTemplateIds">> => list(string()),
%%   <<"LaunchTemplateNames">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_launch_templates_request() :: #{binary() => any()}.

%% Example:
%% accept_transit_gateway_peering_attachment_result() :: #{
%%   <<"TransitGatewayPeeringAttachment">> => transit_gateway_peering_attachment()
%% }
-type accept_transit_gateway_peering_attachment_result() :: #{binary() => any()}.

%% Example:
%% successful_instance_credit_specification_item() :: #{
%%   <<"InstanceId">> => string()
%% }
-type successful_instance_credit_specification_item() :: #{binary() => any()}.

%% Example:
%% icmp_type_code() :: #{
%%   <<"Code">> => integer(),
%%   <<"Type">> => integer()
%% }
-type icmp_type_code() :: #{binary() => any()}.

%% Example:
%% get_route_server_propagations_result() :: #{
%%   <<"RouteServerPropagations">> => list(route_server_propagation())
%% }
-type get_route_server_propagations_result() :: #{binary() => any()}.

%% Example:
%% associate_transit_gateway_multicast_domain_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SubnetIds">> := list(string()),
%%   <<"TransitGatewayAttachmentId">> := string(),
%%   <<"TransitGatewayMulticastDomainId">> := string()
%% }
-type associate_transit_gateway_multicast_domain_request() :: #{binary() => any()}.

%% Example:
%% vpc_cidr_block_association() :: #{
%%   <<"AssociationId">> => string(),
%%   <<"CidrBlock">> => string(),
%%   <<"CidrBlockState">> => vpc_cidr_block_state()
%% }
-type vpc_cidr_block_association() :: #{binary() => any()}.

%% Example:
%% path_request_filter() :: #{
%%   <<"DestinationAddress">> => string(),
%%   <<"DestinationPortRange">> => request_filter_port_range(),
%%   <<"SourceAddress">> => string(),
%%   <<"SourcePortRange">> => request_filter_port_range()
%% }
-type path_request_filter() :: #{binary() => any()}.

%% Example:
%% launch_template_hibernation_options() :: #{
%%   <<"Configured">> => boolean()
%% }
-type launch_template_hibernation_options() :: #{binary() => any()}.

%% Example:
%% create_traffic_mirror_target_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"TrafficMirrorTarget">> => traffic_mirror_target()
%% }
-type create_traffic_mirror_target_result() :: #{binary() => any()}.

%% Example:
%% unassign_ipv6_addresses_request() :: #{
%%   <<"Ipv6Addresses">> => list(string()),
%%   <<"Ipv6Prefixes">> => list(string()),
%%   <<"NetworkInterfaceId">> := string()
%% }
-type unassign_ipv6_addresses_request() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_connect_peers_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayConnectPeerIds">> => list(string())
%% }
-type describe_transit_gateway_connect_peers_request() :: #{binary() => any()}.

%% Example:
%% describe_host_reservation_offerings_request() :: #{
%%   <<"Filter">> => list(filter()),
%%   <<"MaxDuration">> => integer(),
%%   <<"MaxResults">> => integer(),
%%   <<"MinDuration">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"OfferingId">> => string()
%% }
-type describe_host_reservation_offerings_request() :: #{binary() => any()}.

%% Example:
%% get_ipam_discovered_public_addresses_request() :: #{
%%   <<"AddressRegion">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamResourceDiscoveryId">> := string(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type get_ipam_discovered_public_addresses_request() :: #{binary() => any()}.

%% Example:
%% unassign_private_nat_gateway_address_result() :: #{
%%   <<"NatGatewayAddresses">> => list(nat_gateway_address()),
%%   <<"NatGatewayId">> => string()
%% }
-type unassign_private_nat_gateway_address_result() :: #{binary() => any()}.

%% Example:
%% ipv4_prefix_specification_request() :: #{
%%   <<"Ipv4Prefix">> => string()
%% }
-type ipv4_prefix_specification_request() :: #{binary() => any()}.

%% Example:
%% create_carrier_gateway_result() :: #{
%%   <<"CarrierGateway">> => carrier_gateway()
%% }
-type create_carrier_gateway_result() :: #{binary() => any()}.

%% Example:
%% instance_credit_specification() :: #{
%%   <<"CpuCredits">> => string(),
%%   <<"InstanceId">> => string()
%% }
-type instance_credit_specification() :: #{binary() => any()}.

%% Example:
%% allocate_address_request() :: #{
%%   <<"Address">> => string(),
%%   <<"CustomerOwnedIpv4Pool">> => string(),
%%   <<"Domain">> => list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamPoolId">> => string(),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"PublicIpv4Pool">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type allocate_address_request() :: #{binary() => any()}.

%% Example:
%% describe_vpc_attribute_request() :: #{
%%   <<"Attribute">> := list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"VpcId">> := string()
%% }
-type describe_vpc_attribute_request() :: #{binary() => any()}.

%% Example:
%% create_image_request() :: #{
%%   <<"BlockDeviceMappings">> => list(block_device_mapping()),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"Name">> := string(),
%%   <<"NoReboot">> => boolean(),
%%   <<"SnapshotLocation">> => list(any()),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_image_request() :: #{binary() => any()}.

%% Example:
%% associate_instance_event_window_request() :: #{
%%   <<"AssociationTarget">> := instance_event_window_association_request(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceEventWindowId">> := string()
%% }
-type associate_instance_event_window_request() :: #{binary() => any()}.

%% Example:
%% private_ip_address_specification() :: #{
%%   <<"Primary">> => boolean(),
%%   <<"PrivateIpAddress">> => string()
%% }
-type private_ip_address_specification() :: #{binary() => any()}.

%% Example:
%% describe_volumes_modifications_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VolumeIds">> => list(string())
%% }
-type describe_volumes_modifications_request() :: #{binary() => any()}.

%% Example:
%% launch_template_enclave_options_request() :: #{
%%   <<"Enabled">> => boolean()
%% }
-type launch_template_enclave_options_request() :: #{binary() => any()}.

%% Example:
%% route_server_bfd_status() :: #{
%%   <<"Status">> => list(any())
%% }
-type route_server_bfd_status() :: #{binary() => any()}.

%% Example:
%% describe_capacity_block_extension_offerings_result() :: #{
%%   <<"CapacityBlockExtensionOfferings">> => list(capacity_block_extension_offering()),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_block_extension_offerings_result() :: #{binary() => any()}.

%% Example:
%% describe_security_group_rules_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"SecurityGroupRuleIds">> => list(string())
%% }
-type describe_security_group_rules_request() :: #{binary() => any()}.

%% Example:
%% verified_access_endpoint_cidr_options() :: #{
%%   <<"Cidr">> => string(),
%%   <<"PortRanges">> => list(verified_access_endpoint_port_range()),
%%   <<"Protocol">> => list(any()),
%%   <<"SubnetIds">> => list(string())
%% }
-type verified_access_endpoint_cidr_options() :: #{binary() => any()}.

%% Example:
%% hibernation_options_request() :: #{
%%   <<"Configured">> => boolean()
%% }
-type hibernation_options_request() :: #{binary() => any()}.

%% Example:
%% ipam_public_address_tags() :: #{
%%   <<"EipTags">> => list(ipam_public_address_tag())
%% }
-type ipam_public_address_tags() :: #{binary() => any()}.

%% Example:
%% fleet_launch_template_config() :: #{
%%   <<"LaunchTemplateSpecification">> => fleet_launch_template_specification(),
%%   <<"Overrides">> => list(fleet_launch_template_overrides())
%% }
-type fleet_launch_template_config() :: #{binary() => any()}.

%% Example:
%% modify_instance_event_window_result() :: #{
%%   <<"InstanceEventWindow">> => instance_event_window()
%% }
-type modify_instance_event_window_result() :: #{binary() => any()}.

%% Example:
%% modify_availability_zone_group_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupName">> := string(),
%%   <<"OptInStatus">> := list(any())
%% }
-type modify_availability_zone_group_request() :: #{binary() => any()}.

%% Example:
%% price_schedule() :: #{
%%   <<"Active">> => boolean(),
%%   <<"CurrencyCode">> => list(any()),
%%   <<"Price">> => float(),
%%   <<"Term">> => float()
%% }
-type price_schedule() :: #{binary() => any()}.

%% Example:
%% allocate_hosts_request() :: #{
%%   <<"AssetIds">> => list(string()),
%%   <<"AutoPlacement">> => list(any()),
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"ClientToken">> => string(),
%%   <<"HostMaintenance">> => list(any()),
%%   <<"HostRecovery">> => list(any()),
%%   <<"InstanceFamily">> => string(),
%%   <<"InstanceType">> => string(),
%%   <<"OutpostArn">> => string(),
%%   <<"Quantity">> => integer(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type allocate_hosts_request() :: #{binary() => any()}.

%% Example:
%% get_default_credit_specification_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceFamily">> := list(any())
%% }
-type get_default_credit_specification_request() :: #{binary() => any()}.

%% Example:
%% verified_access_trust_provider() :: #{
%%   <<"CreationTime">> => string(),
%%   <<"Description">> => string(),
%%   <<"DeviceOptions">> => device_options(),
%%   <<"DeviceTrustProviderType">> => list(any()),
%%   <<"LastUpdatedTime">> => string(),
%%   <<"NativeApplicationOidcOptions">> => native_application_oidc_options(),
%%   <<"OidcOptions">> => oidc_options(),
%%   <<"PolicyReferenceName">> => string(),
%%   <<"SseSpecification">> => verified_access_sse_specification_response(),
%%   <<"Tags">> => list(tag()),
%%   <<"TrustProviderType">> => list(any()),
%%   <<"UserTrustProviderType">> => list(any()),
%%   <<"VerifiedAccessTrustProviderId">> => string()
%% }
-type verified_access_trust_provider() :: #{binary() => any()}.

%% Example:
%% response_error() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type response_error() :: #{binary() => any()}.

%% Example:
%% describe_local_gateways_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"LocalGatewayIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateways_request() :: #{binary() => any()}.

%% Example:
%% describe_ipam_pools_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamPoolIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_pools_request() :: #{binary() => any()}.

%% Example:
%% fleet_spot_maintenance_strategies() :: #{
%%   <<"CapacityRebalance">> => fleet_spot_capacity_rebalance()
%% }
-type fleet_spot_maintenance_strategies() :: #{binary() => any()}.

%% Example:
%% spot_datafeed_subscription() :: #{
%%   <<"Bucket">> => string(),
%%   <<"Fault">> => spot_instance_state_fault(),
%%   <<"OwnerId">> => string(),
%%   <<"Prefix">> => string(),
%%   <<"State">> => list(any())
%% }
-type spot_datafeed_subscription() :: #{binary() => any()}.

%% Example:
%% export_to_s3_task() :: #{
%%   <<"ContainerFormat">> => list(any()),
%%   <<"DiskImageFormat">> => list(any()),
%%   <<"S3Bucket">> => string(),
%%   <<"S3Key">> => string()
%% }
-type export_to_s3_task() :: #{binary() => any()}.

%% Example:
%% snapshot_tier_status() :: #{
%%   <<"ArchivalCompleteTime">> => non_neg_integer(),
%%   <<"LastTieringOperationStatus">> => list(any()),
%%   <<"LastTieringOperationStatusDetail">> => string(),
%%   <<"LastTieringProgress">> => integer(),
%%   <<"LastTieringStartTime">> => non_neg_integer(),
%%   <<"OwnerId">> => string(),
%%   <<"RestoreExpiryTime">> => non_neg_integer(),
%%   <<"SnapshotId">> => string(),
%%   <<"Status">> => list(any()),
%%   <<"StorageTier">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"VolumeId">> => string()
%% }
-type snapshot_tier_status() :: #{binary() => any()}.

%% Example:
%% dhcp_options() :: #{
%%   <<"DhcpConfigurations">> => list(dhcp_configuration()),
%%   <<"DhcpOptionsId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type dhcp_options() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_policy_tables_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayPolicyTables">> => list(transit_gateway_policy_table())
%% }
-type describe_transit_gateway_policy_tables_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_route_table_association() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"State">> => list(any()),
%%   <<"TransitGatewayAttachmentId">> => string()
%% }
-type transit_gateway_route_table_association() :: #{binary() => any()}.

%% Example:
%% describe_spot_datafeed_subscription_result() :: #{
%%   <<"SpotDatafeedSubscription">> => spot_datafeed_subscription()
%% }
-type describe_spot_datafeed_subscription_result() :: #{binary() => any()}.

%% Example:
%% accelerator_count_request() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type accelerator_count_request() :: #{binary() => any()}.

%% Example:
%% enable_fast_snapshot_restore_success_item() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"DisabledTime">> => non_neg_integer(),
%%   <<"DisablingTime">> => non_neg_integer(),
%%   <<"EnabledTime">> => non_neg_integer(),
%%   <<"EnablingTime">> => non_neg_integer(),
%%   <<"OptimizingTime">> => non_neg_integer(),
%%   <<"OwnerAlias">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"StateTransitionReason">> => string()
%% }
-type enable_fast_snapshot_restore_success_item() :: #{binary() => any()}.

%% Example:
%% hibernation_options() :: #{
%%   <<"Configured">> => boolean()
%% }
-type hibernation_options() :: #{binary() => any()}.

%% Example:
%% describe_traffic_mirror_targets_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TrafficMirrorTargets">> => list(traffic_mirror_target())
%% }
-type describe_traffic_mirror_targets_result() :: #{binary() => any()}.

%% Example:
%% fast_launch_snapshot_configuration_response() :: #{
%%   <<"TargetResourceCount">> => integer()
%% }
-type fast_launch_snapshot_configuration_response() :: #{binary() => any()}.

%% Example:
%% bundle_instance_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"Storage">> := storage()
%% }
-type bundle_instance_request() :: #{binary() => any()}.

%% Example:
%% replace_transit_gateway_route_result() :: #{
%%   <<"Route">> => transit_gateway_route()
%% }
-type replace_transit_gateway_route_result() :: #{binary() => any()}.

%% Example:
%% iam_instance_profile_association() :: #{
%%   <<"AssociationId">> => string(),
%%   <<"IamInstanceProfile">> => iam_instance_profile(),
%%   <<"InstanceId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Timestamp">> => non_neg_integer()
%% }
-type iam_instance_profile_association() :: #{binary() => any()}.

%% Example:
%% import_snapshot_result() :: #{
%%   <<"Description">> => string(),
%%   <<"ImportTaskId">> => string(),
%%   <<"SnapshotTaskDetail">> => snapshot_task_detail(),
%%   <<"Tags">> => list(tag())
%% }
-type import_snapshot_result() :: #{binary() => any()}.

%% Example:
%% get_instance_metadata_defaults_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type get_instance_metadata_defaults_request() :: #{binary() => any()}.

%% Example:
%% lock_snapshot_request() :: #{
%%   <<"CoolOffPeriod">> => integer(),
%%   <<"DryRun">> => boolean(),
%%   <<"ExpirationDate">> => non_neg_integer(),
%%   <<"LockDuration">> => integer(),
%%   <<"LockMode">> := list(any()),
%%   <<"SnapshotId">> := string()
%% }
-type lock_snapshot_request() :: #{binary() => any()}.

%% Example:
%% create_default_vpc_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type create_default_vpc_request() :: #{binary() => any()}.

%% Example:
%% delete_vpc_endpoint_connection_notifications_request() :: #{
%%   <<"ConnectionNotificationIds">> := list(string()),
%%   <<"DryRun">> => boolean()
%% }
-type delete_vpc_endpoint_connection_notifications_request() :: #{binary() => any()}.

%% Example:
%% private_dns_name_options_request() :: #{
%%   <<"EnableResourceNameDnsAAAARecord">> => boolean(),
%%   <<"EnableResourceNameDnsARecord">> => boolean(),
%%   <<"HostnameType">> => list(any())
%% }
-type private_dns_name_options_request() :: #{binary() => any()}.

%% Example:
%% instance_requirements_with_metadata_request() :: #{
%%   <<"ArchitectureTypes">> => list(list(any())()),
%%   <<"InstanceRequirements">> => instance_requirements_request(),
%%   <<"VirtualizationTypes">> => list(list(any())())
%% }
-type instance_requirements_with_metadata_request() :: #{binary() => any()}.

%% Example:
%% fleet_spot_capacity_rebalance_request() :: #{
%%   <<"ReplacementStrategy">> => list(any()),
%%   <<"TerminationDelay">> => integer()
%% }
-type fleet_spot_capacity_rebalance_request() :: #{binary() => any()}.

%% Example:
%% instance_credit_specification_request() :: #{
%%   <<"CpuCredits">> => string(),
%%   <<"InstanceId">> => string()
%% }
-type instance_credit_specification_request() :: #{binary() => any()}.

%% Example:
%% associate_route_server_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"RouteServerId">> := string(),
%%   <<"VpcId">> := string()
%% }
-type associate_route_server_request() :: #{binary() => any()}.

%% Example:
%% state_reason() :: #{
%%   <<"Code">> => string(),
%%   <<"Message">> => string()
%% }
-type state_reason() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_trust_provider_device_options() :: #{
%%   <<"PublicSigningKeyUrl">> => string()
%% }
-type modify_verified_access_trust_provider_device_options() :: #{binary() => any()}.

%% Example:
%% create_verified_access_endpoint_result() :: #{
%%   <<"VerifiedAccessEndpoint">> => verified_access_endpoint()
%% }
-type create_verified_access_endpoint_result() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_target_response() :: #{
%%   <<"CapacityReservationId">> => string(),
%%   <<"CapacityReservationResourceGroupArn">> => string()
%% }
-type capacity_reservation_target_response() :: #{binary() => any()}.

%% Example:
%% modify_public_ip_dns_name_options_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"HostnameType">> := list(any()),
%%   <<"NetworkInterfaceId">> := string()
%% }
-type modify_public_ip_dns_name_options_request() :: #{binary() => any()}.

%% Example:
%% tag_description() :: #{
%%   <<"Key">> => string(),
%%   <<"ResourceId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"Value">> => string()
%% }
-type tag_description() :: #{binary() => any()}.

%% Example:
%% modify_vpc_endpoint_service_payer_responsibility_result() :: #{
%%   <<"ReturnValue">> => boolean()
%% }
-type modify_vpc_endpoint_service_payer_responsibility_result() :: #{binary() => any()}.

%% Example:
%% enable_ebs_encryption_by_default_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type enable_ebs_encryption_by_default_request() :: #{binary() => any()}.

%% Example:
%% vpc_endpoint_association() :: #{
%%   <<"AssociatedResourceAccessibility">> => string(),
%%   <<"AssociatedResourceArn">> => string(),
%%   <<"DnsEntry">> => dns_entry(),
%%   <<"FailureCode">> => string(),
%%   <<"FailureReason">> => string(),
%%   <<"Id">> => string(),
%%   <<"PrivateDnsEntry">> => dns_entry(),
%%   <<"ResourceConfigurationGroupArn">> => string(),
%%   <<"ServiceNetworkArn">> => string(),
%%   <<"ServiceNetworkName">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcEndpointId">> => string()
%% }
-type vpc_endpoint_association() :: #{binary() => any()}.

%% Example:
%% modify_default_credit_specification_result() :: #{
%%   <<"InstanceFamilyCreditSpecification">> => instance_family_credit_specification()
%% }
-type modify_default_credit_specification_result() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_policy_table_result() :: #{
%%   <<"TransitGatewayPolicyTable">> => transit_gateway_policy_table()
%% }
-type delete_transit_gateway_policy_table_result() :: #{binary() => any()}.

%% Example:
%% scheduled_instances_block_device_mapping() :: #{
%%   <<"DeviceName">> => string(),
%%   <<"Ebs">> => scheduled_instances_ebs(),
%%   <<"NoDevice">> => string(),
%%   <<"VirtualName">> => string()
%% }
-type scheduled_instances_block_device_mapping() :: #{binary() => any()}.

%% Example:
%% reject_capacity_reservation_billing_ownership_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type reject_capacity_reservation_billing_ownership_result() :: #{binary() => any()}.

%% Example:
%% verified_access_instance_user_trust_provider_client_configuration() :: #{
%%   <<"AuthorizationEndpoint">> => string(),
%%   <<"ClientId">> => string(),
%%   <<"ClientSecret">> => string(),
%%   <<"Issuer">> => string(),
%%   <<"PkceEnabled">> => boolean(),
%%   <<"PublicSigningKeyEndpoint">> => string(),
%%   <<"Scopes">> => string(),
%%   <<"TokenEndpoint">> => string(),
%%   <<"Type">> => list(any()),
%%   <<"UserInfoEndpoint">> => string()
%% }
-type verified_access_instance_user_trust_provider_client_configuration() :: #{binary() => any()}.

%% Example:
%% confirm_product_instance_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"ProductCode">> := string()
%% }
-type confirm_product_instance_request() :: #{binary() => any()}.

%% Example:
%% resource_statement_request() :: #{
%%   <<"ResourceTypes">> => list(string()),
%%   <<"Resources">> => list(string())
%% }
-type resource_statement_request() :: #{binary() => any()}.

%% Example:
%% ip_range() :: #{
%%   <<"CidrIp">> => string(),
%%   <<"Description">> => string()
%% }
-type ip_range() :: #{binary() => any()}.

%% Example:
%% scheduled_instances_monitoring() :: #{
%%   <<"Enabled">> => boolean()
%% }
-type scheduled_instances_monitoring() :: #{binary() => any()}.

%% Example:
%% restore_managed_prefix_list_version_result() :: #{
%%   <<"PrefixList">> => managed_prefix_list()
%% }
-type restore_managed_prefix_list_version_result() :: #{binary() => any()}.

%% Example:
%% reject_transit_gateway_vpc_attachment_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> := string()
%% }
-type reject_transit_gateway_vpc_attachment_request() :: #{binary() => any()}.

%% Example:
%% delete_traffic_mirror_target_result() :: #{
%%   <<"TrafficMirrorTargetId">> => string()
%% }
-type delete_traffic_mirror_target_result() :: #{binary() => any()}.

%% Example:
%% disable_ebs_encryption_by_default_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type disable_ebs_encryption_by_default_request() :: #{binary() => any()}.

%% Example:
%% associate_subnet_cidr_block_result() :: #{
%%   <<"Ipv6CidrBlockAssociation">> => subnet_ipv6_cidr_block_association(),
%%   <<"SubnetId">> => string()
%% }
-type associate_subnet_cidr_block_result() :: #{binary() => any()}.

%% Example:
%% get_image_block_public_access_state_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type get_image_block_public_access_state_request() :: #{binary() => any()}.

%% Example:
%% on_demand_options() :: #{
%%   <<"AllocationStrategy">> => list(any()),
%%   <<"CapacityReservationOptions">> => capacity_reservation_options(),
%%   <<"MaxTotalPrice">> => string(),
%%   <<"MinTargetCapacity">> => integer(),
%%   <<"SingleAvailabilityZone">> => boolean(),
%%   <<"SingleInstanceType">> => boolean()
%% }
-type on_demand_options() :: #{binary() => any()}.

%% Example:
%% describe_ipam_resource_discovery_associations_result() :: #{
%%   <<"IpamResourceDiscoveryAssociations">> => list(ipam_resource_discovery_association()),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_resource_discovery_associations_result() :: #{binary() => any()}.

%% Example:
%% network_interface_attachment() :: #{
%%   <<"AttachTime">> => non_neg_integer(),
%%   <<"AttachmentId">> => string(),
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"DeviceIndex">> => integer(),
%%   <<"EnaQueueCount">> => integer(),
%%   <<"EnaSrdSpecification">> => attachment_ena_srd_specification(),
%%   <<"InstanceId">> => string(),
%%   <<"InstanceOwnerId">> => string(),
%%   <<"NetworkCardIndex">> => integer(),
%%   <<"Status">> => list(any())
%% }
-type network_interface_attachment() :: #{binary() => any()}.

%% Example:
%% reserved_instances_modification_result() :: #{
%%   <<"ReservedInstancesId">> => string(),
%%   <<"TargetConfiguration">> => reserved_instances_configuration()
%% }
-type reserved_instances_modification_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_connect_request_bgp_options() :: #{
%%   <<"PeerAsn">> => float()
%% }
-type transit_gateway_connect_request_bgp_options() :: #{binary() => any()}.

%% Example:
%% modify_vpn_connection_result() :: #{
%%   <<"VpnConnection">> => vpn_connection()
%% }
-type modify_vpn_connection_result() :: #{binary() => any()}.

%% Example:
%% phase1_integrity_algorithms_request_list_value() :: #{
%%   <<"Value">> => string()
%% }
-type phase1_integrity_algorithms_request_list_value() :: #{binary() => any()}.

%% Example:
%% image_disk_container() :: #{
%%   <<"Description">> => string(),
%%   <<"DeviceName">> => string(),
%%   <<"Format">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"Url">> => string(),
%%   <<"UserBucket">> => user_bucket()
%% }
-type image_disk_container() :: #{binary() => any()}.

%% Example:
%% create_client_vpn_endpoint_result() :: #{
%%   <<"ClientVpnEndpointId">> => string(),
%%   <<"DnsName">> => string(),
%%   <<"Status">> => client_vpn_endpoint_status()
%% }
-type create_client_vpn_endpoint_result() :: #{binary() => any()}.

%% Example:
%% coip_pool() :: #{
%%   <<"LocalGatewayRouteTableId">> => string(),
%%   <<"PoolArn">> => string(),
%%   <<"PoolCidrs">> => list(string()),
%%   <<"PoolId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type coip_pool() :: #{binary() => any()}.

%% Example:
%% instance_state_change() :: #{
%%   <<"CurrentState">> => instance_state(),
%%   <<"InstanceId">> => string(),
%%   <<"PreviousState">> => instance_state()
%% }
-type instance_state_change() :: #{binary() => any()}.

%% Example:
%% remove_prefix_list_entry() :: #{
%%   <<"Cidr">> => string()
%% }
-type remove_prefix_list_entry() :: #{binary() => any()}.

%% Example:
%% delete_fleets_result() :: #{
%%   <<"SuccessfulFleetDeletions">> => list(delete_fleet_success_item()),
%%   <<"UnsuccessfulFleetDeletions">> => list(delete_fleet_error_item())
%% }
-type delete_fleets_result() :: #{binary() => any()}.

%% Example:
%% modify_fpga_image_attribute_result() :: #{
%%   <<"FpgaImageAttribute">> => fpga_image_attribute()
%% }
-type modify_fpga_image_attribute_result() :: #{binary() => any()}.

%% Example:
%% instance_event_window_time_range_request() :: #{
%%   <<"EndHour">> => integer(),
%%   <<"EndWeekDay">> => list(any()),
%%   <<"StartHour">> => integer(),
%%   <<"StartWeekDay">> => list(any())
%% }
-type instance_event_window_time_range_request() :: #{binary() => any()}.

%% Example:
%% spot_capacity_rebalance() :: #{
%%   <<"ReplacementStrategy">> => list(any()),
%%   <<"TerminationDelay">> => integer()
%% }
-type spot_capacity_rebalance() :: #{binary() => any()}.

%% Example:
%% delete_vpn_connection_route_request() :: #{
%%   <<"DestinationCidrBlock">> := string(),
%%   <<"VpnConnectionId">> := string()
%% }
-type delete_vpn_connection_route_request() :: #{binary() => any()}.

%% Example:
%% modify_instance_maintenance_options_result() :: #{
%%   <<"AutoRecovery">> => list(any()),
%%   <<"InstanceId">> => string(),
%%   <<"RebootMigration">> => list(any())
%% }
-type modify_instance_maintenance_options_result() :: #{binary() => any()}.

%% Example:
%% replace_iam_instance_profile_association_request() :: #{
%%   <<"AssociationId">> := string(),
%%   <<"IamInstanceProfile">> := iam_instance_profile_specification()
%% }
-type replace_iam_instance_profile_association_request() :: #{binary() => any()}.

%% Example:
%% describe_vpc_classic_link_result() :: #{
%%   <<"Vpcs">> => list(vpc_classic_link())
%% }
-type describe_vpc_classic_link_result() :: #{binary() => any()}.

%% Example:
%% target_capacity_specification() :: #{
%%   <<"DefaultTargetCapacityType">> => list(any()),
%%   <<"OnDemandTargetCapacity">> => integer(),
%%   <<"SpotTargetCapacity">> => integer(),
%%   <<"TargetCapacityUnitType">> => list(any()),
%%   <<"TotalTargetCapacity">> => integer()
%% }
-type target_capacity_specification() :: #{binary() => any()}.

%% Example:
%% instance_family_credit_specification() :: #{
%%   <<"CpuCredits">> => string(),
%%   <<"InstanceFamily">> => list(any())
%% }
-type instance_family_credit_specification() :: #{binary() => any()}.

%% Example:
%% route_table_association() :: #{
%%   <<"AssociationState">> => route_table_association_state(),
%%   <<"GatewayId">> => string(),
%%   <<"Main">> => boolean(),
%%   <<"RouteTableAssociationId">> => string(),
%%   <<"RouteTableId">> => string(),
%%   <<"SubnetId">> => string()
%% }
-type route_table_association() :: #{binary() => any()}.

%% Example:
%% create_fpga_image_result() :: #{
%%   <<"FpgaImageGlobalId">> => string(),
%%   <<"FpgaImageId">> => string()
%% }
-type create_fpga_image_result() :: #{binary() => any()}.

%% Example:
%% associate_address_result() :: #{
%%   <<"AssociationId">> => string()
%% }
-type associate_address_result() :: #{binary() => any()}.

%% Example:
%% copy_fpga_image_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Name">> => string(),
%%   <<"SourceFpgaImageId">> := string(),
%%   <<"SourceRegion">> := string()
%% }
-type copy_fpga_image_request() :: #{binary() => any()}.

%% Example:
%% create_instance_event_window_request() :: #{
%%   <<"CronExpression">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Name">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TimeRanges">> => list(instance_event_window_time_range_request())
%% }
-type create_instance_event_window_request() :: #{binary() => any()}.

%% Example:
%% cpu_options() :: #{
%%   <<"AmdSevSnp">> => list(any()),
%%   <<"CoreCount">> => integer(),
%%   <<"ThreadsPerCore">> => integer()
%% }
-type cpu_options() :: #{binary() => any()}.

%% Example:
%% associate_dhcp_options_request() :: #{
%%   <<"DhcpOptionsId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"VpcId">> := string()
%% }
-type associate_dhcp_options_request() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateways_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayIds">> => list(string())
%% }
-type describe_transit_gateways_request() :: #{binary() => any()}.

%% Example:
%% disable_fast_launch_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Force">> => boolean(),
%%   <<"ImageId">> := string()
%% }
-type disable_fast_launch_request() :: #{binary() => any()}.

%% Example:
%% modify_instance_metadata_options_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"HttpEndpoint">> => list(any()),
%%   <<"HttpProtocolIpv6">> => list(any()),
%%   <<"HttpPutResponseHopLimit">> => integer(),
%%   <<"HttpTokens">> => list(any()),
%%   <<"InstanceId">> := string(),
%%   <<"InstanceMetadataTags">> => list(any())
%% }
-type modify_instance_metadata_options_request() :: #{binary() => any()}.

%% Example:
%% analysis_acl_rule() :: #{
%%   <<"Cidr">> => string(),
%%   <<"Egress">> => boolean(),
%%   <<"PortRange">> => port_range(),
%%   <<"Protocol">> => string(),
%%   <<"RuleAction">> => string(),
%%   <<"RuleNumber">> => integer()
%% }
-type analysis_acl_rule() :: #{binary() => any()}.

%% Example:
%% modify_vpc_endpoint_service_configuration_request() :: #{
%%   <<"AcceptanceRequired">> => boolean(),
%%   <<"AddGatewayLoadBalancerArns">> => list(string()),
%%   <<"AddNetworkLoadBalancerArns">> => list(string()),
%%   <<"AddSupportedIpAddressTypes">> => list(string()),
%%   <<"AddSupportedRegions">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"PrivateDnsName">> => string(),
%%   <<"RemoveGatewayLoadBalancerArns">> => list(string()),
%%   <<"RemoveNetworkLoadBalancerArns">> => list(string()),
%%   <<"RemovePrivateDnsName">> => boolean(),
%%   <<"RemoveSupportedIpAddressTypes">> => list(string()),
%%   <<"RemoveSupportedRegions">> => list(string()),
%%   <<"ServiceId">> := string()
%% }
-type modify_vpc_endpoint_service_configuration_request() :: #{binary() => any()}.

%% Example:
%% ipam_pool_source_resource() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceOwner">> => string(),
%%   <<"ResourceRegion">> => string(),
%%   <<"ResourceType">> => list(any())
%% }
-type ipam_pool_source_resource() :: #{binary() => any()}.

%% Example:
%% capacity_block_offering() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"CapacityBlockDurationHours">> => integer(),
%%   <<"CapacityBlockDurationMinutes">> => integer(),
%%   <<"CapacityBlockOfferingId">> => string(),
%%   <<"CurrencyCode">> => string(),
%%   <<"EndDate">> => non_neg_integer(),
%%   <<"InstanceCount">> => integer(),
%%   <<"InstanceType">> => string(),
%%   <<"StartDate">> => non_neg_integer(),
%%   <<"Tenancy">> => list(any()),
%%   <<"UltraserverCount">> => integer(),
%%   <<"UltraserverType">> => string(),
%%   <<"UpfrontFee">> => string()
%% }
-type capacity_block_offering() :: #{binary() => any()}.

%% Example:
%% reserved_instances() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"CurrencyCode">> => list(any()),
%%   <<"Duration">> => float(),
%%   <<"End">> => non_neg_integer(),
%%   <<"FixedPrice">> => float(),
%%   <<"InstanceCount">> => integer(),
%%   <<"InstanceTenancy">> => list(any()),
%%   <<"InstanceType">> => list(any()),
%%   <<"OfferingClass">> => list(any()),
%%   <<"OfferingType">> => list(any()),
%%   <<"ProductDescription">> => list(any()),
%%   <<"RecurringCharges">> => list(recurring_charge()),
%%   <<"ReservedInstancesId">> => string(),
%%   <<"Scope">> => list(any()),
%%   <<"Start">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"UsagePrice">> => float()
%% }
-type reserved_instances() :: #{binary() => any()}.

%% Example:
%% associate_ipam_resource_discovery_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamId">> := string(),
%%   <<"IpamResourceDiscoveryId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type associate_ipam_resource_discovery_request() :: #{binary() => any()}.

%% Example:
%% client_vpn_endpoint_status() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type client_vpn_endpoint_status() :: #{binary() => any()}.

%% Example:
%% launch_template_ebs_block_device() :: #{
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Encrypted">> => boolean(),
%%   <<"Iops">> => integer(),
%%   <<"KmsKeyId">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"Throughput">> => integer(),
%%   <<"VolumeInitializationRate">> => integer(),
%%   <<"VolumeSize">> => integer(),
%%   <<"VolumeType">> => list(any())
%% }
-type launch_template_ebs_block_device() :: #{binary() => any()}.

%% Example:
%% route() :: #{
%%   <<"CarrierGatewayId">> => string(),
%%   <<"CoreNetworkArn">> => string(),
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"DestinationIpv6CidrBlock">> => string(),
%%   <<"DestinationPrefixListId">> => string(),
%%   <<"EgressOnlyInternetGatewayId">> => string(),
%%   <<"GatewayId">> => string(),
%%   <<"InstanceId">> => string(),
%%   <<"InstanceOwnerId">> => string(),
%%   <<"IpAddress">> => string(),
%%   <<"LocalGatewayId">> => string(),
%%   <<"NatGatewayId">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"OdbNetworkArn">> => string(),
%%   <<"Origin">> => list(any()),
%%   <<"State">> => list(any()),
%%   <<"TransitGatewayId">> => string(),
%%   <<"VpcPeeringConnectionId">> => string()
%% }
-type route() :: #{binary() => any()}.

%% Example:
%% mac_host() :: #{
%%   <<"HostId">> => string(),
%%   <<"MacOSLatestSupportedVersions">> => list(string())
%% }
-type mac_host() :: #{binary() => any()}.

%% Example:
%% describe_volumes_modifications_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VolumesModifications">> => list(volume_modification())
%% }
-type describe_volumes_modifications_result() :: #{binary() => any()}.

%% Example:
%% block_device_mapping_response() :: #{
%%   <<"DeviceName">> => string(),
%%   <<"Ebs">> => ebs_block_device_response(),
%%   <<"NoDevice">> => string(),
%%   <<"VirtualName">> => string()
%% }
-type block_device_mapping_response() :: #{binary() => any()}.

%% Example:
%% create_restore_image_task_request() :: #{
%%   <<"Bucket">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Name">> => string(),
%%   <<"ObjectKey">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_restore_image_task_request() :: #{binary() => any()}.

%% Example:
%% disassociate_instance_event_window_request() :: #{
%%   <<"AssociationTarget">> := instance_event_window_disassociation_request(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceEventWindowId">> := string()
%% }
-type disassociate_instance_event_window_request() :: #{binary() => any()}.

%% Example:
%% launch_template_private_dns_name_options() :: #{
%%   <<"EnableResourceNameDnsAAAARecord">> => boolean(),
%%   <<"EnableResourceNameDnsARecord">> => boolean(),
%%   <<"HostnameType">> => list(any())
%% }
-type launch_template_private_dns_name_options() :: #{binary() => any()}.

%% Example:
%% ip_permission() :: #{
%%   <<"FromPort">> => integer(),
%%   <<"IpProtocol">> => string(),
%%   <<"IpRanges">> => list(ip_range()),
%%   <<"Ipv6Ranges">> => list(ipv6_range()),
%%   <<"PrefixListIds">> => list(prefix_list_id()),
%%   <<"ToPort">> => integer(),
%%   <<"UserIdGroupPairs">> => list(user_id_group_pair())
%% }
-type ip_permission() :: #{binary() => any()}.

%% Example:
%% describe_classic_link_instances_result() :: #{
%%   <<"Instances">> => list(classic_link_instance()),
%%   <<"NextToken">> => string()
%% }
-type describe_classic_link_instances_result() :: #{binary() => any()}.

%% Example:
%% launch_template_placement_request() :: #{
%%   <<"Affinity">> => string(),
%%   <<"AvailabilityZone">> => string(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"HostId">> => string(),
%%   <<"HostResourceGroupArn">> => string(),
%%   <<"PartitionNumber">> => integer(),
%%   <<"SpreadDomain">> => string(),
%%   <<"Tenancy">> => list(any())
%% }
-type launch_template_placement_request() :: #{binary() => any()}.

%% Example:
%% describe_network_insights_access_scopes_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NetworkInsightsAccessScopeIds">> => list(string()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_insights_access_scopes_request() :: #{binary() => any()}.

%% Example:
%% client_connect_response_options() :: #{
%%   <<"Enabled">> => boolean(),
%%   <<"LambdaFunctionArn">> => string(),
%%   <<"Status">> => client_vpn_endpoint_attribute_status()
%% }
-type client_connect_response_options() :: #{binary() => any()}.

%% Example:
%% describe_ipam_resource_discoveries_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamResourceDiscoveryIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_resource_discoveries_request() :: #{binary() => any()}.

%% Example:
%% create_verified_access_group_result() :: #{
%%   <<"VerifiedAccessGroup">> => verified_access_group()
%% }
-type create_verified_access_group_result() :: #{binary() => any()}.

%% Example:
%% describe_fast_snapshot_restore_success_item() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"DisabledTime">> => non_neg_integer(),
%%   <<"DisablingTime">> => non_neg_integer(),
%%   <<"EnabledTime">> => non_neg_integer(),
%%   <<"EnablingTime">> => non_neg_integer(),
%%   <<"OptimizingTime">> => non_neg_integer(),
%%   <<"OwnerAlias">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"StateTransitionReason">> => string()
%% }
-type describe_fast_snapshot_restore_success_item() :: #{binary() => any()}.

%% Example:
%% modify_spot_fleet_request_response() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_spot_fleet_request_response() :: #{binary() => any()}.

%% Example:
%% maintenance_details() :: #{
%%   <<"LastMaintenanceApplied">> => non_neg_integer(),
%%   <<"MaintenanceAutoAppliedAfter">> => non_neg_integer(),
%%   <<"PendingMaintenance">> => string()
%% }
-type maintenance_details() :: #{binary() => any()}.

%% Example:
%% attach_volume_request() :: #{
%%   <<"Device">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"VolumeId">> := string()
%% }
-type attach_volume_request() :: #{binary() => any()}.

%% Example:
%% create_egress_only_internet_gateway_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VpcId">> := string()
%% }
-type create_egress_only_internet_gateway_request() :: #{binary() => any()}.

%% Example:
%% accept_transit_gateway_multicast_domain_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SubnetIds">> => list(string()),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayMulticastDomainId">> => string()
%% }
-type accept_transit_gateway_multicast_domain_associations_request() :: #{binary() => any()}.

%% Example:
%% describe_spot_fleet_requests_response() :: #{
%%   <<"NextToken">> => string(),
%%   <<"SpotFleetRequestConfigs">> => list(spot_fleet_request_config())
%% }
-type describe_spot_fleet_requests_response() :: #{binary() => any()}.

%% Example:
%% network_acl_association() :: #{
%%   <<"NetworkAclAssociationId">> => string(),
%%   <<"NetworkAclId">> => string(),
%%   <<"SubnetId">> => string()
%% }
-type network_acl_association() :: #{binary() => any()}.

%% Example:
%% register_image_result() :: #{
%%   <<"ImageId">> => string()
%% }
-type register_image_result() :: #{binary() => any()}.

%% Example:
%% describe_traffic_mirror_sessions_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TrafficMirrorSessions">> => list(traffic_mirror_session())
%% }
-type describe_traffic_mirror_sessions_result() :: #{binary() => any()}.

%% Example:
%% media_accelerator_info() :: #{
%%   <<"Accelerators">> => list(media_device_info()),
%%   <<"TotalMediaMemoryInMiB">> => integer()
%% }
-type media_accelerator_info() :: #{binary() => any()}.

%% Example:
%% launch_template_instance_metadata_options() :: #{
%%   <<"HttpEndpoint">> => list(any()),
%%   <<"HttpProtocolIpv6">> => list(any()),
%%   <<"HttpPutResponseHopLimit">> => integer(),
%%   <<"HttpTokens">> => list(any()),
%%   <<"InstanceMetadataTags">> => list(any()),
%%   <<"State">> => list(any())
%% }
-type launch_template_instance_metadata_options() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_route_table_result() :: #{
%%   <<"TransitGatewayRouteTable">> => transit_gateway_route_table()
%% }
-type create_transit_gateway_route_table_result() :: #{binary() => any()}.

%% Example:
%% baseline_performance_factors() :: #{
%%   <<"Cpu">> => cpu_performance_factor()
%% }
-type baseline_performance_factors() :: #{binary() => any()}.

%% Example:
%% modify_instance_metadata_defaults_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"HttpEndpoint">> => list(any()),
%%   <<"HttpPutResponseHopLimit">> => integer(),
%%   <<"HttpTokens">> => list(any()),
%%   <<"InstanceMetadataTags">> => list(any())
%% }
-type modify_instance_metadata_defaults_request() :: #{binary() => any()}.

%% Example:
%% replace_network_acl_entry_request() :: #{
%%   <<"CidrBlock">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Egress">> := boolean(),
%%   <<"IcmpTypeCode">> => icmp_type_code(),
%%   <<"Ipv6CidrBlock">> => string(),
%%   <<"NetworkAclId">> := string(),
%%   <<"PortRange">> => port_range(),
%%   <<"Protocol">> := string(),
%%   <<"RuleAction">> := list(any()),
%%   <<"RuleNumber">> := integer()
%% }
-type replace_network_acl_entry_request() :: #{binary() => any()}.

%% Example:
%% instance_private_ip_address() :: #{
%%   <<"Association">> => instance_network_interface_association(),
%%   <<"Primary">> => boolean(),
%%   <<"PrivateDnsName">> => string(),
%%   <<"PrivateIpAddress">> => string()
%% }
-type instance_private_ip_address() :: #{binary() => any()}.

%% Example:
%% egress_only_internet_gateway() :: #{
%%   <<"Attachments">> => list(internet_gateway_attachment()),
%%   <<"EgressOnlyInternetGatewayId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type egress_only_internet_gateway() :: #{binary() => any()}.

%% Example:
%% describe_host_reservations_result() :: #{
%%   <<"HostReservationSet">> => list(host_reservation()),
%%   <<"NextToken">> => string()
%% }
-type describe_host_reservations_result() :: #{binary() => any()}.

%% Example:
%% modify_instance_cpu_options_result() :: #{
%%   <<"CoreCount">> => integer(),
%%   <<"InstanceId">> => string(),
%%   <<"ThreadsPerCore">> => integer()
%% }
-type modify_instance_cpu_options_result() :: #{binary() => any()}.

%% Example:
%% rule_group_rule_options_pair() :: #{
%%   <<"RuleGroupArn">> => string(),
%%   <<"RuleOptions">> => list(rule_option())
%% }
-type rule_group_rule_options_pair() :: #{binary() => any()}.

%% Example:
%% describe_local_gateway_virtual_interface_groups_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"LocalGatewayVirtualInterfaceGroupIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateway_virtual_interface_groups_request() :: #{binary() => any()}.

%% Example:
%% accept_transit_gateway_vpc_attachment_result() :: #{
%%   <<"TransitGatewayVpcAttachment">> => transit_gateway_vpc_attachment()
%% }
-type accept_transit_gateway_vpc_attachment_result() :: #{binary() => any()}.

%% Example:
%% create_vpn_connection_result() :: #{
%%   <<"VpnConnection">> => vpn_connection()
%% }
-type create_vpn_connection_result() :: #{binary() => any()}.

%% Example:
%% describe_addresses_attribute_result() :: #{
%%   <<"Addresses">> => list(address_attribute()),
%%   <<"NextToken">> => string()
%% }
-type describe_addresses_attribute_result() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_instance_logging_configuration_request() :: #{
%%   <<"AccessLogs">> := verified_access_log_options(),
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessInstanceId">> := string()
%% }
-type modify_verified_access_instance_logging_configuration_request() :: #{binary() => any()}.

%% Example:
%% last_error() :: #{
%%   <<"Code">> => string(),
%%   <<"Message">> => string()
%% }
-type last_error() :: #{binary() => any()}.

%% Example:
%% associate_transit_gateway_route_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> := string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type associate_transit_gateway_route_table_request() :: #{binary() => any()}.

%% Example:
%% delete_ipam_scope_result() :: #{
%%   <<"IpamScope">> => ipam_scope()
%% }
-type delete_ipam_scope_result() :: #{binary() => any()}.

%% Example:
%% export_transit_gateway_routes_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"S3Bucket">> := string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type export_transit_gateway_routes_request() :: #{binary() => any()}.

%% Example:
%% resource_statement() :: #{
%%   <<"ResourceTypes">> => list(string()),
%%   <<"Resources">> => list(string())
%% }
-type resource_statement() :: #{binary() => any()}.

%% Example:
%% describe_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"InstanceIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_instances_request() :: #{binary() => any()}.

%% Example:
%% performance_factor_reference_request() :: #{
%%   <<"InstanceFamily">> => string()
%% }
-type performance_factor_reference_request() :: #{binary() => any()}.

%% Example:
%% delete_public_ipv4_pool_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"PoolId">> := string()
%% }
-type delete_public_ipv4_pool_request() :: #{binary() => any()}.

%% Example:
%% delete_vpc_peering_connection_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpcPeeringConnectionId">> := string()
%% }
-type delete_vpc_peering_connection_request() :: #{binary() => any()}.

%% Example:
%% packet_header_statement() :: #{
%%   <<"DestinationAddresses">> => list(string()),
%%   <<"DestinationPorts">> => list(string()),
%%   <<"DestinationPrefixLists">> => list(string()),
%%   <<"Protocols">> => list(list(any())()),
%%   <<"SourceAddresses">> => list(string()),
%%   <<"SourcePorts">> => list(string()),
%%   <<"SourcePrefixLists">> => list(string())
%% }
-type packet_header_statement() :: #{binary() => any()}.

%% Example:
%% modify_availability_zone_group_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_availability_zone_group_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_policy_table_entry() :: #{
%%   <<"PolicyRule">> => transit_gateway_policy_rule(),
%%   <<"PolicyRuleNumber">> => string(),
%%   <<"TargetRouteTableId">> => string()
%% }
-type transit_gateway_policy_table_entry() :: #{binary() => any()}.

%% Example:
%% local_gateway() :: #{
%%   <<"LocalGatewayId">> => string(),
%%   <<"OutpostArn">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type local_gateway() :: #{binary() => any()}.

%% Example:
%% describe_vpn_gateways_result() :: #{
%%   <<"VpnGateways">> => list(vpn_gateway())
%% }
-type describe_vpn_gateways_result() :: #{binary() => any()}.

%% Example:
%% traffic_mirror_port_range_request() :: #{
%%   <<"FromPort">> => integer(),
%%   <<"ToPort">> => integer()
%% }
-type traffic_mirror_port_range_request() :: #{binary() => any()}.

%% Example:
%% network_insights_access_scope() :: #{
%%   <<"CreatedDate">> => non_neg_integer(),
%%   <<"NetworkInsightsAccessScopeArn">> => string(),
%%   <<"NetworkInsightsAccessScopeId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"UpdatedDate">> => non_neg_integer()
%% }
-type network_insights_access_scope() :: #{binary() => any()}.

%% Example:
%% delete_nat_gateway_result() :: #{
%%   <<"NatGatewayId">> => string()
%% }
-type delete_nat_gateway_result() :: #{binary() => any()}.

%% Example:
%% validation_error() :: #{
%%   <<"Code">> => string(),
%%   <<"Message">> => string()
%% }
-type validation_error() :: #{binary() => any()}.

%% Example:
%% describe_client_vpn_routes_request() :: #{
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_client_vpn_routes_request() :: #{binary() => any()}.

%% Example:
%% operator_request() :: #{
%%   <<"Principal">> => string()
%% }
-type operator_request() :: #{binary() => any()}.

%% Example:
%% delete_traffic_mirror_filter_rule_result() :: #{
%%   <<"TrafficMirrorFilterRuleId">> => string()
%% }
-type delete_traffic_mirror_filter_rule_result() :: #{binary() => any()}.

%% Example:
%% modify_capacity_reservation_request() :: #{
%%   <<"Accept">> => boolean(),
%%   <<"AdditionalInfo">> => string(),
%%   <<"CapacityReservationId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EndDate">> => non_neg_integer(),
%%   <<"EndDateType">> => list(any()),
%%   <<"InstanceCount">> => integer(),
%%   <<"InstanceMatchCriteria">> => list(any())
%% }
-type modify_capacity_reservation_request() :: #{binary() => any()}.

%% Example:
%% launch_template_version() :: #{
%%   <<"CreateTime">> => non_neg_integer(),
%%   <<"CreatedBy">> => string(),
%%   <<"DefaultVersion">> => boolean(),
%%   <<"LaunchTemplateData">> => response_launch_template_data(),
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"Operator">> => operator_response(),
%%   <<"VersionDescription">> => string(),
%%   <<"VersionNumber">> => float()
%% }
-type launch_template_version() :: #{binary() => any()}.

%% Example:
%% disable_image_block_public_access_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type disable_image_block_public_access_request() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_route_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TransitGatewayId">> := string()
%% }
-type create_transit_gateway_route_table_request() :: #{binary() => any()}.

%% Example:
%% media_device_info() :: #{
%%   <<"Count">> => integer(),
%%   <<"Manufacturer">> => string(),
%%   <<"MemoryInfo">> => media_device_memory_info(),
%%   <<"Name">> => string()
%% }
-type media_device_info() :: #{binary() => any()}.

%% Example:
%% modify_vpc_attribute_request() :: #{
%%   <<"EnableDnsHostnames">> => attribute_boolean_value(),
%%   <<"EnableDnsSupport">> => attribute_boolean_value(),
%%   <<"EnableNetworkAddressUsageMetrics">> => attribute_boolean_value(),
%%   <<"VpcId">> := string()
%% }
-type modify_vpc_attribute_request() :: #{binary() => any()}.

%% Example:
%% network_insights_path() :: #{
%%   <<"CreatedDate">> => non_neg_integer(),
%%   <<"Destination">> => string(),
%%   <<"DestinationArn">> => string(),
%%   <<"DestinationIp">> => string(),
%%   <<"DestinationPort">> => integer(),
%%   <<"FilterAtDestination">> => path_filter(),
%%   <<"FilterAtSource">> => path_filter(),
%%   <<"NetworkInsightsPathArn">> => string(),
%%   <<"NetworkInsightsPathId">> => string(),
%%   <<"Protocol">> => list(any()),
%%   <<"Source">> => string(),
%%   <<"SourceArn">> => string(),
%%   <<"SourceIp">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type network_insights_path() :: #{binary() => any()}.

%% Example:
%% replace_iam_instance_profile_association_result() :: #{
%%   <<"IamInstanceProfileAssociation">> => iam_instance_profile_association()
%% }
-type replace_iam_instance_profile_association_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_route() :: #{
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"PrefixListId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"TransitGatewayAttachments">> => list(transit_gateway_route_attachment()),
%%   <<"TransitGatewayRouteTableAnnouncementId">> => string(),
%%   <<"Type">> => list(any())
%% }
-type transit_gateway_route() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_route_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayRouteTableId">> := string()
%% }
-type delete_local_gateway_route_table_request() :: #{binary() => any()}.

%% Example:
%% describe_verified_access_endpoints_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VerifiedAccessEndpoints">> => list(verified_access_endpoint())
%% }
-type describe_verified_access_endpoints_result() :: #{binary() => any()}.

%% Example:
%% describe_addresses_result() :: #{
%%   <<"Addresses">> => list(address())
%% }
-type describe_addresses_result() :: #{binary() => any()}.

%% Example:
%% locked_snapshots_info() :: #{
%%   <<"CoolOffPeriod">> => integer(),
%%   <<"CoolOffPeriodExpiresOn">> => non_neg_integer(),
%%   <<"LockCreatedOn">> => non_neg_integer(),
%%   <<"LockDuration">> => integer(),
%%   <<"LockDurationStartTime">> => non_neg_integer(),
%%   <<"LockExpiresOn">> => non_neg_integer(),
%%   <<"LockState">> => list(any()),
%%   <<"OwnerId">> => string(),
%%   <<"SnapshotId">> => string()
%% }
-type locked_snapshots_info() :: #{binary() => any()}.

%% Example:
%% modify_ipam_result() :: #{
%%   <<"Ipam">> => ipam()
%% }
-type modify_ipam_result() :: #{binary() => any()}.

%% Example:
%% get_console_output_result() :: #{
%%   <<"InstanceId">> => string(),
%%   <<"Output">> => string(),
%%   <<"Timestamp">> => non_neg_integer()
%% }
-type get_console_output_result() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_multicast_domains_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayMulticastDomainIds">> => list(string())
%% }
-type describe_transit_gateway_multicast_domains_request() :: #{binary() => any()}.

%% Example:
%% export_client_vpn_client_configuration_result() :: #{
%%   <<"ClientConfiguration">> => string()
%% }
-type export_client_vpn_client_configuration_result() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_route_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type delete_transit_gateway_route_table_request() :: #{binary() => any()}.

%% Example:
%% connection_tracking_specification() :: #{
%%   <<"TcpEstablishedTimeout">> => integer(),
%%   <<"UdpStreamTimeout">> => integer(),
%%   <<"UdpTimeout">> => integer()
%% }
-type connection_tracking_specification() :: #{binary() => any()}.

%% Example:
%% launch_template_enclave_options() :: #{
%%   <<"Enabled">> => boolean()
%% }
-type launch_template_enclave_options() :: #{binary() => any()}.

%% Example:
%% cancel_capacity_reservation_fleet_error() :: #{
%%   <<"Code">> => string(),
%%   <<"Message">> => string()
%% }
-type cancel_capacity_reservation_fleet_error() :: #{binary() => any()}.

%% Example:
%% get_ebs_default_kms_key_id_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type get_ebs_default_kms_key_id_request() :: #{binary() => any()}.

%% Example:
%% disassociate_trunk_interface_request() :: #{
%%   <<"AssociationId">> := string(),
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean()
%% }
-type disassociate_trunk_interface_request() :: #{binary() => any()}.

%% Example:
%% delete_nat_gateway_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NatGatewayId">> := string()
%% }
-type delete_nat_gateway_request() :: #{binary() => any()}.

%% Example:
%% associate_transit_gateway_route_table_result() :: #{
%%   <<"Association">> => transit_gateway_association()
%% }
-type associate_transit_gateway_route_table_result() :: #{binary() => any()}.

%% Example:
%% instance_export_details() :: #{
%%   <<"InstanceId">> => string(),
%%   <<"TargetEnvironment">> => list(any())
%% }
-type instance_export_details() :: #{binary() => any()}.

%% Example:
%% reservation() :: #{
%%   <<"Groups">> => list(group_identifier()),
%%   <<"Instances">> => list(instance()),
%%   <<"OwnerId">> => string(),
%%   <<"RequesterId">> => string(),
%%   <<"ReservationId">> => string()
%% }
-type reservation() :: #{binary() => any()}.

%% Example:
%% vpc_endpoint() :: #{
%%   <<"CreationTimestamp">> => non_neg_integer(),
%%   <<"DnsEntries">> => list(dns_entry()),
%%   <<"DnsOptions">> => dns_options(),
%%   <<"FailureReason">> => string(),
%%   <<"Groups">> => list(security_group_identifier()),
%%   <<"IpAddressType">> => list(any()),
%%   <<"Ipv4Prefixes">> => list(subnet_ip_prefixes()),
%%   <<"Ipv6Prefixes">> => list(subnet_ip_prefixes()),
%%   <<"LastError">> => last_error(),
%%   <<"NetworkInterfaceIds">> => list(string()),
%%   <<"OwnerId">> => string(),
%%   <<"PolicyDocument">> => string(),
%%   <<"PrivateDnsEnabled">> => boolean(),
%%   <<"RequesterManaged">> => boolean(),
%%   <<"ResourceConfigurationArn">> => string(),
%%   <<"RouteTableIds">> => list(string()),
%%   <<"ServiceName">> => string(),
%%   <<"ServiceNetworkArn">> => string(),
%%   <<"ServiceRegion">> => string(),
%%   <<"State">> => list(any()),
%%   <<"SubnetIds">> => list(string()),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcEndpointId">> => string(),
%%   <<"VpcEndpointType">> => list(any()),
%%   <<"VpcId">> => string()
%% }
-type vpc_endpoint() :: #{binary() => any()}.

%% Example:
%% deprovision_ipam_byoasn_result() :: #{
%%   <<"Byoasn">> => byoasn()
%% }
-type deprovision_ipam_byoasn_result() :: #{binary() => any()}.

%% Example:
%% spot_options() :: #{
%%   <<"AllocationStrategy">> => list(any()),
%%   <<"InstanceInterruptionBehavior">> => list(any()),
%%   <<"InstancePoolsToUseCount">> => integer(),
%%   <<"MaintenanceStrategies">> => fleet_spot_maintenance_strategies(),
%%   <<"MaxTotalPrice">> => string(),
%%   <<"MinTargetCapacity">> => integer(),
%%   <<"SingleAvailabilityZone">> => boolean(),
%%   <<"SingleInstanceType">> => boolean()
%% }
-type spot_options() :: #{binary() => any()}.

%% Example:
%% instance_event_window_time_range() :: #{
%%   <<"EndHour">> => integer(),
%%   <<"EndWeekDay">> => list(any()),
%%   <<"StartHour">> => integer(),
%%   <<"StartWeekDay">> => list(any())
%% }
-type instance_event_window_time_range() :: #{binary() => any()}.

%% Example:
%% response_launch_template_data() :: #{
%%   <<"Placement">> => launch_template_placement(),
%%   <<"Monitoring">> => launch_templates_monitoring(),
%%   <<"TagSpecifications">> => list(launch_template_tag_specification()),
%%   <<"NetworkPerformanceOptions">> => launch_template_network_performance_options(),
%%   <<"MaintenanceOptions">> => launch_template_instance_maintenance_options(),
%%   <<"NetworkInterfaces">> => list(launch_template_instance_network_interface_specification()),
%%   <<"KernelId">> => string(),
%%   <<"RamDiskId">> => string(),
%%   <<"DisableApiStop">> => boolean(),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"CreditSpecification">> => credit_specification(),
%%   <<"KeyName">> => string(),
%%   <<"BlockDeviceMappings">> => list(launch_template_block_device_mapping()),
%%   <<"PrivateDnsNameOptions">> => launch_template_private_dns_name_options(),
%%   <<"InstanceInitiatedShutdownBehavior">> => list(any()),
%%   <<"MetadataOptions">> => launch_template_instance_metadata_options(),
%%   <<"EnclaveOptions">> => launch_template_enclave_options(),
%%   <<"CapacityReservationSpecification">> => launch_template_capacity_reservation_specification_response(),
%%   <<"InstanceType">> => list(any()),
%%   <<"HibernationOptions">> => launch_template_hibernation_options(),
%%   <<"ElasticGpuSpecifications">> => list(elastic_gpu_specification_response()),
%%   <<"LicenseSpecifications">> => list(launch_template_license_configuration()),
%%   <<"CpuOptions">> => launch_template_cpu_options(),
%%   <<"ElasticInferenceAccelerators">> => list(launch_template_elastic_inference_accelerator_response()),
%%   <<"IamInstanceProfile">> => launch_template_iam_instance_profile_specification(),
%%   <<"InstanceRequirements">> => instance_requirements(),
%%   <<"UserData">> => string(),
%%   <<"SecurityGroups">> => list(string()),
%%   <<"DisableApiTermination">> => boolean(),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"Operator">> => operator_response(),
%%   <<"ImageId">> => string(),
%%   <<"InstanceMarketOptions">> => launch_template_instance_market_options()
%% }
-type response_launch_template_data() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_service_configurations_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"ServiceConfigurations">> => list(service_configuration())
%% }
-type describe_vpc_endpoint_service_configurations_result() :: #{binary() => any()}.

%% Example:
%% get_snapshot_block_public_access_state_result() :: #{
%%   <<"ManagedBy">> => list(any()),
%%   <<"State">> => list(any())
%% }
-type get_snapshot_block_public_access_state_result() :: #{binary() => any()}.

%% Example:
%% enable_aws_network_performance_metric_subscription_request() :: #{
%%   <<"Destination">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Metric">> => list(any()),
%%   <<"Source">> => string(),
%%   <<"Statistic">> => list(any())
%% }
-type enable_aws_network_performance_metric_subscription_request() :: #{binary() => any()}.

%% Example:
%% reject_vpc_endpoint_connections_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ServiceId">> := string(),
%%   <<"VpcEndpointIds">> := list(string())
%% }
-type reject_vpc_endpoint_connections_request() :: #{binary() => any()}.

%% Example:
%% import_volume_task_details() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"BytesConverted">> => float(),
%%   <<"Description">> => string(),
%%   <<"Image">> => disk_image_description(),
%%   <<"Volume">> => disk_image_volume_description()
%% }
-type import_volume_task_details() :: #{binary() => any()}.

%% Example:
%% flow_log() :: #{
%%   <<"CreationTime">> => non_neg_integer(),
%%   <<"DeliverCrossAccountRole">> => string(),
%%   <<"DeliverLogsErrorMessage">> => string(),
%%   <<"DeliverLogsPermissionArn">> => string(),
%%   <<"DeliverLogsStatus">> => string(),
%%   <<"DestinationOptions">> => destination_options_response(),
%%   <<"FlowLogId">> => string(),
%%   <<"FlowLogStatus">> => string(),
%%   <<"LogDestination">> => string(),
%%   <<"LogDestinationType">> => list(any()),
%%   <<"LogFormat">> => string(),
%%   <<"LogGroupName">> => string(),
%%   <<"MaxAggregationInterval">> => integer(),
%%   <<"ResourceId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"TrafficType">> => list(any())
%% }
-type flow_log() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_vpc_attachments_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayAttachmentIds">> => list(string())
%% }
-type describe_transit_gateway_vpc_attachments_request() :: #{binary() => any()}.

%% Example:
%% describe_verified_access_instances_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VerifiedAccessInstances">> => list(verified_access_instance())
%% }
-type describe_verified_access_instances_result() :: #{binary() => any()}.

%% Example:
%% network_interface_private_ip_address() :: #{
%%   <<"Association">> => network_interface_association(),
%%   <<"Primary">> => boolean(),
%%   <<"PrivateDnsName">> => string(),
%%   <<"PrivateIpAddress">> => string()
%% }
-type network_interface_private_ip_address() :: #{binary() => any()}.

%% Example:
%% describe_snapshots_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Snapshots">> => list(snapshot())
%% }
-type describe_snapshots_result() :: #{binary() => any()}.

%% Example:
%% instance_event_window_association_target() :: #{
%%   <<"DedicatedHostIds">> => list(string()),
%%   <<"InstanceIds">> => list(string()),
%%   <<"Tags">> => list(tag())
%% }
-type instance_event_window_association_target() :: #{binary() => any()}.

%% Example:
%% import_instance_launch_specification() :: #{
%%   <<"AdditionalInfo">> => string(),
%%   <<"Architecture">> => list(any()),
%%   <<"GroupIds">> => list(string()),
%%   <<"GroupNames">> => list(string()),
%%   <<"InstanceInitiatedShutdownBehavior">> => list(any()),
%%   <<"InstanceType">> => list(any()),
%%   <<"Monitoring">> => boolean(),
%%   <<"Placement">> => placement(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"SubnetId">> => string(),
%%   <<"UserData">> => user_data()
%% }
-type import_instance_launch_specification() :: #{binary() => any()}.

%% Example:
%% disable_ipam_organization_admin_account_result() :: #{
%%   <<"Success">> => boolean()
%% }
-type disable_ipam_organization_admin_account_result() :: #{binary() => any()}.

%% Example:
%% vpc_block_public_access_exclusion() :: #{
%%   <<"CreationTimestamp">> => non_neg_integer(),
%%   <<"DeletionTimestamp">> => non_neg_integer(),
%%   <<"ExclusionId">> => string(),
%%   <<"InternetGatewayExclusionMode">> => list(any()),
%%   <<"LastUpdateTimestamp">> => non_neg_integer(),
%%   <<"Reason">> => string(),
%%   <<"ResourceArn">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type vpc_block_public_access_exclusion() :: #{binary() => any()}.

%% Example:
%% launch_template_config() :: #{
%%   <<"LaunchTemplateSpecification">> => fleet_launch_template_specification(),
%%   <<"Overrides">> => list(launch_template_overrides())
%% }
-type launch_template_config() :: #{binary() => any()}.

%% Example:
%% capacity_block_extension_offering() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"CapacityBlockExtensionDurationHours">> => integer(),
%%   <<"CapacityBlockExtensionEndDate">> => non_neg_integer(),
%%   <<"CapacityBlockExtensionOfferingId">> => string(),
%%   <<"CapacityBlockExtensionStartDate">> => non_neg_integer(),
%%   <<"CurrencyCode">> => string(),
%%   <<"InstanceCount">> => integer(),
%%   <<"InstanceType">> => string(),
%%   <<"StartDate">> => non_neg_integer(),
%%   <<"Tenancy">> => list(any()),
%%   <<"UpfrontFee">> => string()
%% }
-type capacity_block_extension_offering() :: #{binary() => any()}.

%% Example:
%% reserved_instances_offering() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"CurrencyCode">> => list(any()),
%%   <<"Duration">> => float(),
%%   <<"FixedPrice">> => float(),
%%   <<"InstanceTenancy">> => list(any()),
%%   <<"InstanceType">> => list(any()),
%%   <<"Marketplace">> => boolean(),
%%   <<"OfferingClass">> => list(any()),
%%   <<"OfferingType">> => list(any()),
%%   <<"PricingDetails">> => list(pricing_detail()),
%%   <<"ProductDescription">> => list(any()),
%%   <<"RecurringCharges">> => list(recurring_charge()),
%%   <<"ReservedInstancesOfferingId">> => string(),
%%   <<"Scope">> => list(any()),
%%   <<"UsagePrice">> => float()
%% }
-type reserved_instances_offering() :: #{binary() => any()}.

%% Example:
%% provision_ipam_byoasn_result() :: #{
%%   <<"Byoasn">> => byoasn()
%% }
-type provision_ipam_byoasn_result() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_route_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayId">> := string(),
%%   <<"Mode">> => list(any()),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_local_gateway_route_table_request() :: #{binary() => any()}.

%% Example:
%% traffic_mirror_port_range() :: #{
%%   <<"FromPort">> => integer(),
%%   <<"ToPort">> => integer()
%% }
-type traffic_mirror_port_range() :: #{binary() => any()}.

%% Example:
%% security_group() :: #{
%%   <<"Description">> => string(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"IpPermissions">> => list(ip_permission()),
%%   <<"IpPermissionsEgress">> => list(ip_permission()),
%%   <<"OwnerId">> => string(),
%%   <<"SecurityGroupArn">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type security_group() :: #{binary() => any()}.

%% Example:
%% attribute_value() :: #{
%%   <<"Value">> => string()
%% }
-type attribute_value() :: #{binary() => any()}.

%% Example:
%% scheduled_instances_launch_specification() :: #{
%%   <<"BlockDeviceMappings">> => list(scheduled_instances_block_device_mapping()),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"IamInstanceProfile">> => scheduled_instances_iam_instance_profile(),
%%   <<"ImageId">> => string(),
%%   <<"InstanceType">> => string(),
%%   <<"KernelId">> => string(),
%%   <<"KeyName">> => string(),
%%   <<"Monitoring">> => scheduled_instances_monitoring(),
%%   <<"NetworkInterfaces">> => list(scheduled_instances_network_interface()),
%%   <<"Placement">> => scheduled_instances_placement(),
%%   <<"RamdiskId">> => string(),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"SubnetId">> => string(),
%%   <<"UserData">> => string()
%% }
-type scheduled_instances_launch_specification() :: #{binary() => any()}.

%% Example:
%% verified_access_instance_logging_configuration() :: #{
%%   <<"AccessLogs">> => verified_access_logs(),
%%   <<"VerifiedAccessInstanceId">> => string()
%% }
-type verified_access_instance_logging_configuration() :: #{binary() => any()}.

%% Example:
%% gpu_device_info() :: #{
%%   <<"Count">> => integer(),
%%   <<"Manufacturer">> => string(),
%%   <<"MemoryInfo">> => gpu_device_memory_info(),
%%   <<"Name">> => string()
%% }
-type gpu_device_info() :: #{binary() => any()}.

%% Example:
%% describe_internet_gateways_result() :: #{
%%   <<"InternetGateways">> => list(internet_gateway()),
%%   <<"NextToken">> => string()
%% }
-type describe_internet_gateways_result() :: #{binary() => any()}.

%% Example:
%% modify_security_group_rules_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_security_group_rules_result() :: #{binary() => any()}.

%% Example:
%% reset_network_interface_attribute_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkInterfaceId">> := string(),
%%   <<"SourceDestCheck">> => string()
%% }
-type reset_network_interface_attribute_request() :: #{binary() => any()}.

%% Example:
%% enable_allowed_images_settings_request() :: #{
%%   <<"AllowedImagesSettingsState">> := list(any()),
%%   <<"DryRun">> => boolean()
%% }
-type enable_allowed_images_settings_request() :: #{binary() => any()}.

%% Example:
%% analysis_component() :: #{
%%   <<"Arn">> => string(),
%%   <<"Id">> => string(),
%%   <<"Name">> => string()
%% }
-type analysis_component() :: #{binary() => any()}.

%% Example:
%% analysis_load_balancer_target() :: #{
%%   <<"Address">> => string(),
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"Instance">> => analysis_component(),
%%   <<"Port">> => integer()
%% }
-type analysis_load_balancer_target() :: #{binary() => any()}.

%% Example:
%% accept_transit_gateway_vpc_attachment_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> := string()
%% }
-type accept_transit_gateway_vpc_attachment_request() :: #{binary() => any()}.

%% Example:
%% ipv6_cidr_block() :: #{
%%   <<"Ipv6CidrBlock">> => string()
%% }
-type ipv6_cidr_block() :: #{binary() => any()}.

%% Example:
%% local_gateway_virtual_interface() :: #{
%%   <<"ConfigurationState">> => list(any()),
%%   <<"LocalAddress">> => string(),
%%   <<"LocalBgpAsn">> => integer(),
%%   <<"LocalGatewayId">> => string(),
%%   <<"LocalGatewayVirtualInterfaceArn">> => string(),
%%   <<"LocalGatewayVirtualInterfaceGroupId">> => string(),
%%   <<"LocalGatewayVirtualInterfaceId">> => string(),
%%   <<"OutpostLagId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"PeerAddress">> => string(),
%%   <<"PeerBgpAsn">> => integer(),
%%   <<"PeerBgpAsnExtended">> => float(),
%%   <<"Tags">> => list(tag()),
%%   <<"Vlan">> => integer()
%% }
-type local_gateway_virtual_interface() :: #{binary() => any()}.

%% Example:
%% describe_byoip_cidrs_result() :: #{
%%   <<"ByoipCidrs">> => list(byoip_cidr()),
%%   <<"NextToken">> => string()
%% }
-type describe_byoip_cidrs_result() :: #{binary() => any()}.

%% Example:
%% modify_traffic_mirror_session_result() :: #{
%%   <<"TrafficMirrorSession">> => traffic_mirror_session()
%% }
-type modify_traffic_mirror_session_result() :: #{binary() => any()}.

%% Example:
%% instance_status_summary() :: #{
%%   <<"Details">> => list(instance_status_details()),
%%   <<"Status">> => list(any())
%% }
-type instance_status_summary() :: #{binary() => any()}.

%% Example:
%% copy_fpga_image_result() :: #{
%%   <<"FpgaImageId">> => string()
%% }
-type copy_fpga_image_result() :: #{binary() => any()}.

%% Example:
%% phase2_encryption_algorithms_request_list_value() :: #{
%%   <<"Value">> => string()
%% }
-type phase2_encryption_algorithms_request_list_value() :: #{binary() => any()}.

%% Example:
%% describe_fast_snapshot_restores_result() :: #{
%%   <<"FastSnapshotRestores">> => list(describe_fast_snapshot_restore_success_item()),
%%   <<"NextToken">> => string()
%% }
-type describe_fast_snapshot_restores_result() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_route_table_vpc_association_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayRouteTableVpcAssociationId">> := string()
%% }
-type delete_local_gateway_route_table_vpc_association_request() :: #{binary() => any()}.

%% Example:
%% ebs_block_device() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Encrypted">> => boolean(),
%%   <<"Iops">> => integer(),
%%   <<"KmsKeyId">> => string(),
%%   <<"OutpostArn">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"Throughput">> => integer(),
%%   <<"VolumeInitializationRate">> => integer(),
%%   <<"VolumeSize">> => integer(),
%%   <<"VolumeType">> => list(any())
%% }
-type ebs_block_device() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_specification() :: #{
%%   <<"CapacityReservationPreference">> => list(any()),
%%   <<"CapacityReservationTarget">> => capacity_reservation_target()
%% }
-type capacity_reservation_specification() :: #{binary() => any()}.

%% Example:
%% path_statement_request() :: #{
%%   <<"PacketHeaderStatement">> => packet_header_statement_request(),
%%   <<"ResourceStatement">> => resource_statement_request()
%% }
-type path_statement_request() :: #{binary() => any()}.

%% Example:
%% launch_template_capacity_reservation_specification_request() :: #{
%%   <<"CapacityReservationPreference">> => list(any()),
%%   <<"CapacityReservationTarget">> => capacity_reservation_target()
%% }
-type launch_template_capacity_reservation_specification_request() :: #{binary() => any()}.

%% Example:
%% list_snapshots_in_recycle_bin_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Snapshots">> => list(snapshot_recycle_bin_info())
%% }
-type list_snapshots_in_recycle_bin_result() :: #{binary() => any()}.

%% Example:
%% describe_volume_status_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VolumeStatuses">> => list(volume_status_item())
%% }
-type describe_volume_status_result() :: #{binary() => any()}.

%% Example:
%% scheduled_instance() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"CreateDate">> => non_neg_integer(),
%%   <<"HourlyPrice">> => string(),
%%   <<"InstanceCount">> => integer(),
%%   <<"InstanceType">> => string(),
%%   <<"NetworkPlatform">> => string(),
%%   <<"NextSlotStartTime">> => non_neg_integer(),
%%   <<"Platform">> => string(),
%%   <<"PreviousSlotEndTime">> => non_neg_integer(),
%%   <<"Recurrence">> => scheduled_instance_recurrence(),
%%   <<"ScheduledInstanceId">> => string(),
%%   <<"SlotDurationInHours">> => integer(),
%%   <<"TermEndDate">> => non_neg_integer(),
%%   <<"TermStartDate">> => non_neg_integer(),
%%   <<"TotalScheduledInstanceHours">> => integer()
%% }
-type scheduled_instance() :: #{binary() => any()}.

%% Example:
%% delete_route_server_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"RouteServerId">> := string()
%% }
-type delete_route_server_request() :: #{binary() => any()}.

%% Example:
%% describe_stale_security_groups_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VpcId">> := string()
%% }
-type describe_stale_security_groups_request() :: #{binary() => any()}.

%% Example:
%% associate_trunk_interface_request() :: #{
%%   <<"BranchInterfaceId">> := string(),
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"GreKey">> => integer(),
%%   <<"TrunkInterfaceId">> := string(),
%%   <<"VlanId">> => integer()
%% }
-type associate_trunk_interface_request() :: #{binary() => any()}.

%% Example:
%% nat_gateway() :: #{
%%   <<"ConnectivityType">> => list(any()),
%%   <<"CreateTime">> => non_neg_integer(),
%%   <<"DeleteTime">> => non_neg_integer(),
%%   <<"FailureCode">> => string(),
%%   <<"FailureMessage">> => string(),
%%   <<"NatGatewayAddresses">> => list(nat_gateway_address()),
%%   <<"NatGatewayId">> => string(),
%%   <<"ProvisionedBandwidth">> => provisioned_bandwidth(),
%%   <<"State">> => list(any()),
%%   <<"SubnetId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type nat_gateway() :: #{binary() => any()}.

%% Example:
%% cancel_image_launch_permission_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string()
%% }
-type cancel_image_launch_permission_request() :: #{binary() => any()}.

%% Example:
%% get_verified_access_endpoint_targets_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VerifiedAccessEndpointTargets">> => list(verified_access_endpoint_target())
%% }
-type get_verified_access_endpoint_targets_result() :: #{binary() => any()}.

%% Example:
%% launch_template_private_dns_name_options_request() :: #{
%%   <<"EnableResourceNameDnsAAAARecord">> => boolean(),
%%   <<"EnableResourceNameDnsARecord">> => boolean(),
%%   <<"HostnameType">> => list(any())
%% }
-type launch_template_private_dns_name_options_request() :: #{binary() => any()}.

%% Example:
%% unsuccessful_item() :: #{
%%   <<"Error">> => unsuccessful_item_error(),
%%   <<"ResourceId">> => string()
%% }
-type unsuccessful_item() :: #{binary() => any()}.

%% Example:
%% create_vpc_endpoint_service_configuration_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"ServiceConfiguration">> => service_configuration()
%% }
-type create_vpc_endpoint_service_configuration_result() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_route_table_propagations_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayRouteTablePropagations">> => list(transit_gateway_route_table_propagation())
%% }
-type get_transit_gateway_route_table_propagations_result() :: #{binary() => any()}.

%% Example:
%% pool_cidr_block() :: #{
%%   <<"Cidr">> => string()
%% }
-type pool_cidr_block() :: #{binary() => any()}.

%% Example:
%% enable_image_deregistration_protection_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string(),
%%   <<"WithCooldown">> => boolean()
%% }
-type enable_image_deregistration_protection_request() :: #{binary() => any()}.

%% Example:
%% modify_ipam_scope_result() :: #{
%%   <<"IpamScope">> => ipam_scope()
%% }
-type modify_ipam_scope_result() :: #{binary() => any()}.

%% Example:
%% snapshot_disk_container() :: #{
%%   <<"Description">> => string(),
%%   <<"Format">> => string(),
%%   <<"Url">> => string(),
%%   <<"UserBucket">> => user_bucket()
%% }
-type snapshot_disk_container() :: #{binary() => any()}.

%% Example:
%% describe_instance_type_offerings_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"LocationType">> => list(any()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_type_offerings_request() :: #{binary() => any()}.

%% Example:
%% data_query() :: #{
%%   <<"Destination">> => string(),
%%   <<"Id">> => string(),
%%   <<"Metric">> => list(any()),
%%   <<"Period">> => list(any()),
%%   <<"Source">> => string(),
%%   <<"Statistic">> => list(any())
%% }
-type data_query() :: #{binary() => any()}.

%% Example:
%% describe_route_server_peers_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"RouteServerPeerIds">> => list(string())
%% }
-type describe_route_server_peers_request() :: #{binary() => any()}.

%% Example:
%% describe_verified_access_trust_providers_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VerifiedAccessTrustProviders">> => list(verified_access_trust_provider())
%% }
-type describe_verified_access_trust_providers_result() :: #{binary() => any()}.

%% Example:
%% client_vpn_connection_status() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type client_vpn_connection_status() :: #{binary() => any()}.

%% Example:
%% image_metadata() :: #{
%%   <<"CreationDate">> => string(),
%%   <<"DeprecationTime">> => string(),
%%   <<"ImageAllowed">> => boolean(),
%%   <<"ImageId">> => string(),
%%   <<"ImageOwnerAlias">> => string(),
%%   <<"IsPublic">> => boolean(),
%%   <<"Name">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => list(any())
%% }
-type image_metadata() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_prefix_list_references_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayPrefixListReferences">> => list(transit_gateway_prefix_list_reference())
%% }
-type get_transit_gateway_prefix_list_references_result() :: #{binary() => any()}.

%% Example:
%% disk_image_description() :: #{
%%   <<"Checksum">> => string(),
%%   <<"Format">> => list(any()),
%%   <<"ImportManifestUrl">> => string(),
%%   <<"Size">> => float()
%% }
-type disk_image_description() :: #{binary() => any()}.

%% Example:
%% create_traffic_mirror_session_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkInterfaceId">> := string(),
%%   <<"PacketLength">> => integer(),
%%   <<"SessionNumber">> := integer(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TrafficMirrorFilterId">> := string(),
%%   <<"TrafficMirrorTargetId">> := string(),
%%   <<"VirtualNetworkId">> => integer()
%% }
-type create_traffic_mirror_session_request() :: #{binary() => any()}.

%% Example:
%% create_vpn_connection_route_request() :: #{
%%   <<"DestinationCidrBlock">> := string(),
%%   <<"VpnConnectionId">> := string()
%% }
-type create_vpn_connection_route_request() :: #{binary() => any()}.

%% Example:
%% carrier_gateway() :: #{
%%   <<"CarrierGatewayId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type carrier_gateway() :: #{binary() => any()}.

%% Example:
%% authorize_client_vpn_ingress_result() :: #{
%%   <<"Status">> => client_vpn_authorization_rule_status()
%% }
-type authorize_client_vpn_ingress_result() :: #{binary() => any()}.

%% Example:
%% reject_vpc_endpoint_connections_result() :: #{
%%   <<"Unsuccessful">> => list(unsuccessful_item())
%% }
-type reject_vpc_endpoint_connections_result() :: #{binary() => any()}.

%% Example:
%% describe_scheduled_instances_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"ScheduledInstanceSet">> => list(scheduled_instance())
%% }
-type describe_scheduled_instances_result() :: #{binary() => any()}.

%% Example:
%% launch_template_overrides() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"InstanceRequirements">> => instance_requirements(),
%%   <<"InstanceType">> => list(any()),
%%   <<"Priority">> => float(),
%%   <<"SpotPrice">> => string(),
%%   <<"SubnetId">> => string(),
%%   <<"WeightedCapacity">> => float()
%% }
-type launch_template_overrides() :: #{binary() => any()}.

%% Example:
%% ipam_discovered_public_address() :: #{
%%   <<"Address">> => string(),
%%   <<"AddressAllocationId">> => string(),
%%   <<"AddressOwnerId">> => string(),
%%   <<"AddressRegion">> => string(),
%%   <<"AddressType">> => list(any()),
%%   <<"AssociationStatus">> => list(any()),
%%   <<"InstanceId">> => string(),
%%   <<"IpamResourceDiscoveryId">> => string(),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"NetworkInterfaceDescription">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"PublicIpv4PoolId">> => string(),
%%   <<"SampleTime">> => non_neg_integer(),
%%   <<"SecurityGroups">> => list(ipam_public_address_security_group()),
%%   <<"Service">> => list(any()),
%%   <<"ServiceResource">> => string(),
%%   <<"SubnetId">> => string(),
%%   <<"Tags">> => ipam_public_address_tags(),
%%   <<"VpcId">> => string()
%% }
-type ipam_discovered_public_address() :: #{binary() => any()}.

%% Example:
%% route_server_bgp_options() :: #{
%%   <<"PeerAsn">> => float(),
%%   <<"PeerLivenessDetection">> => list(any())
%% }
-type route_server_bgp_options() :: #{binary() => any()}.

%% Example:
%% key_pair() :: #{
%%   <<"KeyFingerprint">> => string(),
%%   <<"KeyMaterial">> => string(),
%%   <<"KeyName">> => string(),
%%   <<"KeyPairId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type key_pair() :: #{binary() => any()}.

%% Example:
%% describe_ipam_external_resource_verification_tokens_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamExternalResourceVerificationTokenIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_external_resource_verification_tokens_request() :: #{binary() => any()}.

%% Example:
%% describe_vpc_peering_connections_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VpcPeeringConnectionIds">> => list(string())
%% }
-type describe_vpc_peering_connections_request() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_vpc_attachments_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayVpcAttachments">> => list(transit_gateway_vpc_attachment())
%% }
-type describe_transit_gateway_vpc_attachments_result() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_attachment_propagations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayAttachmentId">> := string()
%% }
-type get_transit_gateway_attachment_propagations_request() :: #{binary() => any()}.

%% Example:
%% product_code() :: #{
%%   <<"ProductCodeId">> => string(),
%%   <<"ProductCodeType">> => list(any())
%% }
-type product_code() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_options_request() :: #{
%%   <<"UsageStrategy">> => list(any())
%% }
-type capacity_reservation_options_request() :: #{binary() => any()}.

%% Example:
%% delete_vpc_endpoint_service_configurations_result() :: #{
%%   <<"Unsuccessful">> => list(unsuccessful_item())
%% }
-type delete_vpc_endpoint_service_configurations_result() :: #{binary() => any()}.

%% Example:
%% accept_address_transfer_result() :: #{
%%   <<"AddressTransfer">> => address_transfer()
%% }
-type accept_address_transfer_result() :: #{binary() => any()}.

%% Example:
%% modify_vpc_peering_connection_options_request() :: #{
%%   <<"AccepterPeeringConnectionOptions">> => peering_connection_options_request(),
%%   <<"DryRun">> => boolean(),
%%   <<"RequesterPeeringConnectionOptions">> => peering_connection_options_request(),
%%   <<"VpcPeeringConnectionId">> := string()
%% }
-type modify_vpc_peering_connection_options_request() :: #{binary() => any()}.

%% Example:
%% filter() :: #{
%%   <<"Name">> => string(),
%%   <<"Values">> => list(string())
%% }
-type filter() :: #{binary() => any()}.

%% Example:
%% local_gateway_route_table_virtual_interface_group_association() :: #{
%%   <<"LocalGatewayId">> => string(),
%%   <<"LocalGatewayRouteTableArn">> => string(),
%%   <<"LocalGatewayRouteTableId">> => string(),
%%   <<"LocalGatewayRouteTableVirtualInterfaceGroupAssociationId">> => string(),
%%   <<"LocalGatewayVirtualInterfaceGroupId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type local_gateway_route_table_virtual_interface_group_association() :: #{binary() => any()}.

%% Example:
%% public_ip_dns_name_options() :: #{
%%   <<"DnsHostnameType">> => string(),
%%   <<"PublicDualStackDnsName">> => string(),
%%   <<"PublicIpv4DnsName">> => string(),
%%   <<"PublicIpv6DnsName">> => string()
%% }
-type public_ip_dns_name_options() :: #{binary() => any()}.

%% Example:
%% service_type_detail() :: #{
%%   <<"ServiceType">> => list(any())
%% }
-type service_type_detail() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_prefix_list_reference_result() :: #{
%%   <<"TransitGatewayPrefixListReference">> => transit_gateway_prefix_list_reference()
%% }
-type create_transit_gateway_prefix_list_reference_result() :: #{binary() => any()}.

%% Example:
%% placement() :: #{
%%   <<"Affinity">> => string(),
%%   <<"AvailabilityZone">> => string(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"HostId">> => string(),
%%   <<"HostResourceGroupArn">> => string(),
%%   <<"PartitionNumber">> => integer(),
%%   <<"SpreadDomain">> => string(),
%%   <<"Tenancy">> => list(any())
%% }
-type placement() :: #{binary() => any()}.

%% Example:
%% deprovision_ipam_pool_cidr_request() :: #{
%%   <<"Cidr">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamPoolId">> := string()
%% }
-type deprovision_ipam_pool_cidr_request() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_connect_peers_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayConnectPeers">> => list(transit_gateway_connect_peer())
%% }
-type describe_transit_gateway_connect_peers_result() :: #{binary() => any()}.

%% Example:
%% instance_state() :: #{
%%   <<"Code">> => integer(),
%%   <<"Name">> => list(any())
%% }
-type instance_state() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_connect_peer_request() :: #{
%%   <<"BgpOptions">> => transit_gateway_connect_request_bgp_options(),
%%   <<"DryRun">> => boolean(),
%%   <<"InsideCidrBlocks">> := list(string()),
%%   <<"PeerAddress">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TransitGatewayAddress">> => string(),
%%   <<"TransitGatewayAttachmentId">> := string()
%% }
-type create_transit_gateway_connect_peer_request() :: #{binary() => any()}.

%% Example:
%% describe_instance_event_notification_attributes_result() :: #{
%%   <<"InstanceTagAttribute">> => instance_tag_notification_attribute()
%% }
-type describe_instance_event_notification_attributes_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_connect_peer_configuration() :: #{
%%   <<"BgpConfigurations">> => list(transit_gateway_attachment_bgp_configuration()),
%%   <<"InsideCidrBlocks">> => list(string()),
%%   <<"PeerAddress">> => string(),
%%   <<"Protocol">> => list(any()),
%%   <<"TransitGatewayAddress">> => string()
%% }
-type transit_gateway_connect_peer_configuration() :: #{binary() => any()}.

%% Example:
%% remove_ipam_organizational_unit_exclusion() :: #{
%%   <<"OrganizationsEntityPath">> => string()
%% }
-type remove_ipam_organizational_unit_exclusion() :: #{binary() => any()}.

%% Example:
%% purchase_capacity_block_extension_request() :: #{
%%   <<"CapacityBlockExtensionOfferingId">> := string(),
%%   <<"CapacityReservationId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type purchase_capacity_block_extension_request() :: #{binary() => any()}.

%% Example:
%% launch_template_ena_srd_udp_specification() :: #{
%%   <<"EnaSrdUdpEnabled">> => boolean()
%% }
-type launch_template_ena_srd_udp_specification() :: #{binary() => any()}.

%% Example:
%% authorize_security_group_egress_request() :: #{
%%   <<"CidrIp">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"FromPort">> => integer(),
%%   <<"GroupId">> := string(),
%%   <<"IpPermissions">> => list(ip_permission()),
%%   <<"IpProtocol">> => string(),
%%   <<"SourceSecurityGroupName">> => string(),
%%   <<"SourceSecurityGroupOwnerId">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"ToPort">> => integer()
%% }
-type authorize_security_group_egress_request() :: #{binary() => any()}.

%% Example:
%% describe_outpost_lags_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"OutpostLags">> => list(outpost_lag())
%% }
-type describe_outpost_lags_result() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_connections_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VpcEndpointConnections">> => list(vpc_endpoint_connection())
%% }
-type describe_vpc_endpoint_connections_result() :: #{binary() => any()}.

%% Example:
%% revoke_security_group_ingress_request() :: #{
%%   <<"CidrIp">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"FromPort">> => integer(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"IpPermissions">> => list(ip_permission()),
%%   <<"IpProtocol">> => string(),
%%   <<"SecurityGroupRuleIds">> => list(string()),
%%   <<"SourceSecurityGroupName">> => string(),
%%   <<"SourceSecurityGroupOwnerId">> => string(),
%%   <<"ToPort">> => integer()
%% }
-type revoke_security_group_ingress_request() :: #{binary() => any()}.

%% Example:
%% enable_address_transfer_result() :: #{
%%   <<"AddressTransfer">> => address_transfer()
%% }
-type enable_address_transfer_result() :: #{binary() => any()}.

%% Example:
%% describe_network_insights_access_scope_analyses_request() :: #{
%%   <<"AnalysisStartTimeBegin">> => non_neg_integer(),
%%   <<"AnalysisStartTimeEnd">> => non_neg_integer(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NetworkInsightsAccessScopeAnalysisIds">> => list(string()),
%%   <<"NetworkInsightsAccessScopeId">> => string(),
%%   <<"NextToken">> => string()
%% }
-type describe_network_insights_access_scope_analyses_request() :: #{binary() => any()}.

%% Example:
%% service_detail() :: #{
%%   <<"AcceptanceRequired">> => boolean(),
%%   <<"AvailabilityZones">> => list(string()),
%%   <<"BaseEndpointDnsNames">> => list(string()),
%%   <<"ManagesVpcEndpoints">> => boolean(),
%%   <<"Owner">> => string(),
%%   <<"PayerResponsibility">> => list(any()),
%%   <<"PrivateDnsName">> => string(),
%%   <<"PrivateDnsNameVerificationState">> => list(any()),
%%   <<"PrivateDnsNames">> => list(private_dns_details()),
%%   <<"ServiceId">> => string(),
%%   <<"ServiceName">> => string(),
%%   <<"ServiceRegion">> => string(),
%%   <<"ServiceType">> => list(service_type_detail()),
%%   <<"SupportedIpAddressTypes">> => list(list(any())()),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcEndpointPolicySupported">> => boolean()
%% }
-type service_detail() :: #{binary() => any()}.

%% Example:
%% modify_launch_template_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DefaultVersion">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string()
%% }
-type modify_launch_template_request() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_connects_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayConnects">> => list(transit_gateway_connect())
%% }
-type describe_transit_gateway_connects_result() :: #{binary() => any()}.

%% Example:
%% start_vpc_endpoint_service_private_dns_verification_result() :: #{
%%   <<"ReturnValue">> => boolean()
%% }
-type start_vpc_endpoint_service_private_dns_verification_result() :: #{binary() => any()}.

%% Example:
%% describe_snapshot_attribute_request() :: #{
%%   <<"Attribute">> := list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"SnapshotId">> := string()
%% }
-type describe_snapshot_attribute_request() :: #{binary() => any()}.

%% Example:
%% capacity_allocation() :: #{
%%   <<"AllocationType">> => list(any()),
%%   <<"Count">> => integer()
%% }
-type capacity_allocation() :: #{binary() => any()}.

%% Example:
%% describe_subnets_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"SubnetIds">> => list(string())
%% }
-type describe_subnets_request() :: #{binary() => any()}.

%% Example:
%% create_image_result() :: #{
%%   <<"ImageId">> => string()
%% }
-type create_image_result() :: #{binary() => any()}.

%% Example:
%% peering_connection_options_request() :: #{
%%   <<"AllowDnsResolutionFromRemoteVpc">> => boolean(),
%%   <<"AllowEgressFromLocalClassicLinkToRemoteVpc">> => boolean(),
%%   <<"AllowEgressFromLocalVpcToRemoteClassicLink">> => boolean()
%% }
-type peering_connection_options_request() :: #{binary() => any()}.

%% Example:
%% disable_allowed_images_settings_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type disable_allowed_images_settings_request() :: #{binary() => any()}.

%% Example:
%% network_bandwidth_gbps_request() :: #{
%%   <<"Max">> => float(),
%%   <<"Min">> => float()
%% }
-type network_bandwidth_gbps_request() :: #{binary() => any()}.

%% Example:
%% describe_capacity_reservation_fleets_request() :: #{
%%   <<"CapacityReservationFleetIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_reservation_fleets_request() :: #{binary() => any()}.

%% Example:
%% assign_ipv6_addresses_result() :: #{
%%   <<"AssignedIpv6Addresses">> => list(string()),
%%   <<"AssignedIpv6Prefixes">> => list(string()),
%%   <<"NetworkInterfaceId">> => string()
%% }
-type assign_ipv6_addresses_result() :: #{binary() => any()}.

%% Example:
%% modify_vpc_block_public_access_exclusion_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ExclusionId">> := string(),
%%   <<"InternetGatewayExclusionMode">> := list(any())
%% }
-type modify_vpc_block_public_access_exclusion_request() :: #{binary() => any()}.

%% Example:
%% get_coip_pool_usage_result() :: #{
%%   <<"CoipAddressUsages">> => list(coip_address_usage()),
%%   <<"CoipPoolId">> => string(),
%%   <<"LocalGatewayRouteTableId">> => string(),
%%   <<"NextToken">> => string()
%% }
-type get_coip_pool_usage_result() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_trust_provider_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DeviceOptions">> => modify_verified_access_trust_provider_device_options(),
%%   <<"DryRun">> => boolean(),
%%   <<"NativeApplicationOidcOptions">> => modify_verified_access_native_application_oidc_options(),
%%   <<"OidcOptions">> => modify_verified_access_trust_provider_oidc_options(),
%%   <<"SseSpecification">> => verified_access_sse_specification_request(),
%%   <<"VerifiedAccessTrustProviderId">> := string()
%% }
-type modify_verified_access_trust_provider_request() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_route_table_propagations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type get_transit_gateway_route_table_propagations_request() :: #{binary() => any()}.

%% Example:
%% delete_public_ipv4_pool_result() :: #{
%%   <<"ReturnValue">> => boolean()
%% }
-type delete_public_ipv4_pool_result() :: #{binary() => any()}.

%% Example:
%% get_launch_template_data_result() :: #{
%%   <<"LaunchTemplateData">> => response_launch_template_data()
%% }
-type get_launch_template_data_result() :: #{binary() => any()}.

%% Example:
%% describe_vpc_block_public_access_options_result() :: #{
%%   <<"VpcBlockPublicAccessOptions">> => vpc_block_public_access_options()
%% }
-type describe_vpc_block_public_access_options_result() :: #{binary() => any()}.

%% Example:
%% image_recycle_bin_info() :: #{
%%   <<"Description">> => string(),
%%   <<"ImageId">> => string(),
%%   <<"Name">> => string(),
%%   <<"RecycleBinEnterTime">> => non_neg_integer(),
%%   <<"RecycleBinExitTime">> => non_neg_integer()
%% }
-type image_recycle_bin_info() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_route_table_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type get_transit_gateway_route_table_associations_request() :: #{binary() => any()}.

%% Example:
%% export_client_vpn_client_certificate_revocation_list_result() :: #{
%%   <<"CertificateRevocationList">> => string(),
%%   <<"Status">> => client_certificate_revocation_list_status()
%% }
-type export_client_vpn_client_certificate_revocation_list_result() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_route_table_virtual_interface_group_association_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayRouteTableId">> := string(),
%%   <<"LocalGatewayVirtualInterfaceGroupId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_local_gateway_route_table_virtual_interface_group_association_request() :: #{binary() => any()}.

%% Example:
%% describe_capacity_block_extension_history_request() :: #{
%%   <<"CapacityReservationIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_block_extension_history_request() :: #{binary() => any()}.

%% Example:
%% network_info() :: #{
%%   <<"BandwidthWeightings">> => list(list(any())()),
%%   <<"DefaultNetworkCardIndex">> => integer(),
%%   <<"EfaInfo">> => efa_info(),
%%   <<"EfaSupported">> => boolean(),
%%   <<"EnaSrdSupported">> => boolean(),
%%   <<"EnaSupport">> => list(any()),
%%   <<"EncryptionInTransitSupported">> => boolean(),
%%   <<"FlexibleEnaQueuesSupport">> => list(any()),
%%   <<"Ipv4AddressesPerInterface">> => integer(),
%%   <<"Ipv6AddressesPerInterface">> => integer(),
%%   <<"Ipv6Supported">> => boolean(),
%%   <<"MaximumNetworkCards">> => integer(),
%%   <<"MaximumNetworkInterfaces">> => integer(),
%%   <<"NetworkCards">> => list(network_card_info()),
%%   <<"NetworkPerformance">> => string()
%% }
-type network_info() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_connect_result() :: #{
%%   <<"TransitGatewayConnect">> => transit_gateway_connect()
%% }
-type create_transit_gateway_connect_result() :: #{binary() => any()}.

%% Example:
%% host() :: #{
%%   <<"AllocationTime">> => non_neg_integer(),
%%   <<"AllowsMultipleInstanceTypes">> => list(any()),
%%   <<"AssetId">> => string(),
%%   <<"AutoPlacement">> => list(any()),
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"AvailableCapacity">> => available_capacity(),
%%   <<"ClientToken">> => string(),
%%   <<"HostId">> => string(),
%%   <<"HostMaintenance">> => list(any()),
%%   <<"HostProperties">> => host_properties(),
%%   <<"HostRecovery">> => list(any()),
%%   <<"HostReservationId">> => string(),
%%   <<"Instances">> => list(host_instance()),
%%   <<"MemberOfServiceLinkedResourceGroup">> => boolean(),
%%   <<"OutpostArn">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"ReleaseTime">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type host() :: #{binary() => any()}.

%% Example:
%% describe_reserved_instances_offerings_request() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IncludeMarketplace">> => boolean(),
%%   <<"InstanceTenancy">> => list(any()),
%%   <<"InstanceType">> => list(any()),
%%   <<"MaxDuration">> => float(),
%%   <<"MaxInstanceCount">> => integer(),
%%   <<"MaxResults">> => integer(),
%%   <<"MinDuration">> => float(),
%%   <<"NextToken">> => string(),
%%   <<"OfferingClass">> => list(any()),
%%   <<"OfferingType">> => list(any()),
%%   <<"ProductDescription">> => list(any()),
%%   <<"ReservedInstancesOfferingIds">> => list(string())
%% }
-type describe_reserved_instances_offerings_request() :: #{binary() => any()}.

%% Example:
%% describe_client_vpn_target_networks_result() :: #{
%%   <<"ClientVpnTargetNetworks">> => list(target_network()),
%%   <<"NextToken">> => string()
%% }
-type describe_client_vpn_target_networks_result() :: #{binary() => any()}.

%% Example:
%% vpn_tunnel_options_specification() :: #{
%%   <<"DPDTimeoutAction">> => string(),
%%   <<"DPDTimeoutSeconds">> => integer(),
%%   <<"EnableTunnelLifecycleControl">> => boolean(),
%%   <<"IKEVersions">> => list(i_k_e_versions_request_list_value()),
%%   <<"LogOptions">> => vpn_tunnel_log_options_specification(),
%%   <<"Phase1DHGroupNumbers">> => list(phase1_d_h_group_numbers_request_list_value()),
%%   <<"Phase1EncryptionAlgorithms">> => list(phase1_encryption_algorithms_request_list_value()),
%%   <<"Phase1IntegrityAlgorithms">> => list(phase1_integrity_algorithms_request_list_value()),
%%   <<"Phase1LifetimeSeconds">> => integer(),
%%   <<"Phase2DHGroupNumbers">> => list(phase2_d_h_group_numbers_request_list_value()),
%%   <<"Phase2EncryptionAlgorithms">> => list(phase2_encryption_algorithms_request_list_value()),
%%   <<"Phase2IntegrityAlgorithms">> => list(phase2_integrity_algorithms_request_list_value()),
%%   <<"Phase2LifetimeSeconds">> => integer(),
%%   <<"PreSharedKey">> => string(),
%%   <<"RekeyFuzzPercentage">> => integer(),
%%   <<"RekeyMarginTimeSeconds">> => integer(),
%%   <<"ReplayWindowSize">> => integer(),
%%   <<"StartupAction">> => string(),
%%   <<"TunnelInsideCidr">> => string(),
%%   <<"TunnelInsideIpv6Cidr">> => string()
%% }
-type vpn_tunnel_options_specification() :: #{binary() => any()}.

%% Example:
%% associate_transit_gateway_policy_table_result() :: #{
%%   <<"Association">> => transit_gateway_policy_table_association()
%% }
-type associate_transit_gateway_policy_table_result() :: #{binary() => any()}.

%% Example:
%% describe_vpc_block_public_access_exclusions_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VpcBlockPublicAccessExclusions">> => list(vpc_block_public_access_exclusion())
%% }
-type describe_vpc_block_public_access_exclusions_result() :: #{binary() => any()}.

%% Example:
%% allocate_hosts_result() :: #{
%%   <<"HostIds">> => list(string())
%% }
-type allocate_hosts_result() :: #{binary() => any()}.

%% Example:
%% describe_mac_modification_tasks_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MacModificationTaskIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_mac_modification_tasks_request() :: #{binary() => any()}.

%% Example:
%% describe_verified_access_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VerifiedAccessInstanceIds">> => list(string())
%% }
-type describe_verified_access_instances_request() :: #{binary() => any()}.

%% Example:
%% enable_image_deprecation_request() :: #{
%%   <<"DeprecateAt">> := non_neg_integer(),
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string()
%% }
-type enable_image_deprecation_request() :: #{binary() => any()}.

%% Example:
%% delete_queued_reserved_instances_error() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type delete_queued_reserved_instances_error() :: #{binary() => any()}.

%% Example:
%% describe_network_acls_result() :: #{
%%   <<"NetworkAcls">> => list(network_acl()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_acls_result() :: #{binary() => any()}.

%% Example:
%% verified_access_logs() :: #{
%%   <<"CloudWatchLogs">> => verified_access_log_cloud_watch_logs_destination(),
%%   <<"IncludeTrustContext">> => boolean(),
%%   <<"KinesisDataFirehose">> => verified_access_log_kinesis_data_firehose_destination(),
%%   <<"LogVersion">> => string(),
%%   <<"S3">> => verified_access_log_s3_destination()
%% }
-type verified_access_logs() :: #{binary() => any()}.

%% Example:
%% cancel_bundle_task_result() :: #{
%%   <<"BundleTask">> => bundle_task()
%% }
-type cancel_bundle_task_result() :: #{binary() => any()}.

%% Example:
%% describe_local_gateway_route_table_vpc_associations_result() :: #{
%%   <<"LocalGatewayRouteTableVpcAssociations">> => list(local_gateway_route_table_vpc_association()),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateway_route_table_vpc_associations_result() :: #{binary() => any()}.

%% Example:
%% delete_ipam_scope_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"IpamScopeId">> := string()
%% }
-type delete_ipam_scope_request() :: #{binary() => any()}.

%% Example:
%% accept_vpc_endpoint_connections_result() :: #{
%%   <<"Unsuccessful">> => list(unsuccessful_item())
%% }
-type accept_vpc_endpoint_connections_result() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_trust_provider_oidc_options() :: #{
%%   <<"AuthorizationEndpoint">> => string(),
%%   <<"ClientId">> => string(),
%%   <<"ClientSecret">> => string(),
%%   <<"Issuer">> => string(),
%%   <<"Scope">> => string(),
%%   <<"TokenEndpoint">> => string(),
%%   <<"UserInfoEndpoint">> => string()
%% }
-type modify_verified_access_trust_provider_oidc_options() :: #{binary() => any()}.

%% Example:
%% transit_gateway_policy_table_association() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"State">> => list(any()),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayPolicyTableId">> => string()
%% }
-type transit_gateway_policy_table_association() :: #{binary() => any()}.

%% Example:
%% import_client_vpn_client_certificate_revocation_list_request() :: #{
%%   <<"CertificateRevocationList">> := string(),
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type import_client_vpn_client_certificate_revocation_list_request() :: #{binary() => any()}.

%% Example:
%% attach_vpn_gateway_result() :: #{
%%   <<"VpcAttachment">> => vpc_attachment()
%% }
-type attach_vpn_gateway_result() :: #{binary() => any()}.

%% Example:
%% ebs_block_device_response() :: #{
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Encrypted">> => boolean(),
%%   <<"Iops">> => integer(),
%%   <<"KmsKeyId">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"Throughput">> => integer(),
%%   <<"VolumeSize">> => integer(),
%%   <<"VolumeType">> => list(any())
%% }
-type ebs_block_device_response() :: #{binary() => any()}.

%% Example:
%% attachment_ena_srd_udp_specification() :: #{
%%   <<"EnaSrdUdpEnabled">> => boolean()
%% }
-type attachment_ena_srd_udp_specification() :: #{binary() => any()}.

%% Example:
%% enable_fast_launch_result() :: #{
%%   <<"ImageId">> => string(),
%%   <<"LaunchTemplate">> => fast_launch_launch_template_specification_response(),
%%   <<"MaxParallelLaunches">> => integer(),
%%   <<"OwnerId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"SnapshotConfiguration">> => fast_launch_snapshot_configuration_response(),
%%   <<"State">> => list(any()),
%%   <<"StateTransitionReason">> => string(),
%%   <<"StateTransitionTime">> => non_neg_integer()
%% }
-type enable_fast_launch_result() :: #{binary() => any()}.

%% Example:
%% instance_capacity() :: #{
%%   <<"AvailableCapacity">> => integer(),
%%   <<"InstanceType">> => string(),
%%   <<"TotalCapacity">> => integer()
%% }
-type instance_capacity() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_route_request() :: #{
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"DestinationPrefixListId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayRouteTableId">> := string()
%% }
-type delete_local_gateway_route_request() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_connect_request_options() :: #{
%%   <<"Protocol">> => list(any())
%% }
-type create_transit_gateway_connect_request_options() :: #{binary() => any()}.

%% Example:
%% copy_snapshot_result() :: #{
%%   <<"SnapshotId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type copy_snapshot_result() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_endpoint_port_range() :: #{
%%   <<"FromPort">> => integer(),
%%   <<"ToPort">> => integer()
%% }
-type modify_verified_access_endpoint_port_range() :: #{binary() => any()}.

%% Example:
%% modify_local_gateway_route_result() :: #{
%%   <<"Route">> => local_gateway_route()
%% }
-type modify_local_gateway_route_result() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_services_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"ServiceDetails">> => list(service_detail()),
%%   <<"ServiceNames">> => list(string())
%% }
-type describe_vpc_endpoint_services_result() :: #{binary() => any()}.

%% Example:
%% enable_ipam_organization_admin_account_request() :: #{
%%   <<"DelegatedAdminAccountId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type enable_ipam_organization_admin_account_request() :: #{binary() => any()}.

%% Example:
%% enable_vpc_classic_link_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpcId">> := string()
%% }
-type enable_vpc_classic_link_request() :: #{binary() => any()}.

%% Example:
%% create_customer_gateway_request() :: #{
%%   <<"BgpAsn">> => integer(),
%%   <<"BgpAsnExtended">> => float(),
%%   <<"CertificateArn">> => string(),
%%   <<"DeviceName">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpAddress">> => string(),
%%   <<"PublicIp">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"Type">> := list(any())
%% }
-type create_customer_gateway_request() :: #{binary() => any()}.

%% Example:
%% describe_mac_hosts_request() :: #{
%%   <<"Filters">> => list(filter()),
%%   <<"HostIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_mac_hosts_request() :: #{binary() => any()}.

%% Example:
%% user_id_group_pair() :: #{
%%   <<"Description">> => string(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"PeeringStatus">> => string(),
%%   <<"UserId">> => string(),
%%   <<"VpcId">> => string(),
%%   <<"VpcPeeringConnectionId">> => string()
%% }
-type user_id_group_pair() :: #{binary() => any()}.

%% Example:
%% export_task() :: #{
%%   <<"Description">> => string(),
%%   <<"ExportTaskId">> => string(),
%%   <<"ExportToS3Task">> => export_to_s3_task(),
%%   <<"InstanceExportDetails">> => instance_export_details(),
%%   <<"State">> => list(any()),
%%   <<"StatusMessage">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type export_task() :: #{binary() => any()}.

%% Example:
%% create_ipam_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EnablePrivateGua">> => boolean(),
%%   <<"MeteredAccount">> => list(any()),
%%   <<"OperatingRegions">> => list(add_ipam_operating_region()),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"Tier">> => list(any())
%% }
-type create_ipam_request() :: #{binary() => any()}.

%% Example:
%% delete_network_insights_path_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkInsightsPathId">> := string()
%% }
-type delete_network_insights_path_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_multicast_group() :: #{
%%   <<"GroupIpAddress">> => string(),
%%   <<"GroupMember">> => boolean(),
%%   <<"GroupSource">> => boolean(),
%%   <<"MemberType">> => list(any()),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"ResourceId">> => string(),
%%   <<"ResourceOwnerId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"SourceType">> => list(any()),
%%   <<"SubnetId">> => string(),
%%   <<"TransitGatewayAttachmentId">> => string()
%% }
-type transit_gateway_multicast_group() :: #{binary() => any()}.

%% Example:
%% deregister_transit_gateway_multicast_group_sources_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupIpAddress">> => string(),
%%   <<"NetworkInterfaceIds">> => list(string()),
%%   <<"TransitGatewayMulticastDomainId">> => string()
%% }
-type deregister_transit_gateway_multicast_group_sources_request() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_options() :: #{
%%   <<"UsageStrategy">> => list(any())
%% }
-type capacity_reservation_options() :: #{binary() => any()}.

%% Example:
%% describe_network_acls_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NetworkAclIds">> => list(string()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_acls_request() :: #{binary() => any()}.

%% Example:
%% create_route_server_result() :: #{
%%   <<"RouteServer">> => route_server()
%% }
-type create_route_server_result() :: #{binary() => any()}.

%% Example:
%% modify_private_dns_name_options_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_private_dns_name_options_result() :: #{binary() => any()}.

%% Example:
%% verified_access_log_s3_destination() :: #{
%%   <<"BucketName">> => string(),
%%   <<"BucketOwner">> => string(),
%%   <<"DeliveryStatus">> => verified_access_log_delivery_status(),
%%   <<"Enabled">> => boolean(),
%%   <<"Prefix">> => string()
%% }
-type verified_access_log_s3_destination() :: #{binary() => any()}.

%% Example:
%% create_security_group_result() :: #{
%%   <<"GroupId">> => string(),
%%   <<"SecurityGroupArn">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type create_security_group_result() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_vpc_attachment_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Options">> => create_transit_gateway_vpc_attachment_request_options(),
%%   <<"SubnetIds">> := list(string()),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TransitGatewayId">> := string(),
%%   <<"VpcId">> := string()
%% }
-type create_transit_gateway_vpc_attachment_request() :: #{binary() => any()}.

%% Example:
%% get_verified_access_group_policy_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessGroupId">> := string()
%% }
-type get_verified_access_group_policy_request() :: #{binary() => any()}.

%% Example:
%% modify_transit_gateway_result() :: #{
%%   <<"TransitGateway">> => transit_gateway()
%% }
-type modify_transit_gateway_result() :: #{binary() => any()}.

%% Example:
%% describe_instance_image_metadata_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"InstanceIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_image_metadata_request() :: #{binary() => any()}.

%% Example:
%% describe_ipams_result() :: #{
%%   <<"Ipams">> => list(ipam()),
%%   <<"NextToken">> => string()
%% }
-type describe_ipams_result() :: #{binary() => any()}.

%% Example:
%% federated_authentication() :: #{
%%   <<"SamlProviderArn">> => string(),
%%   <<"SelfServiceSamlProviderArn">> => string()
%% }
-type federated_authentication() :: #{binary() => any()}.

%% Example:
%% spot_placement() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"Tenancy">> => list(any())
%% }
-type spot_placement() :: #{binary() => any()}.

%% Example:
%% route_server_bgp_status() :: #{
%%   <<"Status">> => list(any())
%% }
-type route_server_bgp_status() :: #{binary() => any()}.

%% Example:
%% describe_flow_logs_result() :: #{
%%   <<"FlowLogs">> => list(flow_log()),
%%   <<"NextToken">> => string()
%% }
-type describe_flow_logs_result() :: #{binary() => any()}.

%% Example:
%% tunnel_option() :: #{
%%   <<"DpdTimeoutAction">> => string(),
%%   <<"DpdTimeoutSeconds">> => integer(),
%%   <<"EnableTunnelLifecycleControl">> => boolean(),
%%   <<"IkeVersions">> => list(i_k_e_versions_list_value()),
%%   <<"LogOptions">> => vpn_tunnel_log_options(),
%%   <<"OutsideIpAddress">> => string(),
%%   <<"Phase1DHGroupNumbers">> => list(phase1_d_h_group_numbers_list_value()),
%%   <<"Phase1EncryptionAlgorithms">> => list(phase1_encryption_algorithms_list_value()),
%%   <<"Phase1IntegrityAlgorithms">> => list(phase1_integrity_algorithms_list_value()),
%%   <<"Phase1LifetimeSeconds">> => integer(),
%%   <<"Phase2DHGroupNumbers">> => list(phase2_d_h_group_numbers_list_value()),
%%   <<"Phase2EncryptionAlgorithms">> => list(phase2_encryption_algorithms_list_value()),
%%   <<"Phase2IntegrityAlgorithms">> => list(phase2_integrity_algorithms_list_value()),
%%   <<"Phase2LifetimeSeconds">> => integer(),
%%   <<"PreSharedKey">> => string(),
%%   <<"RekeyFuzzPercentage">> => integer(),
%%   <<"RekeyMarginTimeSeconds">> => integer(),
%%   <<"ReplayWindowSize">> => integer(),
%%   <<"StartupAction">> => string(),
%%   <<"TunnelInsideCidr">> => string(),
%%   <<"TunnelInsideIpv6Cidr">> => string()
%% }
-type tunnel_option() :: #{binary() => any()}.

%% Example:
%% update_security_group_rule_descriptions_egress_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"IpPermissions">> => list(ip_permission()),
%%   <<"SecurityGroupRuleDescriptions">> => list(security_group_rule_description())
%% }
-type update_security_group_rule_descriptions_egress_request() :: #{binary() => any()}.

%% Example:
%% apply_security_groups_to_client_vpn_target_network_request() :: #{
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"SecurityGroupIds">> := list(string()),
%%   <<"VpcId">> := string()
%% }
-type apply_security_groups_to_client_vpn_target_network_request() :: #{binary() => any()}.

%% Example:
%% get_verified_access_group_policy_result() :: #{
%%   <<"PolicyDocument">> => string(),
%%   <<"PolicyEnabled">> => boolean()
%% }
-type get_verified_access_group_policy_result() :: #{binary() => any()}.

%% Example:
%% route_server_route() :: #{
%%   <<"AsPaths">> => list(string()),
%%   <<"Med">> => integer(),
%%   <<"NextHopIp">> => string(),
%%   <<"Prefix">> => string(),
%%   <<"RouteInstallationDetails">> => list(route_server_route_installation_detail()),
%%   <<"RouteServerEndpointId">> => string(),
%%   <<"RouteServerPeerId">> => string(),
%%   <<"RouteStatus">> => list(any())
%% }
-type route_server_route() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_service_permissions_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"ServiceId">> := string()
%% }
-type describe_vpc_endpoint_service_permissions_request() :: #{binary() => any()}.

%% Example:
%% get_default_credit_specification_result() :: #{
%%   <<"InstanceFamilyCreditSpecification">> => instance_family_credit_specification()
%% }
-type get_default_credit_specification_result() :: #{binary() => any()}.

%% Example:
%% phase1_d_h_group_numbers_list_value() :: #{
%%   <<"Value">> => integer()
%% }
-type phase1_d_h_group_numbers_list_value() :: #{binary() => any()}.

%% Example:
%% restore_snapshot_tier_result() :: #{
%%   <<"IsPermanentRestore">> => boolean(),
%%   <<"RestoreDuration">> => integer(),
%%   <<"RestoreStartTime">> => non_neg_integer(),
%%   <<"SnapshotId">> => string()
%% }
-type restore_snapshot_tier_result() :: #{binary() => any()}.

%% Example:
%% associate_address_request() :: #{
%%   <<"AllocationId">> => string(),
%%   <<"AllowReassociation">> => boolean(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"PublicIp">> => string()
%% }
-type associate_address_request() :: #{binary() => any()}.

%% Example:
%% disassociate_transit_gateway_policy_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> := string(),
%%   <<"TransitGatewayPolicyTableId">> := string()
%% }
-type disassociate_transit_gateway_policy_table_request() :: #{binary() => any()}.

%% Example:
%% slot_start_time_range_request() :: #{
%%   <<"EarliestTime">> => non_neg_integer(),
%%   <<"LatestTime">> => non_neg_integer()
%% }
-type slot_start_time_range_request() :: #{binary() => any()}.

%% Example:
%% create_vpn_gateway_request() :: #{
%%   <<"AmazonSideAsn">> => float(),
%%   <<"AvailabilityZone">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"Type">> := list(any())
%% }
-type create_vpn_gateway_request() :: #{binary() => any()}.

%% Example:
%% advertise_byoip_cidr_result() :: #{
%%   <<"ByoipCidr">> => byoip_cidr()
%% }
-type advertise_byoip_cidr_result() :: #{binary() => any()}.

%% Example:
%% network_insights_access_scope_analysis() :: #{
%%   <<"AnalyzedEniCount">> => integer(),
%%   <<"EndDate">> => non_neg_integer(),
%%   <<"FindingsFound">> => list(any()),
%%   <<"NetworkInsightsAccessScopeAnalysisArn">> => string(),
%%   <<"NetworkInsightsAccessScopeAnalysisId">> => string(),
%%   <<"NetworkInsightsAccessScopeId">> => string(),
%%   <<"StartDate">> => non_neg_integer(),
%%   <<"Status">> => list(any()),
%%   <<"StatusMessage">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"WarningMessage">> => string()
%% }
-type network_insights_access_scope_analysis() :: #{binary() => any()}.

%% Example:
%% create_vpc_endpoint_connection_notification_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"ConnectionNotification">> => connection_notification()
%% }
-type create_vpc_endpoint_connection_notification_result() :: #{binary() => any()}.

%% Example:
%% delete_launch_template_versions_result() :: #{
%%   <<"SuccessfullyDeletedLaunchTemplateVersions">> => list(delete_launch_template_versions_response_success_item()),
%%   <<"UnsuccessfullyDeletedLaunchTemplateVersions">> => list(delete_launch_template_versions_response_error_item())
%% }
-type delete_launch_template_versions_result() :: #{binary() => any()}.

%% Example:
%% instance_metadata_options_response() :: #{
%%   <<"HttpEndpoint">> => list(any()),
%%   <<"HttpProtocolIpv6">> => list(any()),
%%   <<"HttpPutResponseHopLimit">> => integer(),
%%   <<"HttpTokens">> => list(any()),
%%   <<"InstanceMetadataTags">> => list(any()),
%%   <<"State">> => list(any())
%% }
-type instance_metadata_options_response() :: #{binary() => any()}.

%% Example:
%% describe_volume_attribute_result() :: #{
%%   <<"AutoEnableIO">> => attribute_boolean_value(),
%%   <<"ProductCodes">> => list(product_code()),
%%   <<"VolumeId">> => string()
%% }
-type describe_volume_attribute_result() :: #{binary() => any()}.

%% Example:
%% describe_instance_topology_result() :: #{
%%   <<"Instances">> => list(instance_topology()),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_topology_result() :: #{binary() => any()}.

%% Example:
%% verified_access_instance_custom_sub_domain() :: #{
%%   <<"Nameservers">> => list(string()),
%%   <<"SubDomain">> => string()
%% }
-type verified_access_instance_custom_sub_domain() :: #{binary() => any()}.

%% Example:
%% device_options() :: #{
%%   <<"PublicSigningKeyUrl">> => string(),
%%   <<"TenantId">> => string()
%% }
-type device_options() :: #{binary() => any()}.

%% Example:
%% describe_fast_launch_images_result() :: #{
%%   <<"FastLaunchImages">> => list(describe_fast_launch_images_success_item()),
%%   <<"NextToken">> => string()
%% }
-type describe_fast_launch_images_result() :: #{binary() => any()}.

%% Example:
%% fpga_info() :: #{
%%   <<"Fpgas">> => list(fpga_device_info()),
%%   <<"TotalFpgaMemoryInMiB">> => integer()
%% }
-type fpga_info() :: #{binary() => any()}.

%% Example:
%% create_volume_permission_modifications() :: #{
%%   <<"Add">> => list(create_volume_permission()),
%%   <<"Remove">> => list(create_volume_permission())
%% }
-type create_volume_permission_modifications() :: #{binary() => any()}.

%% Example:
%% client_login_banner_options() :: #{
%%   <<"BannerText">> => string(),
%%   <<"Enabled">> => boolean()
%% }
-type client_login_banner_options() :: #{binary() => any()}.

%% Example:
%% path_statement() :: #{
%%   <<"PacketHeaderStatement">> => packet_header_statement(),
%%   <<"ResourceStatement">> => resource_statement()
%% }
-type path_statement() :: #{binary() => any()}.

%% Example:
%% create_vpc_endpoint_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DnsOptions">> => dns_options_specification(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpAddressType">> => list(any()),
%%   <<"PolicyDocument">> => string(),
%%   <<"PrivateDnsEnabled">> => boolean(),
%%   <<"ResourceConfigurationArn">> => string(),
%%   <<"RouteTableIds">> => list(string()),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"ServiceName">> => string(),
%%   <<"ServiceNetworkArn">> => string(),
%%   <<"ServiceRegion">> => string(),
%%   <<"SubnetConfigurations">> => list(subnet_configuration()),
%%   <<"SubnetIds">> => list(string()),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VpcEndpointType">> => list(any()),
%%   <<"VpcId">> := string()
%% }
-type create_vpc_endpoint_request() :: #{binary() => any()}.

%% Example:
%% disable_transit_gateway_route_table_propagation_result() :: #{
%%   <<"Propagation">> => transit_gateway_propagation()
%% }
-type disable_transit_gateway_route_table_propagation_result() :: #{binary() => any()}.

%% Example:
%% traffic_mirror_target() :: #{
%%   <<"Description">> => string(),
%%   <<"GatewayLoadBalancerEndpointId">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"NetworkLoadBalancerArn">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"TrafficMirrorTargetId">> => string(),
%%   <<"Type">> => list(any())
%% }
-type traffic_mirror_target() :: #{binary() => any()}.

%% Example:
%% accept_transit_gateway_peering_attachment_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> := string()
%% }
-type accept_transit_gateway_peering_attachment_request() :: #{binary() => any()}.

%% Example:
%% describe_capacity_block_extension_history_result() :: #{
%%   <<"CapacityBlockExtensions">> => list(capacity_block_extension()),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_block_extension_history_result() :: #{binary() => any()}.

%% Example:
%% cancel_capacity_reservation_request() :: #{
%%   <<"CapacityReservationId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type cancel_capacity_reservation_request() :: #{binary() => any()}.

%% Example:
%% describe_mac_modification_tasks_result() :: #{
%%   <<"MacModificationTasks">> => list(mac_modification_task()),
%%   <<"NextToken">> => string()
%% }
-type describe_mac_modification_tasks_result() :: #{binary() => any()}.

%% Example:
%% export_image_result() :: #{
%%   <<"Description">> => string(),
%%   <<"DiskImageFormat">> => list(any()),
%%   <<"ExportImageTaskId">> => string(),
%%   <<"ImageId">> => string(),
%%   <<"Progress">> => string(),
%%   <<"RoleName">> => string(),
%%   <<"S3ExportLocation">> => export_task_s3_location(),
%%   <<"Status">> => string(),
%%   <<"StatusMessage">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type export_image_result() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_associations_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VpcEndpointAssociations">> => list(vpc_endpoint_association())
%% }
-type describe_vpc_endpoint_associations_result() :: #{binary() => any()}.

%% Example:
%% accelerator_total_memory_mi_b_request() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type accelerator_total_memory_mi_b_request() :: #{binary() => any()}.

%% Example:
%% load_permission() :: #{
%%   <<"Group">> => list(any()),
%%   <<"UserId">> => string()
%% }
-type load_permission() :: #{binary() => any()}.

%% Example:
%% create_capacity_reservation_by_splitting_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceCount">> := integer(),
%%   <<"SourceCapacityReservationId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_capacity_reservation_by_splitting_request() :: #{binary() => any()}.

%% Example:
%% port_range() :: #{
%%   <<"From">> => integer(),
%%   <<"To">> => integer()
%% }
-type port_range() :: #{binary() => any()}.

%% Example:
%% vpc_endpoint_connection() :: #{
%%   <<"CreationTimestamp">> => non_neg_integer(),
%%   <<"DnsEntries">> => list(dns_entry()),
%%   <<"GatewayLoadBalancerArns">> => list(string()),
%%   <<"IpAddressType">> => list(any()),
%%   <<"NetworkLoadBalancerArns">> => list(string()),
%%   <<"ServiceId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcEndpointConnectionId">> => string(),
%%   <<"VpcEndpointId">> => string(),
%%   <<"VpcEndpointOwner">> => string(),
%%   <<"VpcEndpointRegion">> => string(),
%%   <<"VpcEndpointState">> => list(any())
%% }
-type vpc_endpoint_connection() :: #{binary() => any()}.

%% Example:
%% attach_network_interface_request() :: #{
%%   <<"DeviceIndex">> := integer(),
%%   <<"DryRun">> => boolean(),
%%   <<"EnaQueueCount">> => integer(),
%%   <<"EnaSrdSpecification">> => ena_srd_specification(),
%%   <<"InstanceId">> := string(),
%%   <<"NetworkCardIndex">> => integer(),
%%   <<"NetworkInterfaceId">> := string()
%% }
-type attach_network_interface_request() :: #{binary() => any()}.

%% Example:
%% create_vpn_gateway_result() :: #{
%%   <<"VpnGateway">> => vpn_gateway()
%% }
-type create_vpn_gateway_result() :: #{binary() => any()}.

%% Example:
%% delete_traffic_mirror_session_result() :: #{
%%   <<"TrafficMirrorSessionId">> => string()
%% }
-type delete_traffic_mirror_session_result() :: #{binary() => any()}.

%% Example:
%% delete_verified_access_trust_provider_result() :: #{
%%   <<"VerifiedAccessTrustProvider">> => verified_access_trust_provider()
%% }
-type delete_verified_access_trust_provider_result() :: #{binary() => any()}.

%% Example:
%% cancel_declarative_policies_report_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type cancel_declarative_policies_report_result() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_attachment_propagations_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayAttachmentPropagations">> => list(transit_gateway_attachment_propagation())
%% }
-type get_transit_gateway_attachment_propagations_result() :: #{binary() => any()}.

%% Example:
%% describe_client_vpn_endpoints_result() :: #{
%%   <<"ClientVpnEndpoints">> => list(client_vpn_endpoint()),
%%   <<"NextToken">> => string()
%% }
-type describe_client_vpn_endpoints_result() :: #{binary() => any()}.

%% Example:
%% delete_client_vpn_endpoint_result() :: #{
%%   <<"Status">> => client_vpn_endpoint_status()
%% }
-type delete_client_vpn_endpoint_result() :: #{binary() => any()}.

%% Example:
%% cancel_reserved_instances_listing_request() :: #{
%%   <<"ReservedInstancesListingId">> := string()
%% }
-type cancel_reserved_instances_listing_request() :: #{binary() => any()}.

%% Example:
%% create_subnet_result() :: #{
%%   <<"Subnet">> => subnet()
%% }
-type create_subnet_result() :: #{binary() => any()}.

%% Example:
%% modify_vpn_tunnel_options_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"PreSharedKeyStorage">> => string(),
%%   <<"SkipTunnelReplacement">> => boolean(),
%%   <<"TunnelOptions">> := modify_vpn_tunnel_options_specification(),
%%   <<"VpnConnectionId">> := string(),
%%   <<"VpnTunnelOutsideIpAddress">> := string()
%% }
-type modify_vpn_tunnel_options_request() :: #{binary() => any()}.

%% Example:
%% instance_network_interface_attachment() :: #{
%%   <<"AttachTime">> => non_neg_integer(),
%%   <<"AttachmentId">> => string(),
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"DeviceIndex">> => integer(),
%%   <<"EnaQueueCount">> => integer(),
%%   <<"EnaSrdSpecification">> => instance_attachment_ena_srd_specification(),
%%   <<"NetworkCardIndex">> => integer(),
%%   <<"Status">> => list(any())
%% }
-type instance_network_interface_attachment() :: #{binary() => any()}.

%% Example:
%% instance_status_event() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Description">> => string(),
%%   <<"InstanceEventId">> => string(),
%%   <<"NotAfter">> => non_neg_integer(),
%%   <<"NotBefore">> => non_neg_integer(),
%%   <<"NotBeforeDeadline">> => non_neg_integer()
%% }
-type instance_status_event() :: #{binary() => any()}.

%% Example:
%% modify_instance_placement_request() :: #{
%%   <<"Affinity">> => list(any()),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"HostId">> => string(),
%%   <<"HostResourceGroupArn">> => string(),
%%   <<"InstanceId">> := string(),
%%   <<"PartitionNumber">> => integer(),
%%   <<"Tenancy">> => list(any())
%% }
-type modify_instance_placement_request() :: #{binary() => any()}.

%% Example:
%% describe_security_group_vpc_associations_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"SecurityGroupVpcAssociations">> => list(security_group_vpc_association())
%% }
-type describe_security_group_vpc_associations_result() :: #{binary() => any()}.

%% Example:
%% media_device_memory_info() :: #{
%%   <<"SizeInMiB">> => integer()
%% }
-type media_device_memory_info() :: #{binary() => any()}.

%% Example:
%% describe_fleet_history_result() :: #{
%%   <<"FleetId">> => string(),
%%   <<"HistoryRecords">> => list(history_record_entry()),
%%   <<"LastEvaluatedTime">> => non_neg_integer(),
%%   <<"NextToken">> => string(),
%%   <<"StartTime">> => non_neg_integer()
%% }
-type describe_fleet_history_result() :: #{binary() => any()}.

%% Example:
%% modify_reserved_instances_result() :: #{
%%   <<"ReservedInstancesModificationId">> => string()
%% }
-type modify_reserved_instances_result() :: #{binary() => any()}.

%% Example:
%% delete_network_acl_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkAclId">> := string()
%% }
-type delete_network_acl_request() :: #{binary() => any()}.

%% Example:
%% mac_system_integrity_protection_configuration_request() :: #{
%%   <<"AppleInternal">> => list(any()),
%%   <<"BaseSystem">> => list(any()),
%%   <<"DTraceRestrictions">> => list(any()),
%%   <<"DebuggingRestrictions">> => list(any()),
%%   <<"FilesystemProtections">> => list(any()),
%%   <<"KextSigning">> => list(any()),
%%   <<"NvramProtections">> => list(any())
%% }
-type mac_system_integrity_protection_configuration_request() :: #{binary() => any()}.

%% Example:
%% associate_nat_gateway_address_request() :: #{
%%   <<"AllocationIds">> := list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"NatGatewayId">> := string(),
%%   <<"PrivateIpAddresses">> => list(string())
%% }
-type associate_nat_gateway_address_request() :: #{binary() => any()}.

%% Example:
%% allowed_principal() :: #{
%%   <<"Principal">> => string(),
%%   <<"PrincipalType">> => list(any()),
%%   <<"ServiceId">> => string(),
%%   <<"ServicePermissionId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type allowed_principal() :: #{binary() => any()}.

%% Example:
%% get_reserved_instances_exchange_quote_result() :: #{
%%   <<"CurrencyCode">> => string(),
%%   <<"IsValidExchange">> => boolean(),
%%   <<"OutputReservedInstancesWillExpireAt">> => non_neg_integer(),
%%   <<"PaymentDue">> => string(),
%%   <<"ReservedInstanceValueRollup">> => reservation_value(),
%%   <<"ReservedInstanceValueSet">> => list(reserved_instance_reservation_value()),
%%   <<"TargetConfigurationValueRollup">> => reservation_value(),
%%   <<"TargetConfigurationValueSet">> => list(target_reservation_value()),
%%   <<"ValidationFailureReason">> => string()
%% }
-type get_reserved_instances_exchange_quote_result() :: #{binary() => any()}.

%% Example:
%% ipam_public_address_tag() :: #{
%%   <<"Key">> => string(),
%%   <<"Value">> => string()
%% }
-type ipam_public_address_tag() :: #{binary() => any()}.

%% Example:
%% transit_gateway_attachment() :: #{
%%   <<"Association">> => transit_gateway_attachment_association(),
%%   <<"CreationTime">> => non_neg_integer(),
%%   <<"ResourceId">> => string(),
%%   <<"ResourceOwnerId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayId">> => string(),
%%   <<"TransitGatewayOwnerId">> => string()
%% }
-type transit_gateway_attachment() :: #{binary() => any()}.

%% Example:
%% describe_vpn_connections_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"VpnConnectionIds">> => list(string())
%% }
-type describe_vpn_connections_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_route_table_route() :: #{
%%   <<"AttachmentId">> => string(),
%%   <<"DestinationCidr">> => string(),
%%   <<"PrefixListId">> => string(),
%%   <<"ResourceId">> => string(),
%%   <<"ResourceType">> => string(),
%%   <<"RouteOrigin">> => string(),
%%   <<"State">> => string()
%% }
-type transit_gateway_route_table_route() :: #{binary() => any()}.

%% Example:
%% request_launch_template_data() :: #{
%%   <<"Placement">> => launch_template_placement_request(),
%%   <<"Monitoring">> => launch_templates_monitoring_request(),
%%   <<"TagSpecifications">> => list(launch_template_tag_specification_request()),
%%   <<"NetworkPerformanceOptions">> => launch_template_network_performance_options_request(),
%%   <<"MaintenanceOptions">> => launch_template_instance_maintenance_options_request(),
%%   <<"NetworkInterfaces">> => list(launch_template_instance_network_interface_specification_request()),
%%   <<"KernelId">> => string(),
%%   <<"RamDiskId">> => string(),
%%   <<"DisableApiStop">> => boolean(),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"CreditSpecification">> => credit_specification_request(),
%%   <<"KeyName">> => string(),
%%   <<"BlockDeviceMappings">> => list(launch_template_block_device_mapping_request()),
%%   <<"PrivateDnsNameOptions">> => launch_template_private_dns_name_options_request(),
%%   <<"InstanceInitiatedShutdownBehavior">> => list(any()),
%%   <<"MetadataOptions">> => launch_template_instance_metadata_options_request(),
%%   <<"EnclaveOptions">> => launch_template_enclave_options_request(),
%%   <<"CapacityReservationSpecification">> => launch_template_capacity_reservation_specification_request(),
%%   <<"InstanceType">> => list(any()),
%%   <<"HibernationOptions">> => launch_template_hibernation_options_request(),
%%   <<"ElasticGpuSpecifications">> => list(elastic_gpu_specification()),
%%   <<"LicenseSpecifications">> => list(launch_template_license_configuration_request()),
%%   <<"CpuOptions">> => launch_template_cpu_options_request(),
%%   <<"ElasticInferenceAccelerators">> => list(launch_template_elastic_inference_accelerator()),
%%   <<"IamInstanceProfile">> => launch_template_iam_instance_profile_specification_request(),
%%   <<"InstanceRequirements">> => instance_requirements_request(),
%%   <<"UserData">> => string(),
%%   <<"SecurityGroups">> => list(string()),
%%   <<"DisableApiTermination">> => boolean(),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"Operator">> => operator_request(),
%%   <<"ImageId">> => string(),
%%   <<"InstanceMarketOptions">> => launch_template_instance_market_options_request()
%% }
-type request_launch_template_data() :: #{binary() => any()}.

%% Example:
%% purchase_scheduled_instances_result() :: #{
%%   <<"ScheduledInstanceSet">> => list(scheduled_instance())
%% }
-type purchase_scheduled_instances_result() :: #{binary() => any()}.

%% Example:
%% create_client_vpn_route_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"Description">> => string(),
%%   <<"DestinationCidrBlock">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TargetVpcSubnetId">> := string()
%% }
-type create_client_vpn_route_request() :: #{binary() => any()}.

%% Example:
%% import_key_pair_result() :: #{
%%   <<"KeyFingerprint">> => string(),
%%   <<"KeyName">> => string(),
%%   <<"KeyPairId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type import_key_pair_result() :: #{binary() => any()}.

%% Example:
%% placement_response() :: #{
%%   <<"GroupName">> => string()
%% }
-type placement_response() :: #{binary() => any()}.

%% Example:
%% delete_ipam_result() :: #{
%%   <<"Ipam">> => ipam()
%% }
-type delete_ipam_result() :: #{binary() => any()}.

%% Example:
%% modify_client_vpn_endpoint_request() :: #{
%%   <<"ClientConnectOptions">> => client_connect_options(),
%%   <<"ClientLoginBannerOptions">> => client_login_banner_options(),
%%   <<"ClientRouteEnforcementOptions">> => client_route_enforcement_options(),
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"ConnectionLogOptions">> => connection_log_options(),
%%   <<"Description">> => string(),
%%   <<"DisconnectOnSessionTimeout">> => boolean(),
%%   <<"DnsServers">> => dns_servers_options_modify_structure(),
%%   <<"DryRun">> => boolean(),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"SelfServicePortal">> => list(any()),
%%   <<"ServerCertificateArn">> => string(),
%%   <<"SessionTimeoutHours">> => integer(),
%%   <<"SplitTunnel">> => boolean(),
%%   <<"VpcId">> => string(),
%%   <<"VpnPort">> => integer()
%% }
-type modify_client_vpn_endpoint_request() :: #{binary() => any()}.

%% Example:
%% register_image_request() :: #{
%%   <<"Architecture">> => list(any()),
%%   <<"BillingProducts">> => list(string()),
%%   <<"BlockDeviceMappings">> => list(block_device_mapping()),
%%   <<"BootMode">> => list(any()),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EnaSupport">> => boolean(),
%%   <<"ImageLocation">> => string(),
%%   <<"ImdsSupport">> => list(any()),
%%   <<"KernelId">> => string(),
%%   <<"Name">> := string(),
%%   <<"RamdiskId">> => string(),
%%   <<"RootDeviceName">> => string(),
%%   <<"SriovNetSupport">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TpmSupport">> => list(any()),
%%   <<"UefiData">> => string(),
%%   <<"VirtualizationType">> => string()
%% }
-type register_image_request() :: #{binary() => any()}.

%% Example:
%% disable_vpc_classic_link_dns_support_request() :: #{
%%   <<"VpcId">> => string()
%% }
-type disable_vpc_classic_link_dns_support_request() :: #{binary() => any()}.

%% Example:
%% import_image_license_configuration_response() :: #{
%%   <<"LicenseConfigurationArn">> => string()
%% }
-type import_image_license_configuration_response() :: #{binary() => any()}.

%% Example:
%% launch_specification() :: #{
%%   <<"AddressingType">> => string(),
%%   <<"BlockDeviceMappings">> => list(block_device_mapping()),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"IamInstanceProfile">> => iam_instance_profile_specification(),
%%   <<"ImageId">> => string(),
%%   <<"InstanceType">> => list(any()),
%%   <<"KernelId">> => string(),
%%   <<"KeyName">> => string(),
%%   <<"Monitoring">> => run_instances_monitoring_enabled(),
%%   <<"NetworkInterfaces">> => list(instance_network_interface_specification()),
%%   <<"Placement">> => spot_placement(),
%%   <<"RamdiskId">> => string(),
%%   <<"SecurityGroups">> => list(group_identifier()),
%%   <<"SubnetId">> => string(),
%%   <<"UserData">> => string()
%% }
-type launch_specification() :: #{binary() => any()}.

%% Example:
%% modify_local_gateway_route_request() :: #{
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"DestinationPrefixListId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayRouteTableId">> := string(),
%%   <<"LocalGatewayVirtualInterfaceGroupId">> => string(),
%%   <<"NetworkInterfaceId">> => string()
%% }
-type modify_local_gateway_route_request() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_virtual_interface_result() :: #{
%%   <<"LocalGatewayVirtualInterface">> => local_gateway_virtual_interface()
%% }
-type delete_local_gateway_virtual_interface_result() :: #{binary() => any()}.

%% Example:
%% get_vpn_connection_device_sample_configuration_result() :: #{
%%   <<"VpnConnectionDeviceSampleConfiguration">> => string()
%% }
-type get_vpn_connection_device_sample_configuration_result() :: #{binary() => any()}.

%% Example:
%% iam_instance_profile_specification() :: #{
%%   <<"Arn">> => string(),
%%   <<"Name">> => string()
%% }
-type iam_instance_profile_specification() :: #{binary() => any()}.

%% Example:
%% describe_local_gateway_virtual_interfaces_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"LocalGatewayVirtualInterfaceIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateway_virtual_interfaces_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_multicast_domain() :: #{
%%   <<"CreationTime">> => non_neg_integer(),
%%   <<"Options">> => transit_gateway_multicast_domain_options(),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TransitGatewayId">> => string(),
%%   <<"TransitGatewayMulticastDomainArn">> => string(),
%%   <<"TransitGatewayMulticastDomainId">> => string()
%% }
-type transit_gateway_multicast_domain() :: #{binary() => any()}.

%% Example:
%% export_image_task() :: #{
%%   <<"Description">> => string(),
%%   <<"ExportImageTaskId">> => string(),
%%   <<"ImageId">> => string(),
%%   <<"Progress">> => string(),
%%   <<"S3ExportLocation">> => export_task_s3_location(),
%%   <<"Status">> => string(),
%%   <<"StatusMessage">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type export_image_task() :: #{binary() => any()}.

%% Example:
%% trunk_interface_association() :: #{
%%   <<"AssociationId">> => string(),
%%   <<"BranchInterfaceId">> => string(),
%%   <<"GreKey">> => integer(),
%%   <<"InterfaceProtocol">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TrunkInterfaceId">> => string(),
%%   <<"VlanId">> => integer()
%% }
-type trunk_interface_association() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_instance_logging_configuration_result() :: #{
%%   <<"LoggingConfiguration">> => verified_access_instance_logging_configuration()
%% }
-type modify_verified_access_instance_logging_configuration_result() :: #{binary() => any()}.

%% Example:
%% describe_conversion_tasks_result() :: #{
%%   <<"ConversionTasks">> => list(conversion_task())
%% }
-type describe_conversion_tasks_result() :: #{binary() => any()}.

%% Example:
%% verified_access_log_kinesis_data_firehose_destination() :: #{
%%   <<"DeliveryStatus">> => verified_access_log_delivery_status(),
%%   <<"DeliveryStream">> => string(),
%%   <<"Enabled">> => boolean()
%% }
-type verified_access_log_kinesis_data_firehose_destination() :: #{binary() => any()}.

%% Example:
%% disassociate_subnet_cidr_block_result() :: #{
%%   <<"Ipv6CidrBlockAssociation">> => subnet_ipv6_cidr_block_association(),
%%   <<"SubnetId">> => string()
%% }
-type disassociate_subnet_cidr_block_result() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_multicast_domain_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayMulticastDomainId">> := string()
%% }
-type delete_transit_gateway_multicast_domain_request() :: #{binary() => any()}.

%% Example:
%% tag_specification() :: #{
%%   <<"ResourceType">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type tag_specification() :: #{binary() => any()}.

%% Example:
%% get_route_server_routing_database_result() :: #{
%%   <<"AreRoutesPersisted">> => boolean(),
%%   <<"NextToken">> => string(),
%%   <<"Routes">> => list(route_server_route())
%% }
-type get_route_server_routing_database_result() :: #{binary() => any()}.

%% Example:
%% start_vpc_endpoint_service_private_dns_verification_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ServiceId">> := string()
%% }
-type start_vpc_endpoint_service_private_dns_verification_request() :: #{binary() => any()}.

%% Example:
%% delete_route_server_peer_result() :: #{
%%   <<"RouteServerPeer">> => route_server_peer()
%% }
-type delete_route_server_peer_result() :: #{binary() => any()}.

%% Example:
%% unlock_snapshot_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SnapshotId">> := string()
%% }
-type unlock_snapshot_request() :: #{binary() => any()}.

%% Example:
%% firewall_stateful_rule() :: #{
%%   <<"DestinationPorts">> => list(port_range()),
%%   <<"Destinations">> => list(string()),
%%   <<"Direction">> => string(),
%%   <<"Protocol">> => string(),
%%   <<"RuleAction">> => string(),
%%   <<"RuleGroupArn">> => string(),
%%   <<"SourcePorts">> => list(port_range()),
%%   <<"Sources">> => list(string())
%% }
-type firewall_stateful_rule() :: #{binary() => any()}.

%% Example:
%% modify_vpc_endpoint_connection_notification_result() :: #{
%%   <<"ReturnValue">> => boolean()
%% }
-type modify_vpc_endpoint_connection_notification_result() :: #{binary() => any()}.

%% Example:
%% subnet_cidr_block_state() :: #{
%%   <<"State">> => list(any()),
%%   <<"StatusMessage">> => string()
%% }
-type subnet_cidr_block_state() :: #{binary() => any()}.

%% Example:
%% enable_vpc_classic_link_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type enable_vpc_classic_link_result() :: #{binary() => any()}.

%% Example:
%% snapshot() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"CompletionDurationMinutes">> => integer(),
%%   <<"CompletionTime">> => non_neg_integer(),
%%   <<"DataEncryptionKeyId">> => string(),
%%   <<"Description">> => string(),
%%   <<"Encrypted">> => boolean(),
%%   <<"FullSnapshotSizeInBytes">> => float(),
%%   <<"KmsKeyId">> => string(),
%%   <<"OutpostArn">> => string(),
%%   <<"OwnerAlias">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"Progress">> => string(),
%%   <<"RestoreExpiryTime">> => non_neg_integer(),
%%   <<"SnapshotId">> => string(),
%%   <<"SseType">> => list(any()),
%%   <<"StartTime">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"StateMessage">> => string(),
%%   <<"StorageTier">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TransferType">> => list(any()),
%%   <<"VolumeId">> => string(),
%%   <<"VolumeSize">> => integer()
%% }
-type snapshot() :: #{binary() => any()}.

%% Example:
%% create_default_subnet_request() :: #{
%%   <<"AvailabilityZone">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Ipv6Native">> => boolean()
%% }
-type create_default_subnet_request() :: #{binary() => any()}.

%% Example:
%% create_fpga_image_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InputStorageLocation">> := storage_location(),
%%   <<"LogsStorageLocation">> => storage_location(),
%%   <<"Name">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_fpga_image_request() :: #{binary() => any()}.

%% Example:
%% describe_availability_zones_request() :: #{
%%   <<"AllAvailabilityZones">> => boolean(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"ZoneIds">> => list(string()),
%%   <<"ZoneNames">> => list(string())
%% }
-type describe_availability_zones_request() :: #{binary() => any()}.

%% Example:
%% disassociate_route_table_request() :: #{
%%   <<"AssociationId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type disassociate_route_table_request() :: #{binary() => any()}.

%% Example:
%% get_verified_access_endpoint_policy_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessEndpointId">> := string()
%% }
-type get_verified_access_endpoint_policy_request() :: #{binary() => any()}.

%% Example:
%% provision_public_ipv4_pool_cidr_result() :: #{
%%   <<"PoolAddressRange">> => public_ipv4_pool_range(),
%%   <<"PoolId">> => string()
%% }
-type provision_public_ipv4_pool_cidr_result() :: #{binary() => any()}.

%% Example:
%% image() :: #{
%%   <<"ImageOwnerAlias">> => string(),
%%   <<"KernelId">> => string(),
%%   <<"LastLaunchedTime">> => string(),
%%   <<"DeprecationTime">> => string(),
%%   <<"Architecture">> => list(any()),
%%   <<"BlockDeviceMappings">> => list(block_device_mapping()),
%%   <<"TpmSupport">> => list(any()),
%%   <<"ImageLocation">> => string(),
%%   <<"UsageOperation">> => string(),
%%   <<"ImageAllowed">> => boolean(),
%%   <<"DeregistrationProtection">> => string(),
%%   <<"State">> => list(any()),
%%   <<"VirtualizationType">> => list(any()),
%%   <<"CreationDate">> => string(),
%%   <<"FreeTierEligible">> => boolean(),
%%   <<"Platform">> => list(any()),
%%   <<"RootDeviceName">> => string(),
%%   <<"RamdiskId">> => string(),
%%   <<"ImageType">> => list(any()),
%%   <<"Hypervisor">> => list(any()),
%%   <<"Public">> => boolean(),
%%   <<"SriovNetSupport">> => string(),
%%   <<"StateReason">> => state_reason(),
%%   <<"PlatformDetails">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"RootDeviceType">> => list(any()),
%%   <<"OwnerId">> => string(),
%%   <<"BootMode">> => list(any()),
%%   <<"ImageId">> => string(),
%%   <<"Name">> => string(),
%%   <<"SourceImageId">> => string(),
%%   <<"ImdsSupport">> => list(any()),
%%   <<"ProductCodes">> => list(product_code()),
%%   <<"SourceInstanceId">> => string(),
%%   <<"EnaSupport">> => boolean(),
%%   <<"Description">> => string(),
%%   <<"SourceImageRegion">> => string()
%% }
-type image() :: #{binary() => any()}.

%% Example:
%% describe_capacity_block_offerings_result() :: #{
%%   <<"CapacityBlockOfferings">> => list(capacity_block_offering()),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_block_offerings_result() :: #{binary() => any()}.

%% Example:
%% delete_verified_access_instance_result() :: #{
%%   <<"VerifiedAccessInstance">> => verified_access_instance()
%% }
-type delete_verified_access_instance_result() :: #{binary() => any()}.

%% Example:
%% create_network_insights_access_scope_request() :: #{
%%   <<"ClientToken">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"ExcludePaths">> => list(access_scope_path_request()),
%%   <<"MatchPaths">> => list(access_scope_path_request()),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_network_insights_access_scope_request() :: #{binary() => any()}.

%% Example:
%% disable_fast_snapshot_restores_result() :: #{
%%   <<"Successful">> => list(disable_fast_snapshot_restore_success_item()),
%%   <<"Unsuccessful">> => list(disable_fast_snapshot_restore_error_item())
%% }
-type disable_fast_snapshot_restores_result() :: #{binary() => any()}.

%% Example:
%% disassociate_ipam_resource_discovery_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"IpamResourceDiscoveryAssociationId">> := string()
%% }
-type disassociate_ipam_resource_discovery_request() :: #{binary() => any()}.

%% Example:
%% key_pair_info() :: #{
%%   <<"CreateTime">> => non_neg_integer(),
%%   <<"KeyFingerprint">> => string(),
%%   <<"KeyName">> => string(),
%%   <<"KeyPairId">> => string(),
%%   <<"KeyType">> => list(any()),
%%   <<"PublicKey">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type key_pair_info() :: #{binary() => any()}.

%% Example:
%% describe_address_transfers_request() :: #{
%%   <<"AllocationIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_address_transfers_request() :: #{binary() => any()}.

%% Example:
%% monitoring() :: #{
%%   <<"State">> => list(any())
%% }
-type monitoring() :: #{binary() => any()}.

%% Example:
%% modify_transit_gateway_vpc_attachment_request_options() :: #{
%%   <<"ApplianceModeSupport">> => list(any()),
%%   <<"DnsSupport">> => list(any()),
%%   <<"Ipv6Support">> => list(any()),
%%   <<"SecurityGroupReferencingSupport">> => list(any())
%% }
-type modify_transit_gateway_vpc_attachment_request_options() :: #{binary() => any()}.

%% Example:
%% phase1_encryption_algorithms_list_value() :: #{
%%   <<"Value">> => string()
%% }
-type phase1_encryption_algorithms_list_value() :: #{binary() => any()}.

%% Example:
%% detach_internet_gateway_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InternetGatewayId">> := string(),
%%   <<"VpcId">> := string()
%% }
-type detach_internet_gateway_request() :: #{binary() => any()}.

%% Example:
%% fleet_launch_template_specification() :: #{
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"Version">> => string()
%% }
-type fleet_launch_template_specification() :: #{binary() => any()}.

%% Example:
%% delete_network_insights_analysis_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkInsightsAnalysisId">> := string()
%% }
-type delete_network_insights_analysis_request() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_billing_request() :: #{
%%   <<"CapacityReservationId">> => string(),
%%   <<"CapacityReservationInfo">> => capacity_reservation_info(),
%%   <<"LastUpdateTime">> => non_neg_integer(),
%%   <<"RequestedBy">> => string(),
%%   <<"Status">> => list(any()),
%%   <<"StatusMessage">> => string(),
%%   <<"UnusedReservationBillingOwnerId">> => string()
%% }
-type capacity_reservation_billing_request() :: #{binary() => any()}.

%% Example:
%% send_diagnostic_interrupt_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string()
%% }
-type send_diagnostic_interrupt_request() :: #{binary() => any()}.

%% Example:
%% delete_network_interface_permission_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Force">> => boolean(),
%%   <<"NetworkInterfacePermissionId">> := string()
%% }
-type delete_network_interface_permission_request() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_multicast_domain_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayMulticastDomainId">> := string()
%% }
-type get_transit_gateway_multicast_domain_associations_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway() :: #{
%%   <<"CreationTime">> => non_neg_integer(),
%%   <<"Description">> => string(),
%%   <<"Options">> => transit_gateway_options(),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TransitGatewayArn">> => string(),
%%   <<"TransitGatewayId">> => string()
%% }
-type transit_gateway() :: #{binary() => any()}.

%% Example:
%% modify_ipam_scope_request() :: #{
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamScopeId">> := string()
%% }
-type modify_ipam_scope_request() :: #{binary() => any()}.

%% Example:
%% license_configuration_request() :: #{
%%   <<"LicenseConfigurationArn">> => string()
%% }
-type license_configuration_request() :: #{binary() => any()}.

%% Example:
%% create_managed_prefix_list_result() :: #{
%%   <<"PrefixList">> => managed_prefix_list()
%% }
-type create_managed_prefix_list_result() :: #{binary() => any()}.

%% Example:
%% athena_integration() :: #{
%%   <<"IntegrationResultS3DestinationArn">> => string(),
%%   <<"PartitionEndDate">> => non_neg_integer(),
%%   <<"PartitionLoadFrequency">> => list(any()),
%%   <<"PartitionStartDate">> => non_neg_integer()
%% }
-type athena_integration() :: #{binary() => any()}.

%% Example:
%% launch_permission_modifications() :: #{
%%   <<"Add">> => list(launch_permission()),
%%   <<"Remove">> => list(launch_permission())
%% }
-type launch_permission_modifications() :: #{binary() => any()}.

%% Example:
%% client_vpn_endpoint() :: #{
%%   <<"AssociatedTargetNetworks">> => list(associated_target_network()),
%%   <<"AuthenticationOptions">> => list(client_vpn_authentication()),
%%   <<"ClientCidrBlock">> => string(),
%%   <<"ClientConnectOptions">> => client_connect_response_options(),
%%   <<"ClientLoginBannerOptions">> => client_login_banner_response_options(),
%%   <<"ClientRouteEnforcementOptions">> => client_route_enforcement_response_options(),
%%   <<"ClientVpnEndpointId">> => string(),
%%   <<"ConnectionLogOptions">> => connection_log_response_options(),
%%   <<"CreationTime">> => string(),
%%   <<"DeletionTime">> => string(),
%%   <<"Description">> => string(),
%%   <<"DisconnectOnSessionTimeout">> => boolean(),
%%   <<"DnsName">> => string(),
%%   <<"DnsServers">> => list(string()),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"SelfServicePortalUrl">> => string(),
%%   <<"ServerCertificateArn">> => string(),
%%   <<"SessionTimeoutHours">> => integer(),
%%   <<"SplitTunnel">> => boolean(),
%%   <<"Status">> => client_vpn_endpoint_status(),
%%   <<"Tags">> => list(tag()),
%%   <<"TransportProtocol">> => list(any()),
%%   <<"VpcId">> => string(),
%%   <<"VpnPort">> => integer(),
%%   <<"VpnProtocol">> => list(any())
%% }
-type client_vpn_endpoint() :: #{binary() => any()}.

%% Example:
%% modify_snapshot_attribute_request() :: #{
%%   <<"Attribute">> => list(any()),
%%   <<"CreateVolumePermission">> => create_volume_permission_modifications(),
%%   <<"DryRun">> => boolean(),
%%   <<"GroupNames">> => list(string()),
%%   <<"OperationType">> => list(any()),
%%   <<"SnapshotId">> := string(),
%%   <<"UserIds">> => list(string())
%% }
-type modify_snapshot_attribute_request() :: #{binary() => any()}.

%% Example:
%% internet_gateway_attachment() :: #{
%%   <<"State">> => list(any()),
%%   <<"VpcId">> => string()
%% }
-type internet_gateway_attachment() :: #{binary() => any()}.

%% Example:
%% list_images_in_recycle_bin_result() :: #{
%%   <<"Images">> => list(image_recycle_bin_info()),
%%   <<"NextToken">> => string()
%% }
-type list_images_in_recycle_bin_result() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_multicast_domain_request_options() :: #{
%%   <<"AutoAcceptSharedAssociations">> => list(any()),
%%   <<"Igmpv2Support">> => list(any()),
%%   <<"StaticSourcesSupport">> => list(any())
%% }
-type create_transit_gateway_multicast_domain_request_options() :: #{binary() => any()}.

%% Example:
%% volume_status_attachment_status() :: #{
%%   <<"InstanceId">> => string(),
%%   <<"IoPerformance">> => string()
%% }
-type volume_status_attachment_status() :: #{binary() => any()}.

%% Example:
%% get_aws_network_performance_data_request() :: #{
%%   <<"DataQueries">> => list(data_query()),
%%   <<"DryRun">> => boolean(),
%%   <<"EndTime">> => non_neg_integer(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"StartTime">> => non_neg_integer()
%% }
-type get_aws_network_performance_data_request() :: #{binary() => any()}.

%% Example:
%% describe_conversion_tasks_request() :: #{
%%   <<"ConversionTaskIds">> => list(string()),
%%   <<"DryRun">> => boolean()
%% }
-type describe_conversion_tasks_request() :: #{binary() => any()}.

%% Example:
%% instance_type_info() :: #{
%%   <<"AutoRecoverySupported">> => boolean(),
%%   <<"BareMetal">> => boolean(),
%%   <<"BurstablePerformanceSupported">> => boolean(),
%%   <<"CurrentGeneration">> => boolean(),
%%   <<"DedicatedHostsSupported">> => boolean(),
%%   <<"EbsInfo">> => ebs_info(),
%%   <<"FpgaInfo">> => fpga_info(),
%%   <<"FreeTierEligible">> => boolean(),
%%   <<"GpuInfo">> => gpu_info(),
%%   <<"HibernationSupported">> => boolean(),
%%   <<"Hypervisor">> => list(any()),
%%   <<"InferenceAcceleratorInfo">> => inference_accelerator_info(),
%%   <<"InstanceStorageInfo">> => instance_storage_info(),
%%   <<"InstanceStorageSupported">> => boolean(),
%%   <<"InstanceType">> => list(any()),
%%   <<"MediaAcceleratorInfo">> => media_accelerator_info(),
%%   <<"MemoryInfo">> => memory_info(),
%%   <<"NetworkInfo">> => network_info(),
%%   <<"NeuronInfo">> => neuron_info(),
%%   <<"NitroEnclavesSupport">> => list(any()),
%%   <<"NitroTpmInfo">> => nitro_tpm_info(),
%%   <<"NitroTpmSupport">> => list(any()),
%%   <<"PhcSupport">> => list(any()),
%%   <<"PlacementGroupInfo">> => placement_group_info(),
%%   <<"ProcessorInfo">> => processor_info(),
%%   <<"RebootMigrationSupport">> => list(any()),
%%   <<"SupportedBootModes">> => list(list(any())()),
%%   <<"SupportedRootDeviceTypes">> => list(list(any())()),
%%   <<"SupportedUsageClasses">> => list(list(any())()),
%%   <<"SupportedVirtualizationTypes">> => list(list(any())()),
%%   <<"VCpuInfo">> => v_cpu_info()
%% }
-type instance_type_info() :: #{binary() => any()}.

%% Example:
%% describe_instance_event_notification_attributes_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type describe_instance_event_notification_attributes_request() :: #{binary() => any()}.

%% Example:
%% storage() :: #{
%%   <<"S3">> => s3_storage()
%% }
-type storage() :: #{binary() => any()}.

%% Example:
%% create_dhcp_options_request() :: #{
%%   <<"DhcpConfigurations">> := list(new_dhcp_configuration()),
%%   <<"DryRun">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_dhcp_options_request() :: #{binary() => any()}.

%% Example:
%% vgw_telemetry() :: #{
%%   <<"AcceptedRouteCount">> => integer(),
%%   <<"CertificateArn">> => string(),
%%   <<"LastStatusChange">> => non_neg_integer(),
%%   <<"OutsideIpAddress">> => string(),
%%   <<"Status">> => list(any()),
%%   <<"StatusMessage">> => string()
%% }
-type vgw_telemetry() :: #{binary() => any()}.

%% Example:
%% instance() :: #{
%%   <<"Placement">> => placement(),
%%   <<"Monitoring">> => monitoring(),
%%   <<"SourceDestCheck">> => boolean(),
%%   <<"SubnetId">> => string(),
%%   <<"NetworkPerformanceOptions">> => instance_network_performance_options(),
%%   <<"MaintenanceOptions">> => instance_maintenance_options(),
%%   <<"ElasticGpuAssociations">> => list(elastic_gpu_association()),
%%   <<"SpotInstanceRequestId">> => string(),
%%   <<"NetworkInterfaces">> => list(instance_network_interface()),
%%   <<"KernelId">> => string(),
%%   <<"Licenses">> => list(license_configuration()),
%%   <<"Architecture">> => list(any()),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"KeyName">> => string(),
%%   <<"BlockDeviceMappings">> => list(instance_block_device_mapping()),
%%   <<"PrivateDnsNameOptions">> => private_dns_name_options_response(),
%%   <<"StateTransitionReason">> => string(),
%%   <<"MetadataOptions">> => instance_metadata_options_response(),
%%   <<"TpmSupport">> => string(),
%%   <<"CurrentInstanceBootMode">> => list(any()),
%%   <<"UsageOperation">> => string(),
%%   <<"EnclaveOptions">> => enclave_options(),
%%   <<"PublicIpAddress">> => string(),
%%   <<"State">> => instance_state(),
%%   <<"InstanceId">> => string(),
%%   <<"CapacityReservationSpecification">> => capacity_reservation_specification_response(),
%%   <<"InstanceType">> => list(any()),
%%   <<"VirtualizationType">> => list(any()),
%%   <<"OutpostArn">> => string(),
%%   <<"HibernationOptions">> => hibernation_options(),
%%   <<"UsageOperationUpdateTime">> => non_neg_integer(),
%%   <<"CapacityBlockId">> => string(),
%%   <<"Platform">> => list(any()),
%%   <<"CapacityReservationId">> => string(),
%%   <<"ElasticInferenceAcceleratorAssociations">> => list(elastic_inference_accelerator_association()),
%%   <<"RootDeviceName">> => string(),
%%   <<"RamdiskId">> => string(),
%%   <<"CpuOptions">> => cpu_options(),
%%   <<"ClientToken">> => string(),
%%   <<"IamInstanceProfile">> => iam_instance_profile(),
%%   <<"Hypervisor">> => list(any()),
%%   <<"SriovNetSupport">> => string(),
%%   <<"AmiLaunchIndex">> => integer(),
%%   <<"StateReason">> => state_reason(),
%%   <<"PublicDnsName">> => string(),
%%   <<"SecurityGroups">> => list(group_identifier()),
%%   <<"PlatformDetails">> => string(),
%%   <<"PrivateDnsName">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"RootDeviceType">> => list(any()),
%%   <<"BootMode">> => list(any()),
%%   <<"Operator">> => operator_response(),
%%   <<"ImageId">> => string(),
%%   <<"InstanceLifecycle">> => list(any()),
%%   <<"LaunchTime">> => non_neg_integer(),
%%   <<"ProductCodes">> => list(product_code()),
%%   <<"EnaSupport">> => boolean(),
%%   <<"Ipv6Address">> => string()
%% }
-type instance() :: #{binary() => any()}.

%% Example:
%% attach_verified_access_trust_provider_result() :: #{
%%   <<"VerifiedAccessInstance">> => verified_access_instance(),
%%   <<"VerifiedAccessTrustProvider">> => verified_access_trust_provider()
%% }
-type attach_verified_access_trust_provider_result() :: #{binary() => any()}.

%% Example:
%% create_fleet_result() :: #{
%%   <<"Errors">> => list(create_fleet_error()),
%%   <<"FleetId">> => string(),
%%   <<"Instances">> => list(create_fleet_instance())
%% }
-type create_fleet_result() :: #{binary() => any()}.

%% Example:
%% modify_ipam_resource_discovery_result() :: #{
%%   <<"IpamResourceDiscovery">> => ipam_resource_discovery()
%% }
-type modify_ipam_resource_discovery_result() :: #{binary() => any()}.

%% Example:
%% volume() :: #{
%%   <<"Attachments">> => list(volume_attachment()),
%%   <<"AvailabilityZone">> => string(),
%%   <<"CreateTime">> => non_neg_integer(),
%%   <<"Encrypted">> => boolean(),
%%   <<"FastRestored">> => boolean(),
%%   <<"Iops">> => integer(),
%%   <<"KmsKeyId">> => string(),
%%   <<"MultiAttachEnabled">> => boolean(),
%%   <<"Operator">> => operator_response(),
%%   <<"OutpostArn">> => string(),
%%   <<"Size">> => integer(),
%%   <<"SnapshotId">> => string(),
%%   <<"SseType">> => list(any()),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"Throughput">> => integer(),
%%   <<"VolumeId">> => string(),
%%   <<"VolumeInitializationRate">> => integer(),
%%   <<"VolumeType">> => list(any())
%% }
-type volume() :: #{binary() => any()}.

%% Example:
%% create_instance_connect_endpoint_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpAddressType">> => list(any()),
%%   <<"PreserveClientIp">> => boolean(),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"SubnetId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_instance_connect_endpoint_request() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_prefix_list_references_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type get_transit_gateway_prefix_list_references_request() :: #{binary() => any()}.

%% Example:
%% get_ipam_pool_allocations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamPoolAllocationId">> => string(),
%%   <<"IpamPoolId">> := string(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type get_ipam_pool_allocations_request() :: #{binary() => any()}.

%% Example:
%% local_gateway_virtual_interface_group() :: #{
%%   <<"ConfigurationState">> => list(any()),
%%   <<"LocalBgpAsn">> => integer(),
%%   <<"LocalBgpAsnExtended">> => float(),
%%   <<"LocalGatewayId">> => string(),
%%   <<"LocalGatewayVirtualInterfaceGroupArn">> => string(),
%%   <<"LocalGatewayVirtualInterfaceGroupId">> => string(),
%%   <<"LocalGatewayVirtualInterfaceIds">> => list(string()),
%%   <<"OwnerId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type local_gateway_virtual_interface_group() :: #{binary() => any()}.

%% Example:
%% delete_client_vpn_route_result() :: #{
%%   <<"Status">> => client_vpn_route_status()
%% }
-type delete_client_vpn_route_result() :: #{binary() => any()}.

%% Example:
%% release_ipam_pool_allocation_result() :: #{
%%   <<"Success">> => boolean()
%% }
-type release_ipam_pool_allocation_result() :: #{binary() => any()}.

%% Example:
%% create_route_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type create_route_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_association() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"State">> => list(any()),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayRouteTableId">> => string()
%% }
-type transit_gateway_association() :: #{binary() => any()}.

%% Example:
%% describe_verified_access_trust_providers_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VerifiedAccessTrustProviderIds">> => list(string())
%% }
-type describe_verified_access_trust_providers_request() :: #{binary() => any()}.

%% Example:
%% fast_launch_launch_template_specification_response() :: #{
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"Version">> => string()
%% }
-type fast_launch_launch_template_specification_response() :: #{binary() => any()}.

%% Example:
%% list_images_in_recycle_bin_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ImageIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type list_images_in_recycle_bin_request() :: #{binary() => any()}.

%% Example:
%% instance_tag_notification_attribute() :: #{
%%   <<"IncludeAllTagsOfInstance">> => boolean(),
%%   <<"InstanceTagKeys">> => list(string())
%% }
-type instance_tag_notification_attribute() :: #{binary() => any()}.

%% Example:
%% reset_address_attribute_result() :: #{
%%   <<"Address">> => address_attribute()
%% }
-type reset_address_attribute_result() :: #{binary() => any()}.

%% Example:
%% import_key_pair_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"KeyName">> := string(),
%%   <<"PublicKeyMaterial">> := binary(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type import_key_pair_request() :: #{binary() => any()}.

%% Example:
%% search_local_gateway_routes_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Routes">> => list(local_gateway_route())
%% }
-type search_local_gateway_routes_result() :: #{binary() => any()}.

%% Example:
%% restore_address_to_classic_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"PublicIp">> := string()
%% }
-type restore_address_to_classic_request() :: #{binary() => any()}.

%% Example:
%% describe_carrier_gateways_result() :: #{
%%   <<"CarrierGateways">> => list(carrier_gateway()),
%%   <<"NextToken">> => string()
%% }
-type describe_carrier_gateways_result() :: #{binary() => any()}.

%% Example:
%% route_server() :: #{
%%   <<"AmazonSideAsn">> => float(),
%%   <<"PersistRoutesDuration">> => float(),
%%   <<"PersistRoutesState">> => list(any()),
%%   <<"RouteServerId">> => string(),
%%   <<"SnsNotificationsEnabled">> => boolean(),
%%   <<"SnsTopicArn">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type route_server() :: #{binary() => any()}.

%% Example:
%% reserved_instances_listing() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"CreateDate">> => non_neg_integer(),
%%   <<"InstanceCounts">> => list(instance_count()),
%%   <<"PriceSchedules">> => list(price_schedule()),
%%   <<"ReservedInstancesId">> => string(),
%%   <<"ReservedInstancesListingId">> => string(),
%%   <<"Status">> => list(any()),
%%   <<"StatusMessage">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"UpdateDate">> => non_neg_integer()
%% }
-type reserved_instances_listing() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_prefix_list_reference_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"PrefixListId">> := string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type delete_transit_gateway_prefix_list_reference_request() :: #{binary() => any()}.

%% Example:
%% describe_service_link_virtual_interfaces_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"ServiceLinkVirtualInterfaces">> => list(service_link_virtual_interface())
%% }
-type describe_service_link_virtual_interfaces_result() :: #{binary() => any()}.

%% Example:
%% ipam_resource_tag() :: #{
%%   <<"Key">> => string(),
%%   <<"Value">> => string()
%% }
-type ipam_resource_tag() :: #{binary() => any()}.

%% Example:
%% scheduled_instances_ebs() :: #{
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Encrypted">> => boolean(),
%%   <<"Iops">> => integer(),
%%   <<"SnapshotId">> => string(),
%%   <<"VolumeSize">> => integer(),
%%   <<"VolumeType">> => string()
%% }
-type scheduled_instances_ebs() :: #{binary() => any()}.

%% Example:
%% get_password_data_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string()
%% }
-type get_password_data_request() :: #{binary() => any()}.

%% Example:
%% instance_type_info_from_instance_requirements() :: #{
%%   <<"InstanceType">> => string()
%% }
-type instance_type_info_from_instance_requirements() :: #{binary() => any()}.

%% Example:
%% describe_network_interface_permissions_request() :: #{
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NetworkInterfacePermissionIds">> => list(string()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_interface_permissions_request() :: #{binary() => any()}.

%% Example:
%% client_vpn_endpoint_attribute_status() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type client_vpn_endpoint_attribute_status() :: #{binary() => any()}.

%% Example:
%% terminate_client_vpn_connections_request() :: #{
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"ConnectionId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Username">> => string()
%% }
-type terminate_client_vpn_connections_request() :: #{binary() => any()}.

%% Example:
%% modify_instance_credit_specification_result() :: #{
%%   <<"SuccessfulInstanceCreditSpecifications">> => list(successful_instance_credit_specification_item()),
%%   <<"UnsuccessfulInstanceCreditSpecifications">> => list(unsuccessful_instance_credit_specification_item())
%% }
-type modify_instance_credit_specification_result() :: #{binary() => any()}.

%% Example:
%% describe_declarative_policies_reports_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"ReportIds">> => list(string())
%% }
-type describe_declarative_policies_reports_request() :: #{binary() => any()}.

%% Example:
%% delete_launch_template_versions_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"Versions">> := list(string())
%% }
-type delete_launch_template_versions_request() :: #{binary() => any()}.

%% Example:
%% disassociate_enclave_certificate_iam_role_request() :: #{
%%   <<"CertificateArn">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"RoleArn">> := string()
%% }
-type disassociate_enclave_certificate_iam_role_request() :: #{binary() => any()}.

%% Example:
%% describe_public_ipv4_pools_request() :: #{
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"PoolIds">> => list(string())
%% }
-type describe_public_ipv4_pools_request() :: #{binary() => any()}.

%% Example:
%% describe_locked_snapshots_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Snapshots">> => list(locked_snapshots_info())
%% }
-type describe_locked_snapshots_result() :: #{binary() => any()}.

%% Example:
%% create_key_pair_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"KeyFormat">> => list(any()),
%%   <<"KeyName">> := string(),
%%   <<"KeyType">> => list(any()),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_key_pair_request() :: #{binary() => any()}.

%% Example:
%% enable_serial_console_access_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type enable_serial_console_access_request() :: #{binary() => any()}.

%% Example:
%% modify_traffic_mirror_filter_rule_request() :: #{
%%   <<"Description">> => string(),
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"DestinationPortRange">> => traffic_mirror_port_range_request(),
%%   <<"DryRun">> => boolean(),
%%   <<"Protocol">> => integer(),
%%   <<"RemoveFields">> => list(list(any())()),
%%   <<"RuleAction">> => list(any()),
%%   <<"RuleNumber">> => integer(),
%%   <<"SourceCidrBlock">> => string(),
%%   <<"SourcePortRange">> => traffic_mirror_port_range_request(),
%%   <<"TrafficDirection">> => list(any()),
%%   <<"TrafficMirrorFilterRuleId">> := string()
%% }
-type modify_traffic_mirror_filter_rule_request() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_fleet_cancellation_state() :: #{
%%   <<"CapacityReservationFleetId">> => string(),
%%   <<"CurrentFleetState">> => list(any()),
%%   <<"PreviousFleetState">> => list(any())
%% }
-type capacity_reservation_fleet_cancellation_state() :: #{binary() => any()}.

%% Example:
%% disable_vpc_classic_link_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type disable_vpc_classic_link_result() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_peering_attachment_request_options() :: #{
%%   <<"DynamicRouting">> => list(any())
%% }
-type create_transit_gateway_peering_attachment_request_options() :: #{binary() => any()}.

%% Example:
%% describe_local_gateways_result() :: #{
%%   <<"LocalGateways">> => list(local_gateway()),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateways_result() :: #{binary() => any()}.

%% Example:
%% modify_ipam_resource_discovery_request() :: #{
%%   <<"AddOperatingRegions">> => list(add_ipam_operating_region()),
%%   <<"AddOrganizationalUnitExclusions">> => list(add_ipam_organizational_unit_exclusion()),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamResourceDiscoveryId">> := string(),
%%   <<"RemoveOperatingRegions">> => list(remove_ipam_operating_region()),
%%   <<"RemoveOrganizationalUnitExclusions">> => list(remove_ipam_organizational_unit_exclusion())
%% }
-type modify_ipam_resource_discovery_request() :: #{binary() => any()}.

%% Example:
%% describe_ipam_byoasn_result() :: #{
%%   <<"Byoasns">> => list(byoasn()),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_byoasn_result() :: #{binary() => any()}.

%% Example:
%% storage_location() :: #{
%%   <<"Bucket">> => string(),
%%   <<"Key">> => string()
%% }
-type storage_location() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_group_policy_result() :: #{
%%   <<"PolicyDocument">> => string(),
%%   <<"PolicyEnabled">> => boolean(),
%%   <<"SseSpecification">> => verified_access_sse_specification_response()
%% }
-type modify_verified_access_group_policy_result() :: #{binary() => any()}.

%% Example:
%% validation_warning() :: #{
%%   <<"Errors">> => list(validation_error())
%% }
-type validation_warning() :: #{binary() => any()}.

%% Example:
%% register_instance_tag_attribute_request() :: #{
%%   <<"IncludeAllTagsOfInstance">> => boolean(),
%%   <<"InstanceTagKeys">> => list(string())
%% }
-type register_instance_tag_attribute_request() :: #{binary() => any()}.

%% Example:
%% delete_dhcp_options_request() :: #{
%%   <<"DhcpOptionsId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type delete_dhcp_options_request() :: #{binary() => any()}.

%% Example:
%% enable_vpc_classic_link_dns_support_request() :: #{
%%   <<"VpcId">> => string()
%% }
-type enable_vpc_classic_link_dns_support_request() :: #{binary() => any()}.

%% Example:
%% create_public_ipv4_pool_result() :: #{
%%   <<"PoolId">> => string()
%% }
-type create_public_ipv4_pool_result() :: #{binary() => any()}.

%% Example:
%% deprovision_public_ipv4_pool_cidr_result() :: #{
%%   <<"DeprovisionedAddresses">> => list(string()),
%%   <<"PoolId">> => string()
%% }
-type deprovision_public_ipv4_pool_cidr_result() :: #{binary() => any()}.

%% Example:
%% search_transit_gateway_routes_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> := list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type search_transit_gateway_routes_request() :: #{binary() => any()}.

%% Example:
%% instance_usage() :: #{
%%   <<"AccountId">> => string(),
%%   <<"UsedInstanceCount">> => integer()
%% }
-type instance_usage() :: #{binary() => any()}.

%% Example:
%% describe_client_vpn_authorization_rules_request() :: #{
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_client_vpn_authorization_rules_request() :: #{binary() => any()}.

%% Example:
%% enable_route_server_propagation_result() :: #{
%%   <<"RouteServerPropagation">> => route_server_propagation()
%% }
-type enable_route_server_propagation_result() :: #{binary() => any()}.

%% Example:
%% describe_local_gateway_route_table_virtual_interface_group_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"LocalGatewayRouteTableVirtualInterfaceGroupAssociationIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateway_route_table_virtual_interface_group_associations_request() :: #{binary() => any()}.

%% Example:
%% create_verified_access_endpoint_cidr_options() :: #{
%%   <<"Cidr">> => string(),
%%   <<"PortRanges">> => list(create_verified_access_endpoint_port_range()),
%%   <<"Protocol">> => list(any()),
%%   <<"SubnetIds">> => list(string())
%% }
-type create_verified_access_endpoint_cidr_options() :: #{binary() => any()}.

%% Example:
%% describe_vpcs_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VpcIds">> => list(string())
%% }
-type describe_vpcs_request() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_policy_table_associations_result() :: #{
%%   <<"Associations">> => list(transit_gateway_policy_table_association()),
%%   <<"NextToken">> => string()
%% }
-type get_transit_gateway_policy_table_associations_result() :: #{binary() => any()}.

%% Example:
%% describe_import_image_tasks_result() :: #{
%%   <<"ImportImageTasks">> => list(import_image_task()),
%%   <<"NextToken">> => string()
%% }
-type describe_import_image_tasks_result() :: #{binary() => any()}.

%% Example:
%% modify_launch_template_result() :: #{
%%   <<"LaunchTemplate">> => launch_template()
%% }
-type modify_launch_template_result() :: #{binary() => any()}.

%% Example:
%% modify_volume_attribute_request() :: #{
%%   <<"AutoEnableIO">> => attribute_boolean_value(),
%%   <<"DryRun">> => boolean(),
%%   <<"VolumeId">> := string()
%% }
-type modify_volume_attribute_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_connect() :: #{
%%   <<"CreationTime">> => non_neg_integer(),
%%   <<"Options">> => transit_gateway_connect_options(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayId">> => string(),
%%   <<"TransportTransitGatewayAttachmentId">> => string()
%% }
-type transit_gateway_connect() :: #{binary() => any()}.

%% Example:
%% failed_capacity_reservation_fleet_cancellation_result() :: #{
%%   <<"CancelCapacityReservationFleetError">> => cancel_capacity_reservation_fleet_error(),
%%   <<"CapacityReservationFleetId">> => string()
%% }
-type failed_capacity_reservation_fleet_cancellation_result() :: #{binary() => any()}.

%% Example:
%% create_fleet_instance() :: #{
%%   <<"InstanceIds">> => list(string()),
%%   <<"InstanceType">> => list(any()),
%%   <<"LaunchTemplateAndOverrides">> => launch_template_and_overrides_response(),
%%   <<"Lifecycle">> => list(any()),
%%   <<"Platform">> => list(any())
%% }
-type create_fleet_instance() :: #{binary() => any()}.

%% Example:
%% describe_fleet_error() :: #{
%%   <<"ErrorCode">> => string(),
%%   <<"ErrorMessage">> => string(),
%%   <<"LaunchTemplateAndOverrides">> => launch_template_and_overrides_response(),
%%   <<"Lifecycle">> => list(any())
%% }
-type describe_fleet_error() :: #{binary() => any()}.

%% Example:
%% path_filter() :: #{
%%   <<"DestinationAddress">> => string(),
%%   <<"DestinationPortRange">> => filter_port_range(),
%%   <<"SourceAddress">> => string(),
%%   <<"SourcePortRange">> => filter_port_range()
%% }
-type path_filter() :: #{binary() => any()}.

%% Example:
%% associate_ipam_byoasn_request() :: #{
%%   <<"Asn">> := string(),
%%   <<"Cidr">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type associate_ipam_byoasn_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_policy_rule_meta_data() :: #{
%%   <<"MetaDataKey">> => string(),
%%   <<"MetaDataValue">> => string()
%% }
-type transit_gateway_policy_rule_meta_data() :: #{binary() => any()}.

%% Example:
%% create_volume_request() :: #{
%%   <<"AvailabilityZone">> := string(),
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Encrypted">> => boolean(),
%%   <<"Iops">> => integer(),
%%   <<"KmsKeyId">> => string(),
%%   <<"MultiAttachEnabled">> => boolean(),
%%   <<"Operator">> => operator_request(),
%%   <<"OutpostArn">> => string(),
%%   <<"Size">> => integer(),
%%   <<"SnapshotId">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"Throughput">> => integer(),
%%   <<"VolumeInitializationRate">> => integer(),
%%   <<"VolumeType">> => list(any())
%% }
-type create_volume_request() :: #{binary() => any()}.

%% Example:
%% describe_account_attributes_result() :: #{
%%   <<"AccountAttributes">> => list(account_attribute())
%% }
-type describe_account_attributes_result() :: #{binary() => any()}.

%% Example:
%% cidr_authorization_context() :: #{
%%   <<"Message">> => string(),
%%   <<"Signature">> => string()
%% }
-type cidr_authorization_context() :: #{binary() => any()}.

%% Example:
%% describe_ipam_resource_discovery_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamResourceDiscoveryAssociationIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_resource_discovery_associations_request() :: #{binary() => any()}.

%% Example:
%% ipv6_pool() :: #{
%%   <<"Description">> => string(),
%%   <<"PoolCidrBlocks">> => list(pool_cidr_block()),
%%   <<"PoolId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type ipv6_pool() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_trust_provider_result() :: #{
%%   <<"VerifiedAccessTrustProvider">> => verified_access_trust_provider()
%% }
-type modify_verified_access_trust_provider_result() :: #{binary() => any()}.

%% Example:
%% reset_image_attribute_request() :: #{
%%   <<"Attribute">> := list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string()
%% }
-type reset_image_attribute_request() :: #{binary() => any()}.

%% Example:
%% enable_transit_gateway_route_table_propagation_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayRouteTableAnnouncementId">> => string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type enable_transit_gateway_route_table_propagation_request() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_endpoint_result() :: #{
%%   <<"VerifiedAccessEndpoint">> => verified_access_endpoint()
%% }
-type modify_verified_access_endpoint_result() :: #{binary() => any()}.

%% Example:
%% start_network_insights_analysis_request() :: #{
%%   <<"AdditionalAccounts">> => list(string()),
%%   <<"ClientToken">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"FilterInArns">> => list(string()),
%%   <<"FilterOutArns">> => list(string()),
%%   <<"NetworkInsightsPathId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type start_network_insights_analysis_request() :: #{binary() => any()}.

%% Example:
%% authorize_security_group_ingress_request() :: #{
%%   <<"CidrIp">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"FromPort">> => integer(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"IpPermissions">> => list(ip_permission()),
%%   <<"IpProtocol">> => string(),
%%   <<"SourceSecurityGroupName">> => string(),
%%   <<"SourceSecurityGroupOwnerId">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"ToPort">> => integer()
%% }
-type authorize_security_group_ingress_request() :: #{binary() => any()}.

%% Example:
%% create_network_acl_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"NetworkAcl">> => network_acl()
%% }
-type create_network_acl_result() :: #{binary() => any()}.

%% Example:
%% describe_ipv6_pools_result() :: #{
%%   <<"Ipv6Pools">> => list(ipv6_pool()),
%%   <<"NextToken">> => string()
%% }
-type describe_ipv6_pools_result() :: #{binary() => any()}.

%% Example:
%% get_network_insights_access_scope_content_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkInsightsAccessScopeId">> := string()
%% }
-type get_network_insights_access_scope_content_request() :: #{binary() => any()}.

%% Example:
%% describe_route_tables_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"RouteTableIds">> => list(string())
%% }
-type describe_route_tables_request() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_peering_attachment_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> := string()
%% }
-type delete_transit_gateway_peering_attachment_request() :: #{binary() => any()}.

%% Example:
%% instance_type_offering() :: #{
%%   <<"InstanceType">> => list(any()),
%%   <<"Location">> => string(),
%%   <<"LocationType">> => list(any())
%% }
-type instance_type_offering() :: #{binary() => any()}.

%% Example:
%% instance_event_window_disassociation_request() :: #{
%%   <<"DedicatedHostIds">> => list(string()),
%%   <<"InstanceIds">> => list(string()),
%%   <<"InstanceTags">> => list(tag())
%% }
-type instance_event_window_disassociation_request() :: #{binary() => any()}.

%% Example:
%% route_server_route_installation_detail() :: #{
%%   <<"RouteInstallationStatus">> => list(any()),
%%   <<"RouteInstallationStatusReason">> => string(),
%%   <<"RouteTableId">> => string()
%% }
-type route_server_route_installation_detail() :: #{binary() => any()}.

%% Example:
%% describe_local_gateway_route_table_virtual_interface_group_associations_result() :: #{
%%   <<"LocalGatewayRouteTableVirtualInterfaceGroupAssociations">> => list(local_gateway_route_table_virtual_interface_group_association()),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateway_route_table_virtual_interface_group_associations_result() :: #{binary() => any()}.

%% Example:
%% network_interface_permission() :: #{
%%   <<"AwsAccountId">> => string(),
%%   <<"AwsService">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"NetworkInterfacePermissionId">> => string(),
%%   <<"Permission">> => list(any()),
%%   <<"PermissionState">> => network_interface_permission_state()
%% }
-type network_interface_permission() :: #{binary() => any()}.

%% Example:
%% phase1_d_h_group_numbers_request_list_value() :: #{
%%   <<"Value">> => integer()
%% }
-type phase1_d_h_group_numbers_request_list_value() :: #{binary() => any()}.

%% Example:
%% attach_classic_link_vpc_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Groups">> := list(string()),
%%   <<"InstanceId">> := string(),
%%   <<"VpcId">> := string()
%% }
-type attach_classic_link_vpc_request() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_route_table_announcement_result() :: #{
%%   <<"TransitGatewayRouteTableAnnouncement">> => transit_gateway_route_table_announcement()
%% }
-type delete_transit_gateway_route_table_announcement_result() :: #{binary() => any()}.

%% Example:
%% instance_requirements() :: #{
%%   <<"AcceleratorCount">> => accelerator_count(),
%%   <<"AcceleratorManufacturers">> => list(list(any())()),
%%   <<"AcceleratorNames">> => list(list(any())()),
%%   <<"AcceleratorTotalMemoryMiB">> => accelerator_total_memory_mi_b(),
%%   <<"AcceleratorTypes">> => list(list(any())()),
%%   <<"AllowedInstanceTypes">> => list(string()),
%%   <<"BareMetal">> => list(any()),
%%   <<"BaselineEbsBandwidthMbps">> => baseline_ebs_bandwidth_mbps(),
%%   <<"BaselinePerformanceFactors">> => baseline_performance_factors(),
%%   <<"BurstablePerformance">> => list(any()),
%%   <<"CpuManufacturers">> => list(list(any())()),
%%   <<"ExcludedInstanceTypes">> => list(string()),
%%   <<"InstanceGenerations">> => list(list(any())()),
%%   <<"LocalStorage">> => list(any()),
%%   <<"LocalStorageTypes">> => list(list(any())()),
%%   <<"MaxSpotPriceAsPercentageOfOptimalOnDemandPrice">> => integer(),
%%   <<"MemoryGiBPerVCpu">> => memory_gi_b_per_v_cpu(),
%%   <<"MemoryMiB">> => memory_mi_b(),
%%   <<"NetworkBandwidthGbps">> => network_bandwidth_gbps(),
%%   <<"NetworkInterfaceCount">> => network_interface_count(),
%%   <<"OnDemandMaxPricePercentageOverLowestPrice">> => integer(),
%%   <<"RequireHibernateSupport">> => boolean(),
%%   <<"SpotMaxPricePercentageOverLowestPrice">> => integer(),
%%   <<"TotalLocalStorageGB">> => total_local_storage_g_b(),
%%   <<"VCpuCount">> => v_cpu_count_range()
%% }
-type instance_requirements() :: #{binary() => any()}.

%% Example:
%% delete_internet_gateway_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InternetGatewayId">> := string()
%% }
-type delete_internet_gateway_request() :: #{binary() => any()}.

%% Example:
%% assigned_private_ip_address() :: #{
%%   <<"PrivateIpAddress">> => string()
%% }
-type assigned_private_ip_address() :: #{binary() => any()}.

%% Example:
%% fleet_data() :: #{
%%   <<"ActivityStatus">> => list(any()),
%%   <<"ClientToken">> => string(),
%%   <<"Context">> => string(),
%%   <<"CreateTime">> => non_neg_integer(),
%%   <<"Errors">> => list(describe_fleet_error()),
%%   <<"ExcessCapacityTerminationPolicy">> => list(any()),
%%   <<"FleetId">> => string(),
%%   <<"FleetState">> => list(any()),
%%   <<"FulfilledCapacity">> => float(),
%%   <<"FulfilledOnDemandCapacity">> => float(),
%%   <<"Instances">> => list(describe_fleets_instances()),
%%   <<"LaunchTemplateConfigs">> => list(fleet_launch_template_config()),
%%   <<"OnDemandOptions">> => on_demand_options(),
%%   <<"ReplaceUnhealthyInstances">> => boolean(),
%%   <<"SpotOptions">> => spot_options(),
%%   <<"Tags">> => list(tag()),
%%   <<"TargetCapacitySpecification">> => target_capacity_specification(),
%%   <<"TerminateInstancesWithExpiration">> => boolean(),
%%   <<"Type">> => list(any()),
%%   <<"ValidFrom">> => non_neg_integer(),
%%   <<"ValidUntil">> => non_neg_integer()
%% }
-type fleet_data() :: #{binary() => any()}.

%% Example:
%% coip_cidr() :: #{
%%   <<"Cidr">> => string(),
%%   <<"CoipPoolId">> => string(),
%%   <<"LocalGatewayRouteTableId">> => string()
%% }
-type coip_cidr() :: #{binary() => any()}.

%% Example:
%% get_allowed_images_settings_result() :: #{
%%   <<"ImageCriteria">> => list(image_criterion()),
%%   <<"ManagedBy">> => list(any()),
%%   <<"State">> => string()
%% }
-type get_allowed_images_settings_result() :: #{binary() => any()}.

%% Example:
%% create_reserved_instances_listing_request() :: #{
%%   <<"ClientToken">> := string(),
%%   <<"InstanceCount">> := integer(),
%%   <<"PriceSchedules">> := list(price_schedule_specification()),
%%   <<"ReservedInstancesId">> := string()
%% }
-type create_reserved_instances_listing_request() :: #{binary() => any()}.

%% Example:
%% copy_snapshot_request() :: #{
%%   <<"CompletionDurationMinutes">> => integer(),
%%   <<"Description">> => string(),
%%   <<"DestinationOutpostArn">> => string(),
%%   <<"DestinationRegion">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Encrypted">> => boolean(),
%%   <<"KmsKeyId">> => string(),
%%   <<"PresignedUrl">> => string(),
%%   <<"SourceRegion">> := string(),
%%   <<"SourceSnapshotId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type copy_snapshot_request() :: #{binary() => any()}.

%% Example:
%% describe_declarative_policies_reports_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Reports">> => list(declarative_policies_report())
%% }
-type describe_declarative_policies_reports_result() :: #{binary() => any()}.

%% Example:
%% instance_monitoring() :: #{
%%   <<"InstanceId">> => string(),
%%   <<"Monitoring">> => monitoring()
%% }
-type instance_monitoring() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_multicast_domain_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Options">> => create_transit_gateway_multicast_domain_request_options(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TransitGatewayId">> := string()
%% }
-type create_transit_gateway_multicast_domain_request() :: #{binary() => any()}.

%% Example:
%% phase2_encryption_algorithms_list_value() :: #{
%%   <<"Value">> => string()
%% }
-type phase2_encryption_algorithms_list_value() :: #{binary() => any()}.

%% Example:
%% memory_info() :: #{
%%   <<"SizeInMiB">> => float()
%% }
-type memory_info() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayId">> := string()
%% }
-type delete_transit_gateway_request() :: #{binary() => any()}.

%% Example:
%% describe_verified_access_groups_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VerifiedAccessGroupIds">> => list(string()),
%%   <<"VerifiedAccessInstanceId">> => string()
%% }
-type describe_verified_access_groups_request() :: #{binary() => any()}.

%% Example:
%% create_ipam_resource_discovery_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"OperatingRegions">> => list(add_ipam_operating_region()),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_ipam_resource_discovery_request() :: #{binary() => any()}.

%% Example:
%% disable_image_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type disable_image_result() :: #{binary() => any()}.

%% Example:
%% launch_template_spot_market_options() :: #{
%%   <<"BlockDurationMinutes">> => integer(),
%%   <<"InstanceInterruptionBehavior">> => list(any()),
%%   <<"MaxPrice">> => string(),
%%   <<"SpotInstanceType">> => list(any()),
%%   <<"ValidUntil">> => non_neg_integer()
%% }
-type launch_template_spot_market_options() :: #{binary() => any()}.

%% Example:
%% vpc_encryption_control_exclusions() :: #{
%%   <<"EgressOnlyInternetGateway">> => vpc_encryption_control_exclusion(),
%%   <<"InternetGateway">> => vpc_encryption_control_exclusion(),
%%   <<"NatGateway">> => vpc_encryption_control_exclusion(),
%%   <<"VirtualPrivateGateway">> => vpc_encryption_control_exclusion(),
%%   <<"VpcPeering">> => vpc_encryption_control_exclusion()
%% }
-type vpc_encryption_control_exclusions() :: #{binary() => any()}.

%% Example:
%% stale_security_group() :: #{
%%   <<"Description">> => string(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"StaleIpPermissions">> => list(stale_ip_permission()),
%%   <<"StaleIpPermissionsEgress">> => list(stale_ip_permission()),
%%   <<"VpcId">> => string()
%% }
-type stale_security_group() :: #{binary() => any()}.

%% Example:
%% disk_image() :: #{
%%   <<"Description">> => string(),
%%   <<"Image">> => disk_image_detail(),
%%   <<"Volume">> => volume_detail()
%% }
-type disk_image() :: #{binary() => any()}.

%% Example:
%% associate_ipam_byoasn_result() :: #{
%%   <<"AsnAssociation">> => asn_association()
%% }
-type associate_ipam_byoasn_result() :: #{binary() => any()}.

%% Example:
%% launch_template_block_device_mapping() :: #{
%%   <<"DeviceName">> => string(),
%%   <<"Ebs">> => launch_template_ebs_block_device(),
%%   <<"NoDevice">> => string(),
%%   <<"VirtualName">> => string()
%% }
-type launch_template_block_device_mapping() :: #{binary() => any()}.

%% Example:
%% create_verified_access_endpoint_request() :: #{
%%   <<"ApplicationDomain">> => string(),
%%   <<"AttachmentType">> := list(any()),
%%   <<"CidrOptions">> => create_verified_access_endpoint_cidr_options(),
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DomainCertificateArn">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EndpointDomainPrefix">> => string(),
%%   <<"EndpointType">> := list(any()),
%%   <<"LoadBalancerOptions">> => create_verified_access_endpoint_load_balancer_options(),
%%   <<"NetworkInterfaceOptions">> => create_verified_access_endpoint_eni_options(),
%%   <<"PolicyDocument">> => string(),
%%   <<"RdsOptions">> => create_verified_access_endpoint_rds_options(),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"SseSpecification">> => verified_access_sse_specification_request(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VerifiedAccessGroupId">> := string()
%% }
-type create_verified_access_endpoint_request() :: #{binary() => any()}.

%% Example:
%% deprovision_public_ipv4_pool_cidr_request() :: #{
%%   <<"Cidr">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"PoolId">> := string()
%% }
-type deprovision_public_ipv4_pool_cidr_request() :: #{binary() => any()}.

%% Example:
%% instance_network_performance_options() :: #{
%%   <<"BandwidthWeighting">> => list(any())
%% }
-type instance_network_performance_options() :: #{binary() => any()}.

%% Example:
%% register_transit_gateway_multicast_group_sources_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupIpAddress">> => string(),
%%   <<"NetworkInterfaceIds">> := list(string()),
%%   <<"TransitGatewayMulticastDomainId">> := string()
%% }
-type register_transit_gateway_multicast_group_sources_request() :: #{binary() => any()}.

%% Example:
%% reset_ebs_default_kms_key_id_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type reset_ebs_default_kms_key_id_request() :: #{binary() => any()}.

%% Example:
%% describe_fast_snapshot_restores_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_fast_snapshot_restores_request() :: #{binary() => any()}.

%% Example:
%% describe_capacity_block_extension_offerings_request() :: #{
%%   <<"CapacityBlockExtensionDurationHours">> := integer(),
%%   <<"CapacityReservationId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_block_extension_offerings_request() :: #{binary() => any()}.

%% Example:
%% peering_tgw_info() :: #{
%%   <<"CoreNetworkId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"Region">> => string(),
%%   <<"TransitGatewayId">> => string()
%% }
-type peering_tgw_info() :: #{binary() => any()}.

%% Example:
%% modify_traffic_mirror_filter_network_services_result() :: #{
%%   <<"TrafficMirrorFilter">> => traffic_mirror_filter()
%% }
-type modify_traffic_mirror_filter_network_services_result() :: #{binary() => any()}.

%% Example:
%% ebs_status_details() :: #{
%%   <<"ImpairedSince">> => non_neg_integer(),
%%   <<"Name">> => list(any()),
%%   <<"Status">> => list(any())
%% }
-type ebs_status_details() :: #{binary() => any()}.

%% Example:
%% fleet_launch_template_config_request() :: #{
%%   <<"LaunchTemplateSpecification">> => fleet_launch_template_specification_request(),
%%   <<"Overrides">> => list(fleet_launch_template_overrides_request())
%% }
-type fleet_launch_template_config_request() :: #{binary() => any()}.

%% Example:
%% disassociate_vpc_cidr_block_result() :: #{
%%   <<"CidrBlockAssociation">> => vpc_cidr_block_association(),
%%   <<"Ipv6CidrBlockAssociation">> => vpc_ipv6_cidr_block_association(),
%%   <<"VpcId">> => string()
%% }
-type disassociate_vpc_cidr_block_result() :: #{binary() => any()}.

%% Example:
%% enable_image_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type enable_image_result() :: #{binary() => any()}.

%% Example:
%% disable_vpc_classic_link_dns_support_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type disable_vpc_classic_link_dns_support_result() :: #{binary() => any()}.

%% Example:
%% target_group() :: #{
%%   <<"Arn">> => string()
%% }
-type target_group() :: #{binary() => any()}.

%% Example:
%% vpc_block_public_access_options() :: #{
%%   <<"AwsAccountId">> => string(),
%%   <<"AwsRegion">> => string(),
%%   <<"ExclusionsAllowed">> => list(any()),
%%   <<"InternetGatewayBlockMode">> => list(any()),
%%   <<"LastUpdateTimestamp">> => non_neg_integer(),
%%   <<"ManagedBy">> => list(any()),
%%   <<"Reason">> => string(),
%%   <<"State">> => list(any())
%% }
-type vpc_block_public_access_options() :: #{binary() => any()}.

%% Example:
%% launch_template_hibernation_options_request() :: #{
%%   <<"Configured">> => boolean()
%% }
-type launch_template_hibernation_options_request() :: #{binary() => any()}.

%% Example:
%% describe_fpga_images_result() :: #{
%%   <<"FpgaImages">> => list(fpga_image()),
%%   <<"NextToken">> => string()
%% }
-type describe_fpga_images_result() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_virtual_interface_group_result() :: #{
%%   <<"LocalGatewayVirtualInterfaceGroup">> => local_gateway_virtual_interface_group()
%% }
-type create_local_gateway_virtual_interface_group_result() :: #{binary() => any()}.

%% Example:
%% modify_instance_credit_specification_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceCreditSpecifications">> := list(instance_credit_specification_request())
%% }
-type modify_instance_credit_specification_request() :: #{binary() => any()}.

%% Example:
%% delete_coip_cidr_request() :: #{
%%   <<"Cidr">> := string(),
%%   <<"CoipPoolId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type delete_coip_cidr_request() :: #{binary() => any()}.

%% Example:
%% import_instance_volume_detail_item() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"BytesConverted">> => float(),
%%   <<"Description">> => string(),
%%   <<"Image">> => disk_image_description(),
%%   <<"Status">> => string(),
%%   <<"StatusMessage">> => string(),
%%   <<"Volume">> => disk_image_volume_description()
%% }
-type import_instance_volume_detail_item() :: #{binary() => any()}.

%% Example:
%% authorize_client_vpn_ingress_request() :: #{
%%   <<"AccessGroupId">> => string(),
%%   <<"AuthorizeAllGroups">> => boolean(),
%%   <<"ClientToken">> => string(),
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TargetNetworkCidr">> := string()
%% }
-type authorize_client_vpn_ingress_request() :: #{binary() => any()}.

%% Example:
%% restore_managed_prefix_list_version_request() :: #{
%%   <<"CurrentVersion">> := float(),
%%   <<"DryRun">> => boolean(),
%%   <<"PrefixListId">> := string(),
%%   <<"PreviousVersion">> := float()
%% }
-type restore_managed_prefix_list_version_request() :: #{binary() => any()}.

%% Example:
%% verified_access_endpoint_load_balancer_options() :: #{
%%   <<"LoadBalancerArn">> => string(),
%%   <<"Port">> => integer(),
%%   <<"PortRanges">> => list(verified_access_endpoint_port_range()),
%%   <<"Protocol">> => list(any()),
%%   <<"SubnetIds">> => list(string())
%% }
-type verified_access_endpoint_load_balancer_options() :: #{binary() => any()}.

%% Example:
%% analysis_security_group_rule() :: #{
%%   <<"Cidr">> => string(),
%%   <<"Direction">> => string(),
%%   <<"PortRange">> => port_range(),
%%   <<"PrefixListId">> => string(),
%%   <<"Protocol">> => string(),
%%   <<"SecurityGroupId">> => string()
%% }
-type analysis_security_group_rule() :: #{binary() => any()}.

%% Example:
%% describe_reserved_instances_offerings_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"ReservedInstancesOfferings">> => list(reserved_instances_offering())
%% }
-type describe_reserved_instances_offerings_result() :: #{binary() => any()}.

%% Example:
%% ptr_update_status() :: #{
%%   <<"Reason">> => string(),
%%   <<"Status">> => string(),
%%   <<"Value">> => string()
%% }
-type ptr_update_status() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_services_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"ServiceNames">> => list(string()),
%%   <<"ServiceRegions">> => list(string())
%% }
-type describe_vpc_endpoint_services_request() :: #{binary() => any()}.

%% Example:
%% ebs_instance_block_device() :: #{
%%   <<"AssociatedResource">> => string(),
%%   <<"AttachTime">> => non_neg_integer(),
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Operator">> => operator_response(),
%%   <<"Status">> => list(any()),
%%   <<"VolumeId">> => string(),
%%   <<"VolumeOwnerId">> => string()
%% }
-type ebs_instance_block_device() :: #{binary() => any()}.

%% Example:
%% describe_network_interface_permissions_result() :: #{
%%   <<"NetworkInterfacePermissions">> => list(network_interface_permission()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_interface_permissions_result() :: #{binary() => any()}.

%% Example:
%% create_mac_system_integrity_protection_modification_task_result() :: #{
%%   <<"MacModificationTask">> => mac_modification_task()
%% }
-type create_mac_system_integrity_protection_modification_task_result() :: #{binary() => any()}.

%% Example:
%% start_instances_result() :: #{
%%   <<"StartingInstances">> => list(instance_state_change())
%% }
-type start_instances_result() :: #{binary() => any()}.

%% Example:
%% elastic_inference_accelerator_association() :: #{
%%   <<"ElasticInferenceAcceleratorArn">> => string(),
%%   <<"ElasticInferenceAcceleratorAssociationId">> => string(),
%%   <<"ElasticInferenceAcceleratorAssociationState">> => string(),
%%   <<"ElasticInferenceAcceleratorAssociationTime">> => non_neg_integer()
%% }
-type elastic_inference_accelerator_association() :: #{binary() => any()}.

%% Example:
%% blob_attribute_value() :: #{
%%   <<"Value">> => binary()
%% }
-type blob_attribute_value() :: #{binary() => any()}.

%% Example:
%% allocate_ipam_pool_cidr_result() :: #{
%%   <<"IpamPoolAllocation">> => ipam_pool_allocation()
%% }
-type allocate_ipam_pool_cidr_result() :: #{binary() => any()}.

%% Example:
%% create_managed_prefix_list_request() :: #{
%%   <<"AddressFamily">> := string(),
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Entries">> => list(add_prefix_list_entry()),
%%   <<"MaxEntries">> := integer(),
%%   <<"PrefixListName">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_managed_prefix_list_request() :: #{binary() => any()}.

%% Example:
%% enable_fast_snapshot_restores_result() :: #{
%%   <<"Successful">> => list(enable_fast_snapshot_restore_success_item()),
%%   <<"Unsuccessful">> => list(enable_fast_snapshot_restore_error_item())
%% }
-type enable_fast_snapshot_restores_result() :: #{binary() => any()}.

%% Example:
%% route_server_peer() :: #{
%%   <<"BfdStatus">> => route_server_bfd_status(),
%%   <<"BgpOptions">> => route_server_bgp_options(),
%%   <<"BgpStatus">> => route_server_bgp_status(),
%%   <<"EndpointEniAddress">> => string(),
%%   <<"EndpointEniId">> => string(),
%%   <<"FailureReason">> => string(),
%%   <<"PeerAddress">> => string(),
%%   <<"RouteServerEndpointId">> => string(),
%%   <<"RouteServerId">> => string(),
%%   <<"RouteServerPeerId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"SubnetId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type route_server_peer() :: #{binary() => any()}.

%% Example:
%% deregister_transit_gateway_multicast_group_members_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupIpAddress">> => string(),
%%   <<"NetworkInterfaceIds">> => list(string()),
%%   <<"TransitGatewayMulticastDomainId">> => string()
%% }
-type deregister_transit_gateway_multicast_group_members_request() :: #{binary() => any()}.

%% Example:
%% export_verified_access_instance_client_configuration_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessInstanceId">> := string()
%% }
-type export_verified_access_instance_client_configuration_request() :: #{binary() => any()}.

%% Example:
%% delete_fleet_error_item() :: #{
%%   <<"Error">> => delete_fleet_error(),
%%   <<"FleetId">> => string()
%% }
-type delete_fleet_error_item() :: #{binary() => any()}.

%% Example:
%% target_reservation_value() :: #{
%%   <<"ReservationValue">> => reservation_value(),
%%   <<"TargetConfiguration">> => target_configuration()
%% }
-type target_reservation_value() :: #{binary() => any()}.

%% Example:
%% describe_ipam_scopes_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamScopeIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_scopes_request() :: #{binary() => any()}.

%% Example:
%% spot_fleet_monitoring() :: #{
%%   <<"Enabled">> => boolean()
%% }
-type spot_fleet_monitoring() :: #{binary() => any()}.

%% Example:
%% client_vpn_authorization_rule_status() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type client_vpn_authorization_rule_status() :: #{binary() => any()}.

%% Example:
%% describe_outpost_lags_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"OutpostLagIds">> => list(string())
%% }
-type describe_outpost_lags_request() :: #{binary() => any()}.

%% Example:
%% address_attribute() :: #{
%%   <<"AllocationId">> => string(),
%%   <<"PtrRecord">> => string(),
%%   <<"PtrRecordUpdate">> => ptr_update_status(),
%%   <<"PublicIp">> => string()
%% }
-type address_attribute() :: #{binary() => any()}.

%% Example:
%% launch_template_capacity_reservation_specification_response() :: #{
%%   <<"CapacityReservationPreference">> => list(any()),
%%   <<"CapacityReservationTarget">> => capacity_reservation_target_response()
%% }
-type launch_template_capacity_reservation_specification_response() :: #{binary() => any()}.

%% Example:
%% subnet_cidr_reservation() :: #{
%%   <<"Cidr">> => string(),
%%   <<"Description">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"ReservationType">> => list(any()),
%%   <<"SubnetCidrReservationId">> => string(),
%%   <<"SubnetId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type subnet_cidr_reservation() :: #{binary() => any()}.

%% Example:
%% instance_event_window_association_request() :: #{
%%   <<"DedicatedHostIds">> => list(string()),
%%   <<"InstanceIds">> => list(string()),
%%   <<"InstanceTags">> => list(tag())
%% }
-type instance_event_window_association_request() :: #{binary() => any()}.

%% Example:
%% delete_network_interface_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkInterfaceId">> := string()
%% }
-type delete_network_interface_request() :: #{binary() => any()}.

%% Example:
%% enable_image_deregistration_protection_result() :: #{
%%   <<"Return">> => string()
%% }
-type enable_image_deregistration_protection_result() :: #{binary() => any()}.

%% Example:
%% request_spot_fleet_response() :: #{
%%   <<"SpotFleetRequestId">> => string()
%% }
-type request_spot_fleet_response() :: #{binary() => any()}.

%% Example:
%% describe_iam_instance_profile_associations_request() :: #{
%%   <<"AssociationIds">> => list(string()),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_iam_instance_profile_associations_request() :: #{binary() => any()}.

%% Example:
%% dns_options_specification() :: #{
%%   <<"DnsRecordIpType">> => list(any()),
%%   <<"PrivateDnsOnlyForInboundResolverEndpoint">> => boolean()
%% }
-type dns_options_specification() :: #{binary() => any()}.

%% Example:
%% delete_route_server_result() :: #{
%%   <<"RouteServer">> => route_server()
%% }
-type delete_route_server_result() :: #{binary() => any()}.

%% Example:
%% ipv4_prefix_specification() :: #{
%%   <<"Ipv4Prefix">> => string()
%% }
-type ipv4_prefix_specification() :: #{binary() => any()}.

%% Example:
%% delete_network_insights_access_scope_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkInsightsAccessScopeId">> := string()
%% }
-type delete_network_insights_access_scope_request() :: #{binary() => any()}.

%% Example:
%% associate_instance_event_window_result() :: #{
%%   <<"InstanceEventWindow">> => instance_event_window()
%% }
-type associate_instance_event_window_result() :: #{binary() => any()}.

%% Example:
%% get_password_data_result() :: #{
%%   <<"InstanceId">> => string(),
%%   <<"PasswordData">> => string(),
%%   <<"Timestamp">> => non_neg_integer()
%% }
-type get_password_data_result() :: #{binary() => any()}.

%% Example:
%% describe_ipv6_pools_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"PoolIds">> => list(string())
%% }
-type describe_ipv6_pools_request() :: #{binary() => any()}.

%% Example:
%% verified_access_log_delivery_status() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type verified_access_log_delivery_status() :: #{binary() => any()}.

%% Example:
%% create_network_insights_path_request() :: #{
%%   <<"ClientToken">> := string(),
%%   <<"Destination">> => string(),
%%   <<"DestinationIp">> => string(),
%%   <<"DestinationPort">> => integer(),
%%   <<"DryRun">> => boolean(),
%%   <<"FilterAtDestination">> => path_request_filter(),
%%   <<"FilterAtSource">> => path_request_filter(),
%%   <<"Protocol">> := list(any()),
%%   <<"Source">> := string(),
%%   <<"SourceIp">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_network_insights_path_request() :: #{binary() => any()}.

%% Example:
%% delete_route_request() :: #{
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"DestinationIpv6CidrBlock">> => string(),
%%   <<"DestinationPrefixListId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"RouteTableId">> := string()
%% }
-type delete_route_request() :: #{binary() => any()}.

%% Example:
%% delete_verified_access_group_result() :: #{
%%   <<"VerifiedAccessGroup">> => verified_access_group()
%% }
-type delete_verified_access_group_result() :: #{binary() => any()}.

%% Example:
%% describe_aggregate_id_format_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type describe_aggregate_id_format_request() :: #{binary() => any()}.

%% Example:
%% enable_address_transfer_request() :: #{
%%   <<"AllocationId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TransferAccountId">> := string()
%% }
-type enable_address_transfer_request() :: #{binary() => any()}.

%% Example:
%% bundle_task_error() :: #{
%%   <<"Code">> => string(),
%%   <<"Message">> => string()
%% }
-type bundle_task_error() :: #{binary() => any()}.

%% Example:
%% describe_fleet_history_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"EventType">> => list(any()),
%%   <<"FleetId">> := string(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"StartTime">> := non_neg_integer()
%% }
-type describe_fleet_history_request() :: #{binary() => any()}.

%% Example:
%% list_snapshots_in_recycle_bin_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"SnapshotIds">> => list(string())
%% }
-type list_snapshots_in_recycle_bin_request() :: #{binary() => any()}.

%% Example:
%% unsuccessful_instance_credit_specification_item() :: #{
%%   <<"Error">> => unsuccessful_instance_credit_specification_item_error(),
%%   <<"InstanceId">> => string()
%% }
-type unsuccessful_instance_credit_specification_item() :: #{binary() => any()}.

%% Example:
%% volume_status_action() :: #{
%%   <<"Code">> => string(),
%%   <<"Description">> => string(),
%%   <<"EventId">> => string(),
%%   <<"EventType">> => string()
%% }
-type volume_status_action() :: #{binary() => any()}.

%% Example:
%% create_capacity_reservation_fleet_request() :: #{
%%   <<"AllocationStrategy">> => string(),
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EndDate">> => non_neg_integer(),
%%   <<"InstanceMatchCriteria">> => list(any()),
%%   <<"InstanceTypeSpecifications">> := list(reservation_fleet_instance_specification()),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"Tenancy">> => list(any()),
%%   <<"TotalTargetCapacity">> := integer()
%% }
-type create_capacity_reservation_fleet_request() :: #{binary() => any()}.

%% Example:
%% launch_template_tag_specification() :: #{
%%   <<"ResourceType">> => list(any()),
%%   <<"Tags">> => list(tag())
%% }
-type launch_template_tag_specification() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_route_result() :: #{
%%   <<"Route">> => transit_gateway_route()
%% }
-type create_transit_gateway_route_result() :: #{binary() => any()}.

%% Example:
%% coip_address_usage() :: #{
%%   <<"AllocationId">> => string(),
%%   <<"AwsAccountId">> => string(),
%%   <<"AwsService">> => string(),
%%   <<"CoIp">> => string()
%% }
-type coip_address_usage() :: #{binary() => any()}.

%% Example:
%% get_capacity_reservation_usage_result() :: #{
%%   <<"AvailableInstanceCount">> => integer(),
%%   <<"CapacityReservationId">> => string(),
%%   <<"InstanceType">> => string(),
%%   <<"InstanceUsages">> => list(instance_usage()),
%%   <<"NextToken">> => string(),
%%   <<"State">> => list(any()),
%%   <<"TotalInstanceCount">> => integer()
%% }
-type get_capacity_reservation_usage_result() :: #{binary() => any()}.

%% Example:
%% declarative_policies_report() :: #{
%%   <<"EndTime">> => non_neg_integer(),
%%   <<"ReportId">> => string(),
%%   <<"S3Bucket">> => string(),
%%   <<"S3Prefix">> => string(),
%%   <<"StartTime">> => non_neg_integer(),
%%   <<"Status">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TargetId">> => string()
%% }
-type declarative_policies_report() :: #{binary() => any()}.

%% Example:
%% ipam_discovered_account() :: #{
%%   <<"AccountId">> => string(),
%%   <<"DiscoveryRegion">> => string(),
%%   <<"FailureReason">> => ipam_discovery_failure_reason(),
%%   <<"LastAttemptedDiscoveryTime">> => non_neg_integer(),
%%   <<"LastSuccessfulDiscoveryTime">> => non_neg_integer(),
%%   <<"OrganizationalUnitId">> => string()
%% }
-type ipam_discovered_account() :: #{binary() => any()}.

%% Example:
%% create_verified_access_instance_result() :: #{
%%   <<"VerifiedAccessInstance">> => verified_access_instance()
%% }
-type create_verified_access_instance_result() :: #{binary() => any()}.

%% Example:
%% describe_spot_datafeed_subscription_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type describe_spot_datafeed_subscription_request() :: #{binary() => any()}.

%% Example:
%% create_vpc_endpoint_connection_notification_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"ConnectionEvents">> := list(string()),
%%   <<"ConnectionNotificationArn">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"ServiceId">> => string(),
%%   <<"VpcEndpointId">> => string()
%% }
-type create_vpc_endpoint_connection_notification_request() :: #{binary() => any()}.

%% Example:
%% get_launch_template_data_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string()
%% }
-type get_launch_template_data_request() :: #{binary() => any()}.

%% Example:
%% verified_access_log_options() :: #{
%%   <<"CloudWatchLogs">> => verified_access_log_cloud_watch_logs_destination_options(),
%%   <<"IncludeTrustContext">> => boolean(),
%%   <<"KinesisDataFirehose">> => verified_access_log_kinesis_data_firehose_destination_options(),
%%   <<"LogVersion">> => string(),
%%   <<"S3">> => verified_access_log_s3_destination_options()
%% }
-type verified_access_log_options() :: #{binary() => any()}.

%% Example:
%% create_mac_system_integrity_protection_modification_task_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"MacCredentials">> => string(),
%%   <<"MacSystemIntegrityProtectionConfiguration">> => mac_system_integrity_protection_configuration_request(),
%%   <<"MacSystemIntegrityProtectionStatus">> := list(any()),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_mac_system_integrity_protection_modification_task_request() :: #{binary() => any()}.

%% Example:
%% create_ipam_pool_request() :: #{
%%   <<"AddressFamily">> := list(any()),
%%   <<"AllocationDefaultNetmaskLength">> => integer(),
%%   <<"AllocationMaxNetmaskLength">> => integer(),
%%   <<"AllocationMinNetmaskLength">> => integer(),
%%   <<"AllocationResourceTags">> => list(request_ipam_resource_tag()),
%%   <<"AutoImport">> => boolean(),
%%   <<"AwsService">> => list(any()),
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamScopeId">> := string(),
%%   <<"Locale">> => string(),
%%   <<"PublicIpSource">> => list(any()),
%%   <<"PubliclyAdvertisable">> => boolean(),
%%   <<"SourceIpamPoolId">> => string(),
%%   <<"SourceResource">> => ipam_pool_source_resource_request(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_ipam_pool_request() :: #{binary() => any()}.

%% Example:
%% prefix_list() :: #{
%%   <<"Cidrs">> => list(string()),
%%   <<"PrefixListId">> => string(),
%%   <<"PrefixListName">> => string()
%% }
-type prefix_list() :: #{binary() => any()}.

%% Example:
%% through_resources_statement() :: #{
%%   <<"ResourceStatement">> => resource_statement()
%% }
-type through_resources_statement() :: #{binary() => any()}.

%% Example:
%% delete_coip_pool_result() :: #{
%%   <<"CoipPool">> => coip_pool()
%% }
-type delete_coip_pool_result() :: #{binary() => any()}.

%% Example:
%% security_group_identifier() :: #{
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string()
%% }
-type security_group_identifier() :: #{binary() => any()}.

%% Example:
%% describe_network_interface_attribute_request() :: #{
%%   <<"Attribute">> => list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkInterfaceId">> := string()
%% }
-type describe_network_interface_attribute_request() :: #{binary() => any()}.

%% Example:
%% disassociate_iam_instance_profile_result() :: #{
%%   <<"IamInstanceProfileAssociation">> => iam_instance_profile_association()
%% }
-type disassociate_iam_instance_profile_result() :: #{binary() => any()}.

%% Example:
%% delete_ipam_resource_discovery_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"IpamResourceDiscoveryId">> := string()
%% }
-type delete_ipam_resource_discovery_request() :: #{binary() => any()}.

%% Example:
%% subscription() :: #{
%%   <<"Destination">> => string(),
%%   <<"Metric">> => list(any()),
%%   <<"Period">> => list(any()),
%%   <<"Source">> => string(),
%%   <<"Statistic">> => list(any())
%% }
-type subscription() :: #{binary() => any()}.

%% Example:
%% delete_fleet_error() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type delete_fleet_error() :: #{binary() => any()}.

%% Example:
%% launch_template() :: #{
%%   <<"CreateTime">> => non_neg_integer(),
%%   <<"CreatedBy">> => string(),
%%   <<"DefaultVersionNumber">> => float(),
%%   <<"LatestVersionNumber">> => float(),
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"Operator">> => operator_response(),
%%   <<"Tags">> => list(tag())
%% }
-type launch_template() :: #{binary() => any()}.

%% Example:
%% modify_instance_metadata_defaults_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_instance_metadata_defaults_result() :: #{binary() => any()}.

%% Example:
%% import_instance_task_details() :: #{
%%   <<"Description">> => string(),
%%   <<"InstanceId">> => string(),
%%   <<"Platform">> => list(any()),
%%   <<"Volumes">> => list(import_instance_volume_detail_item())
%% }
-type import_instance_task_details() :: #{binary() => any()}.

%% Example:
%% delete_customer_gateway_request() :: #{
%%   <<"CustomerGatewayId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type delete_customer_gateway_request() :: #{binary() => any()}.

%% Example:
%% create_verified_access_trust_provider_oidc_options() :: #{
%%   <<"AuthorizationEndpoint">> => string(),
%%   <<"ClientId">> => string(),
%%   <<"ClientSecret">> => string(),
%%   <<"Issuer">> => string(),
%%   <<"Scope">> => string(),
%%   <<"TokenEndpoint">> => string(),
%%   <<"UserInfoEndpoint">> => string()
%% }
-type create_verified_access_trust_provider_oidc_options() :: #{binary() => any()}.

%% Example:
%% create_network_interface_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"ConnectionTrackingSpecification">> => connection_tracking_specification_request(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EnablePrimaryIpv6">> => boolean(),
%%   <<"Groups">> => list(string()),
%%   <<"InterfaceType">> => list(any()),
%%   <<"Ipv4PrefixCount">> => integer(),
%%   <<"Ipv4Prefixes">> => list(ipv4_prefix_specification_request()),
%%   <<"Ipv6AddressCount">> => integer(),
%%   <<"Ipv6Addresses">> => list(instance_ipv6_address()),
%%   <<"Ipv6PrefixCount">> => integer(),
%%   <<"Ipv6Prefixes">> => list(ipv6_prefix_specification_request()),
%%   <<"Operator">> => operator_request(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"PrivateIpAddresses">> => list(private_ip_address_specification()),
%%   <<"SecondaryPrivateIpAddressCount">> => integer(),
%%   <<"SubnetId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_network_interface_request() :: #{binary() => any()}.

%% Example:
%% describe_fpga_images_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"FpgaImageIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"Owners">> => list(string())
%% }
-type describe_fpga_images_request() :: #{binary() => any()}.

%% Example:
%% get_vpn_tunnel_replacement_status_result() :: #{
%%   <<"CustomerGatewayId">> => string(),
%%   <<"MaintenanceDetails">> => maintenance_details(),
%%   <<"TransitGatewayId">> => string(),
%%   <<"VpnConnectionId">> => string(),
%%   <<"VpnGatewayId">> => string(),
%%   <<"VpnTunnelOutsideIpAddress">> => string()
%% }
-type get_vpn_tunnel_replacement_status_result() :: #{binary() => any()}.

%% Example:
%% delete_verified_access_instance_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"VerifiedAccessInstanceId">> := string()
%% }
-type delete_verified_access_instance_request() :: #{binary() => any()}.

%% Example:
%% route_server_propagation() :: #{
%%   <<"RouteServerId">> => string(),
%%   <<"RouteTableId">> => string(),
%%   <<"State">> => list(any())
%% }
-type route_server_propagation() :: #{binary() => any()}.

%% Example:
%% describe_client_vpn_connections_request() :: #{
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_client_vpn_connections_request() :: #{binary() => any()}.

%% Example:
%% describe_capacity_block_offerings_request() :: #{
%%   <<"CapacityDurationHours">> := integer(),
%%   <<"DryRun">> => boolean(),
%%   <<"EndDateRange">> => non_neg_integer(),
%%   <<"InstanceCount">> => integer(),
%%   <<"InstanceType">> => string(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"StartDateRange">> => non_neg_integer(),
%%   <<"UltraserverCount">> => integer(),
%%   <<"UltraserverType">> => string()
%% }
-type describe_capacity_block_offerings_request() :: #{binary() => any()}.

%% Example:
%% delete_fpga_image_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"FpgaImageId">> := string()
%% }
-type delete_fpga_image_request() :: #{binary() => any()}.

%% Example:
%% account_attribute() :: #{
%%   <<"AttributeName">> => string(),
%%   <<"AttributeValues">> => list(account_attribute_value())
%% }
-type account_attribute() :: #{binary() => any()}.

%% Example:
%% start_network_insights_analysis_result() :: #{
%%   <<"NetworkInsightsAnalysis">> => network_insights_analysis()
%% }
-type start_network_insights_analysis_result() :: #{binary() => any()}.

%% Example:
%% describe_route_server_peers_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"RouteServerPeers">> => list(route_server_peer())
%% }
-type describe_route_server_peers_result() :: #{binary() => any()}.

%% Example:
%% fleet_capacity_reservation() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"CapacityReservationId">> => string(),
%%   <<"CreateDate">> => non_neg_integer(),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"FulfilledCapacity">> => float(),
%%   <<"InstancePlatform">> => list(any()),
%%   <<"InstanceType">> => list(any()),
%%   <<"Priority">> => integer(),
%%   <<"TotalInstanceCount">> => integer(),
%%   <<"Weight">> => float()
%% }
-type fleet_capacity_reservation() :: #{binary() => any()}.

%% Example:
%% modify_instance_placement_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_instance_placement_result() :: #{binary() => any()}.

%% Example:
%% describe_launch_template_versions_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"MaxResults">> => integer(),
%%   <<"MaxVersion">> => string(),
%%   <<"MinVersion">> => string(),
%%   <<"NextToken">> => string(),
%%   <<"ResolveAlias">> => boolean(),
%%   <<"Versions">> => list(string())
%% }
-type describe_launch_template_versions_request() :: #{binary() => any()}.

%% Example:
%% describe_fast_launch_images_success_item() :: #{
%%   <<"ImageId">> => string(),
%%   <<"LaunchTemplate">> => fast_launch_launch_template_specification_response(),
%%   <<"MaxParallelLaunches">> => integer(),
%%   <<"OwnerId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"SnapshotConfiguration">> => fast_launch_snapshot_configuration_response(),
%%   <<"State">> => list(any()),
%%   <<"StateTransitionReason">> => string(),
%%   <<"StateTransitionTime">> => non_neg_integer()
%% }
-type describe_fast_launch_images_success_item() :: #{binary() => any()}.

%% Example:
%% revoke_security_group_egress_request() :: #{
%%   <<"CidrIp">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"FromPort">> => integer(),
%%   <<"GroupId">> := string(),
%%   <<"IpPermissions">> => list(ip_permission()),
%%   <<"IpProtocol">> => string(),
%%   <<"SecurityGroupRuleIds">> => list(string()),
%%   <<"SourceSecurityGroupName">> => string(),
%%   <<"SourceSecurityGroupOwnerId">> => string(),
%%   <<"ToPort">> => integer()
%% }
-type revoke_security_group_egress_request() :: #{binary() => any()}.

%% Example:
%% describe_aws_network_performance_metric_subscriptions_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_aws_network_performance_metric_subscriptions_request() :: #{binary() => any()}.

%% Example:
%% modify_reserved_instances_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"ReservedInstancesIds">> := list(string()),
%%   <<"TargetConfigurations">> := list(reserved_instances_configuration())
%% }
-type modify_reserved_instances_request() :: #{binary() => any()}.

%% Example:
%% instance_ipv4_prefix() :: #{
%%   <<"Ipv4Prefix">> => string()
%% }
-type instance_ipv4_prefix() :: #{binary() => any()}.

%% Example:
%% disassociate_client_vpn_target_network_result() :: #{
%%   <<"AssociationId">> => string(),
%%   <<"Status">> => association_status()
%% }
-type disassociate_client_vpn_target_network_result() :: #{binary() => any()}.

%% Example:
%% start_instances_request() :: #{
%%   <<"AdditionalInfo">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceIds">> := list(string())
%% }
-type start_instances_request() :: #{binary() => any()}.

%% Example:
%% describe_carrier_gateways_request() :: #{
%%   <<"CarrierGatewayIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_carrier_gateways_request() :: #{binary() => any()}.

%% Example:
%% create_snapshots_result() :: #{
%%   <<"Snapshots">> => list(snapshot_info())
%% }
-type create_snapshots_result() :: #{binary() => any()}.

%% Example:
%% get_associated_enclave_certificate_iam_roles_result() :: #{
%%   <<"AssociatedRoles">> => list(associated_role())
%% }
-type get_associated_enclave_certificate_iam_roles_result() :: #{binary() => any()}.

%% Example:
%% create_replace_root_volume_task_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DeleteReplacedRootVolume">> => boolean(),
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> => string(),
%%   <<"InstanceId">> := string(),
%%   <<"SnapshotId">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VolumeInitializationRate">> => float()
%% }
-type create_replace_root_volume_task_request() :: #{binary() => any()}.

%% Example:
%% modify_vpn_connection_options_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalIpv4NetworkCidr">> => string(),
%%   <<"LocalIpv6NetworkCidr">> => string(),
%%   <<"RemoteIpv4NetworkCidr">> => string(),
%%   <<"RemoteIpv6NetworkCidr">> => string(),
%%   <<"VpnConnectionId">> := string()
%% }
-type modify_vpn_connection_options_request() :: #{binary() => any()}.

%% Example:
%% get_ipam_pool_allocations_result() :: #{
%%   <<"IpamPoolAllocations">> => list(ipam_pool_allocation()),
%%   <<"NextToken">> => string()
%% }
-type get_ipam_pool_allocations_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_multicast_deregistered_group_sources() :: #{
%%   <<"DeregisteredNetworkInterfaceIds">> => list(string()),
%%   <<"GroupIpAddress">> => string(),
%%   <<"TransitGatewayMulticastDomainId">> => string()
%% }
-type transit_gateway_multicast_deregistered_group_sources() :: #{binary() => any()}.

%% Example:
%% describe_instance_type_offerings_result() :: #{
%%   <<"InstanceTypeOfferings">> => list(instance_type_offering()),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_type_offerings_result() :: #{binary() => any()}.

%% Example:
%% on_demand_options_request() :: #{
%%   <<"AllocationStrategy">> => list(any()),
%%   <<"CapacityReservationOptions">> => capacity_reservation_options_request(),
%%   <<"MaxTotalPrice">> => string(),
%%   <<"MinTargetCapacity">> => integer(),
%%   <<"SingleAvailabilityZone">> => boolean(),
%%   <<"SingleInstanceType">> => boolean()
%% }
-type on_demand_options_request() :: #{binary() => any()}.

%% Example:
%% disable_serial_console_access_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type disable_serial_console_access_request() :: #{binary() => any()}.

%% Example:
%% create_route_server_endpoint_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"RouteServerId">> := string(),
%%   <<"SubnetId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_route_server_endpoint_request() :: #{binary() => any()}.

%% Example:
%% enable_fast_snapshot_restore_error_item() :: #{
%%   <<"FastSnapshotRestoreStateErrors">> => list(enable_fast_snapshot_restore_state_error_item()),
%%   <<"SnapshotId">> => string()
%% }
-type enable_fast_snapshot_restore_error_item() :: #{binary() => any()}.

%% Example:
%% fpga_image_attribute() :: #{
%%   <<"Description">> => string(),
%%   <<"FpgaImageId">> => string(),
%%   <<"LoadPermissions">> => list(load_permission()),
%%   <<"Name">> => string(),
%%   <<"ProductCodes">> => list(product_code())
%% }
-type fpga_image_attribute() :: #{binary() => any()}.

%% Example:
%% security_group_rule_update() :: #{
%%   <<"SecurityGroupRule">> => security_group_rule_request(),
%%   <<"SecurityGroupRuleId">> => string()
%% }
-type security_group_rule_update() :: #{binary() => any()}.

%% Example:
%% scheduled_instances_ipv6_address() :: #{
%%   <<"Ipv6Address">> => string()
%% }
-type scheduled_instances_ipv6_address() :: #{binary() => any()}.

%% Example:
%% get_vpn_tunnel_replacement_status_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpnConnectionId">> := string(),
%%   <<"VpnTunnelOutsideIpAddress">> := string()
%% }
-type get_vpn_tunnel_replacement_status_request() :: #{binary() => any()}.

%% Example:
%% vpn_tunnel_log_options_specification() :: #{
%%   <<"CloudWatchLogOptions">> => cloud_watch_log_options_specification()
%% }
-type vpn_tunnel_log_options_specification() :: #{binary() => any()}.

%% Example:
%% describe_instance_connect_endpoints_result() :: #{
%%   <<"InstanceConnectEndpoints">> => list(ec2_instance_connect_endpoint()),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_connect_endpoints_result() :: #{binary() => any()}.

%% Example:
%% describe_launch_templates_result() :: #{
%%   <<"LaunchTemplates">> => list(launch_template()),
%%   <<"NextToken">> => string()
%% }
-type describe_launch_templates_result() :: #{binary() => any()}.

%% Example:
%% modify_managed_prefix_list_result() :: #{
%%   <<"PrefixList">> => managed_prefix_list()
%% }
-type modify_managed_prefix_list_result() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_prefix_list_reference_result() :: #{
%%   <<"TransitGatewayPrefixListReference">> => transit_gateway_prefix_list_reference()
%% }
-type delete_transit_gateway_prefix_list_reference_result() :: #{binary() => any()}.

%% Example:
%% cancelled_spot_instance_request() :: #{
%%   <<"SpotInstanceRequestId">> => string(),
%%   <<"State">> => list(any())
%% }
-type cancelled_spot_instance_request() :: #{binary() => any()}.

%% Example:
%% describe_ipams_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_ipams_request() :: #{binary() => any()}.

%% Example:
%% associate_route_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GatewayId">> => string(),
%%   <<"RouteTableId">> := string(),
%%   <<"SubnetId">> => string()
%% }
-type associate_route_table_request() :: #{binary() => any()}.

%% Example:
%% directory_service_authentication() :: #{
%%   <<"DirectoryId">> => string()
%% }
-type directory_service_authentication() :: #{binary() => any()}.

%% Example:
%% copy_image_result() :: #{
%%   <<"ImageId">> => string()
%% }
-type copy_image_result() :: #{binary() => any()}.

%% Example:
%% describe_instances_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Reservations">> => list(reservation())
%% }
-type describe_instances_result() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_connection_notifications_request() :: #{
%%   <<"ConnectionNotificationId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_vpc_endpoint_connection_notifications_request() :: #{binary() => any()}.

%% Example:
%% delete_ipam_resource_discovery_result() :: #{
%%   <<"IpamResourceDiscovery">> => ipam_resource_discovery()
%% }
-type delete_ipam_resource_discovery_result() :: #{binary() => any()}.

%% Example:
%% moving_address_status() :: #{
%%   <<"MoveStatus">> => list(any()),
%%   <<"PublicIp">> => string()
%% }
-type moving_address_status() :: #{binary() => any()}.

%% Example:
%% describe_elastic_gpus_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ElasticGpuIds">> => list(string()),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_elastic_gpus_request() :: #{binary() => any()}.

%% Example:
%% oidc_options() :: #{
%%   <<"AuthorizationEndpoint">> => string(),
%%   <<"ClientId">> => string(),
%%   <<"ClientSecret">> => string(),
%%   <<"Issuer">> => string(),
%%   <<"Scope">> => string(),
%%   <<"TokenEndpoint">> => string(),
%%   <<"UserInfoEndpoint">> => string()
%% }
-type oidc_options() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_virtual_interface_group_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayVirtualInterfaceGroupId">> := string()
%% }
-type delete_local_gateway_virtual_interface_group_request() :: #{binary() => any()}.

%% Example:
%% describe_snapshots_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"OwnerIds">> => list(string()),
%%   <<"RestorableByUserIds">> => list(string()),
%%   <<"SnapshotIds">> => list(string())
%% }
-type describe_snapshots_request() :: #{binary() => any()}.

%% Example:
%% disable_fast_snapshot_restore_state_error() :: #{
%%   <<"Code">> => string(),
%%   <<"Message">> => string()
%% }
-type disable_fast_snapshot_restore_state_error() :: #{binary() => any()}.

%% Example:
%% disassociate_iam_instance_profile_request() :: #{
%%   <<"AssociationId">> := string()
%% }
-type disassociate_iam_instance_profile_request() :: #{binary() => any()}.

%% Example:
%% dhcp_configuration() :: #{
%%   <<"Key">> => string(),
%%   <<"Values">> => list(attribute_value())
%% }
-type dhcp_configuration() :: #{binary() => any()}.

%% Example:
%% classic_load_balancers_config() :: #{
%%   <<"ClassicLoadBalancers">> => list(classic_load_balancer())
%% }
-type classic_load_balancers_config() :: #{binary() => any()}.

%% Example:
%% network_bandwidth_gbps() :: #{
%%   <<"Max">> => float(),
%%   <<"Min">> => float()
%% }
-type network_bandwidth_gbps() :: #{binary() => any()}.

%% Example:
%% ebs_optimized_info() :: #{
%%   <<"BaselineBandwidthInMbps">> => integer(),
%%   <<"BaselineIops">> => integer(),
%%   <<"BaselineThroughputInMBps">> => float(),
%%   <<"MaximumBandwidthInMbps">> => integer(),
%%   <<"MaximumIops">> => integer(),
%%   <<"MaximumThroughputInMBps">> => float()
%% }
-type ebs_optimized_info() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_route_table_announcement_result() :: #{
%%   <<"TransitGatewayRouteTableAnnouncement">> => transit_gateway_route_table_announcement()
%% }
-type create_transit_gateway_route_table_announcement_result() :: #{binary() => any()}.

%% Example:
%% withdraw_byoip_cidr_request() :: #{
%%   <<"Cidr">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type withdraw_byoip_cidr_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_multicast_domain_options() :: #{
%%   <<"AutoAcceptSharedAssociations">> => list(any()),
%%   <<"Igmpv2Support">> => list(any()),
%%   <<"StaticSourcesSupport">> => list(any())
%% }
-type transit_gateway_multicast_domain_options() :: #{binary() => any()}.

%% Example:
%% transit_gateway_propagation() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"State">> => list(any()),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayRouteTableAnnouncementId">> => string(),
%%   <<"TransitGatewayRouteTableId">> => string()
%% }
-type transit_gateway_propagation() :: #{binary() => any()}.

%% Example:
%% restore_image_from_recycle_bin_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string()
%% }
-type restore_image_from_recycle_bin_request() :: #{binary() => any()}.

%% Example:
%% delete_coip_cidr_result() :: #{
%%   <<"CoipCidr">> => coip_cidr()
%% }
-type delete_coip_cidr_result() :: #{binary() => any()}.

%% Example:
%% describe_host_reservation_offerings_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"OfferingSet">> => list(host_offering())
%% }
-type describe_host_reservation_offerings_result() :: #{binary() => any()}.

%% Example:
%% launch_template_instance_market_options() :: #{
%%   <<"MarketType">> => list(any()),
%%   <<"SpotOptions">> => launch_template_spot_market_options()
%% }
-type launch_template_instance_market_options() :: #{binary() => any()}.

%% Example:
%% revoke_client_vpn_ingress_request() :: #{
%%   <<"AccessGroupId">> => string(),
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"RevokeAllGroups">> => boolean(),
%%   <<"TargetNetworkCidr">> := string()
%% }
-type revoke_client_vpn_ingress_request() :: #{binary() => any()}.

%% Example:
%% security_group_rule_request() :: #{
%%   <<"CidrIpv4">> => string(),
%%   <<"CidrIpv6">> => string(),
%%   <<"Description">> => string(),
%%   <<"FromPort">> => integer(),
%%   <<"IpProtocol">> => string(),
%%   <<"PrefixListId">> => string(),
%%   <<"ReferencedGroupId">> => string(),
%%   <<"ToPort">> => integer()
%% }
-type security_group_rule_request() :: #{binary() => any()}.

%% Example:
%% host_instance() :: #{
%%   <<"InstanceId">> => string(),
%%   <<"InstanceType">> => string(),
%%   <<"OwnerId">> => string()
%% }
-type host_instance() :: #{binary() => any()}.

%% Example:
%% describe_vpn_gateways_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"VpnGatewayIds">> => list(string())
%% }
-type describe_vpn_gateways_request() :: #{binary() => any()}.

%% Example:
%% delete_instance_connect_endpoint_result() :: #{
%%   <<"InstanceConnectEndpoint">> => ec2_instance_connect_endpoint()
%% }
-type delete_instance_connect_endpoint_result() :: #{binary() => any()}.

%% Example:
%% describe_export_image_tasks_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ExportImageTaskIds">> => list(string()),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_export_image_tasks_request() :: #{binary() => any()}.

%% Example:
%% modify_ipam_request() :: #{
%%   <<"AddOperatingRegions">> => list(add_ipam_operating_region()),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EnablePrivateGua">> => boolean(),
%%   <<"IpamId">> := string(),
%%   <<"MeteredAccount">> => list(any()),
%%   <<"RemoveOperatingRegions">> => list(remove_ipam_operating_region()),
%%   <<"Tier">> => list(any())
%% }
-type modify_ipam_request() :: #{binary() => any()}.

%% Example:
%% local_gateway_route_table() :: #{
%%   <<"LocalGatewayId">> => string(),
%%   <<"LocalGatewayRouteTableArn">> => string(),
%%   <<"LocalGatewayRouteTableId">> => string(),
%%   <<"Mode">> => list(any()),
%%   <<"OutpostArn">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => string(),
%%   <<"StateReason">> => state_reason(),
%%   <<"Tags">> => list(tag())
%% }
-type local_gateway_route_table() :: #{binary() => any()}.

%% Example:
%% describe_snapshot_tier_status_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_snapshot_tier_status_request() :: #{binary() => any()}.

%% Example:
%% describe_capacity_reservation_fleets_result() :: #{
%%   <<"CapacityReservationFleets">> => list(capacity_reservation_fleet()),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_reservation_fleets_result() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_service_permissions_result() :: #{
%%   <<"AllowedPrincipals">> => list(allowed_principal()),
%%   <<"NextToken">> => string()
%% }
-type describe_vpc_endpoint_service_permissions_result() :: #{binary() => any()}.

%% Example:
%% get_spot_placement_scores_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"SpotPlacementScores">> => list(spot_placement_score())
%% }
-type get_spot_placement_scores_result() :: #{binary() => any()}.

%% Example:
%% disable_image_deprecation_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string()
%% }
-type disable_image_deprecation_request() :: #{binary() => any()}.

%% Example:
%% describe_traffic_mirror_filter_rules_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TrafficMirrorFilterId">> => string(),
%%   <<"TrafficMirrorFilterRuleIds">> => list(string())
%% }
-type describe_traffic_mirror_filter_rules_request() :: #{binary() => any()}.

%% Example:
%% inference_device_info() :: #{
%%   <<"Count">> => integer(),
%%   <<"Manufacturer">> => string(),
%%   <<"MemoryInfo">> => inference_device_memory_info(),
%%   <<"Name">> => string()
%% }
-type inference_device_info() :: #{binary() => any()}.

%% Example:
%% attach_network_interface_result() :: #{
%%   <<"AttachmentId">> => string(),
%%   <<"NetworkCardIndex">> => integer()
%% }
-type attach_network_interface_result() :: #{binary() => any()}.

%% Example:
%% associate_route_table_result() :: #{
%%   <<"AssociationId">> => string(),
%%   <<"AssociationState">> => route_table_association_state()
%% }
-type associate_route_table_result() :: #{binary() => any()}.

%% Example:
%% disassociate_instance_event_window_result() :: #{
%%   <<"InstanceEventWindow">> => instance_event_window()
%% }
-type disassociate_instance_event_window_result() :: #{binary() => any()}.

%% Example:
%% modify_address_attribute_request() :: #{
%%   <<"AllocationId">> := string(),
%%   <<"DomainName">> => string(),
%%   <<"DryRun">> => boolean()
%% }
-type modify_address_attribute_request() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_native_application_oidc_options() :: #{
%%   <<"AuthorizationEndpoint">> => string(),
%%   <<"ClientId">> => string(),
%%   <<"ClientSecret">> => string(),
%%   <<"Issuer">> => string(),
%%   <<"PublicSigningKeyEndpoint">> => string(),
%%   <<"Scope">> => string(),
%%   <<"TokenEndpoint">> => string(),
%%   <<"UserInfoEndpoint">> => string()
%% }
-type modify_verified_access_native_application_oidc_options() :: #{binary() => any()}.

%% Example:
%% import_snapshot_task() :: #{
%%   <<"Description">> => string(),
%%   <<"ImportTaskId">> => string(),
%%   <<"SnapshotTaskDetail">> => snapshot_task_detail(),
%%   <<"Tags">> => list(tag())
%% }
-type import_snapshot_task() :: #{binary() => any()}.

%% Example:
%% replace_route_table_association_result() :: #{
%%   <<"AssociationState">> => route_table_association_state(),
%%   <<"NewAssociationId">> => string()
%% }
-type replace_route_table_association_result() :: #{binary() => any()}.

%% Example:
%% disable_image_deprecation_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type disable_image_deprecation_result() :: #{binary() => any()}.

%% Example:
%% cpu_performance_factor_request() :: #{
%%   <<"References">> => list(performance_factor_reference_request())
%% }
-type cpu_performance_factor_request() :: #{binary() => any()}.

%% Example:
%% availability_zone_message() :: #{
%%   <<"Message">> => string()
%% }
-type availability_zone_message() :: #{binary() => any()}.

%% Example:
%% reject_transit_gateway_multicast_domain_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SubnetIds">> => list(string()),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayMulticastDomainId">> => string()
%% }
-type reject_transit_gateway_multicast_domain_associations_request() :: #{binary() => any()}.

%% Example:
%% metric_point() :: #{
%%   <<"EndDate">> => non_neg_integer(),
%%   <<"StartDate">> => non_neg_integer(),
%%   <<"Status">> => string(),
%%   <<"Value">> => float()
%% }
-type metric_point() :: #{binary() => any()}.

%% Example:
%% delete_launch_template_versions_response_error_item() :: #{
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"ResponseError">> => response_error(),
%%   <<"VersionNumber">> => float()
%% }
-type delete_launch_template_versions_response_error_item() :: #{binary() => any()}.

%% Example:
%% get_verified_access_endpoint_targets_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VerifiedAccessEndpointId">> := string()
%% }
-type get_verified_access_endpoint_targets_request() :: #{binary() => any()}.

%% Example:
%% security_group_reference() :: #{
%%   <<"GroupId">> => string(),
%%   <<"ReferencingVpcId">> => string(),
%%   <<"TransitGatewayId">> => string(),
%%   <<"VpcPeeringConnectionId">> => string()
%% }
-type security_group_reference() :: #{binary() => any()}.

%% Example:
%% get_ipam_resource_cidrs_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IpamPoolId">> => string(),
%%   <<"IpamScopeId">> := string(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"ResourceId">> => string(),
%%   <<"ResourceOwner">> => string(),
%%   <<"ResourceTag">> => request_ipam_resource_tag(),
%%   <<"ResourceType">> => list(any())
%% }
-type get_ipam_resource_cidrs_request() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_virtual_interface_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LocalAddress">> := string(),
%%   <<"LocalGatewayVirtualInterfaceGroupId">> := string(),
%%   <<"OutpostLagId">> := string(),
%%   <<"PeerAddress">> := string(),
%%   <<"PeerBgpAsn">> => integer(),
%%   <<"PeerBgpAsnExtended">> => float(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"Vlan">> := integer()
%% }
-type create_local_gateway_virtual_interface_request() :: #{binary() => any()}.

%% Example:
%% volume_modification() :: #{
%%   <<"EndTime">> => non_neg_integer(),
%%   <<"ModificationState">> => list(any()),
%%   <<"OriginalIops">> => integer(),
%%   <<"OriginalMultiAttachEnabled">> => boolean(),
%%   <<"OriginalSize">> => integer(),
%%   <<"OriginalThroughput">> => integer(),
%%   <<"OriginalVolumeType">> => list(any()),
%%   <<"Progress">> => float(),
%%   <<"StartTime">> => non_neg_integer(),
%%   <<"StatusMessage">> => string(),
%%   <<"TargetIops">> => integer(),
%%   <<"TargetMultiAttachEnabled">> => boolean(),
%%   <<"TargetSize">> => integer(),
%%   <<"TargetThroughput">> => integer(),
%%   <<"TargetVolumeType">> => list(any()),
%%   <<"VolumeId">> => string()
%% }
-type volume_modification() :: #{binary() => any()}.

%% Example:
%% describe_subnets_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Subnets">> => list(subnet())
%% }
-type describe_subnets_result() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_peering_attachment_result() :: #{
%%   <<"TransitGatewayPeeringAttachment">> => transit_gateway_peering_attachment()
%% }
-type create_transit_gateway_peering_attachment_result() :: #{binary() => any()}.

%% Example:
%% describe_prefix_lists_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"PrefixListIds">> => list(string())
%% }
-type describe_prefix_lists_request() :: #{binary() => any()}.

%% Example:
%% client_certificate_revocation_list_status() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type client_certificate_revocation_list_status() :: #{binary() => any()}.

%% Example:
%% describe_instance_topology_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"GroupNames">> => list(string()),
%%   <<"InstanceIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_topology_request() :: #{binary() => any()}.

%% Example:
%% replace_vpn_tunnel_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type replace_vpn_tunnel_result() :: #{binary() => any()}.

%% Example:
%% modify_ebs_default_kms_key_id_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"KmsKeyId">> := string()
%% }
-type modify_ebs_default_kms_key_id_request() :: #{binary() => any()}.

%% Example:
%% reservation_fleet_instance_specification() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"EbsOptimized">> => boolean(),
%%   <<"InstancePlatform">> => list(any()),
%%   <<"InstanceType">> => list(any()),
%%   <<"Priority">> => integer(),
%%   <<"Weight">> => float()
%% }
-type reservation_fleet_instance_specification() :: #{binary() => any()}.

%% Example:
%% target_configuration() :: #{
%%   <<"InstanceCount">> => integer(),
%%   <<"OfferingId">> => string()
%% }
-type target_configuration() :: #{binary() => any()}.

%% Example:
%% public_ipv4_pool() :: #{
%%   <<"Description">> => string(),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"PoolAddressRanges">> => list(public_ipv4_pool_range()),
%%   <<"PoolId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"TotalAddressCount">> => integer(),
%%   <<"TotalAvailableAddressCount">> => integer()
%% }
-type public_ipv4_pool() :: #{binary() => any()}.

%% Example:
%% additional_detail() :: #{
%%   <<"AdditionalDetailType">> => string(),
%%   <<"Component">> => analysis_component(),
%%   <<"LoadBalancers">> => list(analysis_component()),
%%   <<"RuleGroupRuleOptionsPairs">> => list(rule_group_rule_options_pair()),
%%   <<"RuleGroupTypePairs">> => list(rule_group_type_pair()),
%%   <<"RuleOptions">> => list(rule_option()),
%%   <<"ServiceName">> => string(),
%%   <<"VpcEndpointService">> => analysis_component()
%% }
-type additional_detail() :: #{binary() => any()}.

%% Example:
%% delete_traffic_mirror_filter_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TrafficMirrorFilterId">> := string()
%% }
-type delete_traffic_mirror_filter_request() :: #{binary() => any()}.

%% Example:
%% get_network_insights_access_scope_analysis_findings_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NetworkInsightsAccessScopeAnalysisId">> := string(),
%%   <<"NextToken">> => string()
%% }
-type get_network_insights_access_scope_analysis_findings_request() :: #{binary() => any()}.

%% Example:
%% phase2_d_h_group_numbers_request_list_value() :: #{
%%   <<"Value">> => integer()
%% }
-type phase2_d_h_group_numbers_request_list_value() :: #{binary() => any()}.

%% Example:
%% launch_template_specification() :: #{
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string(),
%%   <<"Version">> => string()
%% }
-type launch_template_specification() :: #{binary() => any()}.

%% Example:
%% describe_instance_event_windows_result() :: #{
%%   <<"InstanceEventWindows">> => list(instance_event_window()),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_event_windows_result() :: #{binary() => any()}.

%% Example:
%% move_address_to_vpc_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"PublicIp">> := string()
%% }
-type move_address_to_vpc_request() :: #{binary() => any()}.

%% Example:
%% ipam_public_address_security_group() :: #{
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string()
%% }
-type ipam_public_address_security_group() :: #{binary() => any()}.

%% Example:
%% modify_vpn_tunnel_certificate_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpnConnectionId">> := string(),
%%   <<"VpnTunnelOutsideIpAddress">> := string()
%% }
-type modify_vpn_tunnel_certificate_request() :: #{binary() => any()}.

%% Example:
%% disable_allowed_images_settings_result() :: #{
%%   <<"AllowedImagesSettingsState">> => list(any())
%% }
-type disable_allowed_images_settings_result() :: #{binary() => any()}.

%% Example:
%% modify_vpc_endpoint_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type modify_vpc_endpoint_result() :: #{binary() => any()}.

%% Example:
%% describe_customer_gateways_request() :: #{
%%   <<"CustomerGatewayIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter())
%% }
-type describe_customer_gateways_request() :: #{binary() => any()}.

%% Example:
%% apply_security_groups_to_client_vpn_target_network_result() :: #{
%%   <<"SecurityGroupIds">> => list(string())
%% }
-type apply_security_groups_to_client_vpn_target_network_result() :: #{binary() => any()}.

%% Example:
%% prefix_list_entry() :: #{
%%   <<"Cidr">> => string(),
%%   <<"Description">> => string()
%% }
-type prefix_list_entry() :: #{binary() => any()}.

%% Example:
%% describe_aws_network_performance_metric_subscriptions_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Subscriptions">> => list(subscription())
%% }
-type describe_aws_network_performance_metric_subscriptions_result() :: #{binary() => any()}.

%% Example:
%% vpn_connection_options() :: #{
%%   <<"EnableAcceleration">> => boolean(),
%%   <<"LocalIpv4NetworkCidr">> => string(),
%%   <<"LocalIpv6NetworkCidr">> => string(),
%%   <<"OutsideIpAddressType">> => string(),
%%   <<"RemoteIpv4NetworkCidr">> => string(),
%%   <<"RemoteIpv6NetworkCidr">> => string(),
%%   <<"StaticRoutesOnly">> => boolean(),
%%   <<"TransportTransitGatewayAttachmentId">> => string(),
%%   <<"TunnelInsideIpVersion">> => list(any()),
%%   <<"TunnelOptions">> => list(tunnel_option())
%% }
-type vpn_connection_options() :: #{binary() => any()}.

%% Example:
%% describe_fleets_result() :: #{
%%   <<"Fleets">> => list(fleet_data()),
%%   <<"NextToken">> => string()
%% }
-type describe_fleets_result() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_endpoint_policy_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"PolicyDocument">> => string(),
%%   <<"PolicyEnabled">> => boolean(),
%%   <<"SseSpecification">> => verified_access_sse_specification_request(),
%%   <<"VerifiedAccessEndpointId">> := string()
%% }
-type modify_verified_access_endpoint_policy_request() :: #{binary() => any()}.

%% Example:
%% describe_export_image_tasks_result() :: #{
%%   <<"ExportImageTasks">> => list(export_image_task()),
%%   <<"NextToken">> => string()
%% }
-type describe_export_image_tasks_result() :: #{binary() => any()}.

%% Example:
%% delete_local_gateway_route_table_result() :: #{
%%   <<"LocalGatewayRouteTable">> => local_gateway_route_table()
%% }
-type delete_local_gateway_route_table_result() :: #{binary() => any()}.

%% Example:
%% cancel_image_launch_permission_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type cancel_image_launch_permission_result() :: #{binary() => any()}.

%% Example:
%% describe_volume_status_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VolumeIds">> => list(string())
%% }
-type describe_volume_status_request() :: #{binary() => any()}.

%% Example:
%% connection_tracking_configuration() :: #{
%%   <<"TcpEstablishedTimeout">> => integer(),
%%   <<"UdpStreamTimeout">> => integer(),
%%   <<"UdpTimeout">> => integer()
%% }
-type connection_tracking_configuration() :: #{binary() => any()}.

%% Example:
%% create_verified_access_group_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"PolicyDocument">> => string(),
%%   <<"SseSpecification">> => verified_access_sse_specification_request(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VerifiedAccessInstanceId">> := string()
%% }
-type create_verified_access_group_request() :: #{binary() => any()}.

%% Example:
%% network_insights_analysis() :: #{
%%   <<"AdditionalAccounts">> => list(string()),
%%   <<"AlternatePathHints">> => list(alternate_path_hint()),
%%   <<"Explanations">> => list(explanation()),
%%   <<"FilterInArns">> => list(string()),
%%   <<"FilterOutArns">> => list(string()),
%%   <<"ForwardPathComponents">> => list(path_component()),
%%   <<"NetworkInsightsAnalysisArn">> => string(),
%%   <<"NetworkInsightsAnalysisId">> => string(),
%%   <<"NetworkInsightsPathId">> => string(),
%%   <<"NetworkPathFound">> => boolean(),
%%   <<"ReturnPathComponents">> => list(path_component()),
%%   <<"StartDate">> => non_neg_integer(),
%%   <<"Status">> => list(any()),
%%   <<"StatusMessage">> => string(),
%%   <<"SuggestedAccounts">> => list(string()),
%%   <<"Tags">> => list(tag()),
%%   <<"WarningMessage">> => string()
%% }
-type network_insights_analysis() :: #{binary() => any()}.

%% Example:
%% create_vpc_block_public_access_exclusion_result() :: #{
%%   <<"VpcBlockPublicAccessExclusion">> => vpc_block_public_access_exclusion()
%% }
-type create_vpc_block_public_access_exclusion_result() :: #{binary() => any()}.

%% Example:
%% describe_import_snapshot_tasks_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"ImportTaskIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_import_snapshot_tasks_request() :: #{binary() => any()}.

%% Example:
%% create_route_server_request() :: #{
%%   <<"AmazonSideAsn">> := float(),
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"PersistRoutes">> => list(any()),
%%   <<"PersistRoutesDuration">> => float(),
%%   <<"SnsNotificationsEnabled">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_route_server_request() :: #{binary() => any()}.

%% Example:
%% prefix_list_association() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceOwner">> => string()
%% }
-type prefix_list_association() :: #{binary() => any()}.

%% Example:
%% release_hosts_request() :: #{
%%   <<"HostIds">> := list(string())
%% }
-type release_hosts_request() :: #{binary() => any()}.

%% Example:
%% get_allowed_images_settings_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type get_allowed_images_settings_request() :: #{binary() => any()}.

%% Example:
%% verified_access_sse_specification_response() :: #{
%%   <<"CustomerManagedKeyEnabled">> => boolean(),
%%   <<"KmsKeyArn">> => string()
%% }
-type verified_access_sse_specification_response() :: #{binary() => any()}.

%% Example:
%% destination_options_request() :: #{
%%   <<"FileFormat">> => list(any()),
%%   <<"HiveCompatiblePartitions">> => boolean(),
%%   <<"PerHourPartition">> => boolean()
%% }
-type destination_options_request() :: #{binary() => any()}.

%% Example:
%% describe_volumes_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Volumes">> => list(volume())
%% }
-type describe_volumes_result() :: #{binary() => any()}.

%% Example:
%% memory_mi_b_request() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type memory_mi_b_request() :: #{binary() => any()}.

%% Example:
%% network_interface_count_request() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type network_interface_count_request() :: #{binary() => any()}.

%% Example:
%% get_flow_logs_integration_template_result() :: #{
%%   <<"Result">> => string()
%% }
-type get_flow_logs_integration_template_result() :: #{binary() => any()}.

%% Example:
%% describe_tags_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Tags">> => list(tag_description())
%% }
-type describe_tags_result() :: #{binary() => any()}.

%% Example:
%% instance_status() :: #{
%%   <<"AttachedEbsStatus">> => ebs_status_summary(),
%%   <<"AvailabilityZone">> => string(),
%%   <<"Events">> => list(instance_status_event()),
%%   <<"InstanceId">> => string(),
%%   <<"InstanceState">> => instance_state(),
%%   <<"InstanceStatus">> => instance_status_summary(),
%%   <<"Operator">> => operator_response(),
%%   <<"OutpostArn">> => string(),
%%   <<"SystemStatus">> => instance_status_summary()
%% }
-type instance_status() :: #{binary() => any()}.

%% Example:
%% scheduled_instances_placement() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"GroupName">> => string()
%% }
-type scheduled_instances_placement() :: #{binary() => any()}.

%% Example:
%% i_k_e_versions_list_value() :: #{
%%   <<"Value">> => string()
%% }
-type i_k_e_versions_list_value() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_route_tables_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayRouteTableIds">> => list(string())
%% }
-type describe_transit_gateway_route_tables_request() :: #{binary() => any()}.

%% Example:
%% principal_id_format() :: #{
%%   <<"Arn">> => string(),
%%   <<"Statuses">> => list(id_format())
%% }
-type principal_id_format() :: #{binary() => any()}.

%% Example:
%% dns_entry() :: #{
%%   <<"DnsName">> => string(),
%%   <<"HostedZoneId">> => string()
%% }
-type dns_entry() :: #{binary() => any()}.

%% Example:
%% get_ipam_resource_cidrs_result() :: #{
%%   <<"IpamResourceCidrs">> => list(ipam_resource_cidr()),
%%   <<"NextToken">> => string()
%% }
-type get_ipam_resource_cidrs_result() :: #{binary() => any()}.

%% Example:
%% enable_fast_launch_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string(),
%%   <<"LaunchTemplate">> => fast_launch_launch_template_specification_request(),
%%   <<"MaxParallelLaunches">> => integer(),
%%   <<"ResourceType">> => string(),
%%   <<"SnapshotConfiguration">> => fast_launch_snapshot_configuration_request()
%% }
-type enable_fast_launch_request() :: #{binary() => any()}.

%% Example:
%% through_resources_statement_request() :: #{
%%   <<"ResourceStatement">> => resource_statement_request()
%% }
-type through_resources_statement_request() :: #{binary() => any()}.

%% Example:
%% modify_transit_gateway_vpc_attachment_request() :: #{
%%   <<"AddSubnetIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Options">> => modify_transit_gateway_vpc_attachment_request_options(),
%%   <<"RemoveSubnetIds">> => list(string()),
%%   <<"TransitGatewayAttachmentId">> := string()
%% }
-type modify_transit_gateway_vpc_attachment_request() :: #{binary() => any()}.

%% Example:
%% total_local_storage_g_b() :: #{
%%   <<"Max">> => float(),
%%   <<"Min">> => float()
%% }
-type total_local_storage_g_b() :: #{binary() => any()}.

%% Example:
%% cancel_capacity_reservation_fleets_request() :: #{
%%   <<"CapacityReservationFleetIds">> := list(string()),
%%   <<"DryRun">> => boolean()
%% }
-type cancel_capacity_reservation_fleets_request() :: #{binary() => any()}.

%% Example:
%% fpga_device_memory_info() :: #{
%%   <<"SizeInMiB">> => integer()
%% }
-type fpga_device_memory_info() :: #{binary() => any()}.

%% Example:
%% accept_vpc_endpoint_connections_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ServiceId">> := string(),
%%   <<"VpcEndpointIds">> := list(string())
%% }
-type accept_vpc_endpoint_connections_request() :: #{binary() => any()}.

%% Example:
%% describe_aggregate_id_format_result() :: #{
%%   <<"Statuses">> => list(id_format()),
%%   <<"UseLongIdsAggregated">> => boolean()
%% }
-type describe_aggregate_id_format_result() :: #{binary() => any()}.

%% Example:
%% delete_launch_template_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"LaunchTemplateId">> => string(),
%%   <<"LaunchTemplateName">> => string()
%% }
-type delete_launch_template_request() :: #{binary() => any()}.

%% Example:
%% alternate_path_hint() :: #{
%%   <<"ComponentArn">> => string(),
%%   <<"ComponentId">> => string()
%% }
-type alternate_path_hint() :: #{binary() => any()}.

%% Example:
%% describe_regions_result() :: #{
%%   <<"Regions">> => list(region())
%% }
-type describe_regions_result() :: #{binary() => any()}.

%% Example:
%% ipam_organizational_unit_exclusion() :: #{
%%   <<"OrganizationsEntityPath">> => string()
%% }
-type ipam_organizational_unit_exclusion() :: #{binary() => any()}.

%% Example:
%% transit_gateway_vpc_attachment_options() :: #{
%%   <<"ApplianceModeSupport">> => list(any()),
%%   <<"DnsSupport">> => list(any()),
%%   <<"Ipv6Support">> => list(any()),
%%   <<"SecurityGroupReferencingSupport">> => list(any())
%% }
-type transit_gateway_vpc_attachment_options() :: #{binary() => any()}.

%% Example:
%% terminate_connection_status() :: #{
%%   <<"ConnectionId">> => string(),
%%   <<"CurrentStatus">> => client_vpn_connection_status(),
%%   <<"PreviousStatus">> => client_vpn_connection_status()
%% }
-type terminate_connection_status() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_policy_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayPolicyTableId">> := string()
%% }
-type delete_transit_gateway_policy_table_request() :: #{binary() => any()}.

%% Example:
%% disable_address_transfer_request() :: #{
%%   <<"AllocationId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type disable_address_transfer_request() :: #{binary() => any()}.

%% Example:
%% describe_host_reservations_request() :: #{
%%   <<"Filter">> => list(filter()),
%%   <<"HostReservationIdSet">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_host_reservations_request() :: #{binary() => any()}.

%% Example:
%% create_transit_gateway_policy_table_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TransitGatewayId">> := string()
%% }
-type create_transit_gateway_policy_table_request() :: #{binary() => any()}.

%% Example:
%% describe_traffic_mirror_filters_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TrafficMirrorFilterIds">> => list(string())
%% }
-type describe_traffic_mirror_filters_request() :: #{binary() => any()}.

%% Example:
%% describe_tags_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_tags_request() :: #{binary() => any()}.

%% Example:
%% referenced_security_group() :: #{
%%   <<"GroupId">> => string(),
%%   <<"PeeringStatus">> => string(),
%%   <<"UserId">> => string(),
%%   <<"VpcId">> => string(),
%%   <<"VpcPeeringConnectionId">> => string()
%% }
-type referenced_security_group() :: #{binary() => any()}.

%% Example:
%% regional_summary() :: #{
%%   <<"NumberOfMatchedAccounts">> => integer(),
%%   <<"NumberOfUnmatchedAccounts">> => integer(),
%%   <<"RegionName">> => string()
%% }
-type regional_summary() :: #{binary() => any()}.

%% Example:
%% revoke_security_group_ingress_result() :: #{
%%   <<"Return">> => boolean(),
%%   <<"RevokedSecurityGroupRules">> => list(revoked_security_group_rule()),
%%   <<"UnknownIpPermissions">> => list(ip_permission())
%% }
-type revoke_security_group_ingress_result() :: #{binary() => any()}.

%% Example:
%% fleet_launch_template_overrides_request() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"BlockDeviceMappings">> => list(fleet_block_device_mapping_request()),
%%   <<"ImageId">> => string(),
%%   <<"InstanceRequirements">> => instance_requirements_request(),
%%   <<"InstanceType">> => list(any()),
%%   <<"MaxPrice">> => string(),
%%   <<"Placement">> => placement(),
%%   <<"Priority">> => float(),
%%   <<"SubnetId">> => string(),
%%   <<"WeightedCapacity">> => float()
%% }
-type fleet_launch_template_overrides_request() :: #{binary() => any()}.

%% Example:
%% create_route_request() :: #{
%%   <<"CarrierGatewayId">> => string(),
%%   <<"CoreNetworkArn">> => string(),
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"DestinationIpv6CidrBlock">> => string(),
%%   <<"DestinationPrefixListId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EgressOnlyInternetGatewayId">> => string(),
%%   <<"GatewayId">> => string(),
%%   <<"InstanceId">> => string(),
%%   <<"LocalGatewayId">> => string(),
%%   <<"NatGatewayId">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"OdbNetworkArn">> => string(),
%%   <<"RouteTableId">> := string(),
%%   <<"TransitGatewayId">> => string(),
%%   <<"VpcEndpointId">> => string(),
%%   <<"VpcPeeringConnectionId">> => string()
%% }
-type create_route_request() :: #{binary() => any()}.

%% Example:
%% total_local_storage_g_b_request() :: #{
%%   <<"Max">> => float(),
%%   <<"Min">> => float()
%% }
-type total_local_storage_g_b_request() :: #{binary() => any()}.

%% Example:
%% fleet_spot_maintenance_strategies_request() :: #{
%%   <<"CapacityRebalance">> => fleet_spot_capacity_rebalance_request()
%% }
-type fleet_spot_maintenance_strategies_request() :: #{binary() => any()}.

%% Example:
%% associate_security_group_vpc_result() :: #{
%%   <<"State">> => list(any())
%% }
-type associate_security_group_vpc_result() :: #{binary() => any()}.

%% Example:
%% associate_client_vpn_target_network_result() :: #{
%%   <<"AssociationId">> => string(),
%%   <<"Status">> => association_status()
%% }
-type associate_client_vpn_target_network_result() :: #{binary() => any()}.

%% Example:
%% ipam_pool_source_resource_request() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceOwner">> => string(),
%%   <<"ResourceRegion">> => string(),
%%   <<"ResourceType">> => list(any())
%% }
-type ipam_pool_source_resource_request() :: #{binary() => any()}.

%% Example:
%% get_host_reservation_purchase_preview_request() :: #{
%%   <<"HostIdSet">> := list(string()),
%%   <<"OfferingId">> := string()
%% }
-type get_host_reservation_purchase_preview_request() :: #{binary() => any()}.

%% Example:
%% describe_elastic_gpus_result() :: #{
%%   <<"ElasticGpuSet">> => list(elastic_gpus()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_elastic_gpus_result() :: #{binary() => any()}.

%% Example:
%% describe_capacity_blocks_result() :: #{
%%   <<"CapacityBlocks">> => list(capacity_block()),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_blocks_result() :: #{binary() => any()}.

%% Example:
%% create_verified_access_endpoint_load_balancer_options() :: #{
%%   <<"LoadBalancerArn">> => string(),
%%   <<"Port">> => integer(),
%%   <<"PortRanges">> => list(create_verified_access_endpoint_port_range()),
%%   <<"Protocol">> => list(any()),
%%   <<"SubnetIds">> => list(string())
%% }
-type create_verified_access_endpoint_load_balancer_options() :: #{binary() => any()}.

%% Example:
%% cancel_export_task_request() :: #{
%%   <<"ExportTaskId">> := string()
%% }
-type cancel_export_task_request() :: #{binary() => any()}.

%% Example:
%% instance_maintenance_options_request() :: #{
%%   <<"AutoRecovery">> => list(any())
%% }
-type instance_maintenance_options_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_attachment_association() :: #{
%%   <<"State">> => list(any()),
%%   <<"TransitGatewayRouteTableId">> => string()
%% }
-type transit_gateway_attachment_association() :: #{binary() => any()}.

%% Example:
%% request_spot_instances_result() :: #{
%%   <<"SpotInstanceRequests">> => list(spot_instance_request())
%% }
-type request_spot_instances_result() :: #{binary() => any()}.

%% Example:
%% create_dhcp_options_result() :: #{
%%   <<"DhcpOptions">> => dhcp_options()
%% }
-type create_dhcp_options_result() :: #{binary() => any()}.

%% Example:
%% disassociate_ipam_byoasn_result() :: #{
%%   <<"AsnAssociation">> => asn_association()
%% }
-type disassociate_ipam_byoasn_result() :: #{binary() => any()}.

%% Example:
%% neuron_device_core_info() :: #{
%%   <<"Count">> => integer(),
%%   <<"Version">> => integer()
%% }
-type neuron_device_core_info() :: #{binary() => any()}.

%% Example:
%% purchase_capacity_block_result() :: #{
%%   <<"CapacityBlocks">> => list(capacity_block()),
%%   <<"CapacityReservation">> => capacity_reservation()
%% }
-type purchase_capacity_block_result() :: #{binary() => any()}.

%% Example:
%% transit_gateway_request_options() :: #{
%%   <<"AmazonSideAsn">> => float(),
%%   <<"AutoAcceptSharedAttachments">> => list(any()),
%%   <<"DefaultRouteTableAssociation">> => list(any()),
%%   <<"DefaultRouteTablePropagation">> => list(any()),
%%   <<"DnsSupport">> => list(any()),
%%   <<"MulticastSupport">> => list(any()),
%%   <<"SecurityGroupReferencingSupport">> => list(any()),
%%   <<"TransitGatewayCidrBlocks">> => list(string()),
%%   <<"VpnEcmpSupport">> => list(any())
%% }
-type transit_gateway_request_options() :: #{binary() => any()}.

%% Example:
%% client_vpn_connection() :: #{
%%   <<"ClientIp">> => string(),
%%   <<"ClientVpnEndpointId">> => string(),
%%   <<"CommonName">> => string(),
%%   <<"ConnectionEndTime">> => string(),
%%   <<"ConnectionEstablishedTime">> => string(),
%%   <<"ConnectionId">> => string(),
%%   <<"EgressBytes">> => string(),
%%   <<"EgressPackets">> => string(),
%%   <<"IngressBytes">> => string(),
%%   <<"IngressPackets">> => string(),
%%   <<"PostureComplianceStatuses">> => list(string()),
%%   <<"Status">> => client_vpn_connection_status(),
%%   <<"Timestamp">> => string(),
%%   <<"Username">> => string()
%% }
-type client_vpn_connection() :: #{binary() => any()}.

%% Example:
%% store_image_task_result() :: #{
%%   <<"AmiId">> => string(),
%%   <<"Bucket">> => string(),
%%   <<"ProgressPercentage">> => integer(),
%%   <<"S3objectKey">> => string(),
%%   <<"StoreTaskFailureReason">> => string(),
%%   <<"StoreTaskState">> => string(),
%%   <<"TaskStartTime">> => non_neg_integer()
%% }
-type store_image_task_result() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_service_configurations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"ServiceIds">> => list(string())
%% }
-type describe_vpc_endpoint_service_configurations_request() :: #{binary() => any()}.

%% Example:
%% deregister_transit_gateway_multicast_group_sources_result() :: #{
%%   <<"DeregisteredMulticastGroupSources">> => transit_gateway_multicast_deregistered_group_sources()
%% }
-type deregister_transit_gateway_multicast_group_sources_result() :: #{binary() => any()}.

%% Example:
%% get_spot_placement_scores_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceRequirementsWithMetadata">> => instance_requirements_with_metadata_request(),
%%   <<"InstanceTypes">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"RegionNames">> => list(string()),
%%   <<"SingleAvailabilityZone">> => boolean(),
%%   <<"TargetCapacity">> := integer(),
%%   <<"TargetCapacityUnitType">> => list(any())
%% }
-type get_spot_placement_scores_request() :: #{binary() => any()}.

%% Example:
%% describe_import_image_tasks_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"ImportTaskIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_import_image_tasks_request() :: #{binary() => any()}.

%% Example:
%% describe_client_vpn_routes_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"Routes">> => list(client_vpn_route())
%% }
-type describe_client_vpn_routes_result() :: #{binary() => any()}.

%% Example:
%% pricing_detail() :: #{
%%   <<"Count">> => integer(),
%%   <<"Price">> => float()
%% }
-type pricing_detail() :: #{binary() => any()}.

%% Example:
%% packet_header_statement_request() :: #{
%%   <<"DestinationAddresses">> => list(string()),
%%   <<"DestinationPorts">> => list(string()),
%%   <<"DestinationPrefixLists">> => list(string()),
%%   <<"Protocols">> => list(list(any())()),
%%   <<"SourceAddresses">> => list(string()),
%%   <<"SourcePorts">> => list(string()),
%%   <<"SourcePrefixLists">> => list(string())
%% }
-type packet_header_statement_request() :: #{binary() => any()}.

%% Example:
%% modify_default_credit_specification_request() :: #{
%%   <<"CpuCredits">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceFamily">> := list(any())
%% }
-type modify_default_credit_specification_request() :: #{binary() => any()}.

%% Example:
%% history_record() :: #{
%%   <<"EventInformation">> => event_information(),
%%   <<"EventType">> => list(any()),
%%   <<"Timestamp">> => non_neg_integer()
%% }
-type history_record() :: #{binary() => any()}.

%% Example:
%% vpc_peering_connection() :: #{
%%   <<"AccepterVpcInfo">> => vpc_peering_connection_vpc_info(),
%%   <<"ExpirationTime">> => non_neg_integer(),
%%   <<"RequesterVpcInfo">> => vpc_peering_connection_vpc_info(),
%%   <<"Status">> => vpc_peering_connection_state_reason(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcPeeringConnectionId">> => string()
%% }
-type vpc_peering_connection() :: #{binary() => any()}.

%% Example:
%% accelerator_total_memory_mi_b() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type accelerator_total_memory_mi_b() :: #{binary() => any()}.

%% Example:
%% reserved_instances_configuration() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"InstanceCount">> => integer(),
%%   <<"InstanceType">> => list(any()),
%%   <<"Platform">> => string(),
%%   <<"Scope">> => list(any())
%% }
-type reserved_instances_configuration() :: #{binary() => any()}.

%% Example:
%% withdraw_byoip_cidr_result() :: #{
%%   <<"ByoipCidr">> => byoip_cidr()
%% }
-type withdraw_byoip_cidr_result() :: #{binary() => any()}.

%% Example:
%% create_store_image_task_request() :: #{
%%   <<"Bucket">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"ImageId">> := string(),
%%   <<"S3ObjectTags">> => list(s3_object_tag())
%% }
-type create_store_image_task_request() :: #{binary() => any()}.

%% Example:
%% modify_vpc_tenancy_result() :: #{
%%   <<"ReturnValue">> => boolean()
%% }
-type modify_vpc_tenancy_result() :: #{binary() => any()}.

%% Example:
%% create_network_interface_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"NetworkInterface">> => network_interface()
%% }
-type create_network_interface_result() :: #{binary() => any()}.

%% Example:
%% get_console_output_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string(),
%%   <<"Latest">> => boolean()
%% }
-type get_console_output_request() :: #{binary() => any()}.

%% Example:
%% release_hosts_result() :: #{
%%   <<"Successful">> => list(string()),
%%   <<"Unsuccessful">> => list(unsuccessful_item())
%% }
-type release_hosts_result() :: #{binary() => any()}.

%% Example:
%% disk_info() :: #{
%%   <<"Count">> => integer(),
%%   <<"SizeInGB">> => float(),
%%   <<"Type">> => list(any())
%% }
-type disk_info() :: #{binary() => any()}.

%% Example:
%% get_declarative_policies_report_summary_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ReportId">> := string()
%% }
-type get_declarative_policies_report_summary_request() :: #{binary() => any()}.

%% Example:
%% create_public_ipv4_pool_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_public_ipv4_pool_request() :: #{binary() => any()}.

%% Example:
%% host_reservation() :: #{
%%   <<"Count">> => integer(),
%%   <<"CurrencyCode">> => list(any()),
%%   <<"Duration">> => integer(),
%%   <<"End">> => non_neg_integer(),
%%   <<"HostIdSet">> => list(string()),
%%   <<"HostReservationId">> => string(),
%%   <<"HourlyPrice">> => string(),
%%   <<"InstanceFamily">> => string(),
%%   <<"OfferingId">> => string(),
%%   <<"PaymentOption">> => list(any()),
%%   <<"Start">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"UpfrontPrice">> => string()
%% }
-type host_reservation() :: #{binary() => any()}.

%% Example:
%% describe_key_pairs_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"IncludePublicKey">> => boolean(),
%%   <<"KeyNames">> => list(string()),
%%   <<"KeyPairIds">> => list(string())
%% }
-type describe_key_pairs_request() :: #{binary() => any()}.

%% Example:
%% modify_traffic_mirror_filter_rule_result() :: #{
%%   <<"TrafficMirrorFilterRule">> => traffic_mirror_filter_rule()
%% }
-type modify_traffic_mirror_filter_rule_result() :: #{binary() => any()}.

%% Example:
%% destination_options_response() :: #{
%%   <<"FileFormat">> => list(any()),
%%   <<"HiveCompatiblePartitions">> => boolean(),
%%   <<"PerHourPartition">> => boolean()
%% }
-type destination_options_response() :: #{binary() => any()}.

%% Example:
%% cancel_declarative_policies_report_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ReportId">> := string()
%% }
-type cancel_declarative_policies_report_request() :: #{binary() => any()}.

%% Example:
%% ipv6_prefix_specification_response() :: #{
%%   <<"Ipv6Prefix">> => string()
%% }
-type ipv6_prefix_specification_response() :: #{binary() => any()}.

%% Example:
%% get_ipam_address_history_result() :: #{
%%   <<"HistoryRecords">> => list(ipam_address_history_record()),
%%   <<"NextToken">> => string()
%% }
-type get_ipam_address_history_result() :: #{binary() => any()}.

%% Example:
%% slot_date_time_range_request() :: #{
%%   <<"EarliestTime">> => non_neg_integer(),
%%   <<"LatestTime">> => non_neg_integer()
%% }
-type slot_date_time_range_request() :: #{binary() => any()}.

%% Example:
%% reserved_instance_limit_price() :: #{
%%   <<"Amount">> => float(),
%%   <<"CurrencyCode">> => list(any())
%% }
-type reserved_instance_limit_price() :: #{binary() => any()}.

%% Example:
%% describe_ipam_byoasn_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_byoasn_request() :: #{binary() => any()}.

%% Example:
%% report_instance_status_request() :: #{
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"EndTime">> => non_neg_integer(),
%%   <<"Instances">> := list(string()),
%%   <<"ReasonCodes">> := list(list(any())()),
%%   <<"StartTime">> => non_neg_integer(),
%%   <<"Status">> := list(any())
%% }
-type report_instance_status_request() :: #{binary() => any()}.

%% Example:
%% instance_image_metadata() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"ImageMetadata">> => image_metadata(),
%%   <<"InstanceId">> => string(),
%%   <<"InstanceType">> => list(any()),
%%   <<"LaunchTime">> => non_neg_integer(),
%%   <<"Operator">> => operator_response(),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => instance_state(),
%%   <<"Tags">> => list(tag()),
%%   <<"ZoneId">> => string()
%% }
-type instance_image_metadata() :: #{binary() => any()}.

%% Example:
%% reset_fpga_image_attribute_request() :: #{
%%   <<"Attribute">> => list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"FpgaImageId">> := string()
%% }
-type reset_fpga_image_attribute_request() :: #{binary() => any()}.

%% Example:
%% integrate_services() :: #{
%%   <<"AthenaIntegrations">> => list(athena_integration())
%% }
-type integrate_services() :: #{binary() => any()}.

%% Example:
%% create_traffic_mirror_filter_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"TrafficMirrorFilter">> => traffic_mirror_filter()
%% }
-type create_traffic_mirror_filter_result() :: #{binary() => any()}.

%% Example:
%% create_verified_access_trust_provider_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DeviceOptions">> => create_verified_access_trust_provider_device_options(),
%%   <<"DeviceTrustProviderType">> => list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"NativeApplicationOidcOptions">> => create_verified_access_native_application_oidc_options(),
%%   <<"OidcOptions">> => create_verified_access_trust_provider_oidc_options(),
%%   <<"PolicyReferenceName">> := string(),
%%   <<"SseSpecification">> => verified_access_sse_specification_request(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TrustProviderType">> := list(any()),
%%   <<"UserTrustProviderType">> => list(any())
%% }
-type create_verified_access_trust_provider_request() :: #{binary() => any()}.

%% Example:
%% address() :: #{
%%   <<"AllocationId">> => string(),
%%   <<"AssociationId">> => string(),
%%   <<"CarrierIp">> => string(),
%%   <<"CustomerOwnedIp">> => string(),
%%   <<"CustomerOwnedIpv4Pool">> => string(),
%%   <<"Domain">> => list(any()),
%%   <<"InstanceId">> => string(),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"NetworkInterfaceOwnerId">> => string(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"PublicIp">> => string(),
%%   <<"PublicIpv4Pool">> => string(),
%%   <<"ServiceManaged">> => list(any()),
%%   <<"SubnetId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type address() :: #{binary() => any()}.

%% Example:
%% modify_transit_gateway_vpc_attachment_result() :: #{
%%   <<"TransitGatewayVpcAttachment">> => transit_gateway_vpc_attachment()
%% }
-type modify_transit_gateway_vpc_attachment_result() :: #{binary() => any()}.

%% Example:
%% unlock_snapshot_result() :: #{
%%   <<"SnapshotId">> => string()
%% }
-type unlock_snapshot_result() :: #{binary() => any()}.

%% Example:
%% run_instances_monitoring_enabled() :: #{
%%   <<"Enabled">> => boolean()
%% }
-type run_instances_monitoring_enabled() :: #{binary() => any()}.

%% Example:
%% get_capacity_reservation_usage_request() :: #{
%%   <<"CapacityReservationId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type get_capacity_reservation_usage_request() :: #{binary() => any()}.

%% Example:
%% create_traffic_mirror_filter_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_traffic_mirror_filter_request() :: #{binary() => any()}.

%% Example:
%% replace_transit_gateway_route_request() :: #{
%%   <<"Blackhole">> => boolean(),
%%   <<"DestinationCidrBlock">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayRouteTableId">> := string()
%% }
-type replace_transit_gateway_route_request() :: #{binary() => any()}.

%% Example:
%% describe_spot_fleet_requests_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"SpotFleetRequestIds">> => list(string())
%% }
-type describe_spot_fleet_requests_request() :: #{binary() => any()}.

%% Example:
%% customer_gateway() :: #{
%%   <<"BgpAsn">> => string(),
%%   <<"BgpAsnExtended">> => string(),
%%   <<"CertificateArn">> => string(),
%%   <<"CustomerGatewayId">> => string(),
%%   <<"DeviceName">> => string(),
%%   <<"IpAddress">> => string(),
%%   <<"State">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"Type">> => string()
%% }
-type customer_gateway() :: #{binary() => any()}.

%% Example:
%% add_ipam_operating_region() :: #{
%%   <<"RegionName">> => string()
%% }
-type add_ipam_operating_region() :: #{binary() => any()}.

%% Example:
%% get_declarative_policies_report_summary_result() :: #{
%%   <<"AttributeSummaries">> => list(attribute_summary()),
%%   <<"EndTime">> => non_neg_integer(),
%%   <<"NumberOfAccounts">> => integer(),
%%   <<"NumberOfFailedAccounts">> => integer(),
%%   <<"ReportId">> => string(),
%%   <<"S3Bucket">> => string(),
%%   <<"S3Prefix">> => string(),
%%   <<"StartTime">> => non_neg_integer(),
%%   <<"TargetId">> => string()
%% }
-type get_declarative_policies_report_summary_result() :: #{binary() => any()}.

%% Example:
%% delete_vpn_connection_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpnConnectionId">> := string()
%% }
-type delete_vpn_connection_request() :: #{binary() => any()}.

%% Example:
%% get_active_vpn_tunnel_status_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpnConnectionId">> := string(),
%%   <<"VpnTunnelOutsideIpAddress">> := string()
%% }
-type get_active_vpn_tunnel_status_request() :: #{binary() => any()}.

%% Example:
%% release_ipam_pool_allocation_request() :: #{
%%   <<"Cidr">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamPoolAllocationId">> := string(),
%%   <<"IpamPoolId">> := string()
%% }
-type release_ipam_pool_allocation_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_vpc_attachment() :: #{
%%   <<"CreationTime">> => non_neg_integer(),
%%   <<"Options">> => transit_gateway_vpc_attachment_options(),
%%   <<"State">> => list(any()),
%%   <<"SubnetIds">> => list(string()),
%%   <<"Tags">> => list(tag()),
%%   <<"TransitGatewayAttachmentId">> => string(),
%%   <<"TransitGatewayId">> => string(),
%%   <<"VpcId">> => string(),
%%   <<"VpcOwnerId">> => string()
%% }
-type transit_gateway_vpc_attachment() :: #{binary() => any()}.

%% Example:
%% instance_event_window_state_change() :: #{
%%   <<"InstanceEventWindowId">> => string(),
%%   <<"State">> => list(any())
%% }
-type instance_event_window_state_change() :: #{binary() => any()}.

%% Example:
%% baseline_ebs_bandwidth_mbps() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type baseline_ebs_bandwidth_mbps() :: #{binary() => any()}.

%% Example:
%% purchase_reserved_instances_offering_result() :: #{
%%   <<"ReservedInstancesId">> => string()
%% }
-type purchase_reserved_instances_offering_result() :: #{binary() => any()}.

%% Example:
%% describe_snapshot_attribute_result() :: #{
%%   <<"CreateVolumePermissions">> => list(create_volume_permission()),
%%   <<"ProductCodes">> => list(product_code()),
%%   <<"SnapshotId">> => string()
%% }
-type describe_snapshot_attribute_result() :: #{binary() => any()}.

%% Example:
%% delete_snapshot_return_code() :: #{
%%   <<"ReturnCode">> => list(any()),
%%   <<"SnapshotId">> => string()
%% }
-type delete_snapshot_return_code() :: #{binary() => any()}.

%% Example:
%% describe_transit_gateway_multicast_domains_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayMulticastDomains">> => list(transit_gateway_multicast_domain())
%% }
-type describe_transit_gateway_multicast_domains_result() :: #{binary() => any()}.

%% Example:
%% verified_access_group() :: #{
%%   <<"CreationTime">> => string(),
%%   <<"DeletionTime">> => string(),
%%   <<"Description">> => string(),
%%   <<"LastUpdatedTime">> => string(),
%%   <<"Owner">> => string(),
%%   <<"SseSpecification">> => verified_access_sse_specification_response(),
%%   <<"Tags">> => list(tag()),
%%   <<"VerifiedAccessGroupArn">> => string(),
%%   <<"VerifiedAccessGroupId">> => string(),
%%   <<"VerifiedAccessInstanceId">> => string()
%% }
-type verified_access_group() :: #{binary() => any()}.

%% Example:
%% cancel_spot_fleet_requests_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SpotFleetRequestIds">> := list(string()),
%%   <<"TerminateInstances">> := boolean()
%% }
-type cancel_spot_fleet_requests_request() :: #{binary() => any()}.

%% Example:
%% disable_snapshot_block_public_access_result() :: #{
%%   <<"State">> => list(any())
%% }
-type disable_snapshot_block_public_access_result() :: #{binary() => any()}.

%% Example:
%% describe_spot_fleet_request_history_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"EventType">> => list(any()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"SpotFleetRequestId">> := string(),
%%   <<"StartTime">> := non_neg_integer()
%% }
-type describe_spot_fleet_request_history_request() :: #{binary() => any()}.

%% Example:
%% failed_queued_purchase_deletion() :: #{
%%   <<"Error">> => delete_queued_reserved_instances_error(),
%%   <<"ReservedInstancesId">> => string()
%% }
-type failed_queued_purchase_deletion() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_endpoint_policy_result() :: #{
%%   <<"PolicyDocument">> => string(),
%%   <<"PolicyEnabled">> => boolean(),
%%   <<"SseSpecification">> => verified_access_sse_specification_response()
%% }
-type modify_verified_access_endpoint_policy_result() :: #{binary() => any()}.

%% Example:
%% user_bucket() :: #{
%%   <<"S3Bucket">> => string(),
%%   <<"S3Key">> => string()
%% }
-type user_bucket() :: #{binary() => any()}.

%% Example:
%% instance_block_device_mapping_specification() :: #{
%%   <<"DeviceName">> => string(),
%%   <<"Ebs">> => ebs_instance_block_device_specification(),
%%   <<"NoDevice">> => string(),
%%   <<"VirtualName">> => string()
%% }
-type instance_block_device_mapping_specification() :: #{binary() => any()}.

%% Example:
%% ebs_status_summary() :: #{
%%   <<"Details">> => list(ebs_status_details()),
%%   <<"Status">> => list(any())
%% }
-type ebs_status_summary() :: #{binary() => any()}.

%% Example:
%% launch_template_block_device_mapping_request() :: #{
%%   <<"DeviceName">> => string(),
%%   <<"Ebs">> => launch_template_ebs_block_device_request(),
%%   <<"NoDevice">> => string(),
%%   <<"VirtualName">> => string()
%% }
-type launch_template_block_device_mapping_request() :: #{binary() => any()}.

%% Example:
%% instance_storage_info() :: #{
%%   <<"Disks">> => list(disk_info()),
%%   <<"EncryptionSupport">> => list(any()),
%%   <<"NvmeSupport">> => list(any()),
%%   <<"TotalSizeInGB">> => float()
%% }
-type instance_storage_info() :: #{binary() => any()}.

%% Example:
%% describe_iam_instance_profile_associations_result() :: #{
%%   <<"IamInstanceProfileAssociations">> => list(iam_instance_profile_association()),
%%   <<"NextToken">> => string()
%% }
-type describe_iam_instance_profile_associations_result() :: #{binary() => any()}.

%% Example:
%% launch_template_ena_srd_specification() :: #{
%%   <<"EnaSrdEnabled">> => boolean(),
%%   <<"EnaSrdUdpSpecification">> => launch_template_ena_srd_udp_specification()
%% }
-type launch_template_ena_srd_specification() :: #{binary() => any()}.

%% Example:
%% describe_local_gateway_route_tables_result() :: #{
%%   <<"LocalGatewayRouteTables">> => list(local_gateway_route_table()),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateway_route_tables_result() :: #{binary() => any()}.

%% Example:
%% modify_instance_capacity_reservation_attributes_request() :: #{
%%   <<"CapacityReservationSpecification">> := capacity_reservation_specification(),
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceId">> := string()
%% }
-type modify_instance_capacity_reservation_attributes_request() :: #{binary() => any()}.

%% Example:
%% stop_instances_result() :: #{
%%   <<"StoppingInstances">> => list(instance_state_change())
%% }
-type stop_instances_result() :: #{binary() => any()}.

%% Example:
%% image_criterion_request() :: #{
%%   <<"ImageProviders">> => list(string())
%% }
-type image_criterion_request() :: #{binary() => any()}.

%% Example:
%% get_instance_metadata_defaults_result() :: #{
%%   <<"AccountLevel">> => instance_metadata_defaults_response()
%% }
-type get_instance_metadata_defaults_result() :: #{binary() => any()}.

%% Example:
%% get_image_block_public_access_state_result() :: #{
%%   <<"ImageBlockPublicAccessState">> => string(),
%%   <<"ManagedBy">> => list(any())
%% }
-type get_image_block_public_access_state_result() :: #{binary() => any()}.

%% Example:
%% bundle_task() :: #{
%%   <<"BundleId">> => string(),
%%   <<"BundleTaskError">> => bundle_task_error(),
%%   <<"InstanceId">> => string(),
%%   <<"Progress">> => string(),
%%   <<"StartTime">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"Storage">> => storage(),
%%   <<"UpdateTime">> => non_neg_integer()
%% }
-type bundle_task() :: #{binary() => any()}.

%% Example:
%% describe_network_interfaces_result() :: #{
%%   <<"NetworkInterfaces">> => list(network_interface()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_interfaces_result() :: #{binary() => any()}.

%% Example:
%% spot_fleet_request_config_data() :: #{
%%   <<"AllocationStrategy">> => list(any()),
%%   <<"ClientToken">> => string(),
%%   <<"Context">> => string(),
%%   <<"ExcessCapacityTerminationPolicy">> => list(any()),
%%   <<"FulfilledCapacity">> => float(),
%%   <<"IamFleetRole">> => string(),
%%   <<"InstanceInterruptionBehavior">> => list(any()),
%%   <<"InstancePoolsToUseCount">> => integer(),
%%   <<"LaunchSpecifications">> => list(spot_fleet_launch_specification()),
%%   <<"LaunchTemplateConfigs">> => list(launch_template_config()),
%%   <<"LoadBalancersConfig">> => load_balancers_config(),
%%   <<"OnDemandAllocationStrategy">> => list(any()),
%%   <<"OnDemandFulfilledCapacity">> => float(),
%%   <<"OnDemandMaxTotalPrice">> => string(),
%%   <<"OnDemandTargetCapacity">> => integer(),
%%   <<"ReplaceUnhealthyInstances">> => boolean(),
%%   <<"SpotMaintenanceStrategies">> => spot_maintenance_strategies(),
%%   <<"SpotMaxTotalPrice">> => string(),
%%   <<"SpotPrice">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TargetCapacity">> => integer(),
%%   <<"TargetCapacityUnitType">> => list(any()),
%%   <<"TerminateInstancesWithExpiration">> => boolean(),
%%   <<"Type">> => list(any()),
%%   <<"ValidFrom">> => non_neg_integer(),
%%   <<"ValidUntil">> => non_neg_integer()
%% }
-type spot_fleet_request_config_data() :: #{binary() => any()}.

%% Example:
%% get_route_server_propagations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"RouteServerId">> := string(),
%%   <<"RouteTableId">> => string()
%% }
-type get_route_server_propagations_request() :: #{binary() => any()}.

%% Example:
%% modify_ipam_pool_request() :: #{
%%   <<"AddAllocationResourceTags">> => list(request_ipam_resource_tag()),
%%   <<"AllocationDefaultNetmaskLength">> => integer(),
%%   <<"AllocationMaxNetmaskLength">> => integer(),
%%   <<"AllocationMinNetmaskLength">> => integer(),
%%   <<"AutoImport">> => boolean(),
%%   <<"ClearAllocationDefaultNetmaskLength">> => boolean(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"IpamPoolId">> := string(),
%%   <<"RemoveAllocationResourceTags">> => list(request_ipam_resource_tag())
%% }
-type modify_ipam_pool_request() :: #{binary() => any()}.

%% Example:
%% traffic_mirror_session() :: #{
%%   <<"Description">> => string(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"PacketLength">> => integer(),
%%   <<"SessionNumber">> => integer(),
%%   <<"Tags">> => list(tag()),
%%   <<"TrafficMirrorFilterId">> => string(),
%%   <<"TrafficMirrorSessionId">> => string(),
%%   <<"TrafficMirrorTargetId">> => string(),
%%   <<"VirtualNetworkId">> => integer()
%% }
-type traffic_mirror_session() :: #{binary() => any()}.

%% Example:
%% describe_instance_image_metadata_result() :: #{
%%   <<"InstanceImageMetadata">> => list(instance_image_metadata()),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_image_metadata_result() :: #{binary() => any()}.

%% Example:
%% delete_fleets_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"FleetIds">> := list(string()),
%%   <<"TerminateInstances">> := boolean()
%% }
-type delete_fleets_request() :: #{binary() => any()}.

%% Example:
%% terminate_instances_result() :: #{
%%   <<"TerminatingInstances">> => list(instance_state_change())
%% }
-type terminate_instances_result() :: #{binary() => any()}.

%% Example:
%% disassociate_route_server_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"RouteServerId">> := string(),
%%   <<"VpcId">> := string()
%% }
-type disassociate_route_server_request() :: #{binary() => any()}.

%% Example:
%% instance_ipv6_address() :: #{
%%   <<"Ipv6Address">> => string(),
%%   <<"IsPrimaryIpv6">> => boolean()
%% }
-type instance_ipv6_address() :: #{binary() => any()}.

%% Example:
%% reject_transit_gateway_multicast_domain_associations_result() :: #{
%%   <<"Associations">> => transit_gateway_multicast_domain_associations()
%% }
-type reject_transit_gateway_multicast_domain_associations_result() :: #{binary() => any()}.

%% Example:
%% modify_vpc_endpoint_service_permissions_result() :: #{
%%   <<"AddedPrincipals">> => list(added_principal()),
%%   <<"ReturnValue">> => boolean()
%% }
-type modify_vpc_endpoint_service_permissions_result() :: #{binary() => any()}.

%% Example:
%% prefix_list_id() :: #{
%%   <<"Description">> => string(),
%%   <<"PrefixListId">> => string()
%% }
-type prefix_list_id() :: #{binary() => any()}.

%% Example:
%% transit_gateway_policy_table() :: #{
%%   <<"CreationTime">> => non_neg_integer(),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"TransitGatewayId">> => string(),
%%   <<"TransitGatewayPolicyTableId">> => string()
%% }
-type transit_gateway_policy_table() :: #{binary() => any()}.

%% Example:
%% accept_reserved_instances_exchange_quote_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ReservedInstanceIds">> := list(string()),
%%   <<"TargetConfigurations">> => list(target_configuration_request())
%% }
-type accept_reserved_instances_exchange_quote_request() :: #{binary() => any()}.

%% Example:
%% describe_local_gateway_route_tables_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"LocalGatewayRouteTableIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_local_gateway_route_tables_request() :: #{binary() => any()}.

%% Example:
%% v_cpu_count_range_request() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type v_cpu_count_range_request() :: #{binary() => any()}.

%% Example:
%% describe_instance_types_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"InstanceTypes">> => list(list(any())()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_types_request() :: #{binary() => any()}.

%% Example:
%% export_verified_access_instance_client_configuration_result() :: #{
%%   <<"DeviceTrustProviders">> => list(list(any())()),
%%   <<"OpenVpnConfigurations">> => list(verified_access_instance_open_vpn_client_configuration()),
%%   <<"Region">> => string(),
%%   <<"UserTrustProvider">> => verified_access_instance_user_trust_provider_client_configuration(),
%%   <<"VerifiedAccessInstanceId">> => string(),
%%   <<"Version">> => string()
%% }
-type export_verified_access_instance_client_configuration_result() :: #{binary() => any()}.

%% Example:
%% create_egress_only_internet_gateway_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"EgressOnlyInternetGateway">> => egress_only_internet_gateway()
%% }
-type create_egress_only_internet_gateway_result() :: #{binary() => any()}.

%% Example:
%% verified_access_log_cloud_watch_logs_destination() :: #{
%%   <<"DeliveryStatus">> => verified_access_log_delivery_status(),
%%   <<"Enabled">> => boolean(),
%%   <<"LogGroup">> => string()
%% }
-type verified_access_log_cloud_watch_logs_destination() :: #{binary() => any()}.

%% Example:
%% iam_instance_profile() :: #{
%%   <<"Arn">> => string(),
%%   <<"Id">> => string()
%% }
-type iam_instance_profile() :: #{binary() => any()}.

%% Example:
%% launch_template_ebs_block_device_request() :: #{
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Encrypted">> => boolean(),
%%   <<"Iops">> => integer(),
%%   <<"KmsKeyId">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"Throughput">> => integer(),
%%   <<"VolumeInitializationRate">> => integer(),
%%   <<"VolumeSize">> => integer(),
%%   <<"VolumeType">> => list(any())
%% }
-type launch_template_ebs_block_device_request() :: #{binary() => any()}.

%% Example:
%% create_client_vpn_endpoint_request() :: #{
%%   <<"AuthenticationOptions">> := list(client_vpn_authentication_request()),
%%   <<"ClientCidrBlock">> := string(),
%%   <<"ClientConnectOptions">> => client_connect_options(),
%%   <<"ClientLoginBannerOptions">> => client_login_banner_options(),
%%   <<"ClientRouteEnforcementOptions">> => client_route_enforcement_options(),
%%   <<"ClientToken">> => string(),
%%   <<"ConnectionLogOptions">> := connection_log_options(),
%%   <<"Description">> => string(),
%%   <<"DisconnectOnSessionTimeout">> => boolean(),
%%   <<"DnsServers">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"SelfServicePortal">> => list(any()),
%%   <<"ServerCertificateArn">> := string(),
%%   <<"SessionTimeoutHours">> => integer(),
%%   <<"SplitTunnel">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TransportProtocol">> => list(any()),
%%   <<"VpcId">> => string(),
%%   <<"VpnPort">> => integer()
%% }
-type create_client_vpn_endpoint_request() :: #{binary() => any()}.

%% Example:
%% request_ipam_resource_tag() :: #{
%%   <<"Key">> => string(),
%%   <<"Value">> => string()
%% }
-type request_ipam_resource_tag() :: #{binary() => any()}.

%% Example:
%% create_verified_access_trust_provider_result() :: #{
%%   <<"VerifiedAccessTrustProvider">> => verified_access_trust_provider()
%% }
-type create_verified_access_trust_provider_result() :: #{binary() => any()}.

%% Example:
%% create_internet_gateway_result() :: #{
%%   <<"InternetGateway">> => internet_gateway()
%% }
-type create_internet_gateway_result() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_instance_result() :: #{
%%   <<"VerifiedAccessInstance">> => verified_access_instance()
%% }
-type modify_verified_access_instance_result() :: #{binary() => any()}.

%% Example:
%% accept_capacity_reservation_billing_ownership_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type accept_capacity_reservation_billing_ownership_result() :: #{binary() => any()}.

%% Example:
%% gpu_device_memory_info() :: #{
%%   <<"SizeInMiB">> => integer()
%% }
-type gpu_device_memory_info() :: #{binary() => any()}.

%% Example:
%% create_launch_template_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"LaunchTemplateData">> := request_launch_template_data(),
%%   <<"LaunchTemplateName">> := string(),
%%   <<"Operator">> => operator_request(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VersionDescription">> => string()
%% }
-type create_launch_template_request() :: #{binary() => any()}.

%% Example:
%% vpn_connection_options_specification() :: #{
%%   <<"EnableAcceleration">> => boolean(),
%%   <<"LocalIpv4NetworkCidr">> => string(),
%%   <<"LocalIpv6NetworkCidr">> => string(),
%%   <<"OutsideIpAddressType">> => string(),
%%   <<"RemoteIpv4NetworkCidr">> => string(),
%%   <<"RemoteIpv6NetworkCidr">> => string(),
%%   <<"StaticRoutesOnly">> => boolean(),
%%   <<"TransportTransitGatewayAttachmentId">> => string(),
%%   <<"TunnelInsideIpVersion">> => list(any()),
%%   <<"TunnelOptions">> => list(vpn_tunnel_options_specification())
%% }
-type vpn_connection_options_specification() :: #{binary() => any()}.

%% Example:
%% transit_gateway_multicast_deregistered_group_members() :: #{
%%   <<"DeregisteredNetworkInterfaceIds">> => list(string()),
%%   <<"GroupIpAddress">> => string(),
%%   <<"TransitGatewayMulticastDomainId">> => string()
%% }
-type transit_gateway_multicast_deregistered_group_members() :: #{binary() => any()}.

%% Example:
%% authorize_security_group_ingress_result() :: #{
%%   <<"Return">> => boolean(),
%%   <<"SecurityGroupRules">> => list(security_group_rule())
%% }
-type authorize_security_group_ingress_result() :: #{binary() => any()}.

%% Example:
%% security_group_for_vpc() :: #{
%%   <<"Description">> => string(),
%%   <<"GroupId">> => string(),
%%   <<"GroupName">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"PrimaryVpcId">> => string(),
%%   <<"Tags">> => list(tag())
%% }
-type security_group_for_vpc() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_fleet() :: #{
%%   <<"AllocationStrategy">> => string(),
%%   <<"CapacityReservationFleetArn">> => string(),
%%   <<"CapacityReservationFleetId">> => string(),
%%   <<"CreateTime">> => non_neg_integer(),
%%   <<"EndDate">> => non_neg_integer(),
%%   <<"InstanceMatchCriteria">> => list(any()),
%%   <<"InstanceTypeSpecifications">> => list(fleet_capacity_reservation()),
%%   <<"State">> => list(any()),
%%   <<"Tags">> => list(tag()),
%%   <<"Tenancy">> => list(any()),
%%   <<"TotalFulfilledCapacity">> => float(),
%%   <<"TotalTargetCapacity">> => integer()
%% }
-type capacity_reservation_fleet() :: #{binary() => any()}.

%% Example:
%% get_ipam_discovered_accounts_result() :: #{
%%   <<"IpamDiscoveredAccounts">> => list(ipam_discovered_account()),
%%   <<"NextToken">> => string()
%% }
-type get_ipam_discovered_accounts_result() :: #{binary() => any()}.

%% Example:
%% enable_snapshot_block_public_access_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"State">> := list(any())
%% }
-type enable_snapshot_block_public_access_request() :: #{binary() => any()}.

%% Example:
%% capacity_reservation_status() :: #{
%%   <<"CapacityReservationId">> => string(),
%%   <<"TotalAvailableCapacity">> => integer(),
%%   <<"TotalCapacity">> => integer(),
%%   <<"TotalUnavailableCapacity">> => integer()
%% }
-type capacity_reservation_status() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_vpc_attachment_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayAttachmentId">> := string()
%% }
-type delete_transit_gateway_vpc_attachment_request() :: #{binary() => any()}.

%% Example:
%% describe_account_attributes_request() :: #{
%%   <<"AttributeNames">> => list(list(any())()),
%%   <<"DryRun">> => boolean()
%% }
-type describe_account_attributes_request() :: #{binary() => any()}.

%% Example:
%% create_store_image_task_result() :: #{
%%   <<"ObjectKey">> => string()
%% }
-type create_store_image_task_result() :: #{binary() => any()}.

%% Example:
%% firewall_stateless_rule() :: #{
%%   <<"DestinationPorts">> => list(port_range()),
%%   <<"Destinations">> => list(string()),
%%   <<"Priority">> => integer(),
%%   <<"Protocols">> => list(integer()),
%%   <<"RuleAction">> => string(),
%%   <<"RuleGroupArn">> => string(),
%%   <<"SourcePorts">> => list(port_range()),
%%   <<"Sources">> => list(string())
%% }
-type firewall_stateless_rule() :: #{binary() => any()}.

%% Example:
%% provisioned_bandwidth() :: #{
%%   <<"ProvisionTime">> => non_neg_integer(),
%%   <<"Provisioned">> => string(),
%%   <<"RequestTime">> => non_neg_integer(),
%%   <<"Requested">> => string(),
%%   <<"Status">> => string()
%% }
-type provisioned_bandwidth() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_connect_result() :: #{
%%   <<"TransitGatewayConnect">> => transit_gateway_connect()
%% }
-type delete_transit_gateway_connect_result() :: #{binary() => any()}.

%% Example:
%% get_ipam_pool_cidrs_result() :: #{
%%   <<"IpamPoolCidrs">> => list(ipam_pool_cidr()),
%%   <<"NextToken">> => string()
%% }
-type get_ipam_pool_cidrs_result() :: #{binary() => any()}.

%% Example:
%% reject_transit_gateway_peering_attachment_result() :: #{
%%   <<"TransitGatewayPeeringAttachment">> => transit_gateway_peering_attachment()
%% }
-type reject_transit_gateway_peering_attachment_result() :: #{binary() => any()}.

%% Example:
%% classic_link_dns_support() :: #{
%%   <<"ClassicLinkDnsSupported">> => boolean(),
%%   <<"VpcId">> => string()
%% }
-type classic_link_dns_support() :: #{binary() => any()}.

%% Example:
%% restore_snapshot_from_recycle_bin_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"SnapshotId">> := string()
%% }
-type restore_snapshot_from_recycle_bin_request() :: #{binary() => any()}.

%% Example:
%% create_vpc_endpoint_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"VpcEndpoint">> => vpc_endpoint()
%% }
-type create_vpc_endpoint_result() :: #{binary() => any()}.

%% Example:
%% describe_scheduled_instance_availability_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"FirstSlotStartTimeRange">> := slot_date_time_range_request(),
%%   <<"MaxResults">> => integer(),
%%   <<"MaxSlotDurationInHours">> => integer(),
%%   <<"MinSlotDurationInHours">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"Recurrence">> := scheduled_instance_recurrence_request()
%% }
-type describe_scheduled_instance_availability_request() :: #{binary() => any()}.

%% Example:
%% detach_vpn_gateway_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"VpcId">> := string(),
%%   <<"VpnGatewayId">> := string()
%% }
-type detach_vpn_gateway_request() :: #{binary() => any()}.

%% Example:
%% replace_image_criteria_in_allowed_images_settings_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"ImageCriteria">> => list(image_criterion_request())
%% }
-type replace_image_criteria_in_allowed_images_settings_request() :: #{binary() => any()}.

%% Example:
%% describe_network_insights_paths_result() :: #{
%%   <<"NetworkInsightsPaths">> => list(network_insights_path()),
%%   <<"NextToken">> => string()
%% }
-type describe_network_insights_paths_result() :: #{binary() => any()}.

%% Example:
%% create_vpn_connection_request() :: #{
%%   <<"CustomerGatewayId">> := string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Options">> => vpn_connection_options_specification(),
%%   <<"PreSharedKeyStorage">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TransitGatewayId">> => string(),
%%   <<"Type">> := string(),
%%   <<"VpnGatewayId">> => string()
%% }
-type create_vpn_connection_request() :: #{binary() => any()}.

%% Example:
%% instance_metadata_defaults_response() :: #{
%%   <<"HttpEndpoint">> => list(any()),
%%   <<"HttpPutResponseHopLimit">> => integer(),
%%   <<"HttpTokens">> => list(any()),
%%   <<"InstanceMetadataTags">> => list(any()),
%%   <<"ManagedBy">> => list(any()),
%%   <<"ManagedExceptionMessage">> => string()
%% }
-type instance_metadata_defaults_response() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_multicast_domain_result() :: #{
%%   <<"TransitGatewayMulticastDomain">> => transit_gateway_multicast_domain()
%% }
-type delete_transit_gateway_multicast_domain_result() :: #{binary() => any()}.

%% Example:
%% disable_serial_console_access_result() :: #{
%%   <<"SerialConsoleAccessEnabled">> => boolean()
%% }
-type disable_serial_console_access_result() :: #{binary() => any()}.

%% Example:
%% disable_fast_snapshot_restore_success_item() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"DisabledTime">> => non_neg_integer(),
%%   <<"DisablingTime">> => non_neg_integer(),
%%   <<"EnabledTime">> => non_neg_integer(),
%%   <<"EnablingTime">> => non_neg_integer(),
%%   <<"OptimizingTime">> => non_neg_integer(),
%%   <<"OwnerAlias">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"SnapshotId">> => string(),
%%   <<"State">> => list(any()),
%%   <<"StateTransitionReason">> => string()
%% }
-type disable_fast_snapshot_restore_success_item() :: #{binary() => any()}.

%% Example:
%% verified_access_sse_specification_request() :: #{
%%   <<"CustomerManagedKeyEnabled">> => boolean(),
%%   <<"KmsKeyArn">> => string()
%% }
-type verified_access_sse_specification_request() :: #{binary() => any()}.

%% Example:
%% replace_network_acl_association_result() :: #{
%%   <<"NewAssociationId">> => string()
%% }
-type replace_network_acl_association_result() :: #{binary() => any()}.

%% Example:
%% create_instance_export_task_request() :: #{
%%   <<"Description">> => string(),
%%   <<"ExportToS3Task">> := export_to_s3_task_specification(),
%%   <<"InstanceId">> := string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"TargetEnvironment">> := list(any())
%% }
-type create_instance_export_task_request() :: #{binary() => any()}.

%% Example:
%% release_address_request() :: #{
%%   <<"AllocationId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"PublicIp">> => string()
%% }
-type release_address_request() :: #{binary() => any()}.

%% Example:
%% ipv6_cidr_association() :: #{
%%   <<"AssociatedResource">> => string(),
%%   <<"Ipv6Cidr">> => string()
%% }
-type ipv6_cidr_association() :: #{binary() => any()}.

%% Example:
%% bundle_instance_result() :: #{
%%   <<"BundleTask">> => bundle_task()
%% }
-type bundle_instance_result() :: #{binary() => any()}.

%% Example:
%% delete_fpga_image_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type delete_fpga_image_result() :: #{binary() => any()}.

%% Example:
%% create_capacity_reservation_by_splitting_result() :: #{
%%   <<"DestinationCapacityReservation">> => capacity_reservation(),
%%   <<"InstanceCount">> => integer(),
%%   <<"SourceCapacityReservation">> => capacity_reservation()
%% }
-type create_capacity_reservation_by_splitting_result() :: #{binary() => any()}.

%% Example:
%% cloud_watch_log_options() :: #{
%%   <<"LogEnabled">> => boolean(),
%%   <<"LogGroupArn">> => string(),
%%   <<"LogOutputFormat">> => string()
%% }
-type cloud_watch_log_options() :: #{binary() => any()}.

%% Example:
%% service_link_virtual_interface() :: #{
%%   <<"ConfigurationState">> => list(any()),
%%   <<"LocalAddress">> => string(),
%%   <<"OutpostArn">> => string(),
%%   <<"OutpostId">> => string(),
%%   <<"OutpostLagId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"PeerAddress">> => string(),
%%   <<"PeerBgpAsn">> => float(),
%%   <<"ServiceLinkVirtualInterfaceArn">> => string(),
%%   <<"ServiceLinkVirtualInterfaceId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"Vlan">> => integer()
%% }
-type service_link_virtual_interface() :: #{binary() => any()}.

%% Example:
%% local_gateway_route_table_vpc_association() :: #{
%%   <<"LocalGatewayId">> => string(),
%%   <<"LocalGatewayRouteTableArn">> => string(),
%%   <<"LocalGatewayRouteTableId">> => string(),
%%   <<"LocalGatewayRouteTableVpcAssociationId">> => string(),
%%   <<"OwnerId">> => string(),
%%   <<"State">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type local_gateway_route_table_vpc_association() :: #{binary() => any()}.

%% Example:
%% deprovision_byoip_cidr_request() :: #{
%%   <<"Cidr">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type deprovision_byoip_cidr_request() :: #{binary() => any()}.

%% Example:
%% scheduled_instance_recurrence_request() :: #{
%%   <<"Frequency">> => string(),
%%   <<"Interval">> => integer(),
%%   <<"OccurrenceDays">> => list(integer()),
%%   <<"OccurrenceRelativeToEnd">> => boolean(),
%%   <<"OccurrenceUnit">> => string()
%% }
-type scheduled_instance_recurrence_request() :: #{binary() => any()}.

%% Example:
%% transit_gateway_route_attachment() :: #{
%%   <<"ResourceId">> => string(),
%%   <<"ResourceType">> => list(any()),
%%   <<"TransitGatewayAttachmentId">> => string()
%% }
-type transit_gateway_route_attachment() :: #{binary() => any()}.

%% Example:
%% security_group_rule() :: #{
%%   <<"CidrIpv4">> => string(),
%%   <<"CidrIpv6">> => string(),
%%   <<"Description">> => string(),
%%   <<"FromPort">> => integer(),
%%   <<"GroupId">> => string(),
%%   <<"GroupOwnerId">> => string(),
%%   <<"IpProtocol">> => string(),
%%   <<"IsEgress">> => boolean(),
%%   <<"PrefixListId">> => string(),
%%   <<"ReferencedGroupInfo">> => referenced_security_group(),
%%   <<"SecurityGroupRuleArn">> => string(),
%%   <<"SecurityGroupRuleId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"ToPort">> => integer()
%% }
-type security_group_rule() :: #{binary() => any()}.

%% Example:
%% describe_fleets_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"FleetIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_fleets_request() :: #{binary() => any()}.

%% Example:
%% describe_verified_access_groups_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VerifiedAccessGroups">> => list(verified_access_group())
%% }
-type describe_verified_access_groups_result() :: #{binary() => any()}.

%% Example:
%% modify_vpc_endpoint_service_permissions_request() :: #{
%%   <<"AddAllowedPrincipals">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"RemoveAllowedPrincipals">> => list(string()),
%%   <<"ServiceId">> := string()
%% }
-type modify_vpc_endpoint_service_permissions_request() :: #{binary() => any()}.

%% Example:
%% delete_managed_prefix_list_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"PrefixListId">> := string()
%% }
-type delete_managed_prefix_list_request() :: #{binary() => any()}.

%% Example:
%% create_fleet_error() :: #{
%%   <<"ErrorCode">> => string(),
%%   <<"ErrorMessage">> => string(),
%%   <<"LaunchTemplateAndOverrides">> => launch_template_and_overrides_response(),
%%   <<"Lifecycle">> => list(any())
%% }
-type create_fleet_error() :: #{binary() => any()}.

%% Example:
%% delete_client_vpn_endpoint_request() :: #{
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type delete_client_vpn_endpoint_request() :: #{binary() => any()}.

%% Example:
%% create_local_gateway_route_request() :: #{
%%   <<"DestinationCidrBlock">> => string(),
%%   <<"DestinationPrefixListId">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"LocalGatewayRouteTableId">> := string(),
%%   <<"LocalGatewayVirtualInterfaceGroupId">> => string(),
%%   <<"NetworkInterfaceId">> => string()
%% }
-type create_local_gateway_route_request() :: #{binary() => any()}.

%% Example:
%% price_schedule_specification() :: #{
%%   <<"CurrencyCode">> => list(any()),
%%   <<"Price">> => float(),
%%   <<"Term">> => float()
%% }
-type price_schedule_specification() :: #{binary() => any()}.

%% Example:
%% describe_instance_event_windows_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"InstanceEventWindowIds">> => list(string()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_instance_event_windows_request() :: #{binary() => any()}.

%% Example:
%% reservation_value() :: #{
%%   <<"HourlyPrice">> => string(),
%%   <<"RemainingTotalValue">> => string(),
%%   <<"RemainingUpfrontValue">> => string()
%% }
-type reservation_value() :: #{binary() => any()}.

%% Example:
%% enclave_options() :: #{
%%   <<"Enabled">> => boolean()
%% }
-type enclave_options() :: #{binary() => any()}.

%% Example:
%% create_network_interface_permission_request() :: #{
%%   <<"AwsAccountId">> => string(),
%%   <<"AwsService">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkInterfaceId">> := string(),
%%   <<"Permission">> := list(any())
%% }
-type create_network_interface_permission_request() :: #{binary() => any()}.

%% Example:
%% get_ebs_encryption_by_default_result() :: #{
%%   <<"EbsEncryptionByDefault">> => boolean(),
%%   <<"SseType">> => list(any())
%% }
-type get_ebs_encryption_by_default_result() :: #{binary() => any()}.

%% Example:
%% get_serial_console_access_status_result() :: #{
%%   <<"ManagedBy">> => list(any()),
%%   <<"SerialConsoleAccessEnabled">> => boolean()
%% }
-type get_serial_console_access_status_result() :: #{binary() => any()}.

%% Example:
%% load_permission_modifications() :: #{
%%   <<"Add">> => list(load_permission_request()),
%%   <<"Remove">> => list(load_permission_request())
%% }
-type load_permission_modifications() :: #{binary() => any()}.

%% Example:
%% client_connect_options() :: #{
%%   <<"Enabled">> => boolean(),
%%   <<"LambdaFunctionArn">> => string()
%% }
-type client_connect_options() :: #{binary() => any()}.

%% Example:
%% subnet_ip_prefixes() :: #{
%%   <<"IpPrefixes">> => list(string()),
%%   <<"SubnetId">> => string()
%% }
-type subnet_ip_prefixes() :: #{binary() => any()}.

%% Example:
%% rule_option() :: #{
%%   <<"Keyword">> => string(),
%%   <<"Settings">> => list(string())
%% }
-type rule_option() :: #{binary() => any()}.

%% Example:
%% baseline_ebs_bandwidth_mbps_request() :: #{
%%   <<"Max">> => integer(),
%%   <<"Min">> => integer()
%% }
-type baseline_ebs_bandwidth_mbps_request() :: #{binary() => any()}.

%% Example:
%% describe_client_vpn_endpoints_request() :: #{
%%   <<"ClientVpnEndpointIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_client_vpn_endpoints_request() :: #{binary() => any()}.

%% Example:
%% monitor_instances_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceIds">> := list(string())
%% }
-type monitor_instances_request() :: #{binary() => any()}.

%% Example:
%% disable_ebs_encryption_by_default_result() :: #{
%%   <<"EbsEncryptionByDefault">> => boolean()
%% }
-type disable_ebs_encryption_by_default_result() :: #{binary() => any()}.

%% Example:
%% restore_snapshot_tier_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"PermanentRestore">> => boolean(),
%%   <<"SnapshotId">> := string(),
%%   <<"TemporaryRestoreDays">> => integer()
%% }
-type restore_snapshot_tier_request() :: #{binary() => any()}.

%% Example:
%% connection_log_options() :: #{
%%   <<"CloudwatchLogGroup">> => string(),
%%   <<"CloudwatchLogStream">> => string(),
%%   <<"Enabled">> => boolean()
%% }
-type connection_log_options() :: #{binary() => any()}.

%% Example:
%% delete_transit_gateway_route_table_announcement_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TransitGatewayRouteTableAnnouncementId">> := string()
%% }
-type delete_transit_gateway_route_table_announcement_request() :: #{binary() => any()}.

%% Example:
%% instance_status_details() :: #{
%%   <<"ImpairedSince">> => non_neg_integer(),
%%   <<"Name">> => list(any()),
%%   <<"Status">> => list(any())
%% }
-type instance_status_details() :: #{binary() => any()}.

%% Example:
%% detach_verified_access_trust_provider_result() :: #{
%%   <<"VerifiedAccessInstance">> => verified_access_instance(),
%%   <<"VerifiedAccessTrustProvider">> => verified_access_trust_provider()
%% }
-type detach_verified_access_trust_provider_result() :: #{binary() => any()}.

%% Example:
%% restore_address_to_classic_result() :: #{
%%   <<"PublicIp">> => string(),
%%   <<"Status">> => list(any())
%% }
-type restore_address_to_classic_result() :: #{binary() => any()}.

%% Example:
%% spot_instance_request() :: #{
%%   <<"ActualBlockHourlyPrice">> => string(),
%%   <<"AvailabilityZoneGroup">> => string(),
%%   <<"BlockDurationMinutes">> => integer(),
%%   <<"CreateTime">> => non_neg_integer(),
%%   <<"Fault">> => spot_instance_state_fault(),
%%   <<"InstanceId">> => string(),
%%   <<"InstanceInterruptionBehavior">> => list(any()),
%%   <<"LaunchGroup">> => string(),
%%   <<"LaunchSpecification">> => launch_specification(),
%%   <<"LaunchedAvailabilityZone">> => string(),
%%   <<"ProductDescription">> => list(any()),
%%   <<"SpotInstanceRequestId">> => string(),
%%   <<"SpotPrice">> => string(),
%%   <<"State">> => list(any()),
%%   <<"Status">> => spot_instance_status(),
%%   <<"Tags">> => list(tag()),
%%   <<"Type">> => list(any()),
%%   <<"ValidFrom">> => non_neg_integer(),
%%   <<"ValidUntil">> => non_neg_integer()
%% }
-type spot_instance_request() :: #{binary() => any()}.

%% Example:
%% associate_subnet_cidr_block_request() :: #{
%%   <<"Ipv6CidrBlock">> => string(),
%%   <<"Ipv6IpamPoolId">> => string(),
%%   <<"Ipv6NetmaskLength">> => integer(),
%%   <<"SubnetId">> := string()
%% }
-type associate_subnet_cidr_block_request() :: #{binary() => any()}.

%% Example:
%% delete_network_insights_access_scope_result() :: #{
%%   <<"NetworkInsightsAccessScopeId">> => string()
%% }
-type delete_network_insights_access_scope_result() :: #{binary() => any()}.

%% Example:
%% purchase_scheduled_instances_request() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"PurchaseRequests">> := list(purchase_request())
%% }
-type purchase_scheduled_instances_request() :: #{binary() => any()}.

%% Example:
%% describe_ipam_external_resource_verification_tokens_result() :: #{
%%   <<"IpamExternalResourceVerificationTokens">> => list(ipam_external_resource_verification_token()),
%%   <<"NextToken">> => string()
%% }
-type describe_ipam_external_resource_verification_tokens_result() :: #{binary() => any()}.

%% Example:
%% delete_route_server_peer_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"RouteServerPeerId">> := string()
%% }
-type delete_route_server_peer_request() :: #{binary() => any()}.

%% Example:
%% fleet_spot_capacity_rebalance() :: #{
%%   <<"ReplacementStrategy">> => list(any()),
%%   <<"TerminationDelay">> => integer()
%% }
-type fleet_spot_capacity_rebalance() :: #{binary() => any()}.

%% Example:
%% cancel_spot_instance_requests_result() :: #{
%%   <<"CancelledSpotInstanceRequests">> => list(cancelled_spot_instance_request())
%% }
-type cancel_spot_instance_requests_result() :: #{binary() => any()}.

%% Example:
%% cancel_reserved_instances_listing_result() :: #{
%%   <<"ReservedInstancesListings">> => list(reserved_instances_listing())
%% }
-type cancel_reserved_instances_listing_result() :: #{binary() => any()}.

%% Example:
%% deprovision_byoip_cidr_result() :: #{
%%   <<"ByoipCidr">> => byoip_cidr()
%% }
-type deprovision_byoip_cidr_result() :: #{binary() => any()}.

%% Example:
%% vpc_cidr_block_state() :: #{
%%   <<"State">> => list(any()),
%%   <<"StatusMessage">> => string()
%% }
-type vpc_cidr_block_state() :: #{binary() => any()}.

%% Example:
%% describe_fpga_image_attribute_request() :: #{
%%   <<"Attribute">> := list(any()),
%%   <<"DryRun">> => boolean(),
%%   <<"FpgaImageId">> := string()
%% }
-type describe_fpga_image_attribute_request() :: #{binary() => any()}.

%% Example:
%% get_instance_tpm_ek_pub_result() :: #{
%%   <<"InstanceId">> => string(),
%%   <<"KeyFormat">> => list(any()),
%%   <<"KeyType">> => list(any()),
%%   <<"KeyValue">> => string()
%% }
-type get_instance_tpm_ek_pub_result() :: #{binary() => any()}.

%% Example:
%% dns_options() :: #{
%%   <<"DnsRecordIpType">> => list(any()),
%%   <<"PrivateDnsOnlyForInboundResolverEndpoint">> => boolean()
%% }
-type dns_options() :: #{binary() => any()}.

%% Example:
%% service_configuration() :: #{
%%   <<"AcceptanceRequired">> => boolean(),
%%   <<"AvailabilityZones">> => list(string()),
%%   <<"BaseEndpointDnsNames">> => list(string()),
%%   <<"GatewayLoadBalancerArns">> => list(string()),
%%   <<"ManagesVpcEndpoints">> => boolean(),
%%   <<"NetworkLoadBalancerArns">> => list(string()),
%%   <<"PayerResponsibility">> => list(any()),
%%   <<"PrivateDnsName">> => string(),
%%   <<"PrivateDnsNameConfiguration">> => private_dns_name_configuration(),
%%   <<"RemoteAccessEnabled">> => boolean(),
%%   <<"ServiceId">> => string(),
%%   <<"ServiceName">> => string(),
%%   <<"ServiceState">> => list(any()),
%%   <<"ServiceType">> => list(service_type_detail()),
%%   <<"SupportedIpAddressTypes">> => list(list(any())()),
%%   <<"SupportedRegions">> => list(supported_region_detail()),
%%   <<"Tags">> => list(tag())
%% }
-type service_configuration() :: #{binary() => any()}.

%% Example:
%% client_vpn_route_status() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type client_vpn_route_status() :: #{binary() => any()}.

%% Example:
%% reserved_instance_reservation_value() :: #{
%%   <<"ReservationValue">> => reservation_value(),
%%   <<"ReservedInstanceId">> => string()
%% }
-type reserved_instance_reservation_value() :: #{binary() => any()}.

%% Example:
%% modify_hosts_request() :: #{
%%   <<"AutoPlacement">> => list(any()),
%%   <<"HostIds">> := list(string()),
%%   <<"HostMaintenance">> => list(any()),
%%   <<"HostRecovery">> => list(any()),
%%   <<"InstanceFamily">> => string(),
%%   <<"InstanceType">> => string()
%% }
-type modify_hosts_request() :: #{binary() => any()}.

%% Example:
%% export_client_vpn_client_certificate_revocation_list_request() :: #{
%%   <<"ClientVpnEndpointId">> := string(),
%%   <<"DryRun">> => boolean()
%% }
-type export_client_vpn_client_certificate_revocation_list_request() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoints_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VpcEndpoints">> => list(vpc_endpoint())
%% }
-type describe_vpc_endpoints_result() :: #{binary() => any()}.

%% Example:
%% delete_network_insights_analysis_result() :: #{
%%   <<"NetworkInsightsAnalysisId">> => string()
%% }
-type delete_network_insights_analysis_result() :: #{binary() => any()}.

%% Example:
%% verified_access_instance() :: #{
%%   <<"CidrEndpointsCustomSubDomain">> => verified_access_instance_custom_sub_domain(),
%%   <<"CreationTime">> => string(),
%%   <<"Description">> => string(),
%%   <<"FipsEnabled">> => boolean(),
%%   <<"LastUpdatedTime">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VerifiedAccessInstanceId">> => string(),
%%   <<"VerifiedAccessTrustProviders">> => list(verified_access_trust_provider_condensed())
%% }
-type verified_access_instance() :: #{binary() => any()}.

%% Example:
%% load_balancers_config() :: #{
%%   <<"ClassicLoadBalancersConfig">> => classic_load_balancers_config(),
%%   <<"TargetGroupsConfig">> => target_groups_config()
%% }
-type load_balancers_config() :: #{binary() => any()}.

%% Example:
%% delete_traffic_mirror_target_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TrafficMirrorTargetId">> := string()
%% }
-type delete_traffic_mirror_target_request() :: #{binary() => any()}.

%% Example:
%% create_coip_cidr_result() :: #{
%%   <<"CoipCidr">> => coip_cidr()
%% }
-type create_coip_cidr_result() :: #{binary() => any()}.

%% Example:
%% reset_ebs_default_kms_key_id_result() :: #{
%%   <<"KmsKeyId">> => string()
%% }
-type reset_ebs_default_kms_key_id_result() :: #{binary() => any()}.

%% Example:
%% create_subnet_request() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"AvailabilityZoneId">> => string(),
%%   <<"CidrBlock">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"Ipv4IpamPoolId">> => string(),
%%   <<"Ipv4NetmaskLength">> => integer(),
%%   <<"Ipv6CidrBlock">> => string(),
%%   <<"Ipv6IpamPoolId">> => string(),
%%   <<"Ipv6Native">> => boolean(),
%%   <<"Ipv6NetmaskLength">> => integer(),
%%   <<"OutpostArn">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VpcId">> := string()
%% }
-type create_subnet_request() :: #{binary() => any()}.

%% Example:
%% monitor_instances_result() :: #{
%%   <<"InstanceMonitorings">> => list(instance_monitoring())
%% }
-type monitor_instances_result() :: #{binary() => any()}.

%% Example:
%% vpc_encryption_control() :: #{
%%   <<"Mode">> => list(any()),
%%   <<"ResourceExclusions">> => vpc_encryption_control_exclusions(),
%%   <<"State">> => list(any()),
%%   <<"StateMessage">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcEncryptionControlId">> => string(),
%%   <<"VpcId">> => string()
%% }
-type vpc_encryption_control() :: #{binary() => any()}.

%% Example:
%% volume_status_details() :: #{
%%   <<"Name">> => list(any()),
%%   <<"Status">> => string()
%% }
-type volume_status_details() :: #{binary() => any()}.

%% Example:
%% ec2_instance_connect_endpoint() :: #{
%%   <<"AvailabilityZone">> => string(),
%%   <<"CreatedAt">> => non_neg_integer(),
%%   <<"DnsName">> => string(),
%%   <<"FipsDnsName">> => string(),
%%   <<"InstanceConnectEndpointArn">> => string(),
%%   <<"InstanceConnectEndpointId">> => string(),
%%   <<"IpAddressType">> => list(any()),
%%   <<"NetworkInterfaceIds">> => list(string()),
%%   <<"OwnerId">> => string(),
%%   <<"PreserveClientIp">> => boolean(),
%%   <<"SecurityGroupIds">> => list(string()),
%%   <<"State">> => list(any()),
%%   <<"StateMessage">> => string(),
%%   <<"SubnetId">> => string(),
%%   <<"Tags">> => list(tag()),
%%   <<"VpcId">> => string()
%% }
-type ec2_instance_connect_endpoint() :: #{binary() => any()}.

%% Example:
%% delete_traffic_mirror_session_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"TrafficMirrorSessionId">> := string()
%% }
-type delete_traffic_mirror_session_request() :: #{binary() => any()}.

%% Example:
%% create_launch_template_result() :: #{
%%   <<"LaunchTemplate">> => launch_template(),
%%   <<"Warning">> => validation_warning()
%% }
-type create_launch_template_result() :: #{binary() => any()}.

%% Example:
%% create_vpc_block_public_access_exclusion_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InternetGatewayExclusionMode">> := list(any()),
%%   <<"SubnetId">> => string(),
%%   <<"TagSpecifications">> => list(tag_specification()),
%%   <<"VpcId">> => string()
%% }
-type create_vpc_block_public_access_exclusion_request() :: #{binary() => any()}.

%% Example:
%% disassociate_trunk_interface_result() :: #{
%%   <<"ClientToken">> => string(),
%%   <<"Return">> => boolean()
%% }
-type disassociate_trunk_interface_result() :: #{binary() => any()}.

%% Example:
%% supported_region_detail() :: #{
%%   <<"Region">> => string(),
%%   <<"ServiceState">> => string()
%% }
-type supported_region_detail() :: #{binary() => any()}.

%% Example:
%% processor_info() :: #{
%%   <<"Manufacturer">> => string(),
%%   <<"SupportedArchitectures">> => list(list(any())()),
%%   <<"SupportedFeatures">> => list(list(any())()),
%%   <<"SustainedClockSpeedInGhz">> => float()
%% }
-type processor_info() :: #{binary() => any()}.

%% Example:
%% elastic_gpu_specification_response() :: #{
%%   <<"Type">> => string()
%% }
-type elastic_gpu_specification_response() :: #{binary() => any()}.

%% Example:
%% describe_vpc_peering_connections_result() :: #{
%%   <<"NextToken">> => string(),
%%   <<"VpcPeeringConnections">> => list(vpc_peering_connection())
%% }
-type describe_vpc_peering_connections_result() :: #{binary() => any()}.

%% Example:
%% get_security_groups_for_vpc_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VpcId">> := string()
%% }
-type get_security_groups_for_vpc_request() :: #{binary() => any()}.

%% Example:
%% create_restore_image_task_result() :: #{
%%   <<"ImageId">> => string()
%% }
-type create_restore_image_task_result() :: #{binary() => any()}.

%% Example:
%% network_interface_ipv6_address() :: #{
%%   <<"Ipv6Address">> => string(),
%%   <<"IsPrimaryIpv6">> => boolean(),
%%   <<"PublicIpv6DnsName">> => string()
%% }
-type network_interface_ipv6_address() :: #{binary() => any()}.

%% Example:
%% create_verified_access_instance_request() :: #{
%%   <<"CidrEndpointsCustomSubDomain">> => string(),
%%   <<"ClientToken">> => string(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"FIPSEnabled">> => boolean(),
%%   <<"TagSpecifications">> => list(tag_specification())
%% }
-type create_verified_access_instance_request() :: #{binary() => any()}.

%% Example:
%% get_transit_gateway_policy_table_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"TransitGatewayPolicyTableId">> := string()
%% }
-type get_transit_gateway_policy_table_associations_request() :: #{binary() => any()}.

%% Example:
%% target_capacity_specification_request() :: #{
%%   <<"DefaultTargetCapacityType">> => list(any()),
%%   <<"OnDemandTargetCapacity">> => integer(),
%%   <<"SpotTargetCapacity">> => integer(),
%%   <<"TargetCapacityUnitType">> => list(any()),
%%   <<"TotalTargetCapacity">> => integer()
%% }
-type target_capacity_specification_request() :: #{binary() => any()}.

%% Example:
%% get_associated_ipv6_pool_cidrs_result() :: #{
%%   <<"Ipv6CidrAssociations">> => list(ipv6_cidr_association()),
%%   <<"NextToken">> => string()
%% }
-type get_associated_ipv6_pool_cidrs_result() :: #{binary() => any()}.

%% Example:
%% delete_network_insights_access_scope_analysis_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"NetworkInsightsAccessScopeAnalysisId">> := string()
%% }
-type delete_network_insights_access_scope_analysis_request() :: #{binary() => any()}.

%% Example:
%% associated_target_network() :: #{
%%   <<"NetworkId">> => string(),
%%   <<"NetworkType">> => list(any())
%% }
-type associated_target_network() :: #{binary() => any()}.

%% Example:
%% modify_traffic_mirror_session_request() :: #{
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"PacketLength">> => integer(),
%%   <<"RemoveFields">> => list(list(any())()),
%%   <<"SessionNumber">> => integer(),
%%   <<"TrafficMirrorFilterId">> => string(),
%%   <<"TrafficMirrorSessionId">> := string(),
%%   <<"TrafficMirrorTargetId">> => string(),
%%   <<"VirtualNetworkId">> => integer()
%% }
-type modify_traffic_mirror_session_request() :: #{binary() => any()}.

%% Example:
%% operator_response() :: #{
%%   <<"Managed">> => boolean(),
%%   <<"Principal">> => string()
%% }
-type operator_response() :: #{binary() => any()}.

%% Example:
%% describe_vpc_endpoint_associations_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"VpcEndpointIds">> => list(string())
%% }
-type describe_vpc_endpoint_associations_request() :: #{binary() => any()}.

%% Example:
%% create_verified_access_endpoint_rds_options() :: #{
%%   <<"Port">> => integer(),
%%   <<"Protocol">> => list(any()),
%%   <<"RdsDbClusterArn">> => string(),
%%   <<"RdsDbInstanceArn">> => string(),
%%   <<"RdsDbProxyArn">> => string(),
%%   <<"RdsEndpoint">> => string(),
%%   <<"SubnetIds">> => list(string())
%% }
-type create_verified_access_endpoint_rds_options() :: #{binary() => any()}.

%% Example:
%% delete_placement_group_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"GroupName">> := string()
%% }
-type delete_placement_group_request() :: #{binary() => any()}.

%% Example:
%% instance_network_interface_specification() :: #{
%%   <<"AssociateCarrierIpAddress">> => boolean(),
%%   <<"AssociatePublicIpAddress">> => boolean(),
%%   <<"ConnectionTrackingSpecification">> => connection_tracking_specification_request(),
%%   <<"DeleteOnTermination">> => boolean(),
%%   <<"Description">> => string(),
%%   <<"DeviceIndex">> => integer(),
%%   <<"EnaQueueCount">> => integer(),
%%   <<"EnaSrdSpecification">> => ena_srd_specification_request(),
%%   <<"Groups">> => list(string()),
%%   <<"InterfaceType">> => string(),
%%   <<"Ipv4PrefixCount">> => integer(),
%%   <<"Ipv4Prefixes">> => list(ipv4_prefix_specification_request()),
%%   <<"Ipv6AddressCount">> => integer(),
%%   <<"Ipv6Addresses">> => list(instance_ipv6_address()),
%%   <<"Ipv6PrefixCount">> => integer(),
%%   <<"Ipv6Prefixes">> => list(ipv6_prefix_specification_request()),
%%   <<"NetworkCardIndex">> => integer(),
%%   <<"NetworkInterfaceId">> => string(),
%%   <<"PrimaryIpv6">> => boolean(),
%%   <<"PrivateIpAddress">> => string(),
%%   <<"PrivateIpAddresses">> => list(private_ip_address_specification()),
%%   <<"SecondaryPrivateIpAddressCount">> => integer(),
%%   <<"SubnetId">> => string()
%% }
-type instance_network_interface_specification() :: #{binary() => any()}.

%% Example:
%% attribute_boolean_value() :: #{
%%   <<"Value">> => boolean()
%% }
-type attribute_boolean_value() :: #{binary() => any()}.

%% Example:
%% get_route_server_routing_database_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string(),
%%   <<"RouteServerId">> := string()
%% }
-type get_route_server_routing_database_request() :: #{binary() => any()}.

%% Example:
%% disk_image_detail() :: #{
%%   <<"Bytes">> => float(),
%%   <<"Format">> => list(any()),
%%   <<"ImportManifestUrl">> => string()
%% }
-type disk_image_detail() :: #{binary() => any()}.

%% Example:
%% describe_id_format_result() :: #{
%%   <<"Statuses">> => list(id_format())
%% }
-type describe_id_format_result() :: #{binary() => any()}.

%% Example:
%% unassign_private_ip_addresses_request() :: #{
%%   <<"Ipv4Prefixes">> => list(string()),
%%   <<"NetworkInterfaceId">> := string(),
%%   <<"PrivateIpAddresses">> => list(string())
%% }
-type unassign_private_ip_addresses_request() :: #{binary() => any()}.

%% Example:
%% provision_byoip_cidr_request() :: #{
%%   <<"Cidr">> := string(),
%%   <<"CidrAuthorizationContext">> => cidr_authorization_context(),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"MultiRegion">> => boolean(),
%%   <<"NetworkBorderGroup">> => string(),
%%   <<"PoolTagSpecifications">> => list(tag_specification()),
%%   <<"PubliclyAdvertisable">> => boolean()
%% }
-type provision_byoip_cidr_request() :: #{binary() => any()}.

%% Example:
%% fpga_image_state() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type fpga_image_state() :: #{binary() => any()}.

%% Example:
%% modify_fpga_image_attribute_request() :: #{
%%   <<"Attribute">> => list(any()),
%%   <<"Description">> => string(),
%%   <<"DryRun">> => boolean(),
%%   <<"FpgaImageId">> := string(),
%%   <<"LoadPermission">> => load_permission_modifications(),
%%   <<"Name">> => string(),
%%   <<"OperationType">> => list(any()),
%%   <<"ProductCodes">> => list(string()),
%%   <<"UserGroups">> => list(string()),
%%   <<"UserIds">> => list(string())
%% }
-type modify_fpga_image_attribute_request() :: #{binary() => any()}.

%% Example:
%% data_response() :: #{
%%   <<"Destination">> => string(),
%%   <<"Id">> => string(),
%%   <<"Metric">> => list(any()),
%%   <<"MetricPoints">> => list(metric_point()),
%%   <<"Period">> => list(any()),
%%   <<"Source">> => string(),
%%   <<"Statistic">> => list(any())
%% }
-type data_response() :: #{binary() => any()}.

%% Example:
%% describe_capacity_blocks_request() :: #{
%%   <<"CapacityBlockIds">> => list(string()),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NextToken">> => string()
%% }
-type describe_capacity_blocks_request() :: #{binary() => any()}.

%% Example:
%% vpn_tunnel_log_options() :: #{
%%   <<"CloudWatchLogOptions">> => cloud_watch_log_options()
%% }
-type vpn_tunnel_log_options() :: #{binary() => any()}.

%% Example:
%% route_table_association_state() :: #{
%%   <<"State">> => list(any()),
%%   <<"StatusMessage">> => string()
%% }
-type route_table_association_state() :: #{binary() => any()}.

%% Example:
%% ipv4_prefix_specification_response() :: #{
%%   <<"Ipv4Prefix">> => string()
%% }
-type ipv4_prefix_specification_response() :: #{binary() => any()}.

%% Example:
%% memory_gi_b_per_v_cpu() :: #{
%%   <<"Max">> => float(),
%%   <<"Min">> => float()
%% }
-type memory_gi_b_per_v_cpu() :: #{binary() => any()}.

%% Example:
%% v_cpu_info() :: #{
%%   <<"DefaultCores">> => integer(),
%%   <<"DefaultThreadsPerCore">> => integer(),
%%   <<"DefaultVCpus">> => integer(),
%%   <<"ValidCores">> => list(integer()),
%%   <<"ValidThreadsPerCore">> => list(integer())
%% }
-type v_cpu_info() :: #{binary() => any()}.

%% Example:
%% get_instance_types_from_instance_requirements_result() :: #{
%%   <<"InstanceTypes">> => list(instance_type_info_from_instance_requirements()),
%%   <<"NextToken">> => string()
%% }
-type get_instance_types_from_instance_requirements_result() :: #{binary() => any()}.

%% Example:
%% enable_vpc_classic_link_dns_support_result() :: #{
%%   <<"Return">> => boolean()
%% }
-type enable_vpc_classic_link_dns_support_result() :: #{binary() => any()}.

%% Example:
%% verified_access_endpoint_status() :: #{
%%   <<"Code">> => list(any()),
%%   <<"Message">> => string()
%% }
-type verified_access_endpoint_status() :: #{binary() => any()}.

%% Example:
%% describe_network_insights_analyses_request() :: #{
%%   <<"AnalysisEndTime">> => non_neg_integer(),
%%   <<"AnalysisStartTime">> => non_neg_integer(),
%%   <<"DryRun">> => boolean(),
%%   <<"Filters">> => list(filter()),
%%   <<"MaxResults">> => integer(),
%%   <<"NetworkInsightsAnalysisIds">> => list(string()),
%%   <<"NetworkInsightsPathId">> => string(),
%%   <<"NextToken">> => string()
%% }
-type describe_network_insights_analyses_request() :: #{binary() => any()}.

%% Example:
%% new_dhcp_configuration() :: #{
%%   <<"Key">> => string(),
%%   <<"Values">> => list(string())
%% }
-type new_dhcp_configuration() :: #{binary() => any()}.

%% Example:
%% gpu_info() :: #{
%%   <<"Gpus">> => list(gpu_device_info()),
%%   <<"TotalGpuMemoryInMiB">> => integer()
%% }
-type gpu_info() :: #{binary() => any()}.

%% Example:
%% export_task_s3_location() :: #{
%%   <<"S3Bucket">> => string(),
%%   <<"S3Prefix">> => string()
%% }
-type export_task_s3_location() :: #{binary() => any()}.

%% Example:
%% purchase_capacity_block_extension_result() :: #{
%%   <<"CapacityBlockExtensions">> => list(capacity_block_extension())
%% }
-type purchase_capacity_block_extension_result() :: #{binary() => any()}.

%% Example:
%% associate_iam_instance_profile_result() :: #{
%%   <<"IamInstanceProfileAssociation">> => iam_instance_profile_association()
%% }
-type associate_iam_instance_profile_result() :: #{binary() => any()}.

%% Example:
%% modify_vpc_block_public_access_exclusion_result() :: #{
%%   <<"VpcBlockPublicAccessExclusion">> => vpc_block_public_access_exclusion()
%% }
-type modify_vpc_block_public_access_exclusion_result() :: #{binary() => any()}.

%% Example:
%% purchase() :: #{
%%   <<"CurrencyCode">> => list(any()),
%%   <<"Duration">> => integer(),
%%   <<"HostIdSet">> => list(string()),
%%   <<"HostReservationId">> => string(),
%%   <<"HourlyPrice">> => string(),
%%   <<"InstanceFamily">> => string(),
%%   <<"PaymentOption">> => list(any()),
%%   <<"UpfrontPrice">> => string()
%% }
-type purchase() :: #{binary() => any()}.

%% Example:
%% enable_reachability_analyzer_organization_sharing_request() :: #{
%%   <<"DryRun">> => boolean()
%% }
-type enable_reachability_analyzer_organization_sharing_request() :: #{binary() => any()}.

%% Example:
%% private_dns_name_options_on_launch() :: #{
%%   <<"EnableResourceNameDnsAAAARecord">> => boolean(),
%%   <<"EnableResourceNameDnsARecord">> => boolean(),
%%   <<"HostnameType">> => list(any())
%% }
-type private_dns_name_options_on_launch() :: #{binary() => any()}.

%% Example:
%% modify_verified_access_endpoint_rds_options() :: #{
%%   <<"Port">> => integer(),
%%   <<"RdsEndpoint">> => string(),
%%   <<"SubnetIds">> => list(string())
%% }
-type modify_verified_access_endpoint_rds_options() :: #{binary() => any()}.

%% Example:
%% purchase_reserved_instances_offering_request() :: #{
%%   <<"DryRun">> => boolean(),
%%   <<"InstanceCount">> := integer(),
%%   <<"LimitPrice">> => reserved_instance_limit_price(),
%%   <<"PurchaseTime">> => non_neg_integer(),
%%   <<"ReservedInstancesOfferingId">> := string()
%% }
-type purchase_reserved_instances_offering_request() :: #{binary() => any()}.

%% Example:
%% client_vpn_authentication() :: #{
%%   <<"ActiveDirectory">> => directory_service_authentication(),
%%   <<"FederatedAuthentication">> => federated_authentication(),
%%   <<"MutualAuthentication">> => certificate_authentication(),
%%   <<"Type">> => list(any())
%% }
-type client_vpn_authentication() :: #{binary() => any()}.



%%====================================================================
%% API
%%====================================================================

%% @doc Accepts an Elastic IP address transfer.
%%
%% For more information, see Accept a transferred Elastic IP address:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-eips.html#using-instance-addressing-eips-transfer-accept
%% in the Amazon VPC User Guide.
-spec accept_address_transfer(aws_client:aws_client(), accept_address_transfer_request()) ->
    {ok, accept_address_transfer_result(), tuple()} |
    {error, any()}.
accept_address_transfer(Client, Input)
  when is_map(Client), is_map(Input) ->
    accept_address_transfer(Client, Input, []).

-spec accept_address_transfer(aws_client:aws_client(), accept_address_transfer_request(), proplists:proplist()) ->
    {ok, accept_address_transfer_result(), tuple()} |
    {error, any()}.
accept_address_transfer(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AcceptAddressTransfer">>, Input, Options).

%% @doc Accepts a request to assign billing of the available capacity of a
%% shared Capacity
%% Reservation to your account.
%%
%% For more information, see Billing assignment for shared
%% Amazon EC2 Capacity Reservations:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/assign-billing.html.
-spec accept_capacity_reservation_billing_ownership(aws_client:aws_client(), accept_capacity_reservation_billing_ownership_request()) ->
    {ok, accept_capacity_reservation_billing_ownership_result(), tuple()} |
    {error, any()}.
accept_capacity_reservation_billing_ownership(Client, Input)
  when is_map(Client), is_map(Input) ->
    accept_capacity_reservation_billing_ownership(Client, Input, []).

-spec accept_capacity_reservation_billing_ownership(aws_client:aws_client(), accept_capacity_reservation_billing_ownership_request(), proplists:proplist()) ->
    {ok, accept_capacity_reservation_billing_ownership_result(), tuple()} |
    {error, any()}.
accept_capacity_reservation_billing_ownership(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AcceptCapacityReservationBillingOwnership">>, Input, Options).

%% @doc Accepts the Convertible Reserved Instance exchange quote described in
%% the `GetReservedInstancesExchangeQuote' call.
-spec accept_reserved_instances_exchange_quote(aws_client:aws_client(), accept_reserved_instances_exchange_quote_request()) ->
    {ok, accept_reserved_instances_exchange_quote_result(), tuple()} |
    {error, any()}.
accept_reserved_instances_exchange_quote(Client, Input)
  when is_map(Client), is_map(Input) ->
    accept_reserved_instances_exchange_quote(Client, Input, []).

-spec accept_reserved_instances_exchange_quote(aws_client:aws_client(), accept_reserved_instances_exchange_quote_request(), proplists:proplist()) ->
    {ok, accept_reserved_instances_exchange_quote_result(), tuple()} |
    {error, any()}.
accept_reserved_instances_exchange_quote(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AcceptReservedInstancesExchangeQuote">>, Input, Options).

%% @doc Accepts a request to associate subnets with a transit gateway
%% multicast domain.
-spec accept_transit_gateway_multicast_domain_associations(aws_client:aws_client(), accept_transit_gateway_multicast_domain_associations_request()) ->
    {ok, accept_transit_gateway_multicast_domain_associations_result(), tuple()} |
    {error, any()}.
accept_transit_gateway_multicast_domain_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    accept_transit_gateway_multicast_domain_associations(Client, Input, []).

-spec accept_transit_gateway_multicast_domain_associations(aws_client:aws_client(), accept_transit_gateway_multicast_domain_associations_request(), proplists:proplist()) ->
    {ok, accept_transit_gateway_multicast_domain_associations_result(), tuple()} |
    {error, any()}.
accept_transit_gateway_multicast_domain_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AcceptTransitGatewayMulticastDomainAssociations">>, Input, Options).

%% @doc Accepts a transit gateway peering attachment request.
%%
%% The peering attachment must be
%% in the `pendingAcceptance' state.
-spec accept_transit_gateway_peering_attachment(aws_client:aws_client(), accept_transit_gateway_peering_attachment_request()) ->
    {ok, accept_transit_gateway_peering_attachment_result(), tuple()} |
    {error, any()}.
accept_transit_gateway_peering_attachment(Client, Input)
  when is_map(Client), is_map(Input) ->
    accept_transit_gateway_peering_attachment(Client, Input, []).

-spec accept_transit_gateway_peering_attachment(aws_client:aws_client(), accept_transit_gateway_peering_attachment_request(), proplists:proplist()) ->
    {ok, accept_transit_gateway_peering_attachment_result(), tuple()} |
    {error, any()}.
accept_transit_gateway_peering_attachment(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AcceptTransitGatewayPeeringAttachment">>, Input, Options).

%% @doc Accepts a request to attach a VPC to a transit gateway.
%%
%% The VPC attachment must be in the `pendingAcceptance' state.
%% Use `DescribeTransitGatewayVpcAttachments' to view your pending VPC
%% attachment requests.
%% Use `RejectTransitGatewayVpcAttachment' to reject a VPC attachment
%% request.
-spec accept_transit_gateway_vpc_attachment(aws_client:aws_client(), accept_transit_gateway_vpc_attachment_request()) ->
    {ok, accept_transit_gateway_vpc_attachment_result(), tuple()} |
    {error, any()}.
accept_transit_gateway_vpc_attachment(Client, Input)
  when is_map(Client), is_map(Input) ->
    accept_transit_gateway_vpc_attachment(Client, Input, []).

-spec accept_transit_gateway_vpc_attachment(aws_client:aws_client(), accept_transit_gateway_vpc_attachment_request(), proplists:proplist()) ->
    {ok, accept_transit_gateway_vpc_attachment_result(), tuple()} |
    {error, any()}.
accept_transit_gateway_vpc_attachment(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AcceptTransitGatewayVpcAttachment">>, Input, Options).

%% @doc Accepts connection requests to your VPC endpoint service.
-spec accept_vpc_endpoint_connections(aws_client:aws_client(), accept_vpc_endpoint_connections_request()) ->
    {ok, accept_vpc_endpoint_connections_result(), tuple()} |
    {error, any()}.
accept_vpc_endpoint_connections(Client, Input)
  when is_map(Client), is_map(Input) ->
    accept_vpc_endpoint_connections(Client, Input, []).

-spec accept_vpc_endpoint_connections(aws_client:aws_client(), accept_vpc_endpoint_connections_request(), proplists:proplist()) ->
    {ok, accept_vpc_endpoint_connections_result(), tuple()} |
    {error, any()}.
accept_vpc_endpoint_connections(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AcceptVpcEndpointConnections">>, Input, Options).

%% @doc Accept a VPC peering connection request.
%%
%% To accept a request, the VPC peering connection must
%% be in the `pending-acceptance' state, and you must be the owner of the
%% peer VPC.
%% Use `DescribeVpcPeeringConnections' to view your outstanding VPC
%% peering connection requests.
%%
%% For an inter-Region VPC peering connection request, you must accept the
%% VPC peering
%% connection in the Region of the accepter VPC.
-spec accept_vpc_peering_connection(aws_client:aws_client(), accept_vpc_peering_connection_request()) ->
    {ok, accept_vpc_peering_connection_result(), tuple()} |
    {error, any()}.
accept_vpc_peering_connection(Client, Input)
  when is_map(Client), is_map(Input) ->
    accept_vpc_peering_connection(Client, Input, []).

-spec accept_vpc_peering_connection(aws_client:aws_client(), accept_vpc_peering_connection_request(), proplists:proplist()) ->
    {ok, accept_vpc_peering_connection_result(), tuple()} |
    {error, any()}.
accept_vpc_peering_connection(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AcceptVpcPeeringConnection">>, Input, Options).

%% @doc Advertises an IPv4 or IPv6 address range that is provisioned for use
%% with your Amazon Web Services resources through
%% bring your own IP addresses (BYOIP).
%%
%% You can perform this operation at most once every 10 seconds, even if you
%% specify different
%% address ranges each time.
%%
%% We recommend that you stop advertising the BYOIP CIDR from other locations
%% when you advertise
%% it from Amazon Web Services. To minimize down time, you can configure your
%% Amazon Web Services resources to use an address from a
%% BYOIP CIDR before it is advertised, and then simultaneously stop
%% advertising it from the current
%% location and start advertising it through Amazon Web Services.
%%
%% It can take a few minutes before traffic to the specified addresses starts
%% routing to Amazon Web Services
%% because of BGP propagation delays.
-spec advertise_byoip_cidr(aws_client:aws_client(), advertise_byoip_cidr_request()) ->
    {ok, advertise_byoip_cidr_result(), tuple()} |
    {error, any()}.
advertise_byoip_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    advertise_byoip_cidr(Client, Input, []).

-spec advertise_byoip_cidr(aws_client:aws_client(), advertise_byoip_cidr_request(), proplists:proplist()) ->
    {ok, advertise_byoip_cidr_result(), tuple()} |
    {error, any()}.
advertise_byoip_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AdvertiseByoipCidr">>, Input, Options).

%% @doc Allocates an Elastic IP address to your Amazon Web Services account.
%%
%% After you allocate the Elastic IP address you can associate
%% it with an instance or network interface. After you release an Elastic IP
%% address, it is released to the IP address
%% pool and can be allocated to a different Amazon Web Services account.
%%
%% You can allocate an Elastic IP address from an address pool owned by
%% Amazon Web Services or from an address pool created
%% from a public IPv4 address range that you have brought to Amazon Web
%% Services for use with your Amazon Web Services resources using bring your
%% own
%% IP addresses (BYOIP). For more information, see Bring Your Own IP
%% Addresses (BYOIP):
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html in the
%% Amazon EC2 User Guide.
%%
%% If you release an Elastic IP address, you might be able to recover it. You
%% cannot recover
%% an Elastic IP address that you released after it is allocated to another
%% Amazon Web Services account. To attempt to recover an Elastic IP address
%% that you released, specify
%% it in this operation.
%%
%% For more information, see Elastic IP Addresses:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html
%% in the Amazon EC2 User Guide.
%%
%% You can allocate a carrier IP address which is a public IP address from a
%% telecommunication carrier,
%% to a network interface which resides in a subnet in a Wavelength Zone (for
%% example an EC2 instance).
-spec allocate_address(aws_client:aws_client(), allocate_address_request()) ->
    {ok, allocate_address_result(), tuple()} |
    {error, any()}.
allocate_address(Client, Input)
  when is_map(Client), is_map(Input) ->
    allocate_address(Client, Input, []).

-spec allocate_address(aws_client:aws_client(), allocate_address_request(), proplists:proplist()) ->
    {ok, allocate_address_result(), tuple()} |
    {error, any()}.
allocate_address(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AllocateAddress">>, Input, Options).

%% @doc Allocates a Dedicated Host to your account.
%%
%% At a minimum, specify the supported
%% instance type or instance family, the Availability Zone in which to
%% allocate the host,
%% and the number of hosts to allocate.
-spec allocate_hosts(aws_client:aws_client(), allocate_hosts_request()) ->
    {ok, allocate_hosts_result(), tuple()} |
    {error, any()}.
allocate_hosts(Client, Input)
  when is_map(Client), is_map(Input) ->
    allocate_hosts(Client, Input, []).

-spec allocate_hosts(aws_client:aws_client(), allocate_hosts_request(), proplists:proplist()) ->
    {ok, allocate_hosts_result(), tuple()} |
    {error, any()}.
allocate_hosts(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AllocateHosts">>, Input, Options).

%% @doc Allocate a CIDR from an IPAM pool.
%%
%% The Region you use should be the IPAM pool locale. The locale is the
%% Amazon Web Services Region where this IPAM pool is available for
%% allocations.
%%
%% In IPAM, an allocation is a CIDR assignment from an IPAM pool to another
%% IPAM pool or to a resource. For more information, see Allocate CIDRs:
%% https://docs.aws.amazon.com/vpc/latest/ipam/allocate-cidrs-ipam.html in
%% the Amazon VPC IPAM User Guide.
%%
%% This action creates an allocation with strong consistency. The returned
%% CIDR will not overlap with any other allocations from the same pool.
-spec allocate_ipam_pool_cidr(aws_client:aws_client(), allocate_ipam_pool_cidr_request()) ->
    {ok, allocate_ipam_pool_cidr_result(), tuple()} |
    {error, any()}.
allocate_ipam_pool_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    allocate_ipam_pool_cidr(Client, Input, []).

-spec allocate_ipam_pool_cidr(aws_client:aws_client(), allocate_ipam_pool_cidr_request(), proplists:proplist()) ->
    {ok, allocate_ipam_pool_cidr_result(), tuple()} |
    {error, any()}.
allocate_ipam_pool_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AllocateIpamPoolCidr">>, Input, Options).

%% @doc Applies a security group to the association between the target
%% network and the Client VPN endpoint.
%%
%% This action replaces the existing
%% security groups with the specified security groups.
-spec apply_security_groups_to_client_vpn_target_network(aws_client:aws_client(), apply_security_groups_to_client_vpn_target_network_request()) ->
    {ok, apply_security_groups_to_client_vpn_target_network_result(), tuple()} |
    {error, any()}.
apply_security_groups_to_client_vpn_target_network(Client, Input)
  when is_map(Client), is_map(Input) ->
    apply_security_groups_to_client_vpn_target_network(Client, Input, []).

-spec apply_security_groups_to_client_vpn_target_network(aws_client:aws_client(), apply_security_groups_to_client_vpn_target_network_request(), proplists:proplist()) ->
    {ok, apply_security_groups_to_client_vpn_target_network_result(), tuple()} |
    {error, any()}.
apply_security_groups_to_client_vpn_target_network(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ApplySecurityGroupsToClientVpnTargetNetwork">>, Input, Options).

%% @doc Assigns the specified IPv6 addresses to the specified network
%% interface.
%%
%% You can
%% specify specific IPv6 addresses, or you can specify the number of IPv6
%% addresses to be
%% automatically assigned from the subnet's IPv6 CIDR block range. You
%% can assign as many
%% IPv6 addresses to a network interface as you can assign private IPv4
%% addresses, and the
%% limit varies by instance type.
%%
%% You must specify either the IPv6 addresses or the IPv6 address count in
%% the request.
%%
%% You can optionally use Prefix Delegation on the network interface. You
%% must specify
%% either the IPV6 Prefix Delegation prefixes, or the IPv6 Prefix Delegation
%% count. For
%% information, see Assigning prefixes to network
%% interfaces:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html in
%% the Amazon EC2 User Guide.
-spec assign_ipv6_addresses(aws_client:aws_client(), assign_ipv6_addresses_request()) ->
    {ok, assign_ipv6_addresses_result(), tuple()} |
    {error, any()}.
assign_ipv6_addresses(Client, Input)
  when is_map(Client), is_map(Input) ->
    assign_ipv6_addresses(Client, Input, []).

-spec assign_ipv6_addresses(aws_client:aws_client(), assign_ipv6_addresses_request(), proplists:proplist()) ->
    {ok, assign_ipv6_addresses_result(), tuple()} |
    {error, any()}.
assign_ipv6_addresses(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssignIpv6Addresses">>, Input, Options).

%% @doc Assigns the specified secondary private IP addresses to the specified
%% network
%% interface.
%%
%% You can specify specific secondary IP addresses, or you can specify the
%% number of
%% secondary IP addresses to be automatically assigned from the subnet's
%% CIDR block range.
%% The number of secondary IP addresses that you can assign to an instance
%% varies by
%% instance type. For more information about Elastic IP addresses, see
%% Elastic IP
%% Addresses:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html
%% in the Amazon EC2 User Guide.
%%
%% When you move a secondary private IP address to another network interface,
%% any Elastic
%% IP address that is associated with the IP address is also moved.
%%
%% Remapping an IP address is an asynchronous operation. When you move an IP
%% address from
%% one network interface to another, check
%% `network/interfaces/macs/mac/local-ipv4s' in the instance metadata to
%% confirm that the remapping is complete.
%%
%% You must specify either the IP addresses or the IP address count in the
%% request.
%%
%% You can optionally use Prefix Delegation on the network interface. You
%% must specify
%% either the IPv4 Prefix Delegation prefixes, or the IPv4 Prefix Delegation
%% count. For
%% information, see Assigning prefixes to network
%% interfaces:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html in
%% the Amazon EC2 User Guide.
-spec assign_private_ip_addresses(aws_client:aws_client(), assign_private_ip_addresses_request()) ->
    {ok, assign_private_ip_addresses_result(), tuple()} |
    {error, any()}.
assign_private_ip_addresses(Client, Input)
  when is_map(Client), is_map(Input) ->
    assign_private_ip_addresses(Client, Input, []).

-spec assign_private_ip_addresses(aws_client:aws_client(), assign_private_ip_addresses_request(), proplists:proplist()) ->
    {ok, assign_private_ip_addresses_result(), tuple()} |
    {error, any()}.
assign_private_ip_addresses(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssignPrivateIpAddresses">>, Input, Options).

%% @doc Assigns private IPv4 addresses to a private NAT gateway.
%%
%% For more information, see
%% Work with NAT gateways:
%% https://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-working-with.html
%% in the Amazon VPC User Guide.
-spec assign_private_nat_gateway_address(aws_client:aws_client(), assign_private_nat_gateway_address_request()) ->
    {ok, assign_private_nat_gateway_address_result(), tuple()} |
    {error, any()}.
assign_private_nat_gateway_address(Client, Input)
  when is_map(Client), is_map(Input) ->
    assign_private_nat_gateway_address(Client, Input, []).

-spec assign_private_nat_gateway_address(aws_client:aws_client(), assign_private_nat_gateway_address_request(), proplists:proplist()) ->
    {ok, assign_private_nat_gateway_address_result(), tuple()} |
    {error, any()}.
assign_private_nat_gateway_address(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssignPrivateNatGatewayAddress">>, Input, Options).

%% @doc Associates an Elastic IP address, or carrier IP address (for
%% instances that are in
%% subnets in Wavelength Zones) with an instance or a network interface.
%%
%% Before you can use an
%% Elastic IP address, you must allocate it to your account.
%%
%% If the Elastic IP address is already
%% associated with a different instance, it is disassociated from that
%% instance and associated
%% with the specified instance. If you associate an Elastic IP address with
%% an instance that has
%% an existing Elastic IP address, the existing address is disassociated from
%% the instance, but
%% remains allocated to your account.
%%
%% [Subnets in Wavelength Zones] You can associate an IP address from the
%% telecommunication
%% carrier to the instance or network interface.
%%
%% You cannot associate an Elastic IP address with an interface in a
%% different network border group.
%%
%% This is an idempotent operation. If you perform the operation more than
%% once, Amazon EC2
%% doesn't return an error, and you may be charged for each time the
%% Elastic IP address is
%% remapped to the same instance. For more information, see the Elastic IP
%% Addresses section of Amazon EC2
%% Pricing: http://aws.amazon.com/ec2/pricing/.
-spec associate_address(aws_client:aws_client(), associate_address_request()) ->
    {ok, associate_address_result(), tuple()} |
    {error, any()}.
associate_address(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_address(Client, Input, []).

-spec associate_address(aws_client:aws_client(), associate_address_request(), proplists:proplist()) ->
    {ok, associate_address_result(), tuple()} |
    {error, any()}.
associate_address(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateAddress">>, Input, Options).

%% @doc Initiates a request to assign billing of the unused capacity of a
%% shared Capacity
%% Reservation to a consumer account that is consolidated under the same
%% Amazon Web Services
%% organizations payer account.
%%
%% For more information, see Billing assignment for shared
%% Amazon EC2 Capacity Reservations:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/assign-billing.html.
-spec associate_capacity_reservation_billing_owner(aws_client:aws_client(), associate_capacity_reservation_billing_owner_request()) ->
    {ok, associate_capacity_reservation_billing_owner_result(), tuple()} |
    {error, any()}.
associate_capacity_reservation_billing_owner(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_capacity_reservation_billing_owner(Client, Input, []).

-spec associate_capacity_reservation_billing_owner(aws_client:aws_client(), associate_capacity_reservation_billing_owner_request(), proplists:proplist()) ->
    {ok, associate_capacity_reservation_billing_owner_result(), tuple()} |
    {error, any()}.
associate_capacity_reservation_billing_owner(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateCapacityReservationBillingOwner">>, Input, Options).

%% @doc Associates a target network with a Client VPN endpoint.
%%
%% A target network is a subnet in a VPC. You can associate multiple subnets
%% from the same VPC with a Client VPN endpoint. You can associate only one
%% subnet in each Availability Zone. We recommend that you associate at least
%% two subnets to provide Availability Zone redundancy.
%%
%% If you specified a VPC when you created the Client VPN endpoint or if you
%% have previous subnet associations, the specified subnet must be in the
%% same VPC. To specify a subnet that's in a different VPC, you must
%% first modify the Client VPN endpoint (`ModifyClientVpnEndpoint') and
%% change the VPC that's associated with it.
-spec associate_client_vpn_target_network(aws_client:aws_client(), associate_client_vpn_target_network_request()) ->
    {ok, associate_client_vpn_target_network_result(), tuple()} |
    {error, any()}.
associate_client_vpn_target_network(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_client_vpn_target_network(Client, Input, []).

-spec associate_client_vpn_target_network(aws_client:aws_client(), associate_client_vpn_target_network_request(), proplists:proplist()) ->
    {ok, associate_client_vpn_target_network_result(), tuple()} |
    {error, any()}.
associate_client_vpn_target_network(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateClientVpnTargetNetwork">>, Input, Options).

%% @doc Associates a set of DHCP options (that you've previously created)
%% with the specified VPC, or associates no DHCP options with the VPC.
%%
%% After you associate the options with the VPC, any existing instances and
%% all new instances that you launch in that VPC use the options. You
%% don't need to restart or relaunch the instances. They automatically
%% pick up the changes within a few hours, depending on how frequently the
%% instance renews its DHCP lease. You can explicitly renew the lease using
%% the operating system on the instance.
%%
%% For more information, see DHCP option sets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html
%% in the Amazon VPC User Guide.
-spec associate_dhcp_options(aws_client:aws_client(), associate_dhcp_options_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
associate_dhcp_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_dhcp_options(Client, Input, []).

-spec associate_dhcp_options(aws_client:aws_client(), associate_dhcp_options_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
associate_dhcp_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateDhcpOptions">>, Input, Options).

%% @doc Associates an Identity and Access Management (IAM) role with an
%% Certificate Manager (ACM) certificate.
%%
%% This enables the certificate to be used by the ACM for Nitro Enclaves
%% application inside an enclave. For more
%% information, see Certificate Manager for Nitro Enclaves:
%% https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html
%% in the Amazon Web Services Nitro Enclaves
%% User Guide.
%%
%% When the IAM role is associated with the ACM certificate, the certificate,
%% certificate chain, and encrypted
%% private key are placed in an Amazon S3 location that only the associated
%% IAM role can access. The private key of the certificate
%% is encrypted with an Amazon Web Services managed key that has an attached
%% attestation-based key policy.
%%
%% To enable the IAM role to access the Amazon S3 object, you must grant it
%% permission to call `s3:GetObject'
%% on the Amazon S3 bucket returned by the command. To enable the IAM role to
%% access the KMS key,
%% you must grant it permission to call `kms:Decrypt' on the KMS key
%% returned by the command.
%% For more information, see
%% Grant the role permission to access the certificate and encryption key:
%% https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html#add-policy
%% in the
%% Amazon Web Services Nitro Enclaves User Guide.
-spec associate_enclave_certificate_iam_role(aws_client:aws_client(), associate_enclave_certificate_iam_role_request()) ->
    {ok, associate_enclave_certificate_iam_role_result(), tuple()} |
    {error, any()}.
associate_enclave_certificate_iam_role(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_enclave_certificate_iam_role(Client, Input, []).

-spec associate_enclave_certificate_iam_role(aws_client:aws_client(), associate_enclave_certificate_iam_role_request(), proplists:proplist()) ->
    {ok, associate_enclave_certificate_iam_role_result(), tuple()} |
    {error, any()}.
associate_enclave_certificate_iam_role(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateEnclaveCertificateIamRole">>, Input, Options).

%% @doc Associates an IAM instance profile with a running or stopped
%% instance.
%%
%% You cannot
%% associate more than one IAM instance profile with an instance.
-spec associate_iam_instance_profile(aws_client:aws_client(), associate_iam_instance_profile_request()) ->
    {ok, associate_iam_instance_profile_result(), tuple()} |
    {error, any()}.
associate_iam_instance_profile(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_iam_instance_profile(Client, Input, []).

-spec associate_iam_instance_profile(aws_client:aws_client(), associate_iam_instance_profile_request(), proplists:proplist()) ->
    {ok, associate_iam_instance_profile_result(), tuple()} |
    {error, any()}.
associate_iam_instance_profile(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateIamInstanceProfile">>, Input, Options).

%% @doc Associates one or more targets with an event window.
%%
%% Only one type of target (instance
%% IDs, Dedicated Host IDs, or tags) can be specified with an event window.
%%
%% For more information, see Define event windows for scheduled
%% events:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html in
%% the Amazon EC2 User Guide.
-spec associate_instance_event_window(aws_client:aws_client(), associate_instance_event_window_request()) ->
    {ok, associate_instance_event_window_result(), tuple()} |
    {error, any()}.
associate_instance_event_window(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_instance_event_window(Client, Input, []).

-spec associate_instance_event_window(aws_client:aws_client(), associate_instance_event_window_request(), proplists:proplist()) ->
    {ok, associate_instance_event_window_result(), tuple()} |
    {error, any()}.
associate_instance_event_window(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateInstanceEventWindow">>, Input, Options).

%% @doc Associates your Autonomous System Number (ASN) with a BYOIP CIDR that
%% you own in the same Amazon Web Services Region.
%%
%% For more information, see Tutorial: Bring your ASN to IPAM:
%% https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoasn.html in the
%% Amazon VPC IPAM guide.
%%
%% After the association succeeds, the ASN is eligible for
%% advertisement. You can view the association with DescribeByoipCidrs:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeByoipCidrs.html.
%% You can advertise the CIDR with AdvertiseByoipCidr:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AdvertiseByoipCidr.html.
-spec associate_ipam_byoasn(aws_client:aws_client(), associate_ipam_byoasn_request()) ->
    {ok, associate_ipam_byoasn_result(), tuple()} |
    {error, any()}.
associate_ipam_byoasn(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_ipam_byoasn(Client, Input, []).

-spec associate_ipam_byoasn(aws_client:aws_client(), associate_ipam_byoasn_request(), proplists:proplist()) ->
    {ok, associate_ipam_byoasn_result(), tuple()} |
    {error, any()}.
associate_ipam_byoasn(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateIpamByoasn">>, Input, Options).

%% @doc Associates an IPAM resource discovery with an Amazon VPC IPAM.
%%
%% A resource discovery is an IPAM component that enables IPAM to manage and
%% monitor resources that belong to the owning account.
-spec associate_ipam_resource_discovery(aws_client:aws_client(), associate_ipam_resource_discovery_request()) ->
    {ok, associate_ipam_resource_discovery_result(), tuple()} |
    {error, any()}.
associate_ipam_resource_discovery(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_ipam_resource_discovery(Client, Input, []).

-spec associate_ipam_resource_discovery(aws_client:aws_client(), associate_ipam_resource_discovery_request(), proplists:proplist()) ->
    {ok, associate_ipam_resource_discovery_result(), tuple()} |
    {error, any()}.
associate_ipam_resource_discovery(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateIpamResourceDiscovery">>, Input, Options).

%% @doc Associates Elastic IP addresses (EIPs) and private IPv4 addresses
%% with a public NAT gateway.
%%
%% For more information,
%% see Work with NAT gateways:
%% https://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-working-with.html
%% in the Amazon VPC User Guide.
%%
%% By default, you can associate up to 2 Elastic IP addresses per public NAT
%% gateway. You can increase the limit by requesting a quota adjustment.
%% For more information, see Elastic IP address quotas:
%% https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html#vpc-limits-eips
%% in the Amazon VPC User Guide.
%%
%% When you associate an EIP or secondary EIPs with a public NAT gateway, the
%% network border group of the EIPs
%% must match the network border group of the Availability Zone (AZ) that the
%% public NAT gateway is in. If it's not the same,
%% the EIP will fail to associate. You can see the network border group for
%% the subnet's AZ by viewing the details of the subnet.
%% Similarly, you can view the network border group of an EIP by viewing the
%% details of the EIP address. For more information
%% about network border groups and EIPs, see Allocate an Elastic IP address:
%% https://docs.aws.amazon.com/vpc/latest/userguide/WorkWithEIPs.html in the
%% Amazon VPC User Guide.
-spec associate_nat_gateway_address(aws_client:aws_client(), associate_nat_gateway_address_request()) ->
    {ok, associate_nat_gateway_address_result(), tuple()} |
    {error, any()}.
associate_nat_gateway_address(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_nat_gateway_address(Client, Input, []).

-spec associate_nat_gateway_address(aws_client:aws_client(), associate_nat_gateway_address_request(), proplists:proplist()) ->
    {ok, associate_nat_gateway_address_result(), tuple()} |
    {error, any()}.
associate_nat_gateway_address(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateNatGatewayAddress">>, Input, Options).

%% @doc Associates a route server with a VPC to enable dynamic route updates.
%%
%% A route server association is the connection established between a route
%% server and a VPC.
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec associate_route_server(aws_client:aws_client(), associate_route_server_request()) ->
    {ok, associate_route_server_result(), tuple()} |
    {error, any()}.
associate_route_server(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_route_server(Client, Input, []).

-spec associate_route_server(aws_client:aws_client(), associate_route_server_request(), proplists:proplist()) ->
    {ok, associate_route_server_result(), tuple()} |
    {error, any()}.
associate_route_server(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateRouteServer">>, Input, Options).

%% @doc Associates a subnet in your VPC or an internet gateway or virtual
%% private gateway
%% attached to your VPC with a route table in your VPC.
%%
%% This association causes traffic
%% from the subnet or gateway to be routed according to the routes in the
%% route table. The
%% action returns an association ID, which you need in order to disassociate
%% the route
%% table later. A route table can be associated with multiple subnets.
%%
%% For more information, see Route tables:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html in
%% the
%% Amazon VPC User Guide.
-spec associate_route_table(aws_client:aws_client(), associate_route_table_request()) ->
    {ok, associate_route_table_result(), tuple()} |
    {error, any()}.
associate_route_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_route_table(Client, Input, []).

-spec associate_route_table(aws_client:aws_client(), associate_route_table_request(), proplists:proplist()) ->
    {ok, associate_route_table_result(), tuple()} |
    {error, any()}.
associate_route_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateRouteTable">>, Input, Options).

%% @doc Associates a security group with another VPC in the same Region.
%%
%% This enables you to use the same security group with network interfaces
%% and instances in the specified VPC.
%%
%% The VPC you want to associate the security group with must be in the same
%% Region.
%%
%% You can associate the security group with another VPC if your account owns
%% the VPC or if the VPC was shared with you.
%%
%% You must own the security group.
%%
%% You cannot use this feature with default security groups.
%%
%% You cannot use this feature with the default VPC.
-spec associate_security_group_vpc(aws_client:aws_client(), associate_security_group_vpc_request()) ->
    {ok, associate_security_group_vpc_result(), tuple()} |
    {error, any()}.
associate_security_group_vpc(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_security_group_vpc(Client, Input, []).

-spec associate_security_group_vpc(aws_client:aws_client(), associate_security_group_vpc_request(), proplists:proplist()) ->
    {ok, associate_security_group_vpc_result(), tuple()} |
    {error, any()}.
associate_security_group_vpc(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateSecurityGroupVpc">>, Input, Options).

%% @doc Associates a CIDR block with your subnet.
%%
%% You can only associate a single IPv6 CIDR
%% block with your subnet.
-spec associate_subnet_cidr_block(aws_client:aws_client(), associate_subnet_cidr_block_request()) ->
    {ok, associate_subnet_cidr_block_result(), tuple()} |
    {error, any()}.
associate_subnet_cidr_block(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_subnet_cidr_block(Client, Input, []).

-spec associate_subnet_cidr_block(aws_client:aws_client(), associate_subnet_cidr_block_request(), proplists:proplist()) ->
    {ok, associate_subnet_cidr_block_result(), tuple()} |
    {error, any()}.
associate_subnet_cidr_block(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateSubnetCidrBlock">>, Input, Options).

%% @doc Associates the specified subnets and transit gateway attachments with
%% the specified transit gateway multicast domain.
%%
%% The transit gateway attachment must be in the available state before you
%% can add a resource. Use DescribeTransitGatewayAttachments:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayAttachments.html
%% to see the state of the attachment.
-spec associate_transit_gateway_multicast_domain(aws_client:aws_client(), associate_transit_gateway_multicast_domain_request()) ->
    {ok, associate_transit_gateway_multicast_domain_result(), tuple()} |
    {error, any()}.
associate_transit_gateway_multicast_domain(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_transit_gateway_multicast_domain(Client, Input, []).

-spec associate_transit_gateway_multicast_domain(aws_client:aws_client(), associate_transit_gateway_multicast_domain_request(), proplists:proplist()) ->
    {ok, associate_transit_gateway_multicast_domain_result(), tuple()} |
    {error, any()}.
associate_transit_gateway_multicast_domain(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateTransitGatewayMulticastDomain">>, Input, Options).

%% @doc Associates the specified transit gateway attachment with a transit
%% gateway policy table.
-spec associate_transit_gateway_policy_table(aws_client:aws_client(), associate_transit_gateway_policy_table_request()) ->
    {ok, associate_transit_gateway_policy_table_result(), tuple()} |
    {error, any()}.
associate_transit_gateway_policy_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_transit_gateway_policy_table(Client, Input, []).

-spec associate_transit_gateway_policy_table(aws_client:aws_client(), associate_transit_gateway_policy_table_request(), proplists:proplist()) ->
    {ok, associate_transit_gateway_policy_table_result(), tuple()} |
    {error, any()}.
associate_transit_gateway_policy_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateTransitGatewayPolicyTable">>, Input, Options).

%% @doc Associates the specified attachment with the specified transit
%% gateway route table.
%%
%% You can
%% associate only one route table with an attachment.
-spec associate_transit_gateway_route_table(aws_client:aws_client(), associate_transit_gateway_route_table_request()) ->
    {ok, associate_transit_gateway_route_table_result(), tuple()} |
    {error, any()}.
associate_transit_gateway_route_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_transit_gateway_route_table(Client, Input, []).

-spec associate_transit_gateway_route_table(aws_client:aws_client(), associate_transit_gateway_route_table_request(), proplists:proplist()) ->
    {ok, associate_transit_gateway_route_table_result(), tuple()} |
    {error, any()}.
associate_transit_gateway_route_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateTransitGatewayRouteTable">>, Input, Options).

%% @doc Associates a branch network interface with a trunk network interface.
%%
%% Before you create the association, use CreateNetworkInterface:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkInterface.html
%% command and set the interface type
%% to `trunk'. You must also create a network interface for
%% each branch network interface that you want to associate with the trunk
%% network interface.
-spec associate_trunk_interface(aws_client:aws_client(), associate_trunk_interface_request()) ->
    {ok, associate_trunk_interface_result(), tuple()} |
    {error, any()}.
associate_trunk_interface(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_trunk_interface(Client, Input, []).

-spec associate_trunk_interface(aws_client:aws_client(), associate_trunk_interface_request(), proplists:proplist()) ->
    {ok, associate_trunk_interface_result(), tuple()} |
    {error, any()}.
associate_trunk_interface(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateTrunkInterface">>, Input, Options).

%% @doc Associates a CIDR block with your VPC.
%%
%% You can associate a secondary IPv4 CIDR block,
%% an Amazon-provided IPv6 CIDR block, or an IPv6 CIDR block from an IPv6
%% address pool that
%% you provisioned through bring your own IP addresses (BYOIP:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html).
%%
%% You must specify one of the following in the request: an IPv4 CIDR block,
%% an IPv6
%% pool, or an Amazon-provided IPv6 CIDR block.
%%
%% For more information about associating CIDR blocks with your VPC and
%% applicable
%% restrictions, see IP addressing for your VPCs and subnets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html
%% in the Amazon VPC User Guide.
-spec associate_vpc_cidr_block(aws_client:aws_client(), associate_vpc_cidr_block_request()) ->
    {ok, associate_vpc_cidr_block_result(), tuple()} |
    {error, any()}.
associate_vpc_cidr_block(Client, Input)
  when is_map(Client), is_map(Input) ->
    associate_vpc_cidr_block(Client, Input, []).

-spec associate_vpc_cidr_block(aws_client:aws_client(), associate_vpc_cidr_block_request(), proplists:proplist()) ->
    {ok, associate_vpc_cidr_block_result(), tuple()} |
    {error, any()}.
associate_vpc_cidr_block(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AssociateVpcCidrBlock">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Links an EC2-Classic instance to a ClassicLink-enabled VPC through one or
%% more of the VPC
%% security groups. You cannot link an EC2-Classic instance to more than one
%% VPC at a time. You
%% can only link an instance that's in the `running' state. An
%% instance is
%% automatically unlinked from a VPC when it's stopped - you can link it
%% to the VPC again when
%% you restart it.
%%
%% After you've linked an instance, you cannot change the VPC security
%% groups that are associated with it. To change the security groups, you
%% must first unlink the instance, and then link it again.
%%
%% Linking your instance to a VPC is sometimes referred to as attaching your
%% instance.
-spec attach_classic_link_vpc(aws_client:aws_client(), attach_classic_link_vpc_request()) ->
    {ok, attach_classic_link_vpc_result(), tuple()} |
    {error, any()}.
attach_classic_link_vpc(Client, Input)
  when is_map(Client), is_map(Input) ->
    attach_classic_link_vpc(Client, Input, []).

-spec attach_classic_link_vpc(aws_client:aws_client(), attach_classic_link_vpc_request(), proplists:proplist()) ->
    {ok, attach_classic_link_vpc_result(), tuple()} |
    {error, any()}.
attach_classic_link_vpc(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AttachClassicLinkVpc">>, Input, Options).

%% @doc Attaches an internet gateway or a virtual private gateway to a VPC,
%% enabling connectivity
%% between the internet and the VPC.
%%
%% For more information, see Internet gateways:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html
%% in the
%% Amazon VPC User Guide.
-spec attach_internet_gateway(aws_client:aws_client(), attach_internet_gateway_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
attach_internet_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    attach_internet_gateway(Client, Input, []).

-spec attach_internet_gateway(aws_client:aws_client(), attach_internet_gateway_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
attach_internet_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AttachInternetGateway">>, Input, Options).

%% @doc Attaches a network interface to an instance.
-spec attach_network_interface(aws_client:aws_client(), attach_network_interface_request()) ->
    {ok, attach_network_interface_result(), tuple()} |
    {error, any()}.
attach_network_interface(Client, Input)
  when is_map(Client), is_map(Input) ->
    attach_network_interface(Client, Input, []).

-spec attach_network_interface(aws_client:aws_client(), attach_network_interface_request(), proplists:proplist()) ->
    {ok, attach_network_interface_result(), tuple()} |
    {error, any()}.
attach_network_interface(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AttachNetworkInterface">>, Input, Options).

%% @doc Attaches the specified Amazon Web Services Verified Access trust
%% provider to the specified Amazon Web Services Verified Access instance.
-spec attach_verified_access_trust_provider(aws_client:aws_client(), attach_verified_access_trust_provider_request()) ->
    {ok, attach_verified_access_trust_provider_result(), tuple()} |
    {error, any()}.
attach_verified_access_trust_provider(Client, Input)
  when is_map(Client), is_map(Input) ->
    attach_verified_access_trust_provider(Client, Input, []).

-spec attach_verified_access_trust_provider(aws_client:aws_client(), attach_verified_access_trust_provider_request(), proplists:proplist()) ->
    {ok, attach_verified_access_trust_provider_result(), tuple()} |
    {error, any()}.
attach_verified_access_trust_provider(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AttachVerifiedAccessTrustProvider">>, Input, Options).

%% @doc Attaches an Amazon EBS volume to a `running' or `stopped'
%% instance, and exposes it to the instance with the specified device name.
%%
%% The maximum number of Amazon EBS volumes that you can attach to an
%% instance depends on the
%% instance type. If you exceed the volume attachment limit for an instance
%% type, the attachment
%% request fails with the `AttachmentLimitExceeded' error. For more
%% information,
%% see Instance
%% volume limits:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/volume_limits.html.
%%
%% After you attach an EBS volume, you must make it available for use. For
%% more information,
%% see Make an
%% EBS volume available for use:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-using-volumes.html.
%%
%% If a volume has an Amazon Web Services Marketplace product code:
%%
%% The volume can be attached only to a stopped instance.
%%
%% Amazon Web Services Marketplace product codes are copied from the volume
%% to the instance.
%%
%% You must be subscribed to the product.
%%
%% The instance type and operating system of the instance must support the
%% product. For
%% example, you can't detach a volume from a Windows instance and attach
%% it to a Linux
%% instance.
%%
%% For more information, see Attach an Amazon EBS volume to an instance:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-attaching-volume.html
%% in the
%% Amazon EBS User Guide.
-spec attach_volume(aws_client:aws_client(), attach_volume_request()) ->
    {ok, volume_attachment(), tuple()} |
    {error, any()}.
attach_volume(Client, Input)
  when is_map(Client), is_map(Input) ->
    attach_volume(Client, Input, []).

-spec attach_volume(aws_client:aws_client(), attach_volume_request(), proplists:proplist()) ->
    {ok, volume_attachment(), tuple()} |
    {error, any()}.
attach_volume(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AttachVolume">>, Input, Options).

%% @doc Attaches an available virtual private gateway to a VPC.
%%
%% You can attach one virtual private
%% gateway to one VPC at a time.
%%
%% For more information, see Amazon Web Services Site-to-Site VPN:
%% https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html in the Amazon
%% Web Services Site-to-Site VPN
%% User Guide.
-spec attach_vpn_gateway(aws_client:aws_client(), attach_vpn_gateway_request()) ->
    {ok, attach_vpn_gateway_result(), tuple()} |
    {error, any()}.
attach_vpn_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    attach_vpn_gateway(Client, Input, []).

-spec attach_vpn_gateway(aws_client:aws_client(), attach_vpn_gateway_request(), proplists:proplist()) ->
    {ok, attach_vpn_gateway_result(), tuple()} |
    {error, any()}.
attach_vpn_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AttachVpnGateway">>, Input, Options).

%% @doc Adds an ingress authorization rule to a Client VPN endpoint.
%%
%% Ingress authorization rules act as
%% firewall rules that grant access to networks. You must configure ingress
%% authorization rules to
%% enable clients to access resources in Amazon Web Services or on-premises
%% networks.
-spec authorize_client_vpn_ingress(aws_client:aws_client(), authorize_client_vpn_ingress_request()) ->
    {ok, authorize_client_vpn_ingress_result(), tuple()} |
    {error, any()}.
authorize_client_vpn_ingress(Client, Input)
  when is_map(Client), is_map(Input) ->
    authorize_client_vpn_ingress(Client, Input, []).

-spec authorize_client_vpn_ingress(aws_client:aws_client(), authorize_client_vpn_ingress_request(), proplists:proplist()) ->
    {ok, authorize_client_vpn_ingress_result(), tuple()} |
    {error, any()}.
authorize_client_vpn_ingress(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AuthorizeClientVpnIngress">>, Input, Options).

%% @doc Adds the specified outbound (egress) rules to a security group.
%%
%% An outbound rule permits instances to send traffic to the specified IPv4
%% or IPv6
%% address ranges, the IP address ranges specified by a prefix list, or the
%% instances
%% that are associated with a source security group. For more information,
%% see Security group rules:
%% https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html.
%%
%% You must specify exactly one of the following destinations: an IPv4 or
%% IPv6 address range,
%% a prefix list, or a security group. You must specify a protocol for each
%% rule (for example, TCP).
%% If the protocol is TCP or UDP, you must also specify a port or port range.
%% If the protocol is
%% ICMP or ICMPv6, you must also specify the ICMP type and code.
%%
%% Rule changes are propagated to instances associated with the security
%% group as quickly
%% as possible. However, a small delay might occur.
%%
%% For examples of rules that you can add to security groups for specific
%% access scenarios,
%% see Security group rules for different use cases:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html
%% in the Amazon EC2 User Guide.
%%
%% For information about security group quotas, see Amazon VPC quotas:
%% https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html in
%% the Amazon VPC User Guide.
-spec authorize_security_group_egress(aws_client:aws_client(), authorize_security_group_egress_request()) ->
    {ok, authorize_security_group_egress_result(), tuple()} |
    {error, any()}.
authorize_security_group_egress(Client, Input)
  when is_map(Client), is_map(Input) ->
    authorize_security_group_egress(Client, Input, []).

-spec authorize_security_group_egress(aws_client:aws_client(), authorize_security_group_egress_request(), proplists:proplist()) ->
    {ok, authorize_security_group_egress_result(), tuple()} |
    {error, any()}.
authorize_security_group_egress(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AuthorizeSecurityGroupEgress">>, Input, Options).

%% @doc Adds the specified inbound (ingress) rules to a security group.
%%
%% An inbound rule permits instances to receive traffic from the specified
%% IPv4 or IPv6
%% address range, the IP address ranges that are specified by a prefix list,
%% or the instances
%% that are associated with a destination security group. For more
%% information, see Security group rules:
%% https://docs.aws.amazon.com/vpc/latest/userguide/security-group-rules.html.
%%
%% You must specify exactly one of the following sources: an IPv4 or IPv6
%% address range,
%% a prefix list, or a security group. You must specify a protocol for each
%% rule (for example, TCP).
%% If the protocol is TCP or UDP, you must also specify a port or port range.
%% If the protocol is
%% ICMP or ICMPv6, you must also specify the ICMP/ICMPv6 type and code.
%%
%% Rule changes are propagated to instances associated with the security
%% group as quickly
%% as possible. However, a small delay might occur.
%%
%% For examples of rules that you can add to security groups for specific
%% access scenarios,
%% see Security group rules for different use cases:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/security-group-rules-reference.html
%% in the Amazon EC2 User Guide.
%%
%% For more information about security group quotas, see Amazon VPC quotas:
%% https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html in
%% the Amazon VPC User Guide.
-spec authorize_security_group_ingress(aws_client:aws_client(), authorize_security_group_ingress_request()) ->
    {ok, authorize_security_group_ingress_result(), tuple()} |
    {error, any()}.
authorize_security_group_ingress(Client, Input)
  when is_map(Client), is_map(Input) ->
    authorize_security_group_ingress(Client, Input, []).

-spec authorize_security_group_ingress(aws_client:aws_client(), authorize_security_group_ingress_request(), proplists:proplist()) ->
    {ok, authorize_security_group_ingress_result(), tuple()} |
    {error, any()}.
authorize_security_group_ingress(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"AuthorizeSecurityGroupIngress">>, Input, Options).

%% @doc Bundles an Amazon instance store-backed Windows instance.
%%
%% During bundling, only the root device volume (C:\) is bundled. Data on
%% other instance
%% store volumes is not preserved.
%%
%% This action is not applicable for Linux/Unix instances or Windows
%% instances that are
%% backed by Amazon EBS.
-spec bundle_instance(aws_client:aws_client(), bundle_instance_request()) ->
    {ok, bundle_instance_result(), tuple()} |
    {error, any()}.
bundle_instance(Client, Input)
  when is_map(Client), is_map(Input) ->
    bundle_instance(Client, Input, []).

-spec bundle_instance(aws_client:aws_client(), bundle_instance_request(), proplists:proplist()) ->
    {ok, bundle_instance_result(), tuple()} |
    {error, any()}.
bundle_instance(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"BundleInstance">>, Input, Options).

%% @doc Cancels a bundling operation for an instance store-backed Windows
%% instance.
-spec cancel_bundle_task(aws_client:aws_client(), cancel_bundle_task_request()) ->
    {ok, cancel_bundle_task_result(), tuple()} |
    {error, any()}.
cancel_bundle_task(Client, Input)
  when is_map(Client), is_map(Input) ->
    cancel_bundle_task(Client, Input, []).

-spec cancel_bundle_task(aws_client:aws_client(), cancel_bundle_task_request(), proplists:proplist()) ->
    {ok, cancel_bundle_task_result(), tuple()} |
    {error, any()}.
cancel_bundle_task(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CancelBundleTask">>, Input, Options).

%% @doc Cancels the specified Capacity Reservation, releases the reserved
%% capacity, and
%% changes the Capacity Reservation's state to `cancelled'.
%%
%% You can cancel a Capacity Reservation that is in the following states:
%%
%% `assessing'
%%
%% `active' and there is no commitment duration or the commitment
%% duration has elapsed. You can't cancel a future-dated Capacity
%% Reservation
%% during the commitment duration.
%%
%% You can't modify or cancel a Capacity Block. For more information, see
%% Capacity Blocks for ML:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-blocks.html.
%%
%% If a future-dated Capacity Reservation enters the `delayed' state, the
%% commitment duration is waived, and you can cancel it as soon as it enters
%% the
%% `active' state.
%%
%% Instances running in the reserved capacity continue running until you stop
%% them.
%% Stopped instances that target the Capacity Reservation can no longer
%% launch. Modify
%% these instances to either target a different Capacity Reservation, launch
%% On-Demand
%% Instance capacity, or run in any open Capacity Reservation that has
%% matching attributes
%% and sufficient capacity.
-spec cancel_capacity_reservation(aws_client:aws_client(), cancel_capacity_reservation_request()) ->
    {ok, cancel_capacity_reservation_result(), tuple()} |
    {error, any()}.
cancel_capacity_reservation(Client, Input)
  when is_map(Client), is_map(Input) ->
    cancel_capacity_reservation(Client, Input, []).

-spec cancel_capacity_reservation(aws_client:aws_client(), cancel_capacity_reservation_request(), proplists:proplist()) ->
    {ok, cancel_capacity_reservation_result(), tuple()} |
    {error, any()}.
cancel_capacity_reservation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CancelCapacityReservation">>, Input, Options).

%% @doc Cancels one or more Capacity Reservation Fleets.
%%
%% When you cancel a Capacity
%% Reservation Fleet, the following happens:
%%
%% The Capacity Reservation Fleet's status changes to
%% `cancelled'.
%%
%% The individual Capacity Reservations in the Fleet are cancelled. Instances
%% running in the Capacity Reservations at the time of cancelling the Fleet
%% continue to run in shared capacity.
%%
%% The Fleet stops creating new Capacity Reservations.
-spec cancel_capacity_reservation_fleets(aws_client:aws_client(), cancel_capacity_reservation_fleets_request()) ->
    {ok, cancel_capacity_reservation_fleets_result(), tuple()} |
    {error, any()}.
cancel_capacity_reservation_fleets(Client, Input)
  when is_map(Client), is_map(Input) ->
    cancel_capacity_reservation_fleets(Client, Input, []).

-spec cancel_capacity_reservation_fleets(aws_client:aws_client(), cancel_capacity_reservation_fleets_request(), proplists:proplist()) ->
    {ok, cancel_capacity_reservation_fleets_result(), tuple()} |
    {error, any()}.
cancel_capacity_reservation_fleets(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CancelCapacityReservationFleets">>, Input, Options).

%% @doc Cancels an active conversion task.
%%
%% The task can be the import of an instance or volume. The action removes
%% all
%% artifacts of the conversion, including a partially uploaded volume or
%% instance. If the conversion is complete or is
%% in the process of transferring the final disk image, the command fails and
%% returns an exception.
-spec cancel_conversion_task(aws_client:aws_client(), cancel_conversion_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
cancel_conversion_task(Client, Input)
  when is_map(Client), is_map(Input) ->
    cancel_conversion_task(Client, Input, []).

-spec cancel_conversion_task(aws_client:aws_client(), cancel_conversion_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
cancel_conversion_task(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CancelConversionTask">>, Input, Options).

%% @doc Cancels the generation of an account status report.
%%
%% You can only cancel a report while it has the `running' status.
%% Reports
%% with other statuses (`complete', `cancelled', or
%% `error') can't be canceled.
%%
%% For more information, see Generating the account status report for
%% declarative policies:
%% https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_declarative_status-report.html
%% in the
%% Amazon Web Services Organizations User Guide.
-spec cancel_declarative_policies_report(aws_client:aws_client(), cancel_declarative_policies_report_request()) ->
    {ok, cancel_declarative_policies_report_result(), tuple()} |
    {error, any()}.
cancel_declarative_policies_report(Client, Input)
  when is_map(Client), is_map(Input) ->
    cancel_declarative_policies_report(Client, Input, []).

-spec cancel_declarative_policies_report(aws_client:aws_client(), cancel_declarative_policies_report_request(), proplists:proplist()) ->
    {ok, cancel_declarative_policies_report_result(), tuple()} |
    {error, any()}.
cancel_declarative_policies_report(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CancelDeclarativePoliciesReport">>, Input, Options).

%% @doc Cancels an active export task.
%%
%% The request removes all artifacts of the export, including any
%% partially-created
%% Amazon S3 objects. If the export task is complete or is in the process of
%% transferring the final disk image, the
%% command fails and returns an error.
-spec cancel_export_task(aws_client:aws_client(), cancel_export_task_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
cancel_export_task(Client, Input)
  when is_map(Client), is_map(Input) ->
    cancel_export_task(Client, Input, []).

-spec cancel_export_task(aws_client:aws_client(), cancel_export_task_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
cancel_export_task(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CancelExportTask">>, Input, Options).

%% @doc Removes your Amazon Web Services account from the launch permissions
%% for the specified AMI.
%%
%% For more information, see Cancel having an AMI shared with
%% your Amazon Web Services account:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cancel-sharing-an-AMI.html
%% in the Amazon EC2 User Guide.
-spec cancel_image_launch_permission(aws_client:aws_client(), cancel_image_launch_permission_request()) ->
    {ok, cancel_image_launch_permission_result(), tuple()} |
    {error, any()}.
cancel_image_launch_permission(Client, Input)
  when is_map(Client), is_map(Input) ->
    cancel_image_launch_permission(Client, Input, []).

-spec cancel_image_launch_permission(aws_client:aws_client(), cancel_image_launch_permission_request(), proplists:proplist()) ->
    {ok, cancel_image_launch_permission_result(), tuple()} |
    {error, any()}.
cancel_image_launch_permission(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CancelImageLaunchPermission">>, Input, Options).

%% @doc Cancels an in-process import virtual machine or import snapshot task.
-spec cancel_import_task(aws_client:aws_client(), cancel_import_task_request()) ->
    {ok, cancel_import_task_result(), tuple()} |
    {error, any()}.
cancel_import_task(Client, Input)
  when is_map(Client), is_map(Input) ->
    cancel_import_task(Client, Input, []).

-spec cancel_import_task(aws_client:aws_client(), cancel_import_task_request(), proplists:proplist()) ->
    {ok, cancel_import_task_result(), tuple()} |
    {error, any()}.
cancel_import_task(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CancelImportTask">>, Input, Options).

%% @doc Cancels the specified Reserved Instance listing in the Reserved
%% Instance
%% Marketplace.
%%
%% For more information, see Sell in the Reserved Instance
%% Marketplace:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html
%% in the Amazon EC2 User Guide.
-spec cancel_reserved_instances_listing(aws_client:aws_client(), cancel_reserved_instances_listing_request()) ->
    {ok, cancel_reserved_instances_listing_result(), tuple()} |
    {error, any()}.
cancel_reserved_instances_listing(Client, Input)
  when is_map(Client), is_map(Input) ->
    cancel_reserved_instances_listing(Client, Input, []).

-spec cancel_reserved_instances_listing(aws_client:aws_client(), cancel_reserved_instances_listing_request(), proplists:proplist()) ->
    {ok, cancel_reserved_instances_listing_result(), tuple()} |
    {error, any()}.
cancel_reserved_instances_listing(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CancelReservedInstancesListing">>, Input, Options).

%% @doc Cancels the specified Spot Fleet requests.
%%
%% After you cancel a Spot Fleet request, the Spot Fleet launches no new
%% instances.
%%
%% You must also specify whether a canceled Spot Fleet request should
%% terminate its instances. If you
%% choose to terminate the instances, the Spot Fleet request enters the
%% `cancelled_terminating' state. Otherwise, the Spot Fleet request
%% enters
%% the `cancelled_running' state and the instances continue to run until
%% they
%% are interrupted or you terminate them manually.
%%
%% == Restrictions ==
%%
%% You can delete up to 100 fleets in a single request. If you exceed the
%% specified
%% number, no fleets are deleted.
-spec cancel_spot_fleet_requests(aws_client:aws_client(), cancel_spot_fleet_requests_request()) ->
    {ok, cancel_spot_fleet_requests_response(), tuple()} |
    {error, any()}.
cancel_spot_fleet_requests(Client, Input)
  when is_map(Client), is_map(Input) ->
    cancel_spot_fleet_requests(Client, Input, []).

-spec cancel_spot_fleet_requests(aws_client:aws_client(), cancel_spot_fleet_requests_request(), proplists:proplist()) ->
    {ok, cancel_spot_fleet_requests_response(), tuple()} |
    {error, any()}.
cancel_spot_fleet_requests(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CancelSpotFleetRequests">>, Input, Options).

%% @doc Cancels one or more Spot Instance requests.
%%
%% Canceling a Spot Instance request does not terminate running Spot
%% Instances
%% associated with the request.
-spec cancel_spot_instance_requests(aws_client:aws_client(), cancel_spot_instance_requests_request()) ->
    {ok, cancel_spot_instance_requests_result(), tuple()} |
    {error, any()}.
cancel_spot_instance_requests(Client, Input)
  when is_map(Client), is_map(Input) ->
    cancel_spot_instance_requests(Client, Input, []).

-spec cancel_spot_instance_requests(aws_client:aws_client(), cancel_spot_instance_requests_request(), proplists:proplist()) ->
    {ok, cancel_spot_instance_requests_result(), tuple()} |
    {error, any()}.
cancel_spot_instance_requests(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CancelSpotInstanceRequests">>, Input, Options).

%% @doc Determines whether a product code is associated with an instance.
%%
%% This action can only
%% be used by the owner of the product code. It is useful when a product code
%% owner must
%% verify whether another user's instance is eligible for support.
-spec confirm_product_instance(aws_client:aws_client(), confirm_product_instance_request()) ->
    {ok, confirm_product_instance_result(), tuple()} |
    {error, any()}.
confirm_product_instance(Client, Input)
  when is_map(Client), is_map(Input) ->
    confirm_product_instance(Client, Input, []).

-spec confirm_product_instance(aws_client:aws_client(), confirm_product_instance_request(), proplists:proplist()) ->
    {ok, confirm_product_instance_result(), tuple()} |
    {error, any()}.
confirm_product_instance(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ConfirmProductInstance">>, Input, Options).

%% @doc Copies the specified Amazon FPGA Image (AFI) to the current Region.
-spec copy_fpga_image(aws_client:aws_client(), copy_fpga_image_request()) ->
    {ok, copy_fpga_image_result(), tuple()} |
    {error, any()}.
copy_fpga_image(Client, Input)
  when is_map(Client), is_map(Input) ->
    copy_fpga_image(Client, Input, []).

-spec copy_fpga_image(aws_client:aws_client(), copy_fpga_image_request(), proplists:proplist()) ->
    {ok, copy_fpga_image_result(), tuple()} |
    {error, any()}.
copy_fpga_image(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CopyFpgaImage">>, Input, Options).

%% @doc Initiates an AMI copy operation.
%%
%% You can copy an AMI from one Region to another, or from a
%% Region to an Outpost. You can't copy an AMI from an Outpost to a
%% Region, from one Outpost to
%% another, or within the same Outpost. To copy an AMI to another partition,
%% see CreateStoreImageTask:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateStoreImageTask.html.
%%
%% When you copy an AMI from one Region to another, the destination Region is
%% the current
%% Region.
%%
%% When you copy an AMI from a Region to an Outpost, specify the ARN of the
%% Outpost as the
%% destination. Backing snapshots copied to an Outpost are encrypted by
%% default using the default
%% encryption key for the Region or the key that you specify. Outposts do not
%% support unencrypted
%% snapshots.
%%
%% For information about the prerequisites when copying an AMI, see Copy an
%% Amazon EC2 AMI:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html in
%% the
%% Amazon EC2 User Guide.
-spec copy_image(aws_client:aws_client(), copy_image_request()) ->
    {ok, copy_image_result(), tuple()} |
    {error, any()}.
copy_image(Client, Input)
  when is_map(Client), is_map(Input) ->
    copy_image(Client, Input, []).

-spec copy_image(aws_client:aws_client(), copy_image_request(), proplists:proplist()) ->
    {ok, copy_image_result(), tuple()} |
    {error, any()}.
copy_image(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CopyImage">>, Input, Options).

%% @doc Copies a point-in-time snapshot of an EBS volume and stores it in
%% Amazon S3.
%%
%% You can copy a
%% snapshot within the same Region, from one Region to another, or from a
%% Region to an Outpost.
%% You can't copy a snapshot from an Outpost to a Region, from one
%% Outpost to another, or within
%% the same Outpost.
%%
%% You can use the snapshot to create EBS volumes or Amazon Machine Images
%% (AMIs).
%%
%% When copying snapshots to a Region, copies of encrypted EBS snapshots
%% remain encrypted.
%% Copies of unencrypted snapshots remain unencrypted, unless you enable
%% encryption for the
%% snapshot copy operation. By default, encrypted snapshot copies use the
%% default KMS key;
%% however, you can specify a different KMS key. To copy an encrypted
%% snapshot that has been shared from another account, you must have
%% permissions for the KMS key
%% used to encrypt the snapshot.
%%
%% Snapshots copied to an Outpost are encrypted by default using the default
%% encryption key
%% for the Region, or a different key that you specify in the request using
%% KmsKeyId. Outposts do not support unencrypted snapshots. For more
%% information,
%% see Amazon EBS
%% local snapshots on Outposts:
%% https://docs.aws.amazon.com/ebs/latest/userguide/snapshots-outposts.html#ami
%% in the Amazon EBS User Guide.
%%
%% Snapshots created by copying another snapshot have an arbitrary volume ID
%% that should not
%% be used for any purpose.
%%
%% For more information, see Copy an Amazon EBS snapshot:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-copy-snapshot.html in
%% the
%% Amazon EBS User Guide.
-spec copy_snapshot(aws_client:aws_client(), copy_snapshot_request()) ->
    {ok, copy_snapshot_result(), tuple()} |
    {error, any()}.
copy_snapshot(Client, Input)
  when is_map(Client), is_map(Input) ->
    copy_snapshot(Client, Input, []).

-spec copy_snapshot(aws_client:aws_client(), copy_snapshot_request(), proplists:proplist()) ->
    {ok, copy_snapshot_result(), tuple()} |
    {error, any()}.
copy_snapshot(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CopySnapshot">>, Input, Options).

%% @doc Creates a new Capacity Reservation with the specified attributes.
%%
%% Capacity
%% Reservations enable you to reserve capacity for your Amazon EC2 instances
%% in a specific
%% Availability Zone for any duration.
%%
%% You can create a Capacity Reservation at any time, and you can choose when
%% it starts.
%% You can create a Capacity Reservation for immediate use or you can request
%% a Capacity
%% Reservation for a future date.
%%
%% For more information, see Reserve compute
%% capacity with On-Demand Capacity Reservations:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-capacity-reservations.html
%% in the
%% Amazon EC2 User Guide.
%%
%% Your request to create a Capacity Reservation could fail if:
%%
%% Amazon EC2 does not have sufficient capacity. In this case, try again
%% at a later time, try in a different Availability Zone, or request a
%% smaller
%% Capacity Reservation. If your workload is flexible across instance types
%% and
%% sizes, try with different instance attributes.
%%
%% The requested quantity exceeds your On-Demand Instance quota. In this
%% case,
%% increase your On-Demand Instance quota for the requested instance type and
%% try
%% again. For more information, see
%% Amazon EC2 Service Quotas:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-resource-limits.html
%% in the
%% Amazon EC2 User Guide.
-spec create_capacity_reservation(aws_client:aws_client(), create_capacity_reservation_request()) ->
    {ok, create_capacity_reservation_result(), tuple()} |
    {error, any()}.
create_capacity_reservation(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_capacity_reservation(Client, Input, []).

-spec create_capacity_reservation(aws_client:aws_client(), create_capacity_reservation_request(), proplists:proplist()) ->
    {ok, create_capacity_reservation_result(), tuple()} |
    {error, any()}.
create_capacity_reservation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateCapacityReservation">>, Input, Options).

%% @doc Create a new Capacity Reservation by splitting the capacity of the
%% source Capacity
%% Reservation.
%%
%% The new Capacity Reservation will have the same attributes as the source
%% Capacity Reservation except for tags. The source Capacity Reservation must
%% be
%% `active' and owned by your Amazon Web Services account.
-spec create_capacity_reservation_by_splitting(aws_client:aws_client(), create_capacity_reservation_by_splitting_request()) ->
    {ok, create_capacity_reservation_by_splitting_result(), tuple()} |
    {error, any()}.
create_capacity_reservation_by_splitting(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_capacity_reservation_by_splitting(Client, Input, []).

-spec create_capacity_reservation_by_splitting(aws_client:aws_client(), create_capacity_reservation_by_splitting_request(), proplists:proplist()) ->
    {ok, create_capacity_reservation_by_splitting_result(), tuple()} |
    {error, any()}.
create_capacity_reservation_by_splitting(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateCapacityReservationBySplitting">>, Input, Options).

%% @doc Creates a Capacity Reservation Fleet.
%%
%% For more information, see Create a
%% Capacity Reservation Fleet:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-cr-fleets.html#create-crfleet
%% in the
%% Amazon EC2 User Guide.
-spec create_capacity_reservation_fleet(aws_client:aws_client(), create_capacity_reservation_fleet_request()) ->
    {ok, create_capacity_reservation_fleet_result(), tuple()} |
    {error, any()}.
create_capacity_reservation_fleet(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_capacity_reservation_fleet(Client, Input, []).

-spec create_capacity_reservation_fleet(aws_client:aws_client(), create_capacity_reservation_fleet_request(), proplists:proplist()) ->
    {ok, create_capacity_reservation_fleet_result(), tuple()} |
    {error, any()}.
create_capacity_reservation_fleet(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateCapacityReservationFleet">>, Input, Options).

%% @doc Creates a carrier gateway.
%%
%% For more information about carrier gateways, see Carrier gateways:
%% https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#wavelength-carrier-gateway
%% in the Amazon Web Services Wavelength Developer Guide.
-spec create_carrier_gateway(aws_client:aws_client(), create_carrier_gateway_request()) ->
    {ok, create_carrier_gateway_result(), tuple()} |
    {error, any()}.
create_carrier_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_carrier_gateway(Client, Input, []).

-spec create_carrier_gateway(aws_client:aws_client(), create_carrier_gateway_request(), proplists:proplist()) ->
    {ok, create_carrier_gateway_result(), tuple()} |
    {error, any()}.
create_carrier_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateCarrierGateway">>, Input, Options).

%% @doc Creates a Client VPN endpoint.
%%
%% A Client VPN endpoint is the resource you create and configure to
%% enable and manage client VPN sessions. It is the destination endpoint at
%% which all client VPN sessions
%% are terminated.
-spec create_client_vpn_endpoint(aws_client:aws_client(), create_client_vpn_endpoint_request()) ->
    {ok, create_client_vpn_endpoint_result(), tuple()} |
    {error, any()}.
create_client_vpn_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_client_vpn_endpoint(Client, Input, []).

-spec create_client_vpn_endpoint(aws_client:aws_client(), create_client_vpn_endpoint_request(), proplists:proplist()) ->
    {ok, create_client_vpn_endpoint_result(), tuple()} |
    {error, any()}.
create_client_vpn_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateClientVpnEndpoint">>, Input, Options).

%% @doc Adds a route to a network to a Client VPN endpoint.
%%
%% Each Client VPN endpoint has a route table that describes the
%% available destination network routes. Each route in the route table
%% specifies the path for traﬃc to speciﬁc resources or networks.
-spec create_client_vpn_route(aws_client:aws_client(), create_client_vpn_route_request()) ->
    {ok, create_client_vpn_route_result(), tuple()} |
    {error, any()}.
create_client_vpn_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_client_vpn_route(Client, Input, []).

-spec create_client_vpn_route(aws_client:aws_client(), create_client_vpn_route_request(), proplists:proplist()) ->
    {ok, create_client_vpn_route_result(), tuple()} |
    {error, any()}.
create_client_vpn_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateClientVpnRoute">>, Input, Options).

%% @doc
%% Creates a range of customer-owned IP addresses.
-spec create_coip_cidr(aws_client:aws_client(), create_coip_cidr_request()) ->
    {ok, create_coip_cidr_result(), tuple()} |
    {error, any()}.
create_coip_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_coip_cidr(Client, Input, []).

-spec create_coip_cidr(aws_client:aws_client(), create_coip_cidr_request(), proplists:proplist()) ->
    {ok, create_coip_cidr_result(), tuple()} |
    {error, any()}.
create_coip_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateCoipCidr">>, Input, Options).

%% @doc Creates a pool of customer-owned IP (CoIP) addresses.
-spec create_coip_pool(aws_client:aws_client(), create_coip_pool_request()) ->
    {ok, create_coip_pool_result(), tuple()} |
    {error, any()}.
create_coip_pool(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_coip_pool(Client, Input, []).

-spec create_coip_pool(aws_client:aws_client(), create_coip_pool_request(), proplists:proplist()) ->
    {ok, create_coip_pool_result(), tuple()} |
    {error, any()}.
create_coip_pool(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateCoipPool">>, Input, Options).

%% @doc Provides information to Amazon Web Services about your customer
%% gateway device.
%%
%% The
%% customer gateway device is the appliance at your end of the VPN
%% connection. You
%% must provide the IP address of the customer gateway device’s external
%% interface. The IP address must be static and can be behind a device
%% performing network
%% address translation (NAT).
%%
%% For devices that use Border Gateway Protocol (BGP), you can also provide
%% the device's
%% BGP Autonomous System Number (ASN). You can use an existing ASN assigned
%% to your network.
%% If you don't have an ASN already, you can use a private ASN. For more
%% information, see
%% Customer gateway
%% options for your Site-to-Site VPN connection:
%% https://docs.aws.amazon.com/vpn/latest/s2svpn/cgw-options.html in the
%% Amazon Web Services Site-to-Site VPN User Guide.
%%
%% To create more than one customer gateway with the same VPN type, IP
%% address, and
%% BGP ASN, specify a unique device name for each customer gateway. An
%% identical request
%% returns information about the existing customer gateway; it doesn't
%% create a new customer
%% gateway.
-spec create_customer_gateway(aws_client:aws_client(), create_customer_gateway_request()) ->
    {ok, create_customer_gateway_result(), tuple()} |
    {error, any()}.
create_customer_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_customer_gateway(Client, Input, []).

-spec create_customer_gateway(aws_client:aws_client(), create_customer_gateway_request(), proplists:proplist()) ->
    {ok, create_customer_gateway_result(), tuple()} |
    {error, any()}.
create_customer_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateCustomerGateway">>, Input, Options).

%% @doc Creates a default subnet with a size `/20' IPv4 CIDR block in the
%% specified Availability Zone in your default VPC.
%%
%% You can have only one default subnet
%% per Availability Zone. For more information, see Create a default
%% subnet:
%% https://docs.aws.amazon.com/vpc/latest/userguide/work-with-default-vpc.html#create-default-subnet
%% in the Amazon VPC User Guide.
-spec create_default_subnet(aws_client:aws_client(), create_default_subnet_request()) ->
    {ok, create_default_subnet_result(), tuple()} |
    {error, any()}.
create_default_subnet(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_default_subnet(Client, Input, []).

-spec create_default_subnet(aws_client:aws_client(), create_default_subnet_request(), proplists:proplist()) ->
    {ok, create_default_subnet_result(), tuple()} |
    {error, any()}.
create_default_subnet(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateDefaultSubnet">>, Input, Options).

%% @doc Creates a default VPC with a size `/16' IPv4 CIDR block and a
%% default subnet
%% in each Availability Zone.
%%
%% For more information about the components of a default VPC,
%% see Default VPCs:
%% https://docs.aws.amazon.com/vpc/latest/userguide/default-vpc.html
%% in the Amazon VPC User Guide. You cannot specify the components of the
%% default VPC yourself.
%%
%% If you deleted your previous default VPC, you can create a default VPC.
%% You cannot have
%% more than one default VPC per Region.
-spec create_default_vpc(aws_client:aws_client(), create_default_vpc_request()) ->
    {ok, create_default_vpc_result(), tuple()} |
    {error, any()}.
create_default_vpc(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_default_vpc(Client, Input, []).

-spec create_default_vpc(aws_client:aws_client(), create_default_vpc_request(), proplists:proplist()) ->
    {ok, create_default_vpc_result(), tuple()} |
    {error, any()}.
create_default_vpc(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateDefaultVpc">>, Input, Options).

%% @doc Delegates ownership of the Amazon EBS root volume for an Apple
%% silicon
%% Mac instance to an administrative user.
-spec create_delegate_mac_volume_ownership_task(aws_client:aws_client(), create_delegate_mac_volume_ownership_task_request()) ->
    {ok, create_delegate_mac_volume_ownership_task_result(), tuple()} |
    {error, any()}.
create_delegate_mac_volume_ownership_task(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_delegate_mac_volume_ownership_task(Client, Input, []).

-spec create_delegate_mac_volume_ownership_task(aws_client:aws_client(), create_delegate_mac_volume_ownership_task_request(), proplists:proplist()) ->
    {ok, create_delegate_mac_volume_ownership_task_result(), tuple()} |
    {error, any()}.
create_delegate_mac_volume_ownership_task(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateDelegateMacVolumeOwnershipTask">>, Input, Options).

%% @doc Creates a custom set of DHCP options.
%%
%% After you create a DHCP option set, you associate
%% it with a VPC. After you associate a DHCP option set with a VPC, all
%% existing and newly
%% launched instances in the VPC use this set of DHCP options.
%%
%% The following are the individual DHCP options you can specify. For more
%% information, see
%% DHCP option sets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html
%% in the Amazon VPC User Guide.
%%
%% `domain-name' - If you're using AmazonProvidedDNS in
%% `us-east-1',
%% specify `ec2.internal'. If you're using AmazonProvidedDNS in any
%% other Region,
%% specify `region.compute.internal'. Otherwise, specify a custom domain
%% name.
%% This value is used to complete unqualified DNS hostnames.
%%
%% Some Linux operating systems accept multiple domain names separated by
%% spaces.
%% However, Windows and other Linux operating systems treat the value as a
%% single
%% domain, which results in unexpected behavior. If your DHCP option set is
%% associated with a VPC that has instances running operating systems that
%% treat
%% the value as a single domain, specify only one domain name.
%%
%% `domain-name-servers' - The IP addresses of up to four DNS servers,
%% or AmazonProvidedDNS. To specify multiple domain name servers in a single
%% parameter,
%% separate the IP addresses using commas. To have your instances receive
%% custom DNS
%% hostnames as specified in `domain-name', you must specify a custom DNS
%% server.
%%
%% `ntp-servers' - The IP addresses of up to eight Network Time Protocol
%% (NTP)
%% servers (four IPv4 addresses and four IPv6 addresses).
%%
%% `netbios-name-servers' - The IP addresses of up to four NetBIOS name
%% servers.
%%
%% `netbios-node-type' - The NetBIOS node type (1, 2, 4, or 8). We
%% recommend that
%% you specify 2. Broadcast and multicast are not supported. For more
%% information about
%% NetBIOS node types, see RFC 2132: https://www.ietf.org/rfc/rfc2132.txt.
%%
%% `ipv6-address-preferred-lease-time' - A value (in seconds, minutes,
%% hours, or years) for how frequently a running instance with an IPv6
%% assigned to it goes through DHCPv6 lease renewal.
%% Acceptable values are between 140 and 2147483647 seconds (approximately 68
%% years). If no value is entered, the default lease time is 140 seconds. If
%% you use long-term addressing for EC2 instances, you can increase the lease
%% time and avoid frequent
%% lease renewal requests. Lease renewal typically occurs when half of the
%% lease time has elapsed.
-spec create_dhcp_options(aws_client:aws_client(), create_dhcp_options_request()) ->
    {ok, create_dhcp_options_result(), tuple()} |
    {error, any()}.
create_dhcp_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_dhcp_options(Client, Input, []).

-spec create_dhcp_options(aws_client:aws_client(), create_dhcp_options_request(), proplists:proplist()) ->
    {ok, create_dhcp_options_result(), tuple()} |
    {error, any()}.
create_dhcp_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateDhcpOptions">>, Input, Options).

%% @doc [IPv6 only] Creates an egress-only internet gateway for your VPC.
%%
%% An egress-only
%% internet gateway is used to enable outbound communication over IPv6 from
%% instances in
%% your VPC to the internet, and prevents hosts outside of your VPC from
%% initiating an IPv6
%% connection with your instance.
-spec create_egress_only_internet_gateway(aws_client:aws_client(), create_egress_only_internet_gateway_request()) ->
    {ok, create_egress_only_internet_gateway_result(), tuple()} |
    {error, any()}.
create_egress_only_internet_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_egress_only_internet_gateway(Client, Input, []).

-spec create_egress_only_internet_gateway(aws_client:aws_client(), create_egress_only_internet_gateway_request(), proplists:proplist()) ->
    {ok, create_egress_only_internet_gateway_result(), tuple()} |
    {error, any()}.
create_egress_only_internet_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateEgressOnlyInternetGateway">>, Input, Options).

%% @doc Creates an EC2 Fleet that contains the configuration information for
%% On-Demand Instances and Spot Instances.
%%
%% Instances are launched immediately if there is available capacity.
%%
%% A single EC2 Fleet can include multiple launch specifications that vary by
%% instance type,
%% AMI, Availability Zone, or subnet.
%%
%% For more information, see EC2 Fleet:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet.html in the
%% Amazon EC2 User Guide.
-spec create_fleet(aws_client:aws_client(), create_fleet_request()) ->
    {ok, create_fleet_result(), tuple()} |
    {error, any()}.
create_fleet(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_fleet(Client, Input, []).

-spec create_fleet(aws_client:aws_client(), create_fleet_request(), proplists:proplist()) ->
    {ok, create_fleet_result(), tuple()} |
    {error, any()}.
create_fleet(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateFleet">>, Input, Options).

%% @doc Creates one or more flow logs to capture information about IP traffic
%% for a specific network interface,
%% subnet, or VPC.
%%
%% Flow log data for a monitored network interface is recorded as flow log
%% records, which are log events
%% consisting of fields that describe the traffic flow. For more information,
%% see
%% Flow log records:
%% https://docs.aws.amazon.com/vpc/latest/userguide/flow-log-records.html
%% in the Amazon VPC User Guide.
%%
%% When publishing to CloudWatch Logs, flow log records are published to a
%% log group, and each network
%% interface has a unique log stream in the log group. When publishing to
%% Amazon S3, flow log records for all
%% of the monitored network interfaces are published to a single log file
%% object that is stored in the specified
%% bucket.
%%
%% For more information, see VPC Flow Logs:
%% https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html
%% in the Amazon VPC User Guide.
-spec create_flow_logs(aws_client:aws_client(), create_flow_logs_request()) ->
    {ok, create_flow_logs_result(), tuple()} |
    {error, any()}.
create_flow_logs(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_flow_logs(Client, Input, []).

-spec create_flow_logs(aws_client:aws_client(), create_flow_logs_request(), proplists:proplist()) ->
    {ok, create_flow_logs_result(), tuple()} |
    {error, any()}.
create_flow_logs(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateFlowLogs">>, Input, Options).

%% @doc Creates an Amazon FPGA Image (AFI) from the specified design
%% checkpoint (DCP).
%%
%% The create operation is asynchronous. To verify that the AFI is ready for
%% use,
%% check the output logs.
%%
%% An AFI contains the FPGA bitstream that is ready to download to an FPGA.
%% You can securely deploy an AFI on multiple FPGA-accelerated instances.
%% For more information, see the Amazon Web Services FPGA Hardware
%% Development Kit: https://github.com/aws/aws-fpga/.
-spec create_fpga_image(aws_client:aws_client(), create_fpga_image_request()) ->
    {ok, create_fpga_image_result(), tuple()} |
    {error, any()}.
create_fpga_image(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_fpga_image(Client, Input, []).

-spec create_fpga_image(aws_client:aws_client(), create_fpga_image_request(), proplists:proplist()) ->
    {ok, create_fpga_image_result(), tuple()} |
    {error, any()}.
create_fpga_image(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateFpgaImage">>, Input, Options).

%% @doc Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance
%% that is either running or
%% stopped.
%%
%% If you customized your instance with instance store volumes or Amazon EBS
%% volumes in addition
%% to the root device volume, the new AMI contains block device mapping
%% information for those
%% volumes. When you launch an instance from this new AMI, the instance
%% automatically launches
%% with those additional volumes.
%%
%% The location of the source instance determines where you can create the
%% snapshots of the
%% AMI:
%%
%% If the source instance is in a Region, you must create the snapshots in
%% the same
%% Region as the instance.
%%
%% If the source instance is in a Local Zone, you can create the snapshots in
%% the same
%% Local Zone or in its parent Region.
%%
%% For more information, see Create an Amazon EBS-backed AMI:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html
%% in
%% the Amazon Elastic Compute Cloud User Guide.
-spec create_image(aws_client:aws_client(), create_image_request()) ->
    {ok, create_image_result(), tuple()} |
    {error, any()}.
create_image(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_image(Client, Input, []).

-spec create_image(aws_client:aws_client(), create_image_request(), proplists:proplist()) ->
    {ok, create_image_result(), tuple()} |
    {error, any()}.
create_image(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateImage">>, Input, Options).

%% @doc Creates an EC2 Instance Connect Endpoint.
%%
%% An EC2 Instance Connect Endpoint allows you to connect to an instance,
%% without
%% requiring the instance to have a public IPv4 or public IPv6 address. For
%% more
%% information, see Connect to your instances using EC2 Instance Connect
%% Endpoint:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Connect-using-EC2-Instance-Connect-Endpoint.html
%% in the
%% Amazon EC2 User Guide.
-spec create_instance_connect_endpoint(aws_client:aws_client(), create_instance_connect_endpoint_request()) ->
    {ok, create_instance_connect_endpoint_result(), tuple()} |
    {error, any()}.
create_instance_connect_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_instance_connect_endpoint(Client, Input, []).

-spec create_instance_connect_endpoint(aws_client:aws_client(), create_instance_connect_endpoint_request(), proplists:proplist()) ->
    {ok, create_instance_connect_endpoint_result(), tuple()} |
    {error, any()}.
create_instance_connect_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateInstanceConnectEndpoint">>, Input, Options).

%% @doc Creates an event window in which scheduled events for the associated
%% Amazon EC2 instances can
%% run.
%%
%% You can define either a set of time ranges or a cron expression when
%% creating the event
%% window, but not both. All event window times are in UTC.
%%
%% You can create up to 200 event windows per Amazon Web Services Region.
%%
%% When you create the event window, targets (instance IDs, Dedicated Host
%% IDs, or tags)
%% are not yet associated with it. To ensure that the event window can be
%% used, you must
%% associate one or more targets with it by using the
%% `AssociateInstanceEventWindow' API.
%%
%% Event windows are applicable only for scheduled events that stop, reboot,
%% or
%% terminate instances.
%%
%% Event windows are not applicable for:
%%
%% Expedited scheduled events and network maintenance events.
%%
%% Unscheduled maintenance such as AutoRecovery and unplanned reboots.
%%
%% For more information, see Define event windows for scheduled
%% events:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html in
%% the Amazon EC2 User Guide.
-spec create_instance_event_window(aws_client:aws_client(), create_instance_event_window_request()) ->
    {ok, create_instance_event_window_result(), tuple()} |
    {error, any()}.
create_instance_event_window(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_instance_event_window(Client, Input, []).

-spec create_instance_event_window(aws_client:aws_client(), create_instance_event_window_request(), proplists:proplist()) ->
    {ok, create_instance_event_window_result(), tuple()} |
    {error, any()}.
create_instance_event_window(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateInstanceEventWindow">>, Input, Options).

%% @doc Exports a running or stopped instance to an Amazon S3 bucket.
%%
%% For information about the prerequisites for your Amazon S3 bucket,
%% supported operating systems,
%% image formats, and known limitations for the types of instances you can
%% export, see Exporting an instance as a VM Using VM
%% Import/Export:
%% https://docs.aws.amazon.com/vm-import/latest/userguide/vmexport.html in
%% the VM Import/Export User Guide.
-spec create_instance_export_task(aws_client:aws_client(), create_instance_export_task_request()) ->
    {ok, create_instance_export_task_result(), tuple()} |
    {error, any()}.
create_instance_export_task(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_instance_export_task(Client, Input, []).

-spec create_instance_export_task(aws_client:aws_client(), create_instance_export_task_request(), proplists:proplist()) ->
    {ok, create_instance_export_task_result(), tuple()} |
    {error, any()}.
create_instance_export_task(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateInstanceExportTask">>, Input, Options).

%% @doc Creates an internet gateway for use with a VPC.
%%
%% After creating the internet gateway,
%% you attach it to a VPC using `AttachInternetGateway'.
%%
%% For more information, see Internet gateways:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Internet_Gateway.html
%% in the
%% Amazon VPC User Guide.
-spec create_internet_gateway(aws_client:aws_client(), create_internet_gateway_request()) ->
    {ok, create_internet_gateway_result(), tuple()} |
    {error, any()}.
create_internet_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_internet_gateway(Client, Input, []).

-spec create_internet_gateway(aws_client:aws_client(), create_internet_gateway_request(), proplists:proplist()) ->
    {ok, create_internet_gateway_result(), tuple()} |
    {error, any()}.
create_internet_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateInternetGateway">>, Input, Options).

%% @doc Create an IPAM.
%%
%% Amazon VPC IP Address Manager (IPAM) is a VPC feature that you can use
%% to automate your IP address management workflows including assigning,
%% tracking,
%% troubleshooting, and auditing IP addresses across Amazon Web Services
%% Regions and accounts
%% throughout your Amazon Web Services Organization.
%%
%% For more information, see Create an IPAM:
%% https://docs.aws.amazon.com/vpc/latest/ipam/create-ipam.html in the Amazon
%% VPC IPAM User Guide.
-spec create_ipam(aws_client:aws_client(), create_ipam_request()) ->
    {ok, create_ipam_result(), tuple()} |
    {error, any()}.
create_ipam(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_ipam(Client, Input, []).

-spec create_ipam(aws_client:aws_client(), create_ipam_request(), proplists:proplist()) ->
    {ok, create_ipam_result(), tuple()} |
    {error, any()}.
create_ipam(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateIpam">>, Input, Options).

%% @doc Create a verification token.
%%
%% A verification token is an Amazon Web Services-generated random value that
%% you can use to prove ownership of an external resource. For example, you
%% can use a verification token to validate that you control a public IP
%% address range when you bring an IP address range to Amazon Web Services
%% (BYOIP).
-spec create_ipam_external_resource_verification_token(aws_client:aws_client(), create_ipam_external_resource_verification_token_request()) ->
    {ok, create_ipam_external_resource_verification_token_result(), tuple()} |
    {error, any()}.
create_ipam_external_resource_verification_token(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_ipam_external_resource_verification_token(Client, Input, []).

-spec create_ipam_external_resource_verification_token(aws_client:aws_client(), create_ipam_external_resource_verification_token_request(), proplists:proplist()) ->
    {ok, create_ipam_external_resource_verification_token_result(), tuple()} |
    {error, any()}.
create_ipam_external_resource_verification_token(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateIpamExternalResourceVerificationToken">>, Input, Options).

%% @doc Create an IP address pool for Amazon VPC IP Address Manager (IPAM).
%%
%% In IPAM, a pool is a collection of contiguous IP addresses CIDRs. Pools
%% enable you to organize your IP addresses according to your routing and
%% security needs. For example, if you have separate routing and security
%% needs for development and production applications, you can create a pool
%% for each.
%%
%% For more information, see Create a top-level pool:
%% https://docs.aws.amazon.com/vpc/latest/ipam/create-top-ipam.html in the
%% Amazon VPC IPAM User Guide.
-spec create_ipam_pool(aws_client:aws_client(), create_ipam_pool_request()) ->
    {ok, create_ipam_pool_result(), tuple()} |
    {error, any()}.
create_ipam_pool(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_ipam_pool(Client, Input, []).

-spec create_ipam_pool(aws_client:aws_client(), create_ipam_pool_request(), proplists:proplist()) ->
    {ok, create_ipam_pool_result(), tuple()} |
    {error, any()}.
create_ipam_pool(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateIpamPool">>, Input, Options).

%% @doc Creates an IPAM resource discovery.
%%
%% A resource discovery is an IPAM component that enables IPAM to manage and
%% monitor resources that belong to the owning account.
-spec create_ipam_resource_discovery(aws_client:aws_client(), create_ipam_resource_discovery_request()) ->
    {ok, create_ipam_resource_discovery_result(), tuple()} |
    {error, any()}.
create_ipam_resource_discovery(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_ipam_resource_discovery(Client, Input, []).

-spec create_ipam_resource_discovery(aws_client:aws_client(), create_ipam_resource_discovery_request(), proplists:proplist()) ->
    {ok, create_ipam_resource_discovery_result(), tuple()} |
    {error, any()}.
create_ipam_resource_discovery(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateIpamResourceDiscovery">>, Input, Options).

%% @doc Create an IPAM scope.
%%
%% In IPAM, a scope is the highest-level container within IPAM. An IPAM
%% contains two default scopes. Each scope represents the IP space for a
%% single network. The private scope is intended for all private IP address
%% space. The public scope is intended for all public IP address space.
%% Scopes enable you to reuse IP addresses across multiple unconnected
%% networks without causing IP address overlap or conflict.
%%
%% For more information, see Add a scope:
%% https://docs.aws.amazon.com/vpc/latest/ipam/add-scope-ipam.html in the
%% Amazon VPC IPAM User Guide.
-spec create_ipam_scope(aws_client:aws_client(), create_ipam_scope_request()) ->
    {ok, create_ipam_scope_result(), tuple()} |
    {error, any()}.
create_ipam_scope(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_ipam_scope(Client, Input, []).

-spec create_ipam_scope(aws_client:aws_client(), create_ipam_scope_request(), proplists:proplist()) ->
    {ok, create_ipam_scope_result(), tuple()} |
    {error, any()}.
create_ipam_scope(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateIpamScope">>, Input, Options).

%% @doc Creates an ED25519 or 2048-bit RSA key pair with the specified name
%% and in the
%% specified format.
%%
%% Amazon EC2 stores the public key and displays the private
%% key for you to save to a file. The private key is returned as an
%% unencrypted PEM encoded
%% PKCS#1 private key or an unencrypted PPK formatted private key for use
%% with PuTTY. If a
%% key with the specified name already exists, Amazon EC2 returns an error.
%%
%% The key pair returned to you is available only in the Amazon Web Services
%% Region in which you create it.
%% If you prefer, you can create your own key pair using a third-party tool
%% and upload it
%% to any Region using `ImportKeyPair'.
%%
%% You can have up to 5,000 key pairs per Amazon Web Services Region.
%%
%% For more information, see Amazon EC2 key pairs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html in
%% the
%% Amazon EC2 User Guide.
-spec create_key_pair(aws_client:aws_client(), create_key_pair_request()) ->
    {ok, key_pair(), tuple()} |
    {error, any()}.
create_key_pair(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_key_pair(Client, Input, []).

-spec create_key_pair(aws_client:aws_client(), create_key_pair_request(), proplists:proplist()) ->
    {ok, key_pair(), tuple()} |
    {error, any()}.
create_key_pair(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateKeyPair">>, Input, Options).

%% @doc Creates a launch template.
%%
%% A launch template contains the parameters to launch an instance. When you
%% launch an
%% instance using `RunInstances', you can specify a launch template
%% instead
%% of providing the launch parameters in the request. For more information,
%% see Store
%% instance launch parameters in Amazon EC2 launch templates:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html
%% in the
%% Amazon EC2 User Guide.
%%
%% To clone an existing launch template as the basis for a new launch
%% template, use the
%% Amazon EC2 console. The API, SDKs, and CLI do not support cloning a
%% template. For more
%% information, see Create a launch template from an existing launch
%% template:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-launch-template.html#create-launch-template-from-existing-launch-template
%% in the
%% Amazon EC2 User Guide.
-spec create_launch_template(aws_client:aws_client(), create_launch_template_request()) ->
    {ok, create_launch_template_result(), tuple()} |
    {error, any()}.
create_launch_template(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_launch_template(Client, Input, []).

-spec create_launch_template(aws_client:aws_client(), create_launch_template_request(), proplists:proplist()) ->
    {ok, create_launch_template_result(), tuple()} |
    {error, any()}.
create_launch_template(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateLaunchTemplate">>, Input, Options).

%% @doc Creates a new version of a launch template.
%%
%% You must specify an existing launch
%% template, either by name or ID. You can determine whether the new version
%% inherits
%% parameters from a source version, and add or overwrite parameters as
%% needed.
%%
%% Launch template versions are numbered in the order in which they are
%% created. You
%% can't specify, change, or replace the numbering of launch template
%% versions.
%%
%% Launch templates are immutable; after you create a launch template, you
%% can't modify
%% it. Instead, you can create a new version of the launch template that
%% includes the
%% changes that you require.
%%
%% For more information, see Modify a launch
%% template (manage launch template versions):
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-launch-template-versions.html
%% in the
%% Amazon EC2 User Guide.
-spec create_launch_template_version(aws_client:aws_client(), create_launch_template_version_request()) ->
    {ok, create_launch_template_version_result(), tuple()} |
    {error, any()}.
create_launch_template_version(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_launch_template_version(Client, Input, []).

-spec create_launch_template_version(aws_client:aws_client(), create_launch_template_version_request(), proplists:proplist()) ->
    {ok, create_launch_template_version_result(), tuple()} |
    {error, any()}.
create_launch_template_version(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateLaunchTemplateVersion">>, Input, Options).

%% @doc Creates a static route for the specified local gateway route table.
%%
%% You must specify one of the
%% following targets:
%%
%% `LocalGatewayVirtualInterfaceGroupId'
%%
%% `NetworkInterfaceId'
-spec create_local_gateway_route(aws_client:aws_client(), create_local_gateway_route_request()) ->
    {ok, create_local_gateway_route_result(), tuple()} |
    {error, any()}.
create_local_gateway_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_local_gateway_route(Client, Input, []).

-spec create_local_gateway_route(aws_client:aws_client(), create_local_gateway_route_request(), proplists:proplist()) ->
    {ok, create_local_gateway_route_result(), tuple()} |
    {error, any()}.
create_local_gateway_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateLocalGatewayRoute">>, Input, Options).

%% @doc
%% Creates a local gateway route table.
-spec create_local_gateway_route_table(aws_client:aws_client(), create_local_gateway_route_table_request()) ->
    {ok, create_local_gateway_route_table_result(), tuple()} |
    {error, any()}.
create_local_gateway_route_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_local_gateway_route_table(Client, Input, []).

-spec create_local_gateway_route_table(aws_client:aws_client(), create_local_gateway_route_table_request(), proplists:proplist()) ->
    {ok, create_local_gateway_route_table_result(), tuple()} |
    {error, any()}.
create_local_gateway_route_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateLocalGatewayRouteTable">>, Input, Options).

%% @doc
%% Creates a local gateway route table virtual interface group association.
-spec create_local_gateway_route_table_virtual_interface_group_association(aws_client:aws_client(), create_local_gateway_route_table_virtual_interface_group_association_request()) ->
    {ok, create_local_gateway_route_table_virtual_interface_group_association_result(), tuple()} |
    {error, any()}.
create_local_gateway_route_table_virtual_interface_group_association(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_local_gateway_route_table_virtual_interface_group_association(Client, Input, []).

-spec create_local_gateway_route_table_virtual_interface_group_association(aws_client:aws_client(), create_local_gateway_route_table_virtual_interface_group_association_request(), proplists:proplist()) ->
    {ok, create_local_gateway_route_table_virtual_interface_group_association_result(), tuple()} |
    {error, any()}.
create_local_gateway_route_table_virtual_interface_group_association(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation">>, Input, Options).

%% @doc Associates the specified VPC with the specified local gateway route
%% table.
-spec create_local_gateway_route_table_vpc_association(aws_client:aws_client(), create_local_gateway_route_table_vpc_association_request()) ->
    {ok, create_local_gateway_route_table_vpc_association_result(), tuple()} |
    {error, any()}.
create_local_gateway_route_table_vpc_association(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_local_gateway_route_table_vpc_association(Client, Input, []).

-spec create_local_gateway_route_table_vpc_association(aws_client:aws_client(), create_local_gateway_route_table_vpc_association_request(), proplists:proplist()) ->
    {ok, create_local_gateway_route_table_vpc_association_result(), tuple()} |
    {error, any()}.
create_local_gateway_route_table_vpc_association(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateLocalGatewayRouteTableVpcAssociation">>, Input, Options).

%% @doc Create a virtual interface for a local gateway.
-spec create_local_gateway_virtual_interface(aws_client:aws_client(), create_local_gateway_virtual_interface_request()) ->
    {ok, create_local_gateway_virtual_interface_result(), tuple()} |
    {error, any()}.
create_local_gateway_virtual_interface(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_local_gateway_virtual_interface(Client, Input, []).

-spec create_local_gateway_virtual_interface(aws_client:aws_client(), create_local_gateway_virtual_interface_request(), proplists:proplist()) ->
    {ok, create_local_gateway_virtual_interface_result(), tuple()} |
    {error, any()}.
create_local_gateway_virtual_interface(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateLocalGatewayVirtualInterface">>, Input, Options).

%% @doc Create a local gateway virtual interface group.
-spec create_local_gateway_virtual_interface_group(aws_client:aws_client(), create_local_gateway_virtual_interface_group_request()) ->
    {ok, create_local_gateway_virtual_interface_group_result(), tuple()} |
    {error, any()}.
create_local_gateway_virtual_interface_group(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_local_gateway_virtual_interface_group(Client, Input, []).

-spec create_local_gateway_virtual_interface_group(aws_client:aws_client(), create_local_gateway_virtual_interface_group_request(), proplists:proplist()) ->
    {ok, create_local_gateway_virtual_interface_group_result(), tuple()} |
    {error, any()}.
create_local_gateway_virtual_interface_group(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateLocalGatewayVirtualInterfaceGroup">>, Input, Options).

%% @doc Creates a System Integrity Protection (SIP) modification task to
%% configure the SIP settings
%% for an x86 Mac instance or Apple silicon Mac instance.
%%
%% For more information, see
%%
%% Configure SIP for Amazon EC2 instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/mac-sip-settings.html#mac-sip-configure
%% in the Amazon EC2 User Guide.
%%
%% When you configure the SIP settings for your instance, you can either
%% enable
%% or disable all SIP settings, or you can specify a custom SIP configuration
%% that
%% selectively enables or disables specific SIP settings.
%%
%% If you implement a custom configuration,
%% connect to the instance and verify the settings:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/mac-sip-settings.html#mac-sip-check-settings
%% to ensure that your
%% requirements are properly implemented and functioning as intended.
%%
%% SIP configurations might change with macOS updates. We recommend that you
%% review custom SIP settings after any macOS version upgrade to ensure
%% continued compatibility and proper functionality of your security
%% configurations.
%%
%% To enable or disable all SIP settings, use the
%% MacSystemIntegrityProtectionStatus
%% parameter only. For example, to enable all SIP settings, specify the
%% following:
%%
%% `MacSystemIntegrityProtectionStatus=enabled'
%%
%% To specify a custom configuration that selectively enables or disables
%% specific SIP
%% settings, use the MacSystemIntegrityProtectionStatus
%% parameter to enable or disable all SIP settings, and then use the
%% MacSystemIntegrityProtectionConfiguration parameter
%% to specify exceptions. In this case, the exceptions you specify for
%% MacSystemIntegrityProtectionConfiguration override the value
%% you specify for MacSystemIntegrityProtectionStatus.
%% For example, to enable all SIP settings, except `NvramProtections',
%% specify the following:
%%
%% `MacSystemIntegrityProtectionStatus=enabled'
%%
%% `MacSystemIntegrityProtectionConfigurationRequest
%% &quot;NvramProtections=disabled&quot;'
-spec create_mac_system_integrity_protection_modification_task(aws_client:aws_client(), create_mac_system_integrity_protection_modification_task_request()) ->
    {ok, create_mac_system_integrity_protection_modification_task_result(), tuple()} |
    {error, any()}.
create_mac_system_integrity_protection_modification_task(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_mac_system_integrity_protection_modification_task(Client, Input, []).

-spec create_mac_system_integrity_protection_modification_task(aws_client:aws_client(), create_mac_system_integrity_protection_modification_task_request(), proplists:proplist()) ->
    {ok, create_mac_system_integrity_protection_modification_task_result(), tuple()} |
    {error, any()}.
create_mac_system_integrity_protection_modification_task(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateMacSystemIntegrityProtectionModificationTask">>, Input, Options).

%% @doc Creates a managed prefix list.
%%
%% You can specify entries for the prefix list.
%% Each entry consists of a CIDR block and an optional description.
-spec create_managed_prefix_list(aws_client:aws_client(), create_managed_prefix_list_request()) ->
    {ok, create_managed_prefix_list_result(), tuple()} |
    {error, any()}.
create_managed_prefix_list(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_managed_prefix_list(Client, Input, []).

-spec create_managed_prefix_list(aws_client:aws_client(), create_managed_prefix_list_request(), proplists:proplist()) ->
    {ok, create_managed_prefix_list_result(), tuple()} |
    {error, any()}.
create_managed_prefix_list(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateManagedPrefixList">>, Input, Options).

%% @doc Creates a NAT gateway in the specified subnet.
%%
%% This action creates a network interface
%% in the specified subnet with a private IP address from the IP address
%% range of the
%% subnet. You can create either a public NAT gateway or a private NAT
%% gateway.
%%
%% With a public NAT gateway, internet-bound traffic from a private subnet
%% can be routed
%% to the NAT gateway, so that instances in a private subnet can connect to
%% the internet.
%%
%% With a private NAT gateway, private communication is routed across VPCs
%% and on-premises
%% networks through a transit gateway or virtual private gateway. Common use
%% cases include
%% running large workloads behind a small pool of allowlisted IPv4 addresses,
%% preserving
%% private IPv4 addresses, and communicating between overlapping networks.
%%
%% For more information, see NAT gateways:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html in
%% the Amazon VPC User Guide.
%%
%% When you create a public NAT gateway and assign it an EIP or secondary
%% EIPs,
%% the network border group of the EIPs must match the network border group
%% of the Availability Zone (AZ)
%% that the public NAT gateway is in. If it's not the same, the NAT
%% gateway will fail to launch.
%% You can see the network border group for the subnet's AZ by viewing
%% the details of the subnet.
%% Similarly, you can view the network border group of an EIP by viewing the
%% details of the EIP address.
%% For more information about network border groups and EIPs, see Allocate an
%% Elastic IP address:
%% https://docs.aws.amazon.com/vpc/latest/userguide/WorkWithEIPs.html
%% in the Amazon VPC User Guide.
-spec create_nat_gateway(aws_client:aws_client(), create_nat_gateway_request()) ->
    {ok, create_nat_gateway_result(), tuple()} |
    {error, any()}.
create_nat_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_nat_gateway(Client, Input, []).

-spec create_nat_gateway(aws_client:aws_client(), create_nat_gateway_request(), proplists:proplist()) ->
    {ok, create_nat_gateway_result(), tuple()} |
    {error, any()}.
create_nat_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateNatGateway">>, Input, Options).

%% @doc Creates a network ACL in a VPC.
%%
%% Network ACLs provide an optional layer of security (in addition to
%% security groups) for the instances in your VPC.
%%
%% For more information, see Network ACLs:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html in
%% the
%% Amazon VPC User Guide.
-spec create_network_acl(aws_client:aws_client(), create_network_acl_request()) ->
    {ok, create_network_acl_result(), tuple()} |
    {error, any()}.
create_network_acl(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_network_acl(Client, Input, []).

-spec create_network_acl(aws_client:aws_client(), create_network_acl_request(), proplists:proplist()) ->
    {ok, create_network_acl_result(), tuple()} |
    {error, any()}.
create_network_acl(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateNetworkAcl">>, Input, Options).

%% @doc Creates an entry (a rule) in a network ACL with the specified rule
%% number.
%%
%% Each network ACL has a set of numbered ingress rules
%% and a separate set of numbered egress rules. When determining whether a
%% packet should be allowed in or out of a subnet associated
%% with the ACL, we process the entries in the ACL according to the rule
%% numbers, in ascending order. Each network ACL has a set of
%% ingress rules and a separate set of egress rules.
%%
%% We recommend that you leave room between the rule numbers (for example,
%% 100, 110, 120, ...), and not number them one right after the
%% other (for example, 101, 102, 103, ...). This makes it easier to add a
%% rule between existing ones without having to renumber the rules.
%%
%% After you add an entry, you can't modify it; you must either replace
%% it, or create an entry and delete the old one.
%%
%% For more information about network ACLs, see Network ACLs:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html
%% in the Amazon VPC User Guide.
-spec create_network_acl_entry(aws_client:aws_client(), create_network_acl_entry_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
create_network_acl_entry(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_network_acl_entry(Client, Input, []).

-spec create_network_acl_entry(aws_client:aws_client(), create_network_acl_entry_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
create_network_acl_entry(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateNetworkAclEntry">>, Input, Options).

%% @doc Creates a Network Access Scope.
%%
%% Amazon Web Services Network Access Analyzer enables cloud networking and
%% cloud operations teams
%% to verify that their networks on Amazon Web Services conform to their
%% network security and governance
%% objectives. For more information, see the Amazon Web Services Network
%% Access Analyzer Guide:
%% https://docs.aws.amazon.com/vpc/latest/network-access-analyzer/.
-spec create_network_insights_access_scope(aws_client:aws_client(), create_network_insights_access_scope_request()) ->
    {ok, create_network_insights_access_scope_result(), tuple()} |
    {error, any()}.
create_network_insights_access_scope(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_network_insights_access_scope(Client, Input, []).

-spec create_network_insights_access_scope(aws_client:aws_client(), create_network_insights_access_scope_request(), proplists:proplist()) ->
    {ok, create_network_insights_access_scope_result(), tuple()} |
    {error, any()}.
create_network_insights_access_scope(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateNetworkInsightsAccessScope">>, Input, Options).

%% @doc Creates a path to analyze for reachability.
%%
%% Reachability Analyzer enables you to analyze and debug network
%% reachability between
%% two resources in your virtual private cloud (VPC). For more information,
%% see the
%% Reachability Analyzer Guide:
%% https://docs.aws.amazon.com/vpc/latest/reachability/.
-spec create_network_insights_path(aws_client:aws_client(), create_network_insights_path_request()) ->
    {ok, create_network_insights_path_result(), tuple()} |
    {error, any()}.
create_network_insights_path(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_network_insights_path(Client, Input, []).

-spec create_network_insights_path(aws_client:aws_client(), create_network_insights_path_request(), proplists:proplist()) ->
    {ok, create_network_insights_path_result(), tuple()} |
    {error, any()}.
create_network_insights_path(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateNetworkInsightsPath">>, Input, Options).

%% @doc Creates a network interface in the specified subnet.
%%
%% The number of IP addresses you can assign to a network interface varies by
%% instance
%% type.
%%
%% For more information about network interfaces, see Elastic network
%% interfaces:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html in the
%% Amazon EC2 User Guide.
-spec create_network_interface(aws_client:aws_client(), create_network_interface_request()) ->
    {ok, create_network_interface_result(), tuple()} |
    {error, any()}.
create_network_interface(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_network_interface(Client, Input, []).

-spec create_network_interface(aws_client:aws_client(), create_network_interface_request(), proplists:proplist()) ->
    {ok, create_network_interface_result(), tuple()} |
    {error, any()}.
create_network_interface(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateNetworkInterface">>, Input, Options).

%% @doc Grants an Amazon Web Services-authorized account permission to attach
%% the specified
%% network interface to an instance in their account.
%%
%% You can grant permission to a single Amazon Web Services account only, and
%% only one
%% account at a time.
-spec create_network_interface_permission(aws_client:aws_client(), create_network_interface_permission_request()) ->
    {ok, create_network_interface_permission_result(), tuple()} |
    {error, any()}.
create_network_interface_permission(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_network_interface_permission(Client, Input, []).

-spec create_network_interface_permission(aws_client:aws_client(), create_network_interface_permission_request(), proplists:proplist()) ->
    {ok, create_network_interface_permission_result(), tuple()} |
    {error, any()}.
create_network_interface_permission(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateNetworkInterfacePermission">>, Input, Options).

%% @doc Creates a placement group in which to launch instances.
%%
%% The strategy of the placement
%% group determines how the instances are organized within the group.
%%
%% A `cluster' placement group is a logical grouping of instances within
%% a
%% single Availability Zone that benefit from low network latency, high
%% network throughput.
%% A `spread' placement group places instances on distinct hardware. A
%% `partition' placement group places groups of instances in different
%% partitions, where instances in one partition do not share the same
%% hardware with
%% instances in another partition.
%%
%% For more information, see Placement groups:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html
%% in the
%% Amazon EC2 User Guide.
-spec create_placement_group(aws_client:aws_client(), create_placement_group_request()) ->
    {ok, create_placement_group_result(), tuple()} |
    {error, any()}.
create_placement_group(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_placement_group(Client, Input, []).

-spec create_placement_group(aws_client:aws_client(), create_placement_group_request(), proplists:proplist()) ->
    {ok, create_placement_group_result(), tuple()} |
    {error, any()}.
create_placement_group(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreatePlacementGroup">>, Input, Options).

%% @doc Creates a public IPv4 address pool.
%%
%% A public IPv4 pool is an EC2 IP address pool required for the public IPv4
%% CIDRs that you own and bring to Amazon Web Services to manage with IPAM.
%% IPv6 addresses you bring to Amazon Web Services, however, use IPAM pools
%% only. To monitor the status of pool creation, use DescribePublicIpv4Pools:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribePublicIpv4Pools.html.
-spec create_public_ipv4_pool(aws_client:aws_client(), create_public_ipv4_pool_request()) ->
    {ok, create_public_ipv4_pool_result(), tuple()} |
    {error, any()}.
create_public_ipv4_pool(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_public_ipv4_pool(Client, Input, []).

-spec create_public_ipv4_pool(aws_client:aws_client(), create_public_ipv4_pool_request(), proplists:proplist()) ->
    {ok, create_public_ipv4_pool_result(), tuple()} |
    {error, any()}.
create_public_ipv4_pool(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreatePublicIpv4Pool">>, Input, Options).

%% @doc Replaces the EBS-backed root volume for a `running' instance with
%% a new
%% volume that is restored to the original root volume's launch state,
%% that is restored to a
%% specific snapshot taken from the original root volume, or that is restored
%% from an AMI
%% that has the same key characteristics as that of the instance.
%%
%% For more information, see Replace a root volume:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/replace-root.html in
%% the Amazon EC2 User Guide.
-spec create_replace_root_volume_task(aws_client:aws_client(), create_replace_root_volume_task_request()) ->
    {ok, create_replace_root_volume_task_result(), tuple()} |
    {error, any()}.
create_replace_root_volume_task(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_replace_root_volume_task(Client, Input, []).

-spec create_replace_root_volume_task(aws_client:aws_client(), create_replace_root_volume_task_request(), proplists:proplist()) ->
    {ok, create_replace_root_volume_task_result(), tuple()} |
    {error, any()}.
create_replace_root_volume_task(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateReplaceRootVolumeTask">>, Input, Options).

%% @doc Creates a listing for Amazon EC2 Standard Reserved Instances to be
%% sold in the Reserved
%% Instance Marketplace.
%%
%% You can submit one Standard Reserved Instance listing at a time. To get
%% a list of your Standard Reserved Instances, you can use the
%% `DescribeReservedInstances' operation.
%%
%% Only Standard Reserved Instances can be sold in the Reserved Instance
%% Marketplace.
%% Convertible Reserved Instances cannot be sold.
%%
%% The Reserved Instance Marketplace matches sellers who want to resell
%% Standard Reserved
%% Instance capacity that they no longer need with buyers who want to
%% purchase additional
%% capacity. Reserved Instances bought and sold through the Reserved Instance
%% Marketplace work
%% like any other Reserved Instances.
%%
%% To sell your Standard Reserved Instances, you must first register as a
%% seller in the
%% Reserved Instance Marketplace. After completing the registration process,
%% you can create a
%% Reserved Instance Marketplace listing of some or all of your Standard
%% Reserved Instances, and
%% specify the upfront price to receive for them. Your Standard Reserved
%% Instance listings then
%% become available for purchase. To view the details of your Standard
%% Reserved Instance listing,
%% you can use the `DescribeReservedInstancesListings' operation.
%%
%% For more information, see Sell in the Reserved Instance
%% Marketplace:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html
%% in the Amazon EC2 User Guide.
-spec create_reserved_instances_listing(aws_client:aws_client(), create_reserved_instances_listing_request()) ->
    {ok, create_reserved_instances_listing_result(), tuple()} |
    {error, any()}.
create_reserved_instances_listing(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_reserved_instances_listing(Client, Input, []).

-spec create_reserved_instances_listing(aws_client:aws_client(), create_reserved_instances_listing_request(), proplists:proplist()) ->
    {ok, create_reserved_instances_listing_result(), tuple()} |
    {error, any()}.
create_reserved_instances_listing(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateReservedInstancesListing">>, Input, Options).

%% @doc Starts a task that restores an AMI from an Amazon S3 object that was
%% previously created by
%% using CreateStoreImageTask:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateStoreImageTask.html.
%%
%% To use this API, you must have the required permissions. For more
%% information, see Permissions for storing and restoring AMIs using S3:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-ami-store-restore.html#ami-s3-permissions
%% in the
%% Amazon EC2 User Guide.
%%
%% For more information, see Store and restore an AMI using
%% S3:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html
%% in the Amazon EC2 User Guide.
-spec create_restore_image_task(aws_client:aws_client(), create_restore_image_task_request()) ->
    {ok, create_restore_image_task_result(), tuple()} |
    {error, any()}.
create_restore_image_task(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_restore_image_task(Client, Input, []).

-spec create_restore_image_task(aws_client:aws_client(), create_restore_image_task_request(), proplists:proplist()) ->
    {ok, create_restore_image_task_result(), tuple()} |
    {error, any()}.
create_restore_image_task(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateRestoreImageTask">>, Input, Options).

%% @doc Creates a route in a route table within a VPC.
%%
%% You must specify either a destination CIDR block or a prefix list ID. You
%% must also specify
%% exactly one of the resources from the parameter list.
%%
%% When determining how to route traffic, we use the route with the most
%% specific match.
%% For example, traffic is destined for the IPv4 address `192.0.2.3', and
%% the
%% route table includes the following two IPv4 routes:
%%
%% `192.0.2.0/24' (goes to some target A)
%%
%% `192.0.2.0/28' (goes to some target B)
%%
%% Both routes apply to the traffic destined for `192.0.2.3'. However,
%% the second route
%% in the list covers a smaller number of IP addresses and is therefore more
%% specific,
%% so we use that route to determine where to target the traffic.
%%
%% For more information about route tables, see Route tables:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html in
%% the
%% Amazon VPC User Guide.
-spec create_route(aws_client:aws_client(), create_route_request()) ->
    {ok, create_route_result(), tuple()} |
    {error, any()}.
create_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_route(Client, Input, []).

-spec create_route(aws_client:aws_client(), create_route_request(), proplists:proplist()) ->
    {ok, create_route_result(), tuple()} |
    {error, any()}.
create_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateRoute">>, Input, Options).

%% @doc Creates a new route server to manage dynamic routing in a VPC.
%%
%% Amazon VPC Route Server simplifies routing for traffic between workloads
%% that are deployed within a VPC and its internet gateways. With this
%% feature,
%% VPC Route Server dynamically updates VPC and internet gateway route tables
%% with your preferred IPv4 or IPv6 routes to achieve routing fault tolerance
%% for those workloads. This enables you to automatically reroute traffic
%% within a VPC, which increases the manageability of VPC routing and
%% interoperability with third-party workloads.
%%
%% Route server supports the follow route table types:
%%
%% VPC route tables not associated with subnets
%%
%% Subnet route tables
%%
%% Internet gateway route tables
%%
%% Route server does not support route tables associated with virtual private
%% gateways. To propagate routes into a transit gateway route table, use
%% Transit Gateway Connect:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-connect.html.
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec create_route_server(aws_client:aws_client(), create_route_server_request()) ->
    {ok, create_route_server_result(), tuple()} |
    {error, any()}.
create_route_server(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_route_server(Client, Input, []).

-spec create_route_server(aws_client:aws_client(), create_route_server_request(), proplists:proplist()) ->
    {ok, create_route_server_result(), tuple()} |
    {error, any()}.
create_route_server(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateRouteServer">>, Input, Options).

%% @doc Creates a new endpoint for a route server in a specified subnet.
%%
%% A route server endpoint is an Amazon Web Services-managed component inside
%% a subnet that facilitates BGP (Border Gateway Protocol):
%% https://en.wikipedia.org/wiki/Border_Gateway_Protocol connections between
%% your route server and your BGP peers.
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec create_route_server_endpoint(aws_client:aws_client(), create_route_server_endpoint_request()) ->
    {ok, create_route_server_endpoint_result(), tuple()} |
    {error, any()}.
create_route_server_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_route_server_endpoint(Client, Input, []).

-spec create_route_server_endpoint(aws_client:aws_client(), create_route_server_endpoint_request(), proplists:proplist()) ->
    {ok, create_route_server_endpoint_result(), tuple()} |
    {error, any()}.
create_route_server_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateRouteServerEndpoint">>, Input, Options).

%% @doc Creates a new BGP peer for a specified route server endpoint.
%%
%% A route server peer is a session between a route server endpoint and the
%% device deployed in Amazon Web Services (such as a firewall appliance or
%% other network security function running on an EC2 instance). The device
%% must meet these requirements:
%%
%% Have an elastic network interface in the VPC
%%
%% Support BGP (Border Gateway Protocol)
%%
%% Can initiate BGP sessions
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec create_route_server_peer(aws_client:aws_client(), create_route_server_peer_request()) ->
    {ok, create_route_server_peer_result(), tuple()} |
    {error, any()}.
create_route_server_peer(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_route_server_peer(Client, Input, []).

-spec create_route_server_peer(aws_client:aws_client(), create_route_server_peer_request(), proplists:proplist()) ->
    {ok, create_route_server_peer_result(), tuple()} |
    {error, any()}.
create_route_server_peer(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateRouteServerPeer">>, Input, Options).

%% @doc Creates a route table for the specified VPC.
%%
%% After you create a route table, you can add routes and associate the table
%% with a subnet.
%%
%% For more information, see Route tables:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html in
%% the
%% Amazon VPC User Guide.
-spec create_route_table(aws_client:aws_client(), create_route_table_request()) ->
    {ok, create_route_table_result(), tuple()} |
    {error, any()}.
create_route_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_route_table(Client, Input, []).

-spec create_route_table(aws_client:aws_client(), create_route_table_request(), proplists:proplist()) ->
    {ok, create_route_table_result(), tuple()} |
    {error, any()}.
create_route_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateRouteTable">>, Input, Options).

%% @doc Creates a security group.
%%
%% A security group acts as a virtual firewall for your instance to control
%% inbound and outbound traffic.
%% For more information, see
%% Amazon EC2 security groups:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html
%% in
%% the Amazon EC2 User Guide and
%% Security groups for your VPC:
%% https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html
%% in the
%% Amazon VPC User Guide.
%%
%% When you create a security group, you specify a friendly name of your
%% choice.
%% You can't have two security groups for the same VPC with the same
%% name.
%%
%% You have a default security group for use in your VPC. If you don't
%% specify a security group
%% when you launch an instance, the instance is launched into the appropriate
%% default security group.
%% A default security group includes a default rule that grants instances
%% unrestricted network access
%% to each other.
%%
%% You can add or remove rules from your security groups using
%% `AuthorizeSecurityGroupIngress',
%% `AuthorizeSecurityGroupEgress',
%% `RevokeSecurityGroupIngress', and
%% `RevokeSecurityGroupEgress'.
%%
%% For more information about VPC security group limits, see Amazon VPC
%% Limits:
%% https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html.
-spec create_security_group(aws_client:aws_client(), create_security_group_request()) ->
    {ok, create_security_group_result(), tuple()} |
    {error, any()}.
create_security_group(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_security_group(Client, Input, []).

-spec create_security_group(aws_client:aws_client(), create_security_group_request(), proplists:proplist()) ->
    {ok, create_security_group_result(), tuple()} |
    {error, any()}.
create_security_group(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateSecurityGroup">>, Input, Options).

%% @doc Creates a snapshot of an EBS volume and stores it in Amazon S3.
%%
%% You can use snapshots for
%% backups, to make copies of EBS volumes, and to save data before shutting
%% down an
%% instance.
%%
%% The location of the source EBS volume determines where you can create the
%% snapshot.
%%
%% If the source volume is in a Region, you must create the snapshot in the
%% same
%% Region as the volume.
%%
%% If the source volume is in a Local Zone, you can create the snapshot in
%% the same Local
%% Zone or in its parent Amazon Web Services Region.
%%
%% If the source volume is on an Outpost, you can create the snapshot on the
%% same
%% Outpost or in its parent Amazon Web Services Region.
%%
%% When a snapshot is created, any Amazon Web Services Marketplace product
%% codes that are associated with the
%% source volume are propagated to the snapshot.
%%
%% You can take a snapshot of an attached volume that is in use. However,
%% snapshots only
%% capture data that has been written to your Amazon EBS volume at the time
%% the snapshot command is
%% issued; this might exclude any data that has been cached by any
%% applications or the operating
%% system. If you can pause any file systems on the volume long enough to
%% take a snapshot, your
%% snapshot should be complete. However, if you cannot pause all file writes
%% to the volume, you
%% should unmount the volume from within the instance, issue the snapshot
%% command, and then
%% remount the volume to ensure a consistent and complete snapshot. You may
%% remount and use your
%% volume while the snapshot status is `pending'.
%%
%% When you create a snapshot for an EBS volume that serves as a root device,
%% we recommend
%% that you stop the instance before taking the snapshot.
%%
%% Snapshots that are taken from encrypted volumes are automatically
%% encrypted. Volumes that
%% are created from encrypted snapshots are also automatically encrypted.
%% Your encrypted volumes
%% and any associated snapshots always remain protected. For more
%% information, see Amazon EBS encryption:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html
%% in the Amazon EBS User Guide.
-spec create_snapshot(aws_client:aws_client(), create_snapshot_request()) ->
    {ok, snapshot(), tuple()} |
    {error, any()}.
create_snapshot(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_snapshot(Client, Input, []).

-spec create_snapshot(aws_client:aws_client(), create_snapshot_request(), proplists:proplist()) ->
    {ok, snapshot(), tuple()} |
    {error, any()}.
create_snapshot(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateSnapshot">>, Input, Options).

%% @doc Creates crash-consistent snapshots of multiple EBS volumes attached
%% to an Amazon EC2 instance.
%%
%% Volumes are chosen by specifying an instance. Each volume attached to the
%% specified instance
%% will produce one snapshot that is crash-consistent across the instance.
%% You can include all of
%% the volumes currently attached to the instance, or you can exclude the
%% root volume or specific
%% data (non-root) volumes from the multi-volume snapshot set.
%%
%% The location of the source instance determines where you can create the
%% snapshots.
%%
%% If the source instance is in a Region, you must create the snapshots in
%% the same
%% Region as the instance.
%%
%% If the source instance is in a Local Zone, you can create the snapshots in
%% the same
%% Local Zone or in its parent Amazon Web Services Region.
%%
%% If the source instance is on an Outpost, you can create the snapshots on
%% the same
%% Outpost or in its parent Amazon Web Services Region.
-spec create_snapshots(aws_client:aws_client(), create_snapshots_request()) ->
    {ok, create_snapshots_result(), tuple()} |
    {error, any()}.
create_snapshots(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_snapshots(Client, Input, []).

-spec create_snapshots(aws_client:aws_client(), create_snapshots_request(), proplists:proplist()) ->
    {ok, create_snapshots_result(), tuple()} |
    {error, any()}.
create_snapshots(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateSnapshots">>, Input, Options).

%% @doc Creates a data feed for Spot Instances, enabling you to view Spot
%% Instance usage logs.
%%
%% You can create one data feed per Amazon Web Services account. For more
%% information, see
%% Spot Instance data feed:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html
%% in the Amazon EC2 User Guide.
-spec create_spot_datafeed_subscription(aws_client:aws_client(), create_spot_datafeed_subscription_request()) ->
    {ok, create_spot_datafeed_subscription_result(), tuple()} |
    {error, any()}.
create_spot_datafeed_subscription(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_spot_datafeed_subscription(Client, Input, []).

-spec create_spot_datafeed_subscription(aws_client:aws_client(), create_spot_datafeed_subscription_request(), proplists:proplist()) ->
    {ok, create_spot_datafeed_subscription_result(), tuple()} |
    {error, any()}.
create_spot_datafeed_subscription(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateSpotDatafeedSubscription">>, Input, Options).

%% @doc Stores an AMI as a single object in an Amazon S3 bucket.
%%
%% To use this API, you must have the required permissions. For more
%% information, see Permissions for storing and restoring AMIs using S3:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-ami-store-restore.html#ami-s3-permissions
%% in the
%% Amazon EC2 User Guide.
%%
%% For more information, see Store and restore an AMI using
%% S3:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html
%% in the Amazon EC2 User Guide.
-spec create_store_image_task(aws_client:aws_client(), create_store_image_task_request()) ->
    {ok, create_store_image_task_result(), tuple()} |
    {error, any()}.
create_store_image_task(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_store_image_task(Client, Input, []).

-spec create_store_image_task(aws_client:aws_client(), create_store_image_task_request(), proplists:proplist()) ->
    {ok, create_store_image_task_result(), tuple()} |
    {error, any()}.
create_store_image_task(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateStoreImageTask">>, Input, Options).

%% @doc Creates a subnet in the specified VPC.
%%
%% For an IPv4 only subnet, specify an IPv4 CIDR block.
%% If the VPC has an IPv6 CIDR block, you can create an IPv6 only subnet or a
%% dual stack subnet instead.
%% For an IPv6 only subnet, specify an IPv6 CIDR block. For a dual stack
%% subnet, specify both
%% an IPv4 CIDR block and an IPv6 CIDR block.
%%
%% A subnet CIDR block must not overlap the CIDR block of an existing subnet
%% in the VPC.
%% After you create a subnet, you can't change its CIDR block.
%%
%% The allowed size for an IPv4 subnet is between a /28 netmask (16 IP
%% addresses) and
%% a /16 netmask (65,536 IP addresses). Amazon Web Services reserves both the
%% first four and
%% the last IPv4 address in each subnet's CIDR block. They're not
%% available for your use.
%%
%% If you've associated an IPv6 CIDR block with your VPC, you can
%% associate an IPv6 CIDR
%% block with a subnet when you create it.
%%
%% If you add more than one subnet to a VPC, they're set up in a star
%% topology with a
%% logical router in the middle.
%%
%% When you stop an instance in a subnet, it retains its private IPv4
%% address. It's
%% therefore possible to have a subnet with no running instances (they're
%% all stopped), but
%% no remaining IP addresses available.
%%
%% For more information, see Subnets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/configure-subnets.html in
%% the Amazon VPC User Guide.
-spec create_subnet(aws_client:aws_client(), create_subnet_request()) ->
    {ok, create_subnet_result(), tuple()} |
    {error, any()}.
create_subnet(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_subnet(Client, Input, []).

-spec create_subnet(aws_client:aws_client(), create_subnet_request(), proplists:proplist()) ->
    {ok, create_subnet_result(), tuple()} |
    {error, any()}.
create_subnet(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateSubnet">>, Input, Options).

%% @doc Creates a subnet CIDR reservation.
%%
%% For more information, see Subnet CIDR reservations:
%% https://docs.aws.amazon.com/vpc/latest/userguide/subnet-cidr-reservation.html
%% in the Amazon VPC User Guide and Manage prefixes
%% for your network interfaces:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-prefixes.html
%% in the Amazon EC2 User Guide.
-spec create_subnet_cidr_reservation(aws_client:aws_client(), create_subnet_cidr_reservation_request()) ->
    {ok, create_subnet_cidr_reservation_result(), tuple()} |
    {error, any()}.
create_subnet_cidr_reservation(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_subnet_cidr_reservation(Client, Input, []).

-spec create_subnet_cidr_reservation(aws_client:aws_client(), create_subnet_cidr_reservation_request(), proplists:proplist()) ->
    {ok, create_subnet_cidr_reservation_result(), tuple()} |
    {error, any()}.
create_subnet_cidr_reservation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateSubnetCidrReservation">>, Input, Options).

%% @doc Adds or overwrites only the specified tags for the specified Amazon
%% EC2 resource or
%% resources.
%%
%% When you specify an existing tag key, the value is overwritten with
%% the new value. Each resource can have a maximum of 50 tags. Each tag
%% consists of a key and
%% optional value. Tag keys must be unique per resource.
%%
%% For more information about tags, see Tag your Amazon EC2 resources:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html in the
%% Amazon Elastic Compute Cloud User Guide. For more information about
%% creating IAM policies that control users' access to resources based on
%% tags, see Supported
%% resource-level permissions for Amazon EC2 API actions:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-supported-iam-actions-resources.html
%% in the Amazon
%% Elastic Compute Cloud User Guide.
-spec create_tags(aws_client:aws_client(), create_tags_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
create_tags(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_tags(Client, Input, []).

-spec create_tags(aws_client:aws_client(), create_tags_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
create_tags(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTags">>, Input, Options).

%% @doc Creates a Traffic Mirror filter.
%%
%% A Traffic Mirror filter is a set of rules that defines the traffic to
%% mirror.
%%
%% By default, no traffic is mirrored. To mirror traffic, use
%% CreateTrafficMirrorFilterRule:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilterRule.htm
%% to add Traffic Mirror rules to the filter. The rules you add define what
%% traffic gets mirrored.
%% You can also use ModifyTrafficMirrorFilterNetworkServices:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyTrafficMirrorFilterNetworkServices.html
%% to mirror supported network services.
-spec create_traffic_mirror_filter(aws_client:aws_client(), create_traffic_mirror_filter_request()) ->
    {ok, create_traffic_mirror_filter_result(), tuple()} |
    {error, any()}.
create_traffic_mirror_filter(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_traffic_mirror_filter(Client, Input, []).

-spec create_traffic_mirror_filter(aws_client:aws_client(), create_traffic_mirror_filter_request(), proplists:proplist()) ->
    {ok, create_traffic_mirror_filter_result(), tuple()} |
    {error, any()}.
create_traffic_mirror_filter(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTrafficMirrorFilter">>, Input, Options).

%% @doc Creates a Traffic Mirror filter rule.
%%
%% A Traffic Mirror rule defines the Traffic Mirror source traffic to mirror.
%%
%% You need the Traffic Mirror filter ID when you create the rule.
-spec create_traffic_mirror_filter_rule(aws_client:aws_client(), create_traffic_mirror_filter_rule_request()) ->
    {ok, create_traffic_mirror_filter_rule_result(), tuple()} |
    {error, any()}.
create_traffic_mirror_filter_rule(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_traffic_mirror_filter_rule(Client, Input, []).

-spec create_traffic_mirror_filter_rule(aws_client:aws_client(), create_traffic_mirror_filter_rule_request(), proplists:proplist()) ->
    {ok, create_traffic_mirror_filter_rule_result(), tuple()} |
    {error, any()}.
create_traffic_mirror_filter_rule(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTrafficMirrorFilterRule">>, Input, Options).

%% @doc Creates a Traffic Mirror session.
%%
%% A Traffic Mirror session actively copies packets from a Traffic Mirror
%% source to a Traffic Mirror target. Create a filter, and then assign it
%% to the session to define a subset of the traffic to mirror, for example
%% all TCP
%% traffic.
%%
%% The Traffic Mirror source and the Traffic Mirror target (monitoring
%% appliances) can be in the same VPC, or in a different VPC connected via
%% VPC peering or a transit gateway.
%%
%% By default, no traffic is mirrored. Use CreateTrafficMirrorFilter:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorFilter.html
%% to
%% create filter rules that specify the traffic to mirror.
-spec create_traffic_mirror_session(aws_client:aws_client(), create_traffic_mirror_session_request()) ->
    {ok, create_traffic_mirror_session_result(), tuple()} |
    {error, any()}.
create_traffic_mirror_session(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_traffic_mirror_session(Client, Input, []).

-spec create_traffic_mirror_session(aws_client:aws_client(), create_traffic_mirror_session_request(), proplists:proplist()) ->
    {ok, create_traffic_mirror_session_result(), tuple()} |
    {error, any()}.
create_traffic_mirror_session(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTrafficMirrorSession">>, Input, Options).

%% @doc Creates a target for your Traffic Mirror session.
%%
%% A Traffic Mirror target is the destination for mirrored traffic. The
%% Traffic Mirror source and
%% the Traffic Mirror target (monitoring appliances) can be in the same VPC,
%% or in
%% different VPCs connected via VPC peering or a transit gateway.
%%
%% A Traffic Mirror target can be a network interface, a Network Load
%% Balancer, or a Gateway Load Balancer endpoint.
%%
%% To use the target in a Traffic Mirror session, use
%% CreateTrafficMirrorSession:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTrafficMirrorSession.htm.
-spec create_traffic_mirror_target(aws_client:aws_client(), create_traffic_mirror_target_request()) ->
    {ok, create_traffic_mirror_target_result(), tuple()} |
    {error, any()}.
create_traffic_mirror_target(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_traffic_mirror_target(Client, Input, []).

-spec create_traffic_mirror_target(aws_client:aws_client(), create_traffic_mirror_target_request(), proplists:proplist()) ->
    {ok, create_traffic_mirror_target_result(), tuple()} |
    {error, any()}.
create_traffic_mirror_target(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTrafficMirrorTarget">>, Input, Options).

%% @doc Creates a transit gateway.
%%
%% You can use a transit gateway to interconnect your virtual private clouds
%% (VPC) and on-premises networks.
%% After the transit gateway enters the `available' state, you can attach
%% your VPCs and VPN
%% connections to the transit gateway.
%%
%% To attach your VPCs, use `CreateTransitGatewayVpcAttachment'.
%%
%% To attach a VPN connection, use `CreateCustomerGateway' to create a
%% customer
%% gateway and specify the ID of the customer gateway and the ID of the
%% transit gateway in a call to
%% `CreateVpnConnection'.
%%
%% When you create a transit gateway, we create a default transit gateway
%% route table and use it as the default association route table
%% and the default propagation route table. You can use
%% `CreateTransitGatewayRouteTable' to create
%% additional transit gateway route tables. If you disable automatic route
%% propagation, we do not create a default transit gateway route table.
%% You can use `EnableTransitGatewayRouteTablePropagation' to propagate
%% routes from a resource
%% attachment to a transit gateway route table. If you disable automatic
%% associations, you can use `AssociateTransitGatewayRouteTable' to
%% associate a resource attachment with a transit gateway route table.
-spec create_transit_gateway(aws_client:aws_client(), create_transit_gateway_request()) ->
    {ok, create_transit_gateway_result(), tuple()} |
    {error, any()}.
create_transit_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_transit_gateway(Client, Input, []).

-spec create_transit_gateway(aws_client:aws_client(), create_transit_gateway_request(), proplists:proplist()) ->
    {ok, create_transit_gateway_result(), tuple()} |
    {error, any()}.
create_transit_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTransitGateway">>, Input, Options).

%% @doc Creates a Connect attachment from a specified transit gateway
%% attachment.
%%
%% A Connect attachment is a GRE-based tunnel attachment that you can use to
%% establish a connection between a transit gateway and an appliance.
%%
%% A Connect attachment uses an existing VPC or Amazon Web Services Direct
%% Connect attachment as the underlying transport mechanism.
-spec create_transit_gateway_connect(aws_client:aws_client(), create_transit_gateway_connect_request()) ->
    {ok, create_transit_gateway_connect_result(), tuple()} |
    {error, any()}.
create_transit_gateway_connect(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_transit_gateway_connect(Client, Input, []).

-spec create_transit_gateway_connect(aws_client:aws_client(), create_transit_gateway_connect_request(), proplists:proplist()) ->
    {ok, create_transit_gateway_connect_result(), tuple()} |
    {error, any()}.
create_transit_gateway_connect(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTransitGatewayConnect">>, Input, Options).

%% @doc Creates a Connect peer for a specified transit gateway Connect
%% attachment between a
%% transit gateway and an appliance.
%%
%% The peer address and transit gateway address must be the same IP address
%% family (IPv4 or IPv6).
%%
%% For more information, see Connect peers:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-connect.html#tgw-connect-peer
%% in the Amazon Web Services Transit Gateways Guide.
-spec create_transit_gateway_connect_peer(aws_client:aws_client(), create_transit_gateway_connect_peer_request()) ->
    {ok, create_transit_gateway_connect_peer_result(), tuple()} |
    {error, any()}.
create_transit_gateway_connect_peer(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_transit_gateway_connect_peer(Client, Input, []).

-spec create_transit_gateway_connect_peer(aws_client:aws_client(), create_transit_gateway_connect_peer_request(), proplists:proplist()) ->
    {ok, create_transit_gateway_connect_peer_result(), tuple()} |
    {error, any()}.
create_transit_gateway_connect_peer(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTransitGatewayConnectPeer">>, Input, Options).

%% @doc Creates a multicast domain using the specified transit gateway.
%%
%% The transit gateway must be in the available state before you create a
%% domain. Use DescribeTransitGateways:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGateways.html
%% to see the state of transit gateway.
-spec create_transit_gateway_multicast_domain(aws_client:aws_client(), create_transit_gateway_multicast_domain_request()) ->
    {ok, create_transit_gateway_multicast_domain_result(), tuple()} |
    {error, any()}.
create_transit_gateway_multicast_domain(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_transit_gateway_multicast_domain(Client, Input, []).

-spec create_transit_gateway_multicast_domain(aws_client:aws_client(), create_transit_gateway_multicast_domain_request(), proplists:proplist()) ->
    {ok, create_transit_gateway_multicast_domain_result(), tuple()} |
    {error, any()}.
create_transit_gateway_multicast_domain(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTransitGatewayMulticastDomain">>, Input, Options).

%% @doc Requests a transit gateway peering attachment between the specified
%% transit gateway
%% (requester) and a peer transit gateway (accepter).
%%
%% The peer transit gateway can be in
%% your account or a different Amazon Web Services account.
%%
%% After you create the peering attachment, the owner of the accepter transit
%% gateway
%% must accept the attachment request.
-spec create_transit_gateway_peering_attachment(aws_client:aws_client(), create_transit_gateway_peering_attachment_request()) ->
    {ok, create_transit_gateway_peering_attachment_result(), tuple()} |
    {error, any()}.
create_transit_gateway_peering_attachment(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_transit_gateway_peering_attachment(Client, Input, []).

-spec create_transit_gateway_peering_attachment(aws_client:aws_client(), create_transit_gateway_peering_attachment_request(), proplists:proplist()) ->
    {ok, create_transit_gateway_peering_attachment_result(), tuple()} |
    {error, any()}.
create_transit_gateway_peering_attachment(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTransitGatewayPeeringAttachment">>, Input, Options).

%% @doc Creates a transit gateway policy table.
-spec create_transit_gateway_policy_table(aws_client:aws_client(), create_transit_gateway_policy_table_request()) ->
    {ok, create_transit_gateway_policy_table_result(), tuple()} |
    {error, any()}.
create_transit_gateway_policy_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_transit_gateway_policy_table(Client, Input, []).

-spec create_transit_gateway_policy_table(aws_client:aws_client(), create_transit_gateway_policy_table_request(), proplists:proplist()) ->
    {ok, create_transit_gateway_policy_table_result(), tuple()} |
    {error, any()}.
create_transit_gateway_policy_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTransitGatewayPolicyTable">>, Input, Options).

%% @doc Creates a reference (route) to a prefix list in a specified transit
%% gateway route table.
-spec create_transit_gateway_prefix_list_reference(aws_client:aws_client(), create_transit_gateway_prefix_list_reference_request()) ->
    {ok, create_transit_gateway_prefix_list_reference_result(), tuple()} |
    {error, any()}.
create_transit_gateway_prefix_list_reference(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_transit_gateway_prefix_list_reference(Client, Input, []).

-spec create_transit_gateway_prefix_list_reference(aws_client:aws_client(), create_transit_gateway_prefix_list_reference_request(), proplists:proplist()) ->
    {ok, create_transit_gateway_prefix_list_reference_result(), tuple()} |
    {error, any()}.
create_transit_gateway_prefix_list_reference(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTransitGatewayPrefixListReference">>, Input, Options).

%% @doc Creates a static route for the specified transit gateway route table.
-spec create_transit_gateway_route(aws_client:aws_client(), create_transit_gateway_route_request()) ->
    {ok, create_transit_gateway_route_result(), tuple()} |
    {error, any()}.
create_transit_gateway_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_transit_gateway_route(Client, Input, []).

-spec create_transit_gateway_route(aws_client:aws_client(), create_transit_gateway_route_request(), proplists:proplist()) ->
    {ok, create_transit_gateway_route_result(), tuple()} |
    {error, any()}.
create_transit_gateway_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTransitGatewayRoute">>, Input, Options).

%% @doc Creates a route table for the specified transit gateway.
-spec create_transit_gateway_route_table(aws_client:aws_client(), create_transit_gateway_route_table_request()) ->
    {ok, create_transit_gateway_route_table_result(), tuple()} |
    {error, any()}.
create_transit_gateway_route_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_transit_gateway_route_table(Client, Input, []).

-spec create_transit_gateway_route_table(aws_client:aws_client(), create_transit_gateway_route_table_request(), proplists:proplist()) ->
    {ok, create_transit_gateway_route_table_result(), tuple()} |
    {error, any()}.
create_transit_gateway_route_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTransitGatewayRouteTable">>, Input, Options).

%% @doc Advertises a new transit gateway route table.
-spec create_transit_gateway_route_table_announcement(aws_client:aws_client(), create_transit_gateway_route_table_announcement_request()) ->
    {ok, create_transit_gateway_route_table_announcement_result(), tuple()} |
    {error, any()}.
create_transit_gateway_route_table_announcement(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_transit_gateway_route_table_announcement(Client, Input, []).

-spec create_transit_gateway_route_table_announcement(aws_client:aws_client(), create_transit_gateway_route_table_announcement_request(), proplists:proplist()) ->
    {ok, create_transit_gateway_route_table_announcement_result(), tuple()} |
    {error, any()}.
create_transit_gateway_route_table_announcement(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTransitGatewayRouteTableAnnouncement">>, Input, Options).

%% @doc Attaches the specified VPC to the specified transit gateway.
%%
%% If you attach a VPC with a CIDR range that overlaps the CIDR range of a
%% VPC that is already attached,
%% the new VPC CIDR range is not propagated to the default propagation route
%% table.
%%
%% To send VPC traffic to an attached transit gateway, add a route to the VPC
%% route table using `CreateRoute'.
-spec create_transit_gateway_vpc_attachment(aws_client:aws_client(), create_transit_gateway_vpc_attachment_request()) ->
    {ok, create_transit_gateway_vpc_attachment_result(), tuple()} |
    {error, any()}.
create_transit_gateway_vpc_attachment(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_transit_gateway_vpc_attachment(Client, Input, []).

-spec create_transit_gateway_vpc_attachment(aws_client:aws_client(), create_transit_gateway_vpc_attachment_request(), proplists:proplist()) ->
    {ok, create_transit_gateway_vpc_attachment_result(), tuple()} |
    {error, any()}.
create_transit_gateway_vpc_attachment(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateTransitGatewayVpcAttachment">>, Input, Options).

%% @doc An Amazon Web Services Verified Access endpoint is where you define
%% your application along with an optional endpoint-level access policy.
-spec create_verified_access_endpoint(aws_client:aws_client(), create_verified_access_endpoint_request()) ->
    {ok, create_verified_access_endpoint_result(), tuple()} |
    {error, any()}.
create_verified_access_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_verified_access_endpoint(Client, Input, []).

-spec create_verified_access_endpoint(aws_client:aws_client(), create_verified_access_endpoint_request(), proplists:proplist()) ->
    {ok, create_verified_access_endpoint_result(), tuple()} |
    {error, any()}.
create_verified_access_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVerifiedAccessEndpoint">>, Input, Options).

%% @doc An Amazon Web Services Verified Access group is a collection of
%% Amazon Web Services Verified Access endpoints who's associated
%% applications have
%% similar security requirements.
%%
%% Each instance within a Verified Access group shares an Verified Access
%% policy. For
%% example, you can group all Verified Access instances associated with
%% &quot;sales&quot; applications together and
%% use one common Verified Access policy.
-spec create_verified_access_group(aws_client:aws_client(), create_verified_access_group_request()) ->
    {ok, create_verified_access_group_result(), tuple()} |
    {error, any()}.
create_verified_access_group(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_verified_access_group(Client, Input, []).

-spec create_verified_access_group(aws_client:aws_client(), create_verified_access_group_request(), proplists:proplist()) ->
    {ok, create_verified_access_group_result(), tuple()} |
    {error, any()}.
create_verified_access_group(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVerifiedAccessGroup">>, Input, Options).

%% @doc An Amazon Web Services Verified Access instance is a regional entity
%% that evaluates application requests and grants
%% access only when your security requirements are met.
-spec create_verified_access_instance(aws_client:aws_client(), create_verified_access_instance_request()) ->
    {ok, create_verified_access_instance_result(), tuple()} |
    {error, any()}.
create_verified_access_instance(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_verified_access_instance(Client, Input, []).

-spec create_verified_access_instance(aws_client:aws_client(), create_verified_access_instance_request(), proplists:proplist()) ->
    {ok, create_verified_access_instance_result(), tuple()} |
    {error, any()}.
create_verified_access_instance(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVerifiedAccessInstance">>, Input, Options).

%% @doc A trust provider is a third-party entity that creates, maintains, and
%% manages identity
%% information for users and devices.
%%
%% When an application request is made, the identity
%% information sent by the trust provider is evaluated by Verified Access
%% before allowing or
%% denying the application request.
-spec create_verified_access_trust_provider(aws_client:aws_client(), create_verified_access_trust_provider_request()) ->
    {ok, create_verified_access_trust_provider_result(), tuple()} |
    {error, any()}.
create_verified_access_trust_provider(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_verified_access_trust_provider(Client, Input, []).

-spec create_verified_access_trust_provider(aws_client:aws_client(), create_verified_access_trust_provider_request(), proplists:proplist()) ->
    {ok, create_verified_access_trust_provider_result(), tuple()} |
    {error, any()}.
create_verified_access_trust_provider(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVerifiedAccessTrustProvider">>, Input, Options).

%% @doc Creates an EBS volume that can be attached to an instance in the same
%% Availability Zone.
%%
%% You can create a new empty volume or restore a volume from an EBS
%% snapshot.
%% Any Amazon Web Services Marketplace product codes from the snapshot are
%% propagated to the volume.
%%
%% You can create encrypted volumes. Encrypted volumes must be attached to
%% instances that
%% support Amazon EBS encryption. Volumes that are created from encrypted
%% snapshots are also automatically
%% encrypted. For more information, see Amazon EBS encryption:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html
%% in the Amazon EBS User Guide.
%%
%% You can tag your volumes during creation. For more information, see Tag
%% your Amazon EC2
%% resources:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html in the
%% Amazon EC2 User Guide.
%%
%% For more information, see Create an Amazon EBS volume:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-creating-volume.html
%% in the
%% Amazon EBS User Guide.
-spec create_volume(aws_client:aws_client(), create_volume_request()) ->
    {ok, volume(), tuple()} |
    {error, any()}.
create_volume(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_volume(Client, Input, []).

-spec create_volume(aws_client:aws_client(), create_volume_request(), proplists:proplist()) ->
    {ok, volume(), tuple()} |
    {error, any()}.
create_volume(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVolume">>, Input, Options).

%% @doc Creates a VPC with the specified CIDR blocks.
%%
%% For more information, see IP addressing for your VPCs and subnets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html in
%% the
%% Amazon VPC User Guide.
%%
%% You can optionally request an IPv6 CIDR block for the VPC. You can request
%% an
%% Amazon-provided IPv6 CIDR block from Amazon's pool of IPv6 addresses
%% or an IPv6 CIDR
%% block from an IPv6 address pool that you provisioned through bring your
%% own IP addresses
%% (BYOIP:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html).
%%
%% By default, each instance that you launch in the VPC has the default DHCP
%% options, which
%% include only a default DNS server that we provide (AmazonProvidedDNS). For
%% more
%% information, see DHCP option sets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html in
%% the Amazon VPC User Guide.
%%
%% You can specify the instance tenancy value for the VPC when you create it.
%% You can't change
%% this value for the VPC after you create it. For more information, see
%% Dedicated Instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html
%% in the
%% Amazon EC2 User Guide.
-spec create_vpc(aws_client:aws_client(), create_vpc_request()) ->
    {ok, create_vpc_result(), tuple()} |
    {error, any()}.
create_vpc(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_vpc(Client, Input, []).

-spec create_vpc(aws_client:aws_client(), create_vpc_request(), proplists:proplist()) ->
    {ok, create_vpc_result(), tuple()} |
    {error, any()}.
create_vpc(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVpc">>, Input, Options).

%% @doc Create a VPC Block Public Access (BPA) exclusion.
%%
%% A VPC BPA exclusion is a mode that can be applied to a single VPC or
%% subnet that exempts it from the account’s BPA mode and will allow
%% bidirectional or egress-only access. You can create BPA exclusions for
%% VPCs and subnets even when BPA is not enabled on the account to ensure
%% that there is no traffic disruption to the exclusions when VPC BPA is
%% turned on. To learn more about VPC BPA, see Block public access to VPCs
%% and subnets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/security-vpc-bpa.html in
%% the Amazon VPC User Guide.
-spec create_vpc_block_public_access_exclusion(aws_client:aws_client(), create_vpc_block_public_access_exclusion_request()) ->
    {ok, create_vpc_block_public_access_exclusion_result(), tuple()} |
    {error, any()}.
create_vpc_block_public_access_exclusion(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_vpc_block_public_access_exclusion(Client, Input, []).

-spec create_vpc_block_public_access_exclusion(aws_client:aws_client(), create_vpc_block_public_access_exclusion_request(), proplists:proplist()) ->
    {ok, create_vpc_block_public_access_exclusion_result(), tuple()} |
    {error, any()}.
create_vpc_block_public_access_exclusion(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVpcBlockPublicAccessExclusion">>, Input, Options).

%% @doc Creates a VPC endpoint.
%%
%% A VPC endpoint provides a private connection between the
%% specified VPC and the specified endpoint service. You can use an endpoint
%% service
%% provided by Amazon Web Services, an Amazon Web Services Marketplace
%% Partner, or another
%% Amazon Web Services account. For more information, see the Amazon Web
%% Services PrivateLink User Guide:
%% https://docs.aws.amazon.com/vpc/latest/privatelink/.
-spec create_vpc_endpoint(aws_client:aws_client(), create_vpc_endpoint_request()) ->
    {ok, create_vpc_endpoint_result(), tuple()} |
    {error, any()}.
create_vpc_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_vpc_endpoint(Client, Input, []).

-spec create_vpc_endpoint(aws_client:aws_client(), create_vpc_endpoint_request(), proplists:proplist()) ->
    {ok, create_vpc_endpoint_result(), tuple()} |
    {error, any()}.
create_vpc_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVpcEndpoint">>, Input, Options).

%% @doc Creates a connection notification for a specified VPC endpoint or VPC
%% endpoint
%% service.
%%
%% A connection notification notifies you of specific endpoint events. You
%% must
%% create an SNS topic to receive notifications. For more information, see
%% Creating an Amazon SNS topic:
%% https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html in
%% the Amazon SNS Developer Guide.
%%
%% You can create a connection notification for interface endpoints only.
-spec create_vpc_endpoint_connection_notification(aws_client:aws_client(), create_vpc_endpoint_connection_notification_request()) ->
    {ok, create_vpc_endpoint_connection_notification_result(), tuple()} |
    {error, any()}.
create_vpc_endpoint_connection_notification(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_vpc_endpoint_connection_notification(Client, Input, []).

-spec create_vpc_endpoint_connection_notification(aws_client:aws_client(), create_vpc_endpoint_connection_notification_request(), proplists:proplist()) ->
    {ok, create_vpc_endpoint_connection_notification_result(), tuple()} |
    {error, any()}.
create_vpc_endpoint_connection_notification(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVpcEndpointConnectionNotification">>, Input, Options).

%% @doc Creates a VPC endpoint service to which service consumers (Amazon Web
%% Services accounts,
%% users, and IAM roles) can connect.
%%
%% Before you create an endpoint service, you must create one of the
%% following for your service:
%%
%% A Network Load Balancer:
%% https://docs.aws.amazon.com/elasticloadbalancing/latest/network/.
%% Service consumers connect to your service using an interface endpoint.
%%
%% A Gateway Load Balancer:
%% https://docs.aws.amazon.com/elasticloadbalancing/latest/gateway/.
%% Service consumers connect to your service using a Gateway Load Balancer
%% endpoint.
%%
%% If you set the private DNS name, you must prove that you own the private
%% DNS domain
%% name.
%%
%% For more information, see the Amazon Web Services PrivateLink
%% Guide: https://docs.aws.amazon.com/vpc/latest/privatelink/.
-spec create_vpc_endpoint_service_configuration(aws_client:aws_client(), create_vpc_endpoint_service_configuration_request()) ->
    {ok, create_vpc_endpoint_service_configuration_result(), tuple()} |
    {error, any()}.
create_vpc_endpoint_service_configuration(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_vpc_endpoint_service_configuration(Client, Input, []).

-spec create_vpc_endpoint_service_configuration(aws_client:aws_client(), create_vpc_endpoint_service_configuration_request(), proplists:proplist()) ->
    {ok, create_vpc_endpoint_service_configuration_result(), tuple()} |
    {error, any()}.
create_vpc_endpoint_service_configuration(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVpcEndpointServiceConfiguration">>, Input, Options).

%% @doc Requests a VPC peering connection between two VPCs: a requester VPC
%% that you own and
%% an accepter VPC with which to create the connection.
%%
%% The accepter VPC can belong to
%% another Amazon Web Services account and can be in a different Region to
%% the requester VPC.
%% The requester VPC and accepter VPC cannot have overlapping CIDR blocks.
%%
%% Limitations and rules apply to a VPC peering connection. For more
%% information, see
%% the VPC peering limitations:
%% https://docs.aws.amazon.com/vpc/latest/peering/vpc-peering-basics.html#vpc-peering-limitations
%% in the VPC Peering Guide.
%%
%% The owner of the accepter VPC must accept the peering request to activate
%% the peering
%% connection. The VPC peering connection request expires after 7 days, after
%% which it
%% cannot be accepted or rejected.
%%
%% If you create a VPC peering connection request between VPCs with
%% overlapping CIDR
%% blocks, the VPC peering connection has a status of `failed'.
-spec create_vpc_peering_connection(aws_client:aws_client(), create_vpc_peering_connection_request()) ->
    {ok, create_vpc_peering_connection_result(), tuple()} |
    {error, any()}.
create_vpc_peering_connection(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_vpc_peering_connection(Client, Input, []).

-spec create_vpc_peering_connection(aws_client:aws_client(), create_vpc_peering_connection_request(), proplists:proplist()) ->
    {ok, create_vpc_peering_connection_result(), tuple()} |
    {error, any()}.
create_vpc_peering_connection(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVpcPeeringConnection">>, Input, Options).

%% @doc Creates a VPN connection between an existing virtual private gateway
%% or transit
%% gateway and a customer gateway.
%%
%% The supported connection type is
%% `ipsec.1'.
%%
%% The response includes information that you need to give to your network
%% administrator
%% to configure your customer gateway.
%%
%% We strongly recommend that you use HTTPS when calling this operation
%% because the
%% response contains sensitive cryptographic information for configuring your
%% customer
%% gateway device.
%%
%% If you decide to shut down your VPN connection for any reason and later
%% create a new
%% VPN connection, you must reconfigure your customer gateway with the new
%% information
%% returned from this call.
%%
%% This is an idempotent operation. If you perform the operation more than
%% once, Amazon
%% EC2 doesn't return an error.
%%
%% For more information, see Amazon Web Services Site-to-Site VPN:
%% https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html in the Amazon
%% Web Services Site-to-Site VPN
%% User Guide.
-spec create_vpn_connection(aws_client:aws_client(), create_vpn_connection_request()) ->
    {ok, create_vpn_connection_result(), tuple()} |
    {error, any()}.
create_vpn_connection(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_vpn_connection(Client, Input, []).

-spec create_vpn_connection(aws_client:aws_client(), create_vpn_connection_request(), proplists:proplist()) ->
    {ok, create_vpn_connection_result(), tuple()} |
    {error, any()}.
create_vpn_connection(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVpnConnection">>, Input, Options).

%% @doc Creates a static route associated with a VPN connection between an
%% existing virtual
%% private gateway and a VPN customer gateway.
%%
%% The static route allows traffic to be routed
%% from the virtual private gateway to the VPN customer gateway.
%%
%% For more information, see Amazon Web Services Site-to-Site VPN:
%% https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html in the Amazon
%% Web Services Site-to-Site VPN
%% User Guide.
-spec create_vpn_connection_route(aws_client:aws_client(), create_vpn_connection_route_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
create_vpn_connection_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_vpn_connection_route(Client, Input, []).

-spec create_vpn_connection_route(aws_client:aws_client(), create_vpn_connection_route_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
create_vpn_connection_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVpnConnectionRoute">>, Input, Options).

%% @doc Creates a virtual private gateway.
%%
%% A virtual private gateway is the endpoint on the
%% VPC side of your VPN connection. You can create a virtual private gateway
%% before
%% creating the VPC itself.
%%
%% For more information, see Amazon Web Services Site-to-Site VPN:
%% https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html in the Amazon
%% Web Services Site-to-Site VPN
%% User Guide.
-spec create_vpn_gateway(aws_client:aws_client(), create_vpn_gateway_request()) ->
    {ok, create_vpn_gateway_result(), tuple()} |
    {error, any()}.
create_vpn_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    create_vpn_gateway(Client, Input, []).

-spec create_vpn_gateway(aws_client:aws_client(), create_vpn_gateway_request(), proplists:proplist()) ->
    {ok, create_vpn_gateway_result(), tuple()} |
    {error, any()}.
create_vpn_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"CreateVpnGateway">>, Input, Options).

%% @doc Deletes a carrier gateway.
%%
%% If you do not delete the route that contains the carrier gateway as the
%% Target, the route is a blackhole route. For information about how to
%% delete a route, see
%% DeleteRoute:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteRoute.html.
-spec delete_carrier_gateway(aws_client:aws_client(), delete_carrier_gateway_request()) ->
    {ok, delete_carrier_gateway_result(), tuple()} |
    {error, any()}.
delete_carrier_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_carrier_gateway(Client, Input, []).

-spec delete_carrier_gateway(aws_client:aws_client(), delete_carrier_gateway_request(), proplists:proplist()) ->
    {ok, delete_carrier_gateway_result(), tuple()} |
    {error, any()}.
delete_carrier_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteCarrierGateway">>, Input, Options).

%% @doc Deletes the specified Client VPN endpoint.
%%
%% You must disassociate all target networks before you
%% can delete a Client VPN endpoint.
-spec delete_client_vpn_endpoint(aws_client:aws_client(), delete_client_vpn_endpoint_request()) ->
    {ok, delete_client_vpn_endpoint_result(), tuple()} |
    {error, any()}.
delete_client_vpn_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_client_vpn_endpoint(Client, Input, []).

-spec delete_client_vpn_endpoint(aws_client:aws_client(), delete_client_vpn_endpoint_request(), proplists:proplist()) ->
    {ok, delete_client_vpn_endpoint_result(), tuple()} |
    {error, any()}.
delete_client_vpn_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteClientVpnEndpoint">>, Input, Options).

%% @doc Deletes a route from a Client VPN endpoint.
%%
%% You can only delete routes that you manually added using
%% the CreateClientVpnRoute action. You cannot delete routes that were
%% automatically added when associating a subnet. To remove routes that have
%% been automatically added,
%% disassociate the target subnet from the Client VPN endpoint.
-spec delete_client_vpn_route(aws_client:aws_client(), delete_client_vpn_route_request()) ->
    {ok, delete_client_vpn_route_result(), tuple()} |
    {error, any()}.
delete_client_vpn_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_client_vpn_route(Client, Input, []).

-spec delete_client_vpn_route(aws_client:aws_client(), delete_client_vpn_route_request(), proplists:proplist()) ->
    {ok, delete_client_vpn_route_result(), tuple()} |
    {error, any()}.
delete_client_vpn_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteClientVpnRoute">>, Input, Options).

%% @doc
%% Deletes a range of customer-owned IP addresses.
-spec delete_coip_cidr(aws_client:aws_client(), delete_coip_cidr_request()) ->
    {ok, delete_coip_cidr_result(), tuple()} |
    {error, any()}.
delete_coip_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_coip_cidr(Client, Input, []).

-spec delete_coip_cidr(aws_client:aws_client(), delete_coip_cidr_request(), proplists:proplist()) ->
    {ok, delete_coip_cidr_result(), tuple()} |
    {error, any()}.
delete_coip_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteCoipCidr">>, Input, Options).

%% @doc Deletes a pool of customer-owned IP (CoIP) addresses.
-spec delete_coip_pool(aws_client:aws_client(), delete_coip_pool_request()) ->
    {ok, delete_coip_pool_result(), tuple()} |
    {error, any()}.
delete_coip_pool(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_coip_pool(Client, Input, []).

-spec delete_coip_pool(aws_client:aws_client(), delete_coip_pool_request(), proplists:proplist()) ->
    {ok, delete_coip_pool_result(), tuple()} |
    {error, any()}.
delete_coip_pool(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteCoipPool">>, Input, Options).

%% @doc Deletes the specified customer gateway.
%%
%% You must delete the VPN connection before you
%% can delete the customer gateway.
-spec delete_customer_gateway(aws_client:aws_client(), delete_customer_gateway_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_customer_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_customer_gateway(Client, Input, []).

-spec delete_customer_gateway(aws_client:aws_client(), delete_customer_gateway_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_customer_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteCustomerGateway">>, Input, Options).

%% @doc Deletes the specified set of DHCP options.
%%
%% You must disassociate the set of DHCP options before you can delete it.
%% You can disassociate the set of DHCP options by associating either a new
%% set of options or the default set of options with the VPC.
-spec delete_dhcp_options(aws_client:aws_client(), delete_dhcp_options_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_dhcp_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_dhcp_options(Client, Input, []).

-spec delete_dhcp_options(aws_client:aws_client(), delete_dhcp_options_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_dhcp_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteDhcpOptions">>, Input, Options).

%% @doc Deletes an egress-only internet gateway.
-spec delete_egress_only_internet_gateway(aws_client:aws_client(), delete_egress_only_internet_gateway_request()) ->
    {ok, delete_egress_only_internet_gateway_result(), tuple()} |
    {error, any()}.
delete_egress_only_internet_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_egress_only_internet_gateway(Client, Input, []).

-spec delete_egress_only_internet_gateway(aws_client:aws_client(), delete_egress_only_internet_gateway_request(), proplists:proplist()) ->
    {ok, delete_egress_only_internet_gateway_result(), tuple()} |
    {error, any()}.
delete_egress_only_internet_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteEgressOnlyInternetGateway">>, Input, Options).

%% @doc Deletes the specified EC2 Fleet request.
%%
%% After you delete an EC2 Fleet request, it launches no new instances.
%%
%% You must also specify whether a deleted EC2 Fleet request should terminate
%% its instances. If
%% you choose to terminate the instances, the EC2 Fleet request enters the
%% `deleted_terminating' state. Otherwise, it enters the
%% `deleted_running' state, and the instances continue to run until they
%% are
%% interrupted or you terminate them manually.
%%
%% A deleted `instant' fleet with running instances is not supported.
%% When you
%% delete an `instant' fleet, Amazon EC2 automatically terminates all its
%% instances. For
%% fleets with more than 1000 instances, the deletion request might fail. If
%% your fleet has
%% more than 1000 instances, first terminate most of the instances manually,
%% leaving 1000 or
%% fewer. Then delete the fleet, and the remaining instances will be
%% terminated automatically.
%%
%% == Restrictions ==
%%
%% You can delete up to 25 fleets of type `instant' in a single
%% request.
%%
%% You can delete up to 100 fleets of type `maintain' or
%% `request' in a single request.
%%
%% You can delete up to 125 fleets in a single request, provided you do not
%% exceed
%% the quota for each fleet type, as specified above.
%%
%% If you exceed the specified number of fleets to delete, no fleets are
%% deleted.
%%
%% For more information, see Delete an EC2 Fleet request and the instances
%% in the fleet:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/delete-fleet.html in
%% the Amazon EC2 User Guide.
-spec delete_fleets(aws_client:aws_client(), delete_fleets_request()) ->
    {ok, delete_fleets_result(), tuple()} |
    {error, any()}.
delete_fleets(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_fleets(Client, Input, []).

-spec delete_fleets(aws_client:aws_client(), delete_fleets_request(), proplists:proplist()) ->
    {ok, delete_fleets_result(), tuple()} |
    {error, any()}.
delete_fleets(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteFleets">>, Input, Options).

%% @doc Deletes one or more flow logs.
-spec delete_flow_logs(aws_client:aws_client(), delete_flow_logs_request()) ->
    {ok, delete_flow_logs_result(), tuple()} |
    {error, any()}.
delete_flow_logs(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_flow_logs(Client, Input, []).

-spec delete_flow_logs(aws_client:aws_client(), delete_flow_logs_request(), proplists:proplist()) ->
    {ok, delete_flow_logs_result(), tuple()} |
    {error, any()}.
delete_flow_logs(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteFlowLogs">>, Input, Options).

%% @doc Deletes the specified Amazon FPGA Image (AFI).
-spec delete_fpga_image(aws_client:aws_client(), delete_fpga_image_request()) ->
    {ok, delete_fpga_image_result(), tuple()} |
    {error, any()}.
delete_fpga_image(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_fpga_image(Client, Input, []).

-spec delete_fpga_image(aws_client:aws_client(), delete_fpga_image_request(), proplists:proplist()) ->
    {ok, delete_fpga_image_result(), tuple()} |
    {error, any()}.
delete_fpga_image(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteFpgaImage">>, Input, Options).

%% @doc Deletes the specified EC2 Instance Connect Endpoint.
-spec delete_instance_connect_endpoint(aws_client:aws_client(), delete_instance_connect_endpoint_request()) ->
    {ok, delete_instance_connect_endpoint_result(), tuple()} |
    {error, any()}.
delete_instance_connect_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_instance_connect_endpoint(Client, Input, []).

-spec delete_instance_connect_endpoint(aws_client:aws_client(), delete_instance_connect_endpoint_request(), proplists:proplist()) ->
    {ok, delete_instance_connect_endpoint_result(), tuple()} |
    {error, any()}.
delete_instance_connect_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteInstanceConnectEndpoint">>, Input, Options).

%% @doc Deletes the specified event window.
%%
%% For more information, see Define event windows for scheduled
%% events:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html in
%% the Amazon EC2 User Guide.
-spec delete_instance_event_window(aws_client:aws_client(), delete_instance_event_window_request()) ->
    {ok, delete_instance_event_window_result(), tuple()} |
    {error, any()}.
delete_instance_event_window(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_instance_event_window(Client, Input, []).

-spec delete_instance_event_window(aws_client:aws_client(), delete_instance_event_window_request(), proplists:proplist()) ->
    {ok, delete_instance_event_window_result(), tuple()} |
    {error, any()}.
delete_instance_event_window(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteInstanceEventWindow">>, Input, Options).

%% @doc Deletes the specified internet gateway.
%%
%% You must detach the internet gateway from the
%% VPC before you can delete it.
-spec delete_internet_gateway(aws_client:aws_client(), delete_internet_gateway_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_internet_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_internet_gateway(Client, Input, []).

-spec delete_internet_gateway(aws_client:aws_client(), delete_internet_gateway_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_internet_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteInternetGateway">>, Input, Options).

%% @doc Delete an IPAM.
%%
%% Deleting an IPAM removes all monitored data associated with the IPAM
%% including the historical data for CIDRs.
%%
%% For more information, see Delete an IPAM:
%% https://docs.aws.amazon.com/vpc/latest/ipam/delete-ipam.html in the Amazon
%% VPC IPAM User Guide.
-spec delete_ipam(aws_client:aws_client(), delete_ipam_request()) ->
    {ok, delete_ipam_result(), tuple()} |
    {error, any()}.
delete_ipam(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_ipam(Client, Input, []).

-spec delete_ipam(aws_client:aws_client(), delete_ipam_request(), proplists:proplist()) ->
    {ok, delete_ipam_result(), tuple()} |
    {error, any()}.
delete_ipam(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteIpam">>, Input, Options).

%% @doc Delete a verification token.
%%
%% A verification token is an Amazon Web Services-generated random value that
%% you can use to prove ownership of an external resource. For example, you
%% can use a verification token to validate that you control a public IP
%% address range when you bring an IP address range to Amazon Web Services
%% (BYOIP).
-spec delete_ipam_external_resource_verification_token(aws_client:aws_client(), delete_ipam_external_resource_verification_token_request()) ->
    {ok, delete_ipam_external_resource_verification_token_result(), tuple()} |
    {error, any()}.
delete_ipam_external_resource_verification_token(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_ipam_external_resource_verification_token(Client, Input, []).

-spec delete_ipam_external_resource_verification_token(aws_client:aws_client(), delete_ipam_external_resource_verification_token_request(), proplists:proplist()) ->
    {ok, delete_ipam_external_resource_verification_token_result(), tuple()} |
    {error, any()}.
delete_ipam_external_resource_verification_token(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteIpamExternalResourceVerificationToken">>, Input, Options).

%% @doc Delete an IPAM pool.
%%
%% You cannot delete an IPAM pool if there are allocations in it or CIDRs
%% provisioned to it. To release
%% allocations, see ReleaseIpamPoolAllocation:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseIpamPoolAllocation.html.
%% To deprovision pool
%% CIDRs, see DeprovisionIpamPoolCidr:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeprovisionIpamPoolCidr.html.
%%
%% For more information, see Delete a pool:
%% https://docs.aws.amazon.com/vpc/latest/ipam/delete-pool-ipam.html in the
%% Amazon VPC IPAM User Guide.
-spec delete_ipam_pool(aws_client:aws_client(), delete_ipam_pool_request()) ->
    {ok, delete_ipam_pool_result(), tuple()} |
    {error, any()}.
delete_ipam_pool(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_ipam_pool(Client, Input, []).

-spec delete_ipam_pool(aws_client:aws_client(), delete_ipam_pool_request(), proplists:proplist()) ->
    {ok, delete_ipam_pool_result(), tuple()} |
    {error, any()}.
delete_ipam_pool(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteIpamPool">>, Input, Options).

%% @doc Deletes an IPAM resource discovery.
%%
%% A resource discovery is an IPAM component that enables IPAM to manage and
%% monitor resources that belong to the owning account.
-spec delete_ipam_resource_discovery(aws_client:aws_client(), delete_ipam_resource_discovery_request()) ->
    {ok, delete_ipam_resource_discovery_result(), tuple()} |
    {error, any()}.
delete_ipam_resource_discovery(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_ipam_resource_discovery(Client, Input, []).

-spec delete_ipam_resource_discovery(aws_client:aws_client(), delete_ipam_resource_discovery_request(), proplists:proplist()) ->
    {ok, delete_ipam_resource_discovery_result(), tuple()} |
    {error, any()}.
delete_ipam_resource_discovery(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteIpamResourceDiscovery">>, Input, Options).

%% @doc Delete the scope for an IPAM.
%%
%% You cannot delete the default scopes.
%%
%% For more information, see Delete a scope:
%% https://docs.aws.amazon.com/vpc/latest/ipam/delete-scope-ipam.html in the
%% Amazon VPC IPAM User Guide.
-spec delete_ipam_scope(aws_client:aws_client(), delete_ipam_scope_request()) ->
    {ok, delete_ipam_scope_result(), tuple()} |
    {error, any()}.
delete_ipam_scope(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_ipam_scope(Client, Input, []).

-spec delete_ipam_scope(aws_client:aws_client(), delete_ipam_scope_request(), proplists:proplist()) ->
    {ok, delete_ipam_scope_result(), tuple()} |
    {error, any()}.
delete_ipam_scope(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteIpamScope">>, Input, Options).

%% @doc Deletes the specified key pair, by removing the public key from
%% Amazon EC2.
-spec delete_key_pair(aws_client:aws_client(), delete_key_pair_request()) ->
    {ok, delete_key_pair_result(), tuple()} |
    {error, any()}.
delete_key_pair(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_key_pair(Client, Input, []).

-spec delete_key_pair(aws_client:aws_client(), delete_key_pair_request(), proplists:proplist()) ->
    {ok, delete_key_pair_result(), tuple()} |
    {error, any()}.
delete_key_pair(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteKeyPair">>, Input, Options).

%% @doc Deletes a launch template.
%%
%% Deleting a launch template deletes all of its
%% versions.
-spec delete_launch_template(aws_client:aws_client(), delete_launch_template_request()) ->
    {ok, delete_launch_template_result(), tuple()} |
    {error, any()}.
delete_launch_template(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_launch_template(Client, Input, []).

-spec delete_launch_template(aws_client:aws_client(), delete_launch_template_request(), proplists:proplist()) ->
    {ok, delete_launch_template_result(), tuple()} |
    {error, any()}.
delete_launch_template(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteLaunchTemplate">>, Input, Options).

%% @doc Deletes one or more versions of a launch template.
%%
%% You can't delete the default version of a launch template; you must
%% first assign a
%% different version as the default. If the default version is the only
%% version for the
%% launch template, you must delete the entire launch template using
%% `DeleteLaunchTemplate'.
%%
%% You can delete up to 200 launch template versions in a single request. To
%% delete more
%% than 200 versions in a single request, use `DeleteLaunchTemplate',
%% which
%% deletes the launch template and all of its versions.
%%
%% For more information, see Delete a launch template version:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/delete-launch-template.html#delete-launch-template-version
%% in the
%% Amazon EC2 User Guide.
-spec delete_launch_template_versions(aws_client:aws_client(), delete_launch_template_versions_request()) ->
    {ok, delete_launch_template_versions_result(), tuple()} |
    {error, any()}.
delete_launch_template_versions(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_launch_template_versions(Client, Input, []).

-spec delete_launch_template_versions(aws_client:aws_client(), delete_launch_template_versions_request(), proplists:proplist()) ->
    {ok, delete_launch_template_versions_result(), tuple()} |
    {error, any()}.
delete_launch_template_versions(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteLaunchTemplateVersions">>, Input, Options).

%% @doc Deletes the specified route from the specified local gateway route
%% table.
-spec delete_local_gateway_route(aws_client:aws_client(), delete_local_gateway_route_request()) ->
    {ok, delete_local_gateway_route_result(), tuple()} |
    {error, any()}.
delete_local_gateway_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_local_gateway_route(Client, Input, []).

-spec delete_local_gateway_route(aws_client:aws_client(), delete_local_gateway_route_request(), proplists:proplist()) ->
    {ok, delete_local_gateway_route_result(), tuple()} |
    {error, any()}.
delete_local_gateway_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteLocalGatewayRoute">>, Input, Options).

%% @doc
%% Deletes a local gateway route table.
-spec delete_local_gateway_route_table(aws_client:aws_client(), delete_local_gateway_route_table_request()) ->
    {ok, delete_local_gateway_route_table_result(), tuple()} |
    {error, any()}.
delete_local_gateway_route_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_local_gateway_route_table(Client, Input, []).

-spec delete_local_gateway_route_table(aws_client:aws_client(), delete_local_gateway_route_table_request(), proplists:proplist()) ->
    {ok, delete_local_gateway_route_table_result(), tuple()} |
    {error, any()}.
delete_local_gateway_route_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteLocalGatewayRouteTable">>, Input, Options).

%% @doc
%% Deletes a local gateway route table virtual interface group association.
-spec delete_local_gateway_route_table_virtual_interface_group_association(aws_client:aws_client(), delete_local_gateway_route_table_virtual_interface_group_association_request()) ->
    {ok, delete_local_gateway_route_table_virtual_interface_group_association_result(), tuple()} |
    {error, any()}.
delete_local_gateway_route_table_virtual_interface_group_association(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_local_gateway_route_table_virtual_interface_group_association(Client, Input, []).

-spec delete_local_gateway_route_table_virtual_interface_group_association(aws_client:aws_client(), delete_local_gateway_route_table_virtual_interface_group_association_request(), proplists:proplist()) ->
    {ok, delete_local_gateway_route_table_virtual_interface_group_association_result(), tuple()} |
    {error, any()}.
delete_local_gateway_route_table_virtual_interface_group_association(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation">>, Input, Options).

%% @doc Deletes the specified association between a VPC and local gateway
%% route table.
-spec delete_local_gateway_route_table_vpc_association(aws_client:aws_client(), delete_local_gateway_route_table_vpc_association_request()) ->
    {ok, delete_local_gateway_route_table_vpc_association_result(), tuple()} |
    {error, any()}.
delete_local_gateway_route_table_vpc_association(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_local_gateway_route_table_vpc_association(Client, Input, []).

-spec delete_local_gateway_route_table_vpc_association(aws_client:aws_client(), delete_local_gateway_route_table_vpc_association_request(), proplists:proplist()) ->
    {ok, delete_local_gateway_route_table_vpc_association_result(), tuple()} |
    {error, any()}.
delete_local_gateway_route_table_vpc_association(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteLocalGatewayRouteTableVpcAssociation">>, Input, Options).

%% @doc Deletes the specified local gateway virtual interface.
-spec delete_local_gateway_virtual_interface(aws_client:aws_client(), delete_local_gateway_virtual_interface_request()) ->
    {ok, delete_local_gateway_virtual_interface_result(), tuple()} |
    {error, any()}.
delete_local_gateway_virtual_interface(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_local_gateway_virtual_interface(Client, Input, []).

-spec delete_local_gateway_virtual_interface(aws_client:aws_client(), delete_local_gateway_virtual_interface_request(), proplists:proplist()) ->
    {ok, delete_local_gateway_virtual_interface_result(), tuple()} |
    {error, any()}.
delete_local_gateway_virtual_interface(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteLocalGatewayVirtualInterface">>, Input, Options).

%% @doc Delete the specified local gateway interface group.
-spec delete_local_gateway_virtual_interface_group(aws_client:aws_client(), delete_local_gateway_virtual_interface_group_request()) ->
    {ok, delete_local_gateway_virtual_interface_group_result(), tuple()} |
    {error, any()}.
delete_local_gateway_virtual_interface_group(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_local_gateway_virtual_interface_group(Client, Input, []).

-spec delete_local_gateway_virtual_interface_group(aws_client:aws_client(), delete_local_gateway_virtual_interface_group_request(), proplists:proplist()) ->
    {ok, delete_local_gateway_virtual_interface_group_result(), tuple()} |
    {error, any()}.
delete_local_gateway_virtual_interface_group(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteLocalGatewayVirtualInterfaceGroup">>, Input, Options).

%% @doc Deletes the specified managed prefix list.
%%
%% You must first remove all references to the prefix list in your resources.
-spec delete_managed_prefix_list(aws_client:aws_client(), delete_managed_prefix_list_request()) ->
    {ok, delete_managed_prefix_list_result(), tuple()} |
    {error, any()}.
delete_managed_prefix_list(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_managed_prefix_list(Client, Input, []).

-spec delete_managed_prefix_list(aws_client:aws_client(), delete_managed_prefix_list_request(), proplists:proplist()) ->
    {ok, delete_managed_prefix_list_result(), tuple()} |
    {error, any()}.
delete_managed_prefix_list(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteManagedPrefixList">>, Input, Options).

%% @doc Deletes the specified NAT gateway.
%%
%% Deleting a public NAT gateway disassociates its Elastic IP address,
%% but does not release the address from your account. Deleting a NAT gateway
%% does not delete any NAT gateway
%% routes in your route tables.
-spec delete_nat_gateway(aws_client:aws_client(), delete_nat_gateway_request()) ->
    {ok, delete_nat_gateway_result(), tuple()} |
    {error, any()}.
delete_nat_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_nat_gateway(Client, Input, []).

-spec delete_nat_gateway(aws_client:aws_client(), delete_nat_gateway_request(), proplists:proplist()) ->
    {ok, delete_nat_gateway_result(), tuple()} |
    {error, any()}.
delete_nat_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteNatGateway">>, Input, Options).

%% @doc Deletes the specified network ACL.
%%
%% You can't delete the ACL if it's associated with any subnets. You
%% can't delete the default network ACL.
-spec delete_network_acl(aws_client:aws_client(), delete_network_acl_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_network_acl(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_network_acl(Client, Input, []).

-spec delete_network_acl(aws_client:aws_client(), delete_network_acl_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_network_acl(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteNetworkAcl">>, Input, Options).

%% @doc Deletes the specified ingress or egress entry (rule) from the
%% specified network ACL.
-spec delete_network_acl_entry(aws_client:aws_client(), delete_network_acl_entry_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_network_acl_entry(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_network_acl_entry(Client, Input, []).

-spec delete_network_acl_entry(aws_client:aws_client(), delete_network_acl_entry_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_network_acl_entry(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteNetworkAclEntry">>, Input, Options).

%% @doc Deletes the specified Network Access Scope.
-spec delete_network_insights_access_scope(aws_client:aws_client(), delete_network_insights_access_scope_request()) ->
    {ok, delete_network_insights_access_scope_result(), tuple()} |
    {error, any()}.
delete_network_insights_access_scope(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_network_insights_access_scope(Client, Input, []).

-spec delete_network_insights_access_scope(aws_client:aws_client(), delete_network_insights_access_scope_request(), proplists:proplist()) ->
    {ok, delete_network_insights_access_scope_result(), tuple()} |
    {error, any()}.
delete_network_insights_access_scope(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteNetworkInsightsAccessScope">>, Input, Options).

%% @doc Deletes the specified Network Access Scope analysis.
-spec delete_network_insights_access_scope_analysis(aws_client:aws_client(), delete_network_insights_access_scope_analysis_request()) ->
    {ok, delete_network_insights_access_scope_analysis_result(), tuple()} |
    {error, any()}.
delete_network_insights_access_scope_analysis(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_network_insights_access_scope_analysis(Client, Input, []).

-spec delete_network_insights_access_scope_analysis(aws_client:aws_client(), delete_network_insights_access_scope_analysis_request(), proplists:proplist()) ->
    {ok, delete_network_insights_access_scope_analysis_result(), tuple()} |
    {error, any()}.
delete_network_insights_access_scope_analysis(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteNetworkInsightsAccessScopeAnalysis">>, Input, Options).

%% @doc Deletes the specified network insights analysis.
-spec delete_network_insights_analysis(aws_client:aws_client(), delete_network_insights_analysis_request()) ->
    {ok, delete_network_insights_analysis_result(), tuple()} |
    {error, any()}.
delete_network_insights_analysis(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_network_insights_analysis(Client, Input, []).

-spec delete_network_insights_analysis(aws_client:aws_client(), delete_network_insights_analysis_request(), proplists:proplist()) ->
    {ok, delete_network_insights_analysis_result(), tuple()} |
    {error, any()}.
delete_network_insights_analysis(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteNetworkInsightsAnalysis">>, Input, Options).

%% @doc Deletes the specified path.
-spec delete_network_insights_path(aws_client:aws_client(), delete_network_insights_path_request()) ->
    {ok, delete_network_insights_path_result(), tuple()} |
    {error, any()}.
delete_network_insights_path(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_network_insights_path(Client, Input, []).

-spec delete_network_insights_path(aws_client:aws_client(), delete_network_insights_path_request(), proplists:proplist()) ->
    {ok, delete_network_insights_path_result(), tuple()} |
    {error, any()}.
delete_network_insights_path(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteNetworkInsightsPath">>, Input, Options).

%% @doc Deletes the specified network interface.
%%
%% You must detach the network interface before
%% you can delete it.
-spec delete_network_interface(aws_client:aws_client(), delete_network_interface_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_network_interface(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_network_interface(Client, Input, []).

-spec delete_network_interface(aws_client:aws_client(), delete_network_interface_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_network_interface(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteNetworkInterface">>, Input, Options).

%% @doc Deletes a permission for a network interface.
%%
%% By default, you cannot delete the
%% permission if the account for which you're removing the permission has
%% attached the
%% network interface to an instance. However, you can force delete the
%% permission,
%% regardless of any attachment.
-spec delete_network_interface_permission(aws_client:aws_client(), delete_network_interface_permission_request()) ->
    {ok, delete_network_interface_permission_result(), tuple()} |
    {error, any()}.
delete_network_interface_permission(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_network_interface_permission(Client, Input, []).

-spec delete_network_interface_permission(aws_client:aws_client(), delete_network_interface_permission_request(), proplists:proplist()) ->
    {ok, delete_network_interface_permission_result(), tuple()} |
    {error, any()}.
delete_network_interface_permission(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteNetworkInterfacePermission">>, Input, Options).

%% @doc Deletes the specified placement group.
%%
%% You must terminate all instances in the
%% placement group before you can delete the placement group. For more
%% information, see
%% Placement groups:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html
%% in the Amazon EC2 User Guide.
-spec delete_placement_group(aws_client:aws_client(), delete_placement_group_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_placement_group(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_placement_group(Client, Input, []).

-spec delete_placement_group(aws_client:aws_client(), delete_placement_group_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_placement_group(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeletePlacementGroup">>, Input, Options).

%% @doc Delete a public IPv4 pool.
%%
%% A public IPv4 pool is an EC2 IP address pool required for the public IPv4
%% CIDRs that you own and bring to Amazon Web Services to manage with IPAM.
%% IPv6 addresses you bring to Amazon Web Services, however, use IPAM pools
%% only.
-spec delete_public_ipv4_pool(aws_client:aws_client(), delete_public_ipv4_pool_request()) ->
    {ok, delete_public_ipv4_pool_result(), tuple()} |
    {error, any()}.
delete_public_ipv4_pool(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_public_ipv4_pool(Client, Input, []).

-spec delete_public_ipv4_pool(aws_client:aws_client(), delete_public_ipv4_pool_request(), proplists:proplist()) ->
    {ok, delete_public_ipv4_pool_result(), tuple()} |
    {error, any()}.
delete_public_ipv4_pool(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeletePublicIpv4Pool">>, Input, Options).

%% @doc Deletes the queued purchases for the specified Reserved Instances.
-spec delete_queued_reserved_instances(aws_client:aws_client(), delete_queued_reserved_instances_request()) ->
    {ok, delete_queued_reserved_instances_result(), tuple()} |
    {error, any()}.
delete_queued_reserved_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_queued_reserved_instances(Client, Input, []).

-spec delete_queued_reserved_instances(aws_client:aws_client(), delete_queued_reserved_instances_request(), proplists:proplist()) ->
    {ok, delete_queued_reserved_instances_result(), tuple()} |
    {error, any()}.
delete_queued_reserved_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteQueuedReservedInstances">>, Input, Options).

%% @doc Deletes the specified route from the specified route table.
-spec delete_route(aws_client:aws_client(), delete_route_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_route(Client, Input, []).

-spec delete_route(aws_client:aws_client(), delete_route_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteRoute">>, Input, Options).

%% @doc Deletes the specified route server.
%%
%% Amazon VPC Route Server simplifies routing for traffic between workloads
%% that are deployed within a VPC and its internet gateways. With this
%% feature,
%% VPC Route Server dynamically updates VPC and internet gateway route tables
%% with your preferred IPv4 or IPv6 routes to achieve routing fault tolerance
%% for those workloads. This enables you to automatically reroute traffic
%% within a VPC, which increases the manageability of VPC routing and
%% interoperability with third-party workloads.
%%
%% Route server supports the follow route table types:
%%
%% VPC route tables not associated with subnets
%%
%% Subnet route tables
%%
%% Internet gateway route tables
%%
%% Route server does not support route tables associated with virtual private
%% gateways. To propagate routes into a transit gateway route table, use
%% Transit Gateway Connect:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-connect.html.
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec delete_route_server(aws_client:aws_client(), delete_route_server_request()) ->
    {ok, delete_route_server_result(), tuple()} |
    {error, any()}.
delete_route_server(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_route_server(Client, Input, []).

-spec delete_route_server(aws_client:aws_client(), delete_route_server_request(), proplists:proplist()) ->
    {ok, delete_route_server_result(), tuple()} |
    {error, any()}.
delete_route_server(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteRouteServer">>, Input, Options).

%% @doc Deletes the specified route server endpoint.
%%
%% A route server endpoint is an Amazon Web Services-managed component inside
%% a subnet that facilitates BGP (Border Gateway Protocol):
%% https://en.wikipedia.org/wiki/Border_Gateway_Protocol connections between
%% your route server and your BGP peers.
-spec delete_route_server_endpoint(aws_client:aws_client(), delete_route_server_endpoint_request()) ->
    {ok, delete_route_server_endpoint_result(), tuple()} |
    {error, any()}.
delete_route_server_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_route_server_endpoint(Client, Input, []).

-spec delete_route_server_endpoint(aws_client:aws_client(), delete_route_server_endpoint_request(), proplists:proplist()) ->
    {ok, delete_route_server_endpoint_result(), tuple()} |
    {error, any()}.
delete_route_server_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteRouteServerEndpoint">>, Input, Options).

%% @doc Deletes the specified BGP peer from a route server.
%%
%% A route server peer is a session between a route server endpoint and the
%% device deployed in Amazon Web Services (such as a firewall appliance or
%% other network security function running on an EC2 instance). The device
%% must meet these requirements:
%%
%% Have an elastic network interface in the VPC
%%
%% Support BGP (Border Gateway Protocol)
%%
%% Can initiate BGP sessions
-spec delete_route_server_peer(aws_client:aws_client(), delete_route_server_peer_request()) ->
    {ok, delete_route_server_peer_result(), tuple()} |
    {error, any()}.
delete_route_server_peer(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_route_server_peer(Client, Input, []).

-spec delete_route_server_peer(aws_client:aws_client(), delete_route_server_peer_request(), proplists:proplist()) ->
    {ok, delete_route_server_peer_result(), tuple()} |
    {error, any()}.
delete_route_server_peer(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteRouteServerPeer">>, Input, Options).

%% @doc Deletes the specified route table.
%%
%% You must disassociate the route table from any subnets before you can
%% delete it. You can't delete the main route table.
-spec delete_route_table(aws_client:aws_client(), delete_route_table_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_route_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_route_table(Client, Input, []).

-spec delete_route_table(aws_client:aws_client(), delete_route_table_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_route_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteRouteTable">>, Input, Options).

%% @doc Deletes a security group.
%%
%% If you attempt to delete a security group that is associated with an
%% instance or network interface, is
%% referenced by another security group in the same VPC, or has a VPC
%% association, the operation fails with
%% `DependencyViolation'.
-spec delete_security_group(aws_client:aws_client(), delete_security_group_request()) ->
    {ok, delete_security_group_result(), tuple()} |
    {error, any()}.
delete_security_group(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_security_group(Client, Input, []).

-spec delete_security_group(aws_client:aws_client(), delete_security_group_request(), proplists:proplist()) ->
    {ok, delete_security_group_result(), tuple()} |
    {error, any()}.
delete_security_group(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteSecurityGroup">>, Input, Options).

%% @doc Deletes the specified snapshot.
%%
%% When you make periodic snapshots of a volume, the snapshots are
%% incremental, and only the
%% blocks on the device that have changed since your last snapshot are saved
%% in the new snapshot.
%% When you delete a snapshot, only the data not needed for any other
%% snapshot is removed. So
%% regardless of which prior snapshots have been deleted, all active
%% snapshots will have access
%% to all the information needed to restore the volume.
%%
%% You cannot delete a snapshot of the root device of an EBS volume used by a
%% registered AMI.
%% You must first deregister the AMI before you can delete the snapshot.
%%
%% For more information, see Delete an Amazon EBS snapshot:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-deleting-snapshot.html
%% in the
%% Amazon EBS User Guide.
-spec delete_snapshot(aws_client:aws_client(), delete_snapshot_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_snapshot(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_snapshot(Client, Input, []).

-spec delete_snapshot(aws_client:aws_client(), delete_snapshot_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_snapshot(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteSnapshot">>, Input, Options).

%% @doc Deletes the data feed for Spot Instances.
-spec delete_spot_datafeed_subscription(aws_client:aws_client(), delete_spot_datafeed_subscription_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_spot_datafeed_subscription(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_spot_datafeed_subscription(Client, Input, []).

-spec delete_spot_datafeed_subscription(aws_client:aws_client(), delete_spot_datafeed_subscription_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_spot_datafeed_subscription(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteSpotDatafeedSubscription">>, Input, Options).

%% @doc Deletes the specified subnet.
%%
%% You must terminate all running instances in the subnet before you can
%% delete the subnet.
-spec delete_subnet(aws_client:aws_client(), delete_subnet_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_subnet(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_subnet(Client, Input, []).

-spec delete_subnet(aws_client:aws_client(), delete_subnet_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_subnet(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteSubnet">>, Input, Options).

%% @doc Deletes a subnet CIDR reservation.
-spec delete_subnet_cidr_reservation(aws_client:aws_client(), delete_subnet_cidr_reservation_request()) ->
    {ok, delete_subnet_cidr_reservation_result(), tuple()} |
    {error, any()}.
delete_subnet_cidr_reservation(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_subnet_cidr_reservation(Client, Input, []).

-spec delete_subnet_cidr_reservation(aws_client:aws_client(), delete_subnet_cidr_reservation_request(), proplists:proplist()) ->
    {ok, delete_subnet_cidr_reservation_result(), tuple()} |
    {error, any()}.
delete_subnet_cidr_reservation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteSubnetCidrReservation">>, Input, Options).

%% @doc Deletes the specified set of tags from the specified set of
%% resources.
%%
%% To list the current tags, use `DescribeTags'. For more information
%% about
%% tags, see Tag
%% your Amazon EC2 resources:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html in the
%% Amazon Elastic Compute Cloud User
%% Guide.
-spec delete_tags(aws_client:aws_client(), delete_tags_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_tags(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_tags(Client, Input, []).

-spec delete_tags(aws_client:aws_client(), delete_tags_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_tags(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTags">>, Input, Options).

%% @doc Deletes the specified Traffic Mirror filter.
%%
%% You cannot delete a Traffic Mirror filter that is in use by a Traffic
%% Mirror session.
-spec delete_traffic_mirror_filter(aws_client:aws_client(), delete_traffic_mirror_filter_request()) ->
    {ok, delete_traffic_mirror_filter_result(), tuple()} |
    {error, any()}.
delete_traffic_mirror_filter(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_traffic_mirror_filter(Client, Input, []).

-spec delete_traffic_mirror_filter(aws_client:aws_client(), delete_traffic_mirror_filter_request(), proplists:proplist()) ->
    {ok, delete_traffic_mirror_filter_result(), tuple()} |
    {error, any()}.
delete_traffic_mirror_filter(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTrafficMirrorFilter">>, Input, Options).

%% @doc Deletes the specified Traffic Mirror rule.
-spec delete_traffic_mirror_filter_rule(aws_client:aws_client(), delete_traffic_mirror_filter_rule_request()) ->
    {ok, delete_traffic_mirror_filter_rule_result(), tuple()} |
    {error, any()}.
delete_traffic_mirror_filter_rule(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_traffic_mirror_filter_rule(Client, Input, []).

-spec delete_traffic_mirror_filter_rule(aws_client:aws_client(), delete_traffic_mirror_filter_rule_request(), proplists:proplist()) ->
    {ok, delete_traffic_mirror_filter_rule_result(), tuple()} |
    {error, any()}.
delete_traffic_mirror_filter_rule(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTrafficMirrorFilterRule">>, Input, Options).

%% @doc Deletes the specified Traffic Mirror session.
-spec delete_traffic_mirror_session(aws_client:aws_client(), delete_traffic_mirror_session_request()) ->
    {ok, delete_traffic_mirror_session_result(), tuple()} |
    {error, any()}.
delete_traffic_mirror_session(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_traffic_mirror_session(Client, Input, []).

-spec delete_traffic_mirror_session(aws_client:aws_client(), delete_traffic_mirror_session_request(), proplists:proplist()) ->
    {ok, delete_traffic_mirror_session_result(), tuple()} |
    {error, any()}.
delete_traffic_mirror_session(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTrafficMirrorSession">>, Input, Options).

%% @doc Deletes the specified Traffic Mirror target.
%%
%% You cannot delete a Traffic Mirror target that is in use by a Traffic
%% Mirror session.
-spec delete_traffic_mirror_target(aws_client:aws_client(), delete_traffic_mirror_target_request()) ->
    {ok, delete_traffic_mirror_target_result(), tuple()} |
    {error, any()}.
delete_traffic_mirror_target(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_traffic_mirror_target(Client, Input, []).

-spec delete_traffic_mirror_target(aws_client:aws_client(), delete_traffic_mirror_target_request(), proplists:proplist()) ->
    {ok, delete_traffic_mirror_target_result(), tuple()} |
    {error, any()}.
delete_traffic_mirror_target(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTrafficMirrorTarget">>, Input, Options).

%% @doc Deletes the specified transit gateway.
-spec delete_transit_gateway(aws_client:aws_client(), delete_transit_gateway_request()) ->
    {ok, delete_transit_gateway_result(), tuple()} |
    {error, any()}.
delete_transit_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_transit_gateway(Client, Input, []).

-spec delete_transit_gateway(aws_client:aws_client(), delete_transit_gateway_request(), proplists:proplist()) ->
    {ok, delete_transit_gateway_result(), tuple()} |
    {error, any()}.
delete_transit_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTransitGateway">>, Input, Options).

%% @doc Deletes the specified Connect attachment.
%%
%% You must first delete any Connect peers for
%% the attachment.
-spec delete_transit_gateway_connect(aws_client:aws_client(), delete_transit_gateway_connect_request()) ->
    {ok, delete_transit_gateway_connect_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_connect(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_transit_gateway_connect(Client, Input, []).

-spec delete_transit_gateway_connect(aws_client:aws_client(), delete_transit_gateway_connect_request(), proplists:proplist()) ->
    {ok, delete_transit_gateway_connect_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_connect(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTransitGatewayConnect">>, Input, Options).

%% @doc Deletes the specified Connect peer.
-spec delete_transit_gateway_connect_peer(aws_client:aws_client(), delete_transit_gateway_connect_peer_request()) ->
    {ok, delete_transit_gateway_connect_peer_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_connect_peer(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_transit_gateway_connect_peer(Client, Input, []).

-spec delete_transit_gateway_connect_peer(aws_client:aws_client(), delete_transit_gateway_connect_peer_request(), proplists:proplist()) ->
    {ok, delete_transit_gateway_connect_peer_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_connect_peer(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTransitGatewayConnectPeer">>, Input, Options).

%% @doc Deletes the specified transit gateway multicast domain.
-spec delete_transit_gateway_multicast_domain(aws_client:aws_client(), delete_transit_gateway_multicast_domain_request()) ->
    {ok, delete_transit_gateway_multicast_domain_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_multicast_domain(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_transit_gateway_multicast_domain(Client, Input, []).

-spec delete_transit_gateway_multicast_domain(aws_client:aws_client(), delete_transit_gateway_multicast_domain_request(), proplists:proplist()) ->
    {ok, delete_transit_gateway_multicast_domain_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_multicast_domain(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTransitGatewayMulticastDomain">>, Input, Options).

%% @doc Deletes a transit gateway peering attachment.
-spec delete_transit_gateway_peering_attachment(aws_client:aws_client(), delete_transit_gateway_peering_attachment_request()) ->
    {ok, delete_transit_gateway_peering_attachment_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_peering_attachment(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_transit_gateway_peering_attachment(Client, Input, []).

-spec delete_transit_gateway_peering_attachment(aws_client:aws_client(), delete_transit_gateway_peering_attachment_request(), proplists:proplist()) ->
    {ok, delete_transit_gateway_peering_attachment_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_peering_attachment(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTransitGatewayPeeringAttachment">>, Input, Options).

%% @doc Deletes the specified transit gateway policy table.
-spec delete_transit_gateway_policy_table(aws_client:aws_client(), delete_transit_gateway_policy_table_request()) ->
    {ok, delete_transit_gateway_policy_table_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_policy_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_transit_gateway_policy_table(Client, Input, []).

-spec delete_transit_gateway_policy_table(aws_client:aws_client(), delete_transit_gateway_policy_table_request(), proplists:proplist()) ->
    {ok, delete_transit_gateway_policy_table_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_policy_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTransitGatewayPolicyTable">>, Input, Options).

%% @doc Deletes a reference (route) to a prefix list in a specified transit
%% gateway route table.
-spec delete_transit_gateway_prefix_list_reference(aws_client:aws_client(), delete_transit_gateway_prefix_list_reference_request()) ->
    {ok, delete_transit_gateway_prefix_list_reference_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_prefix_list_reference(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_transit_gateway_prefix_list_reference(Client, Input, []).

-spec delete_transit_gateway_prefix_list_reference(aws_client:aws_client(), delete_transit_gateway_prefix_list_reference_request(), proplists:proplist()) ->
    {ok, delete_transit_gateway_prefix_list_reference_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_prefix_list_reference(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTransitGatewayPrefixListReference">>, Input, Options).

%% @doc Deletes the specified route from the specified transit gateway route
%% table.
-spec delete_transit_gateway_route(aws_client:aws_client(), delete_transit_gateway_route_request()) ->
    {ok, delete_transit_gateway_route_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_transit_gateway_route(Client, Input, []).

-spec delete_transit_gateway_route(aws_client:aws_client(), delete_transit_gateway_route_request(), proplists:proplist()) ->
    {ok, delete_transit_gateway_route_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTransitGatewayRoute">>, Input, Options).

%% @doc Deletes the specified transit gateway route table.
%%
%% If there are any route tables associated with
%% the transit gateway route table, you must first run
%% `DisassociateRouteTable' before you can delete the transit gateway
%% route table. This removes any route tables associated with the transit
%% gateway route table.
-spec delete_transit_gateway_route_table(aws_client:aws_client(), delete_transit_gateway_route_table_request()) ->
    {ok, delete_transit_gateway_route_table_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_route_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_transit_gateway_route_table(Client, Input, []).

-spec delete_transit_gateway_route_table(aws_client:aws_client(), delete_transit_gateway_route_table_request(), proplists:proplist()) ->
    {ok, delete_transit_gateway_route_table_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_route_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTransitGatewayRouteTable">>, Input, Options).

%% @doc Advertises to the transit gateway that a transit gateway route table
%% is deleted.
-spec delete_transit_gateway_route_table_announcement(aws_client:aws_client(), delete_transit_gateway_route_table_announcement_request()) ->
    {ok, delete_transit_gateway_route_table_announcement_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_route_table_announcement(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_transit_gateway_route_table_announcement(Client, Input, []).

-spec delete_transit_gateway_route_table_announcement(aws_client:aws_client(), delete_transit_gateway_route_table_announcement_request(), proplists:proplist()) ->
    {ok, delete_transit_gateway_route_table_announcement_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_route_table_announcement(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTransitGatewayRouteTableAnnouncement">>, Input, Options).

%% @doc Deletes the specified VPC attachment.
-spec delete_transit_gateway_vpc_attachment(aws_client:aws_client(), delete_transit_gateway_vpc_attachment_request()) ->
    {ok, delete_transit_gateway_vpc_attachment_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_vpc_attachment(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_transit_gateway_vpc_attachment(Client, Input, []).

-spec delete_transit_gateway_vpc_attachment(aws_client:aws_client(), delete_transit_gateway_vpc_attachment_request(), proplists:proplist()) ->
    {ok, delete_transit_gateway_vpc_attachment_result(), tuple()} |
    {error, any()}.
delete_transit_gateway_vpc_attachment(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteTransitGatewayVpcAttachment">>, Input, Options).

%% @doc Delete an Amazon Web Services Verified Access endpoint.
-spec delete_verified_access_endpoint(aws_client:aws_client(), delete_verified_access_endpoint_request()) ->
    {ok, delete_verified_access_endpoint_result(), tuple()} |
    {error, any()}.
delete_verified_access_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_verified_access_endpoint(Client, Input, []).

-spec delete_verified_access_endpoint(aws_client:aws_client(), delete_verified_access_endpoint_request(), proplists:proplist()) ->
    {ok, delete_verified_access_endpoint_result(), tuple()} |
    {error, any()}.
delete_verified_access_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVerifiedAccessEndpoint">>, Input, Options).

%% @doc Delete an Amazon Web Services Verified Access group.
-spec delete_verified_access_group(aws_client:aws_client(), delete_verified_access_group_request()) ->
    {ok, delete_verified_access_group_result(), tuple()} |
    {error, any()}.
delete_verified_access_group(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_verified_access_group(Client, Input, []).

-spec delete_verified_access_group(aws_client:aws_client(), delete_verified_access_group_request(), proplists:proplist()) ->
    {ok, delete_verified_access_group_result(), tuple()} |
    {error, any()}.
delete_verified_access_group(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVerifiedAccessGroup">>, Input, Options).

%% @doc Delete an Amazon Web Services Verified Access instance.
-spec delete_verified_access_instance(aws_client:aws_client(), delete_verified_access_instance_request()) ->
    {ok, delete_verified_access_instance_result(), tuple()} |
    {error, any()}.
delete_verified_access_instance(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_verified_access_instance(Client, Input, []).

-spec delete_verified_access_instance(aws_client:aws_client(), delete_verified_access_instance_request(), proplists:proplist()) ->
    {ok, delete_verified_access_instance_result(), tuple()} |
    {error, any()}.
delete_verified_access_instance(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVerifiedAccessInstance">>, Input, Options).

%% @doc Delete an Amazon Web Services Verified Access trust provider.
-spec delete_verified_access_trust_provider(aws_client:aws_client(), delete_verified_access_trust_provider_request()) ->
    {ok, delete_verified_access_trust_provider_result(), tuple()} |
    {error, any()}.
delete_verified_access_trust_provider(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_verified_access_trust_provider(Client, Input, []).

-spec delete_verified_access_trust_provider(aws_client:aws_client(), delete_verified_access_trust_provider_request(), proplists:proplist()) ->
    {ok, delete_verified_access_trust_provider_result(), tuple()} |
    {error, any()}.
delete_verified_access_trust_provider(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVerifiedAccessTrustProvider">>, Input, Options).

%% @doc Deletes the specified EBS volume.
%%
%% The volume must be in the `available' state
%% (not attached to an instance).
%%
%% The volume can remain in the `deleting' state for several minutes.
%%
%% For more information, see Delete an Amazon EBS volume:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-deleting-volume.html
%% in the
%% Amazon EBS User Guide.
-spec delete_volume(aws_client:aws_client(), delete_volume_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_volume(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_volume(Client, Input, []).

-spec delete_volume(aws_client:aws_client(), delete_volume_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_volume(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVolume">>, Input, Options).

%% @doc Deletes the specified VPC.
%%
%% You must detach or delete all gateways and resources that are associated
%% with the VPC before you can delete it. For example, you must terminate all
%% instances running in the VPC,
%% delete all security groups associated with the VPC (except the default
%% one), delete all route tables
%% associated with the VPC (except the default one), and so on. When you
%% delete the VPC, it deletes the
%% default security group, network ACL, and route table for the VPC.
%%
%% If you created a flow log for the VPC that you are deleting, note that
%% flow logs for deleted
%% VPCs are eventually automatically removed.
-spec delete_vpc(aws_client:aws_client(), delete_vpc_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_vpc(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_vpc(Client, Input, []).

-spec delete_vpc(aws_client:aws_client(), delete_vpc_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_vpc(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVpc">>, Input, Options).

%% @doc Delete a VPC Block Public Access (BPA) exclusion.
%%
%% A VPC BPA exclusion is a mode that can be applied to a single VPC or
%% subnet that exempts it from the account’s BPA mode and will allow
%% bidirectional or egress-only access. You can create BPA exclusions for
%% VPCs and subnets even when BPA is not enabled on the account to ensure
%% that there is no traffic disruption to the exclusions when VPC BPA is
%% turned on. To learn more about VPC BPA, see Block public access to VPCs
%% and subnets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/security-vpc-bpa.html in
%% the Amazon VPC User Guide.
-spec delete_vpc_block_public_access_exclusion(aws_client:aws_client(), delete_vpc_block_public_access_exclusion_request()) ->
    {ok, delete_vpc_block_public_access_exclusion_result(), tuple()} |
    {error, any()}.
delete_vpc_block_public_access_exclusion(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_vpc_block_public_access_exclusion(Client, Input, []).

-spec delete_vpc_block_public_access_exclusion(aws_client:aws_client(), delete_vpc_block_public_access_exclusion_request(), proplists:proplist()) ->
    {ok, delete_vpc_block_public_access_exclusion_result(), tuple()} |
    {error, any()}.
delete_vpc_block_public_access_exclusion(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVpcBlockPublicAccessExclusion">>, Input, Options).

%% @doc Deletes the specified VPC endpoint connection notifications.
-spec delete_vpc_endpoint_connection_notifications(aws_client:aws_client(), delete_vpc_endpoint_connection_notifications_request()) ->
    {ok, delete_vpc_endpoint_connection_notifications_result(), tuple()} |
    {error, any()}.
delete_vpc_endpoint_connection_notifications(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_vpc_endpoint_connection_notifications(Client, Input, []).

-spec delete_vpc_endpoint_connection_notifications(aws_client:aws_client(), delete_vpc_endpoint_connection_notifications_request(), proplists:proplist()) ->
    {ok, delete_vpc_endpoint_connection_notifications_result(), tuple()} |
    {error, any()}.
delete_vpc_endpoint_connection_notifications(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVpcEndpointConnectionNotifications">>, Input, Options).

%% @doc Deletes the specified VPC endpoint service configurations.
%%
%% Before you can delete
%% an endpoint service configuration, you must reject any `Available' or
%% `PendingAcceptance' interface endpoint connections that are attached
%% to
%% the service.
-spec delete_vpc_endpoint_service_configurations(aws_client:aws_client(), delete_vpc_endpoint_service_configurations_request()) ->
    {ok, delete_vpc_endpoint_service_configurations_result(), tuple()} |
    {error, any()}.
delete_vpc_endpoint_service_configurations(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_vpc_endpoint_service_configurations(Client, Input, []).

-spec delete_vpc_endpoint_service_configurations(aws_client:aws_client(), delete_vpc_endpoint_service_configurations_request(), proplists:proplist()) ->
    {ok, delete_vpc_endpoint_service_configurations_result(), tuple()} |
    {error, any()}.
delete_vpc_endpoint_service_configurations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVpcEndpointServiceConfigurations">>, Input, Options).

%% @doc Deletes the specified VPC endpoints.
%%
%% When you delete a gateway endpoint, we delete the endpoint routes in the
%% route tables for the endpoint.
%%
%% When you delete a Gateway Load Balancer endpoint, we delete its endpoint
%% network interfaces.
%% You can only delete Gateway Load Balancer endpoints when the routes that
%% are associated with the endpoint are deleted.
%%
%% When you delete an interface endpoint, we delete its endpoint network
%% interfaces.
-spec delete_vpc_endpoints(aws_client:aws_client(), delete_vpc_endpoints_request()) ->
    {ok, delete_vpc_endpoints_result(), tuple()} |
    {error, any()}.
delete_vpc_endpoints(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_vpc_endpoints(Client, Input, []).

-spec delete_vpc_endpoints(aws_client:aws_client(), delete_vpc_endpoints_request(), proplists:proplist()) ->
    {ok, delete_vpc_endpoints_result(), tuple()} |
    {error, any()}.
delete_vpc_endpoints(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVpcEndpoints">>, Input, Options).

%% @doc Deletes a VPC peering connection.
%%
%% Either the owner of the requester VPC or the owner
%% of the accepter VPC can delete the VPC peering connection if it's in
%% the
%% `active' state. The owner of the requester VPC can delete a VPC
%% peering
%% connection in the `pending-acceptance' state. You cannot delete a VPC
%% peering
%% connection that's in the `failed' or `rejected' state.
-spec delete_vpc_peering_connection(aws_client:aws_client(), delete_vpc_peering_connection_request()) ->
    {ok, delete_vpc_peering_connection_result(), tuple()} |
    {error, any()}.
delete_vpc_peering_connection(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_vpc_peering_connection(Client, Input, []).

-spec delete_vpc_peering_connection(aws_client:aws_client(), delete_vpc_peering_connection_request(), proplists:proplist()) ->
    {ok, delete_vpc_peering_connection_result(), tuple()} |
    {error, any()}.
delete_vpc_peering_connection(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVpcPeeringConnection">>, Input, Options).

%% @doc Deletes the specified VPN connection.
%%
%% If you're deleting the VPC and its associated components, we recommend
%% that you detach
%% the virtual private gateway from the VPC and delete the VPC before
%% deleting the VPN
%% connection. If you believe that the tunnel credentials for your VPN
%% connection have been
%% compromised, you can delete the VPN connection and create a new one that
%% has new keys,
%% without needing to delete the VPC or virtual private gateway. If you
%% create a new VPN
%% connection, you must reconfigure the customer gateway device using the new
%% configuration
%% information returned with the new VPN connection ID.
%%
%% For certificate-based authentication, delete all Certificate Manager (ACM)
%% private
%% certificates used for the Amazon Web Services-side tunnel endpoints for
%% the VPN
%% connection before deleting the VPN connection.
-spec delete_vpn_connection(aws_client:aws_client(), delete_vpn_connection_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_vpn_connection(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_vpn_connection(Client, Input, []).

-spec delete_vpn_connection(aws_client:aws_client(), delete_vpn_connection_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_vpn_connection(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVpnConnection">>, Input, Options).

%% @doc Deletes the specified static route associated with a VPN connection
%% between an
%% existing virtual private gateway and a VPN customer gateway.
%%
%% The static route allows
%% traffic to be routed from the virtual private gateway to the VPN customer
%% gateway.
-spec delete_vpn_connection_route(aws_client:aws_client(), delete_vpn_connection_route_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_vpn_connection_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_vpn_connection_route(Client, Input, []).

-spec delete_vpn_connection_route(aws_client:aws_client(), delete_vpn_connection_route_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_vpn_connection_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVpnConnectionRoute">>, Input, Options).

%% @doc Deletes the specified virtual private gateway.
%%
%% You must first detach the virtual
%% private gateway from the VPC. Note that you don't need to delete the
%% virtual private
%% gateway if you plan to delete and recreate the VPN connection between your
%% VPC and your
%% network.
-spec delete_vpn_gateway(aws_client:aws_client(), delete_vpn_gateway_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_vpn_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    delete_vpn_gateway(Client, Input, []).

-spec delete_vpn_gateway(aws_client:aws_client(), delete_vpn_gateway_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
delete_vpn_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeleteVpnGateway">>, Input, Options).

%% @doc Releases the specified address range that you provisioned for use
%% with your Amazon Web Services resources
%% through bring your own IP addresses (BYOIP) and deletes the corresponding
%% address pool.
%%
%% Before you can release an address range, you must stop advertising it and
%% you must not
%% have any IP addresses allocated from its address range.
-spec deprovision_byoip_cidr(aws_client:aws_client(), deprovision_byoip_cidr_request()) ->
    {ok, deprovision_byoip_cidr_result(), tuple()} |
    {error, any()}.
deprovision_byoip_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    deprovision_byoip_cidr(Client, Input, []).

-spec deprovision_byoip_cidr(aws_client:aws_client(), deprovision_byoip_cidr_request(), proplists:proplist()) ->
    {ok, deprovision_byoip_cidr_result(), tuple()} |
    {error, any()}.
deprovision_byoip_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeprovisionByoipCidr">>, Input, Options).

%% @doc Deprovisions your Autonomous System Number (ASN) from your Amazon Web
%% Services account.
%%
%% This action can only be called after any BYOIP CIDR associations are
%% removed from your Amazon Web Services account with DisassociateIpamByoasn:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisassociateIpamByoasn.html.
%% For more information, see Tutorial: Bring your ASN to IPAM:
%% https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoasn.html in the
%% Amazon VPC IPAM guide.
-spec deprovision_ipam_byoasn(aws_client:aws_client(), deprovision_ipam_byoasn_request()) ->
    {ok, deprovision_ipam_byoasn_result(), tuple()} |
    {error, any()}.
deprovision_ipam_byoasn(Client, Input)
  when is_map(Client), is_map(Input) ->
    deprovision_ipam_byoasn(Client, Input, []).

-spec deprovision_ipam_byoasn(aws_client:aws_client(), deprovision_ipam_byoasn_request(), proplists:proplist()) ->
    {ok, deprovision_ipam_byoasn_result(), tuple()} |
    {error, any()}.
deprovision_ipam_byoasn(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeprovisionIpamByoasn">>, Input, Options).

%% @doc Deprovision a CIDR provisioned from an IPAM pool.
%%
%% If you deprovision a CIDR from a pool that has a source pool, the CIDR is
%% recycled back into the source pool. For more information, see Deprovision
%% pool CIDRs:
%% https://docs.aws.amazon.com/vpc/latest/ipam/depro-pool-cidr-ipam.html in
%% the Amazon VPC IPAM User Guide.
-spec deprovision_ipam_pool_cidr(aws_client:aws_client(), deprovision_ipam_pool_cidr_request()) ->
    {ok, deprovision_ipam_pool_cidr_result(), tuple()} |
    {error, any()}.
deprovision_ipam_pool_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    deprovision_ipam_pool_cidr(Client, Input, []).

-spec deprovision_ipam_pool_cidr(aws_client:aws_client(), deprovision_ipam_pool_cidr_request(), proplists:proplist()) ->
    {ok, deprovision_ipam_pool_cidr_result(), tuple()} |
    {error, any()}.
deprovision_ipam_pool_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeprovisionIpamPoolCidr">>, Input, Options).

%% @doc Deprovision a CIDR from a public IPv4 pool.
-spec deprovision_public_ipv4_pool_cidr(aws_client:aws_client(), deprovision_public_ipv4_pool_cidr_request()) ->
    {ok, deprovision_public_ipv4_pool_cidr_result(), tuple()} |
    {error, any()}.
deprovision_public_ipv4_pool_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    deprovision_public_ipv4_pool_cidr(Client, Input, []).

-spec deprovision_public_ipv4_pool_cidr(aws_client:aws_client(), deprovision_public_ipv4_pool_cidr_request(), proplists:proplist()) ->
    {ok, deprovision_public_ipv4_pool_cidr_result(), tuple()} |
    {error, any()}.
deprovision_public_ipv4_pool_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeprovisionPublicIpv4PoolCidr">>, Input, Options).

%% @doc Deregisters the specified AMI.
%%
%% A deregistered AMI can't be used to launch new
%% instances.
%%
%% If a deregistered EBS-backed AMI matches a Recycle Bin retention rule, it
%% moves to the
%% Recycle Bin for the specified retention period. It can be restored before
%% its retention period
%% expires, after which it is permanently deleted. If the deregistered AMI
%% doesn't match a
%% retention rule, it is permanently deleted immediately. For more
%% information, see Recover deleted Amazon EBS
%% snapshots and EBS-backed AMIs with Recycle Bin:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin.html in
%% the Amazon EBS User
%% Guide.
%%
%% When deregistering an EBS-backed AMI, you can optionally delete its
%% associated snapshots
%% at the same time. However, if a snapshot is associated with multiple AMIs,
%% it won't be deleted
%% even if specified for deletion, although the AMI will still be
%% deregistered.
%%
%% Deregistering an AMI does not delete the following:
%%
%% Instances already launched from the AMI. You'll continue to incur
%% usage costs for the
%% instances until you terminate them.
%%
%% For EBS-backed AMIs: Snapshots that are associated with multiple AMIs.
%% You'll continue
%% to incur snapshot storage costs.
%%
%% For instance store-backed AMIs: The files uploaded to Amazon S3 during AMI
%% creation. You'll
%% continue to incur S3 storage costs.
%%
%% For more information, see Deregister an Amazon EC2 AMI:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/deregister-ami.html in
%% the
%% Amazon EC2 User Guide.
-spec deregister_image(aws_client:aws_client(), deregister_image_request()) ->
    {ok, deregister_image_result(), tuple()} |
    {error, any()}.
deregister_image(Client, Input)
  when is_map(Client), is_map(Input) ->
    deregister_image(Client, Input, []).

-spec deregister_image(aws_client:aws_client(), deregister_image_request(), proplists:proplist()) ->
    {ok, deregister_image_result(), tuple()} |
    {error, any()}.
deregister_image(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeregisterImage">>, Input, Options).

%% @doc Deregisters tag keys to prevent tags that have the specified tag keys
%% from being
%% included in scheduled event notifications for resources in the Region.
-spec deregister_instance_event_notification_attributes(aws_client:aws_client(), deregister_instance_event_notification_attributes_request()) ->
    {ok, deregister_instance_event_notification_attributes_result(), tuple()} |
    {error, any()}.
deregister_instance_event_notification_attributes(Client, Input)
  when is_map(Client), is_map(Input) ->
    deregister_instance_event_notification_attributes(Client, Input, []).

-spec deregister_instance_event_notification_attributes(aws_client:aws_client(), deregister_instance_event_notification_attributes_request(), proplists:proplist()) ->
    {ok, deregister_instance_event_notification_attributes_result(), tuple()} |
    {error, any()}.
deregister_instance_event_notification_attributes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeregisterInstanceEventNotificationAttributes">>, Input, Options).

%% @doc Deregisters the specified members (network interfaces) from the
%% transit gateway multicast group.
-spec deregister_transit_gateway_multicast_group_members(aws_client:aws_client(), deregister_transit_gateway_multicast_group_members_request()) ->
    {ok, deregister_transit_gateway_multicast_group_members_result(), tuple()} |
    {error, any()}.
deregister_transit_gateway_multicast_group_members(Client, Input)
  when is_map(Client), is_map(Input) ->
    deregister_transit_gateway_multicast_group_members(Client, Input, []).

-spec deregister_transit_gateway_multicast_group_members(aws_client:aws_client(), deregister_transit_gateway_multicast_group_members_request(), proplists:proplist()) ->
    {ok, deregister_transit_gateway_multicast_group_members_result(), tuple()} |
    {error, any()}.
deregister_transit_gateway_multicast_group_members(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeregisterTransitGatewayMulticastGroupMembers">>, Input, Options).

%% @doc Deregisters the specified sources (network interfaces) from the
%% transit gateway multicast group.
-spec deregister_transit_gateway_multicast_group_sources(aws_client:aws_client(), deregister_transit_gateway_multicast_group_sources_request()) ->
    {ok, deregister_transit_gateway_multicast_group_sources_result(), tuple()} |
    {error, any()}.
deregister_transit_gateway_multicast_group_sources(Client, Input)
  when is_map(Client), is_map(Input) ->
    deregister_transit_gateway_multicast_group_sources(Client, Input, []).

-spec deregister_transit_gateway_multicast_group_sources(aws_client:aws_client(), deregister_transit_gateway_multicast_group_sources_request(), proplists:proplist()) ->
    {ok, deregister_transit_gateway_multicast_group_sources_result(), tuple()} |
    {error, any()}.
deregister_transit_gateway_multicast_group_sources(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DeregisterTransitGatewayMulticastGroupSources">>, Input, Options).

%% @doc Describes attributes of your Amazon Web Services account.
%%
%% The following are the supported account attributes:
%%
%% `default-vpc': The ID of the default VPC for your account, or
%% `none'.
%%
%% `max-instances': This attribute is no longer supported. The returned
%% value does not reflect your actual vCPU limit for running On-Demand
%% Instances.
%% For more information, see On-Demand Instance Limits:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-on-demand-instances.html#ec2-on-demand-instances-limits
%% in the
%% Amazon Elastic Compute Cloud User Guide.
%%
%% `max-elastic-ips': The maximum number of Elastic IP addresses that you
%% can allocate.
%%
%% `supported-platforms': This attribute is deprecated.
%%
%% `vpc-max-elastic-ips': The maximum number of Elastic IP addresses that
%% you can allocate.
%%
%% `vpc-max-security-groups-per-interface': The maximum number of
%% security groups
%% that you can assign to a network interface.
%%
%% The order of the elements in the response, including those within nested
%% structures, might vary. Applications should not assume the elements appear
%% in a
%% particular order.
-spec describe_account_attributes(aws_client:aws_client(), describe_account_attributes_request()) ->
    {ok, describe_account_attributes_result(), tuple()} |
    {error, any()}.
describe_account_attributes(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_account_attributes(Client, Input, []).

-spec describe_account_attributes(aws_client:aws_client(), describe_account_attributes_request(), proplists:proplist()) ->
    {ok, describe_account_attributes_result(), tuple()} |
    {error, any()}.
describe_account_attributes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeAccountAttributes">>, Input, Options).

%% @doc Describes an Elastic IP address transfer.
%%
%% For more information, see Transfer Elastic IP addresses:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-eips.html#transfer-EIPs-intro
%% in the Amazon VPC User Guide.
%%
%% When you transfer an Elastic IP address, there is a two-step handshake
%% between the source and transfer Amazon Web Services accounts. When the
%% source account starts the transfer,
%% the transfer account has seven days to accept the Elastic IP address
%% transfer. During those seven days, the source account can view the
%% pending transfer by using this action. After seven days, the
%% transfer expires and ownership of the Elastic IP
%% address returns to the source
%% account. Accepted transfers are visible to the source account for 14 days
%% after the transfers have been accepted.
-spec describe_address_transfers(aws_client:aws_client(), describe_address_transfers_request()) ->
    {ok, describe_address_transfers_result(), tuple()} |
    {error, any()}.
describe_address_transfers(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_address_transfers(Client, Input, []).

-spec describe_address_transfers(aws_client:aws_client(), describe_address_transfers_request(), proplists:proplist()) ->
    {ok, describe_address_transfers_result(), tuple()} |
    {error, any()}.
describe_address_transfers(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeAddressTransfers">>, Input, Options).

%% @doc Describes the specified Elastic IP addresses or all of your Elastic
%% IP addresses.
-spec describe_addresses(aws_client:aws_client(), describe_addresses_request()) ->
    {ok, describe_addresses_result(), tuple()} |
    {error, any()}.
describe_addresses(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_addresses(Client, Input, []).

-spec describe_addresses(aws_client:aws_client(), describe_addresses_request(), proplists:proplist()) ->
    {ok, describe_addresses_result(), tuple()} |
    {error, any()}.
describe_addresses(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeAddresses">>, Input, Options).

%% @doc Describes the attributes of the specified Elastic IP addresses.
%%
%% For requirements, see Using reverse DNS for email applications:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#Using_Elastic_Addressing_Reverse_DNS.
-spec describe_addresses_attribute(aws_client:aws_client(), describe_addresses_attribute_request()) ->
    {ok, describe_addresses_attribute_result(), tuple()} |
    {error, any()}.
describe_addresses_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_addresses_attribute(Client, Input, []).

-spec describe_addresses_attribute(aws_client:aws_client(), describe_addresses_attribute_request(), proplists:proplist()) ->
    {ok, describe_addresses_attribute_result(), tuple()} |
    {error, any()}.
describe_addresses_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeAddressesAttribute">>, Input, Options).

%% @doc Describes the longer ID format settings for all resource types in a
%% specific
%% Region.
%%
%% This request is useful for performing a quick audit to determine whether a
%% specific Region is fully opted in for longer IDs (17-character IDs).
%%
%% This request only returns information about resource types that support
%% longer IDs.
%%
%% The following resource types support longer IDs: `bundle' |
%% `conversion-task' | `customer-gateway' | `dhcp-options' |
%% `elastic-ip-allocation' | `elastic-ip-association' |
%% `export-task' | `flow-log' | `image' |
%% `import-task' | `instance' | `internet-gateway' |
%% `network-acl' | `network-acl-association' |
%% `network-interface' | `network-interface-attachment' |
%% `prefix-list' | `reservation' | `route-table' |
%% `route-table-association' | `security-group' |
%% `snapshot' | `subnet' |
%% `subnet-cidr-block-association' | `volume' | `vpc' |
%% `vpc-cidr-block-association' | `vpc-endpoint' |
%% `vpc-peering-connection' | `vpn-connection' | `vpn-gateway'.
-spec describe_aggregate_id_format(aws_client:aws_client(), describe_aggregate_id_format_request()) ->
    {ok, describe_aggregate_id_format_result(), tuple()} |
    {error, any()}.
describe_aggregate_id_format(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_aggregate_id_format(Client, Input, []).

-spec describe_aggregate_id_format(aws_client:aws_client(), describe_aggregate_id_format_request(), proplists:proplist()) ->
    {ok, describe_aggregate_id_format_result(), tuple()} |
    {error, any()}.
describe_aggregate_id_format(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeAggregateIdFormat">>, Input, Options).

%% @doc Describes the Availability Zones, Local Zones, and Wavelength Zones
%% that are available to
%% you.
%%
%% For more information about Availability Zones, Local Zones, and Wavelength
%% Zones, see
%% Regions and zones:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html
%% in the Amazon EC2 User Guide.
%%
%% The order of the elements in the response, including those within nested
%% structures, might vary. Applications should not assume the elements appear
%% in a
%% particular order.
-spec describe_availability_zones(aws_client:aws_client(), describe_availability_zones_request()) ->
    {ok, describe_availability_zones_result(), tuple()} |
    {error, any()}.
describe_availability_zones(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_availability_zones(Client, Input, []).

-spec describe_availability_zones(aws_client:aws_client(), describe_availability_zones_request(), proplists:proplist()) ->
    {ok, describe_availability_zones_result(), tuple()} |
    {error, any()}.
describe_availability_zones(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeAvailabilityZones">>, Input, Options).

%% @doc Describes the current Infrastructure Performance metric
%% subscriptions.
-spec describe_aws_network_performance_metric_subscriptions(aws_client:aws_client(), describe_aws_network_performance_metric_subscriptions_request()) ->
    {ok, describe_aws_network_performance_metric_subscriptions_result(), tuple()} |
    {error, any()}.
describe_aws_network_performance_metric_subscriptions(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_aws_network_performance_metric_subscriptions(Client, Input, []).

-spec describe_aws_network_performance_metric_subscriptions(aws_client:aws_client(), describe_aws_network_performance_metric_subscriptions_request(), proplists:proplist()) ->
    {ok, describe_aws_network_performance_metric_subscriptions_result(), tuple()} |
    {error, any()}.
describe_aws_network_performance_metric_subscriptions(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeAwsNetworkPerformanceMetricSubscriptions">>, Input, Options).

%% @doc Describes the specified bundle tasks or all of your bundle tasks.
%%
%% Completed bundle tasks are listed for only a limited time. If your bundle
%% task is no
%% longer in the list, you can still register an AMI from it. Just use
%% `RegisterImage' with the Amazon S3 bucket name and image manifest name
%% you provided
%% to the bundle task.
%%
%% The order of the elements in the response, including those within nested
%% structures,
%% might vary. Applications should not assume the elements appear in a
%% particular order.
-spec describe_bundle_tasks(aws_client:aws_client(), describe_bundle_tasks_request()) ->
    {ok, describe_bundle_tasks_result(), tuple()} |
    {error, any()}.
describe_bundle_tasks(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_bundle_tasks(Client, Input, []).

-spec describe_bundle_tasks(aws_client:aws_client(), describe_bundle_tasks_request(), proplists:proplist()) ->
    {ok, describe_bundle_tasks_result(), tuple()} |
    {error, any()}.
describe_bundle_tasks(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeBundleTasks">>, Input, Options).

%% @doc Describes the IP address ranges that were provisioned for use with
%% Amazon Web Services resources
%% through through bring your own IP addresses (BYOIP).
-spec describe_byoip_cidrs(aws_client:aws_client(), describe_byoip_cidrs_request()) ->
    {ok, describe_byoip_cidrs_result(), tuple()} |
    {error, any()}.
describe_byoip_cidrs(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_byoip_cidrs(Client, Input, []).

-spec describe_byoip_cidrs(aws_client:aws_client(), describe_byoip_cidrs_request(), proplists:proplist()) ->
    {ok, describe_byoip_cidrs_result(), tuple()} |
    {error, any()}.
describe_byoip_cidrs(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeByoipCidrs">>, Input, Options).

%% @doc Describes the events for the specified Capacity Block extension
%% during the specified
%% time.
-spec describe_capacity_block_extension_history(aws_client:aws_client(), describe_capacity_block_extension_history_request()) ->
    {ok, describe_capacity_block_extension_history_result(), tuple()} |
    {error, any()}.
describe_capacity_block_extension_history(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_capacity_block_extension_history(Client, Input, []).

-spec describe_capacity_block_extension_history(aws_client:aws_client(), describe_capacity_block_extension_history_request(), proplists:proplist()) ->
    {ok, describe_capacity_block_extension_history_result(), tuple()} |
    {error, any()}.
describe_capacity_block_extension_history(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeCapacityBlockExtensionHistory">>, Input, Options).

%% @doc Describes Capacity Block extension offerings available for purchase
%% in the Amazon Web Services
%% Region that you're currently using.
-spec describe_capacity_block_extension_offerings(aws_client:aws_client(), describe_capacity_block_extension_offerings_request()) ->
    {ok, describe_capacity_block_extension_offerings_result(), tuple()} |
    {error, any()}.
describe_capacity_block_extension_offerings(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_capacity_block_extension_offerings(Client, Input, []).

-spec describe_capacity_block_extension_offerings(aws_client:aws_client(), describe_capacity_block_extension_offerings_request(), proplists:proplist()) ->
    {ok, describe_capacity_block_extension_offerings_result(), tuple()} |
    {error, any()}.
describe_capacity_block_extension_offerings(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeCapacityBlockExtensionOfferings">>, Input, Options).

%% @doc Describes Capacity Block offerings available for purchase in the
%% Amazon Web Services Region that you're currently using.
%%
%% With Capacity Blocks, you can
%% purchase a specific GPU instance type or EC2 UltraServer for a period of
%% time.
%%
%% To search for an available Capacity Block offering, you specify a
%% reservation duration
%% and instance count.
-spec describe_capacity_block_offerings(aws_client:aws_client(), describe_capacity_block_offerings_request()) ->
    {ok, describe_capacity_block_offerings_result(), tuple()} |
    {error, any()}.
describe_capacity_block_offerings(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_capacity_block_offerings(Client, Input, []).

-spec describe_capacity_block_offerings(aws_client:aws_client(), describe_capacity_block_offerings_request(), proplists:proplist()) ->
    {ok, describe_capacity_block_offerings_result(), tuple()} |
    {error, any()}.
describe_capacity_block_offerings(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeCapacityBlockOfferings">>, Input, Options).

%% @doc Describes the availability of capacity for the specified Capacity
%% blocks, or all of your Capacity Blocks.
-spec describe_capacity_block_status(aws_client:aws_client(), describe_capacity_block_status_request()) ->
    {ok, describe_capacity_block_status_result(), tuple()} |
    {error, any()}.
describe_capacity_block_status(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_capacity_block_status(Client, Input, []).

-spec describe_capacity_block_status(aws_client:aws_client(), describe_capacity_block_status_request(), proplists:proplist()) ->
    {ok, describe_capacity_block_status_result(), tuple()} |
    {error, any()}.
describe_capacity_block_status(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeCapacityBlockStatus">>, Input, Options).

%% @doc Describes details about Capacity Blocks in the Amazon Web Services
%% Region that you're currently using.
-spec describe_capacity_blocks(aws_client:aws_client(), describe_capacity_blocks_request()) ->
    {ok, describe_capacity_blocks_result(), tuple()} |
    {error, any()}.
describe_capacity_blocks(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_capacity_blocks(Client, Input, []).

-spec describe_capacity_blocks(aws_client:aws_client(), describe_capacity_blocks_request(), proplists:proplist()) ->
    {ok, describe_capacity_blocks_result(), tuple()} |
    {error, any()}.
describe_capacity_blocks(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeCapacityBlocks">>, Input, Options).

%% @doc Describes a request to assign the billing of the unused capacity of a
%% Capacity
%% Reservation.
%%
%% For more information, see Billing assignment for shared
%% Amazon EC2 Capacity Reservations:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/transfer-billing.html.
-spec describe_capacity_reservation_billing_requests(aws_client:aws_client(), describe_capacity_reservation_billing_requests_request()) ->
    {ok, describe_capacity_reservation_billing_requests_result(), tuple()} |
    {error, any()}.
describe_capacity_reservation_billing_requests(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_capacity_reservation_billing_requests(Client, Input, []).

-spec describe_capacity_reservation_billing_requests(aws_client:aws_client(), describe_capacity_reservation_billing_requests_request(), proplists:proplist()) ->
    {ok, describe_capacity_reservation_billing_requests_result(), tuple()} |
    {error, any()}.
describe_capacity_reservation_billing_requests(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeCapacityReservationBillingRequests">>, Input, Options).

%% @doc Describes one or more Capacity Reservation Fleets.
-spec describe_capacity_reservation_fleets(aws_client:aws_client(), describe_capacity_reservation_fleets_request()) ->
    {ok, describe_capacity_reservation_fleets_result(), tuple()} |
    {error, any()}.
describe_capacity_reservation_fleets(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_capacity_reservation_fleets(Client, Input, []).

-spec describe_capacity_reservation_fleets(aws_client:aws_client(), describe_capacity_reservation_fleets_request(), proplists:proplist()) ->
    {ok, describe_capacity_reservation_fleets_result(), tuple()} |
    {error, any()}.
describe_capacity_reservation_fleets(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeCapacityReservationFleets">>, Input, Options).

%% @doc Describes one or more of your Capacity Reservations.
%%
%% The results describe only the
%% Capacity Reservations in the Amazon Web Services Region that you're
%% currently
%% using.
-spec describe_capacity_reservations(aws_client:aws_client(), describe_capacity_reservations_request()) ->
    {ok, describe_capacity_reservations_result(), tuple()} |
    {error, any()}.
describe_capacity_reservations(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_capacity_reservations(Client, Input, []).

-spec describe_capacity_reservations(aws_client:aws_client(), describe_capacity_reservations_request(), proplists:proplist()) ->
    {ok, describe_capacity_reservations_result(), tuple()} |
    {error, any()}.
describe_capacity_reservations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeCapacityReservations">>, Input, Options).

%% @doc Describes one or more of your carrier gateways.
-spec describe_carrier_gateways(aws_client:aws_client(), describe_carrier_gateways_request()) ->
    {ok, describe_carrier_gateways_result(), tuple()} |
    {error, any()}.
describe_carrier_gateways(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_carrier_gateways(Client, Input, []).

-spec describe_carrier_gateways(aws_client:aws_client(), describe_carrier_gateways_request(), proplists:proplist()) ->
    {ok, describe_carrier_gateways_result(), tuple()} |
    {error, any()}.
describe_carrier_gateways(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeCarrierGateways">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Describes your linked EC2-Classic instances. This request only returns
%% information about EC2-Classic instances linked to a VPC through
%% ClassicLink. You cannot
%% use this request to return information about other instances.
-spec describe_classic_link_instances(aws_client:aws_client(), describe_classic_link_instances_request()) ->
    {ok, describe_classic_link_instances_result(), tuple()} |
    {error, any()}.
describe_classic_link_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_classic_link_instances(Client, Input, []).

-spec describe_classic_link_instances(aws_client:aws_client(), describe_classic_link_instances_request(), proplists:proplist()) ->
    {ok, describe_classic_link_instances_result(), tuple()} |
    {error, any()}.
describe_classic_link_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeClassicLinkInstances">>, Input, Options).

%% @doc Describes the authorization rules for a specified Client VPN
%% endpoint.
-spec describe_client_vpn_authorization_rules(aws_client:aws_client(), describe_client_vpn_authorization_rules_request()) ->
    {ok, describe_client_vpn_authorization_rules_result(), tuple()} |
    {error, any()}.
describe_client_vpn_authorization_rules(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_client_vpn_authorization_rules(Client, Input, []).

-spec describe_client_vpn_authorization_rules(aws_client:aws_client(), describe_client_vpn_authorization_rules_request(), proplists:proplist()) ->
    {ok, describe_client_vpn_authorization_rules_result(), tuple()} |
    {error, any()}.
describe_client_vpn_authorization_rules(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeClientVpnAuthorizationRules">>, Input, Options).

%% @doc Describes active client connections and connections that have been
%% terminated within the last 60
%% minutes for the specified Client VPN endpoint.
-spec describe_client_vpn_connections(aws_client:aws_client(), describe_client_vpn_connections_request()) ->
    {ok, describe_client_vpn_connections_result(), tuple()} |
    {error, any()}.
describe_client_vpn_connections(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_client_vpn_connections(Client, Input, []).

-spec describe_client_vpn_connections(aws_client:aws_client(), describe_client_vpn_connections_request(), proplists:proplist()) ->
    {ok, describe_client_vpn_connections_result(), tuple()} |
    {error, any()}.
describe_client_vpn_connections(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeClientVpnConnections">>, Input, Options).

%% @doc Describes one or more Client VPN endpoints in the account.
-spec describe_client_vpn_endpoints(aws_client:aws_client(), describe_client_vpn_endpoints_request()) ->
    {ok, describe_client_vpn_endpoints_result(), tuple()} |
    {error, any()}.
describe_client_vpn_endpoints(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_client_vpn_endpoints(Client, Input, []).

-spec describe_client_vpn_endpoints(aws_client:aws_client(), describe_client_vpn_endpoints_request(), proplists:proplist()) ->
    {ok, describe_client_vpn_endpoints_result(), tuple()} |
    {error, any()}.
describe_client_vpn_endpoints(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeClientVpnEndpoints">>, Input, Options).

%% @doc Describes the routes for the specified Client VPN endpoint.
-spec describe_client_vpn_routes(aws_client:aws_client(), describe_client_vpn_routes_request()) ->
    {ok, describe_client_vpn_routes_result(), tuple()} |
    {error, any()}.
describe_client_vpn_routes(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_client_vpn_routes(Client, Input, []).

-spec describe_client_vpn_routes(aws_client:aws_client(), describe_client_vpn_routes_request(), proplists:proplist()) ->
    {ok, describe_client_vpn_routes_result(), tuple()} |
    {error, any()}.
describe_client_vpn_routes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeClientVpnRoutes">>, Input, Options).

%% @doc Describes the target networks associated with the specified Client
%% VPN endpoint.
-spec describe_client_vpn_target_networks(aws_client:aws_client(), describe_client_vpn_target_networks_request()) ->
    {ok, describe_client_vpn_target_networks_result(), tuple()} |
    {error, any()}.
describe_client_vpn_target_networks(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_client_vpn_target_networks(Client, Input, []).

-spec describe_client_vpn_target_networks(aws_client:aws_client(), describe_client_vpn_target_networks_request(), proplists:proplist()) ->
    {ok, describe_client_vpn_target_networks_result(), tuple()} |
    {error, any()}.
describe_client_vpn_target_networks(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeClientVpnTargetNetworks">>, Input, Options).

%% @doc Describes the specified customer-owned address pools or all of your
%% customer-owned address pools.
-spec describe_coip_pools(aws_client:aws_client(), describe_coip_pools_request()) ->
    {ok, describe_coip_pools_result(), tuple()} |
    {error, any()}.
describe_coip_pools(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_coip_pools(Client, Input, []).

-spec describe_coip_pools(aws_client:aws_client(), describe_coip_pools_request(), proplists:proplist()) ->
    {ok, describe_coip_pools_result(), tuple()} |
    {error, any()}.
describe_coip_pools(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeCoipPools">>, Input, Options).

%% @doc Describes the specified conversion tasks or all your conversion
%% tasks.
%%
%% For more information, see the
%% VM Import/Export User Guide:
%% https://docs.aws.amazon.com/vm-import/latest/userguide/.
%%
%% For information about the import manifest referenced by this API action,
%% see VM Import Manifest:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html.
-spec describe_conversion_tasks(aws_client:aws_client(), describe_conversion_tasks_request()) ->
    {ok, describe_conversion_tasks_result(), tuple()} |
    {error, any()}.
describe_conversion_tasks(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_conversion_tasks(Client, Input, []).

-spec describe_conversion_tasks(aws_client:aws_client(), describe_conversion_tasks_request(), proplists:proplist()) ->
    {ok, describe_conversion_tasks_result(), tuple()} |
    {error, any()}.
describe_conversion_tasks(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeConversionTasks">>, Input, Options).

%% @doc Describes one or more of your VPN customer gateways.
%%
%% For more information, see Amazon Web Services Site-to-Site VPN:
%% https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html in the Amazon
%% Web Services Site-to-Site VPN
%% User Guide.
-spec describe_customer_gateways(aws_client:aws_client(), describe_customer_gateways_request()) ->
    {ok, describe_customer_gateways_result(), tuple()} |
    {error, any()}.
describe_customer_gateways(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_customer_gateways(Client, Input, []).

-spec describe_customer_gateways(aws_client:aws_client(), describe_customer_gateways_request(), proplists:proplist()) ->
    {ok, describe_customer_gateways_result(), tuple()} |
    {error, any()}.
describe_customer_gateways(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeCustomerGateways">>, Input, Options).

%% @doc Describes the metadata of an account status report, including the
%% status of the
%% report.
%%
%% To view the full report, download it from the Amazon S3 bucket where it
%% was saved.
%% Reports are accessible only when they have the `complete' status.
%% Reports
%% with other statuses (`running', `cancelled', or
%% `error') are not available in the S3 bucket. For more information
%% about
%% downloading objects from an S3 bucket, see Downloading objects:
%% https://docs.aws.amazon.com/AmazonS3/latest/userguide/download-objects.html
%% in
%% the Amazon Simple Storage Service User Guide.
%%
%% For more information, see Generating the account status report for
%% declarative policies:
%% https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_declarative_status-report.html
%% in the
%% Amazon Web Services Organizations User Guide.
-spec describe_declarative_policies_reports(aws_client:aws_client(), describe_declarative_policies_reports_request()) ->
    {ok, describe_declarative_policies_reports_result(), tuple()} |
    {error, any()}.
describe_declarative_policies_reports(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_declarative_policies_reports(Client, Input, []).

-spec describe_declarative_policies_reports(aws_client:aws_client(), describe_declarative_policies_reports_request(), proplists:proplist()) ->
    {ok, describe_declarative_policies_reports_result(), tuple()} |
    {error, any()}.
describe_declarative_policies_reports(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeDeclarativePoliciesReports">>, Input, Options).

%% @doc Describes your DHCP option sets.
%%
%% The default is to describe all your DHCP option sets.
%% Alternatively, you can specify specific DHCP option set IDs or filter the
%% results to
%% include only the DHCP option sets that match specific criteria.
%%
%% For more information, see DHCP option sets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_DHCP_Options.html in
%% the
%% Amazon VPC User Guide.
-spec describe_dhcp_options(aws_client:aws_client(), describe_dhcp_options_request()) ->
    {ok, describe_dhcp_options_result(), tuple()} |
    {error, any()}.
describe_dhcp_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_dhcp_options(Client, Input, []).

-spec describe_dhcp_options(aws_client:aws_client(), describe_dhcp_options_request(), proplists:proplist()) ->
    {ok, describe_dhcp_options_result(), tuple()} |
    {error, any()}.
describe_dhcp_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeDhcpOptions">>, Input, Options).

%% @doc Describes your egress-only internet gateways.
%%
%% The default is to describe all your egress-only internet gateways.
%% Alternatively, you can specify specific egress-only internet gateway IDs
%% or filter the results to
%% include only the egress-only internet gateways that match specific
%% criteria.
-spec describe_egress_only_internet_gateways(aws_client:aws_client(), describe_egress_only_internet_gateways_request()) ->
    {ok, describe_egress_only_internet_gateways_result(), tuple()} |
    {error, any()}.
describe_egress_only_internet_gateways(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_egress_only_internet_gateways(Client, Input, []).

-spec describe_egress_only_internet_gateways(aws_client:aws_client(), describe_egress_only_internet_gateways_request(), proplists:proplist()) ->
    {ok, describe_egress_only_internet_gateways_result(), tuple()} |
    {error, any()}.
describe_egress_only_internet_gateways(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeEgressOnlyInternetGateways">>, Input, Options).

%% @doc
%% Amazon Elastic Graphics reached end of life on January 8, 2024.
%%
%% Describes the Elastic Graphics accelerator associated with your instances.
-spec describe_elastic_gpus(aws_client:aws_client(), describe_elastic_gpus_request()) ->
    {ok, describe_elastic_gpus_result(), tuple()} |
    {error, any()}.
describe_elastic_gpus(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_elastic_gpus(Client, Input, []).

-spec describe_elastic_gpus(aws_client:aws_client(), describe_elastic_gpus_request(), proplists:proplist()) ->
    {ok, describe_elastic_gpus_result(), tuple()} |
    {error, any()}.
describe_elastic_gpus(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeElasticGpus">>, Input, Options).

%% @doc Describes the specified export image tasks or all of your export
%% image tasks.
-spec describe_export_image_tasks(aws_client:aws_client(), describe_export_image_tasks_request()) ->
    {ok, describe_export_image_tasks_result(), tuple()} |
    {error, any()}.
describe_export_image_tasks(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_export_image_tasks(Client, Input, []).

-spec describe_export_image_tasks(aws_client:aws_client(), describe_export_image_tasks_request(), proplists:proplist()) ->
    {ok, describe_export_image_tasks_result(), tuple()} |
    {error, any()}.
describe_export_image_tasks(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeExportImageTasks">>, Input, Options).

%% @doc Describes the specified export instance tasks or all of your export
%% instance tasks.
-spec describe_export_tasks(aws_client:aws_client(), describe_export_tasks_request()) ->
    {ok, describe_export_tasks_result(), tuple()} |
    {error, any()}.
describe_export_tasks(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_export_tasks(Client, Input, []).

-spec describe_export_tasks(aws_client:aws_client(), describe_export_tasks_request(), proplists:proplist()) ->
    {ok, describe_export_tasks_result(), tuple()} |
    {error, any()}.
describe_export_tasks(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeExportTasks">>, Input, Options).

%% @doc Describe details for Windows AMIs that are configured for Windows
%% fast launch.
-spec describe_fast_launch_images(aws_client:aws_client(), describe_fast_launch_images_request()) ->
    {ok, describe_fast_launch_images_result(), tuple()} |
    {error, any()}.
describe_fast_launch_images(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_fast_launch_images(Client, Input, []).

-spec describe_fast_launch_images(aws_client:aws_client(), describe_fast_launch_images_request(), proplists:proplist()) ->
    {ok, describe_fast_launch_images_result(), tuple()} |
    {error, any()}.
describe_fast_launch_images(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeFastLaunchImages">>, Input, Options).

%% @doc Describes the state of fast snapshot restores for your snapshots.
-spec describe_fast_snapshot_restores(aws_client:aws_client(), describe_fast_snapshot_restores_request()) ->
    {ok, describe_fast_snapshot_restores_result(), tuple()} |
    {error, any()}.
describe_fast_snapshot_restores(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_fast_snapshot_restores(Client, Input, []).

-spec describe_fast_snapshot_restores(aws_client:aws_client(), describe_fast_snapshot_restores_request(), proplists:proplist()) ->
    {ok, describe_fast_snapshot_restores_result(), tuple()} |
    {error, any()}.
describe_fast_snapshot_restores(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeFastSnapshotRestores">>, Input, Options).

%% @doc Describes the events for the specified EC2 Fleet during the specified
%% time.
%%
%% EC2 Fleet events are delayed by up to 30 seconds before they can be
%% described. This ensures
%% that you can query by the last evaluated time and not miss a recorded
%% event. EC2 Fleet events
%% are available for 48 hours.
%%
%% For more information, see Monitor fleet events using Amazon EventBridge:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/fleet-monitor.html in
%% the
%% Amazon EC2 User Guide.
-spec describe_fleet_history(aws_client:aws_client(), describe_fleet_history_request()) ->
    {ok, describe_fleet_history_result(), tuple()} |
    {error, any()}.
describe_fleet_history(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_fleet_history(Client, Input, []).

-spec describe_fleet_history(aws_client:aws_client(), describe_fleet_history_request(), proplists:proplist()) ->
    {ok, describe_fleet_history_result(), tuple()} |
    {error, any()}.
describe_fleet_history(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeFleetHistory">>, Input, Options).

%% @doc Describes the running instances for the specified EC2 Fleet.
%%
%% Currently, `DescribeFleetInstances' does not support fleets of type
%% `instant'. Instead, use `DescribeFleets', specifying the
%% `instant' fleet ID in the request.
%%
%% For more information, see Describe your
%% EC2 Fleet:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#monitor-ec2-fleet
%% in the Amazon EC2 User Guide.
-spec describe_fleet_instances(aws_client:aws_client(), describe_fleet_instances_request()) ->
    {ok, describe_fleet_instances_result(), tuple()} |
    {error, any()}.
describe_fleet_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_fleet_instances(Client, Input, []).

-spec describe_fleet_instances(aws_client:aws_client(), describe_fleet_instances_request(), proplists:proplist()) ->
    {ok, describe_fleet_instances_result(), tuple()} |
    {error, any()}.
describe_fleet_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeFleetInstances">>, Input, Options).

%% @doc Describes the specified EC2 Fleet or all of your EC2 Fleets.
%%
%% If a fleet is of type `instant', you must specify the fleet ID in the
%% request, otherwise the fleet does not appear in the response.
%%
%% For more information, see Describe your
%% EC2 Fleet:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/manage-ec2-fleet.html#monitor-ec2-fleet
%% in the Amazon EC2 User Guide.
-spec describe_fleets(aws_client:aws_client(), describe_fleets_request()) ->
    {ok, describe_fleets_result(), tuple()} |
    {error, any()}.
describe_fleets(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_fleets(Client, Input, []).

-spec describe_fleets(aws_client:aws_client(), describe_fleets_request(), proplists:proplist()) ->
    {ok, describe_fleets_result(), tuple()} |
    {error, any()}.
describe_fleets(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeFleets">>, Input, Options).

%% @doc Describes one or more flow logs.
%%
%% To view the published flow log records, you must view the log destination.
%% For example,
%% the CloudWatch Logs log group, the Amazon S3 bucket, or the Kinesis Data
%% Firehose delivery stream.
-spec describe_flow_logs(aws_client:aws_client(), describe_flow_logs_request()) ->
    {ok, describe_flow_logs_result(), tuple()} |
    {error, any()}.
describe_flow_logs(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_flow_logs(Client, Input, []).

-spec describe_flow_logs(aws_client:aws_client(), describe_flow_logs_request(), proplists:proplist()) ->
    {ok, describe_flow_logs_result(), tuple()} |
    {error, any()}.
describe_flow_logs(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeFlowLogs">>, Input, Options).

%% @doc Describes the specified attribute of the specified Amazon FPGA Image
%% (AFI).
-spec describe_fpga_image_attribute(aws_client:aws_client(), describe_fpga_image_attribute_request()) ->
    {ok, describe_fpga_image_attribute_result(), tuple()} |
    {error, any()}.
describe_fpga_image_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_fpga_image_attribute(Client, Input, []).

-spec describe_fpga_image_attribute(aws_client:aws_client(), describe_fpga_image_attribute_request(), proplists:proplist()) ->
    {ok, describe_fpga_image_attribute_result(), tuple()} |
    {error, any()}.
describe_fpga_image_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeFpgaImageAttribute">>, Input, Options).

%% @doc Describes the Amazon FPGA Images (AFIs) available to you.
%%
%% These include public AFIs,
%% private AFIs that you own, and AFIs owned by other Amazon Web Services
%% accounts for which you have load
%% permissions.
-spec describe_fpga_images(aws_client:aws_client(), describe_fpga_images_request()) ->
    {ok, describe_fpga_images_result(), tuple()} |
    {error, any()}.
describe_fpga_images(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_fpga_images(Client, Input, []).

-spec describe_fpga_images(aws_client:aws_client(), describe_fpga_images_request(), proplists:proplist()) ->
    {ok, describe_fpga_images_result(), tuple()} |
    {error, any()}.
describe_fpga_images(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeFpgaImages">>, Input, Options).

%% @doc Describes the Dedicated Host reservations that are available to
%% purchase.
%%
%% The results describe all of the Dedicated Host reservation offerings,
%% including
%% offerings that might not match the instance family and Region of your
%% Dedicated Hosts.
%% When purchasing an offering, ensure that the instance family and Region of
%% the offering
%% matches that of the Dedicated Hosts with which it is to be associated. For
%% more
%% information about supported instance types, see Dedicated Hosts:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html
%% in the Amazon EC2 User Guide.
-spec describe_host_reservation_offerings(aws_client:aws_client(), describe_host_reservation_offerings_request()) ->
    {ok, describe_host_reservation_offerings_result(), tuple()} |
    {error, any()}.
describe_host_reservation_offerings(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_host_reservation_offerings(Client, Input, []).

-spec describe_host_reservation_offerings(aws_client:aws_client(), describe_host_reservation_offerings_request(), proplists:proplist()) ->
    {ok, describe_host_reservation_offerings_result(), tuple()} |
    {error, any()}.
describe_host_reservation_offerings(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeHostReservationOfferings">>, Input, Options).

%% @doc Describes reservations that are associated with Dedicated Hosts in
%% your
%% account.
-spec describe_host_reservations(aws_client:aws_client(), describe_host_reservations_request()) ->
    {ok, describe_host_reservations_result(), tuple()} |
    {error, any()}.
describe_host_reservations(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_host_reservations(Client, Input, []).

-spec describe_host_reservations(aws_client:aws_client(), describe_host_reservations_request(), proplists:proplist()) ->
    {ok, describe_host_reservations_result(), tuple()} |
    {error, any()}.
describe_host_reservations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeHostReservations">>, Input, Options).

%% @doc Describes the specified Dedicated Hosts or all your Dedicated Hosts.
%%
%% The results describe only the Dedicated Hosts in the Region you're
%% currently using.
%% All listed instances consume capacity on your Dedicated Host. Dedicated
%% Hosts that have
%% recently been released are listed with the state `released'.
-spec describe_hosts(aws_client:aws_client(), describe_hosts_request()) ->
    {ok, describe_hosts_result(), tuple()} |
    {error, any()}.
describe_hosts(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_hosts(Client, Input, []).

-spec describe_hosts(aws_client:aws_client(), describe_hosts_request(), proplists:proplist()) ->
    {ok, describe_hosts_result(), tuple()} |
    {error, any()}.
describe_hosts(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeHosts">>, Input, Options).

%% @doc Describes your IAM instance profile associations.
-spec describe_iam_instance_profile_associations(aws_client:aws_client(), describe_iam_instance_profile_associations_request()) ->
    {ok, describe_iam_instance_profile_associations_result(), tuple()} |
    {error, any()}.
describe_iam_instance_profile_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_iam_instance_profile_associations(Client, Input, []).

-spec describe_iam_instance_profile_associations(aws_client:aws_client(), describe_iam_instance_profile_associations_request(), proplists:proplist()) ->
    {ok, describe_iam_instance_profile_associations_result(), tuple()} |
    {error, any()}.
describe_iam_instance_profile_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeIamInstanceProfileAssociations">>, Input, Options).

%% @doc Describes the ID format settings for your resources on a per-Region
%% basis, for example, to view which resource types are enabled for longer
%% IDs.
%%
%% This request only returns information about resource types whose ID
%% formats can be modified; it does not return information about other
%% resource types.
%%
%% The following resource types support longer IDs: `bundle' |
%% `conversion-task' | `customer-gateway' | `dhcp-options' |
%% `elastic-ip-allocation' | `elastic-ip-association' |
%% `export-task' | `flow-log' | `image' |
%% `import-task' | `instance' | `internet-gateway' |
%% `network-acl' | `network-acl-association' |
%% `network-interface' | `network-interface-attachment' |
%% `prefix-list' | `reservation' | `route-table' |
%% `route-table-association' | `security-group' |
%% `snapshot' | `subnet' |
%% `subnet-cidr-block-association' | `volume' | `vpc'
%% | `vpc-cidr-block-association' | `vpc-endpoint' |
%% `vpc-peering-connection' | `vpn-connection' | `vpn-gateway'.
%%
%% These settings apply to the IAM user who makes the request; they do not
%% apply to the entire
%% Amazon Web Services account. By default, an IAM user defaults to the same
%% settings as the root user, unless
%% they explicitly override the settings by running the `ModifyIdFormat'
%% command. Resources
%% created with longer IDs are visible to all IAM users, regardless of these
%% settings and
%% provided that they have permission to use the relevant `Describe'
%% command for the
%% resource type.
-spec describe_id_format(aws_client:aws_client(), describe_id_format_request()) ->
    {ok, describe_id_format_result(), tuple()} |
    {error, any()}.
describe_id_format(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_id_format(Client, Input, []).

-spec describe_id_format(aws_client:aws_client(), describe_id_format_request(), proplists:proplist()) ->
    {ok, describe_id_format_result(), tuple()} |
    {error, any()}.
describe_id_format(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeIdFormat">>, Input, Options).

%% @doc Describes the ID format settings for resources for the specified IAM
%% user, IAM role, or root
%% user.
%%
%% For example, you can view the resource types that are enabled for longer
%% IDs. This request only
%% returns information about resource types whose ID formats can be modified;
%% it does not return
%% information about other resource types. For more information, see Resource
%% IDs: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html
%% in the Amazon Elastic Compute Cloud User Guide.
%%
%% The following resource types support longer IDs: `bundle' |
%% `conversion-task' | `customer-gateway' | `dhcp-options' |
%% `elastic-ip-allocation' | `elastic-ip-association' |
%% `export-task' | `flow-log' | `image' |
%% `import-task' | `instance' | `internet-gateway' |
%% `network-acl' | `network-acl-association' |
%% `network-interface' | `network-interface-attachment' |
%% `prefix-list' | `reservation' | `route-table' |
%% `route-table-association' | `security-group' |
%% `snapshot' | `subnet' |
%% `subnet-cidr-block-association' | `volume' | `vpc'
%% | `vpc-cidr-block-association' | `vpc-endpoint' |
%% `vpc-peering-connection' | `vpn-connection' | `vpn-gateway'.
%%
%% These settings apply to the principal specified in the request. They do
%% not apply to the
%% principal that makes the request.
-spec describe_identity_id_format(aws_client:aws_client(), describe_identity_id_format_request()) ->
    {ok, describe_identity_id_format_result(), tuple()} |
    {error, any()}.
describe_identity_id_format(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_identity_id_format(Client, Input, []).

-spec describe_identity_id_format(aws_client:aws_client(), describe_identity_id_format_request(), proplists:proplist()) ->
    {ok, describe_identity_id_format_result(), tuple()} |
    {error, any()}.
describe_identity_id_format(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeIdentityIdFormat">>, Input, Options).

%% @doc Describes the specified attribute of the specified AMI.
%%
%% You can specify only one attribute
%% at a time.
%%
%% The order of the elements in the response, including those within nested
%% structures,
%% might vary. Applications should not assume the elements appear in a
%% particular order.
-spec describe_image_attribute(aws_client:aws_client(), describe_image_attribute_request()) ->
    {ok, image_attribute(), tuple()} |
    {error, any()}.
describe_image_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_image_attribute(Client, Input, []).

-spec describe_image_attribute(aws_client:aws_client(), describe_image_attribute_request(), proplists:proplist()) ->
    {ok, image_attribute(), tuple()} |
    {error, any()}.
describe_image_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeImageAttribute">>, Input, Options).

%% @doc Describes the specified images (AMIs, AKIs, and ARIs) available to
%% you or all of the
%% images available to you.
%%
%% The images available to you include public images, private images that you
%% own, and
%% private images owned by other Amazon Web Services accounts for which you
%% have explicit launch
%% permissions.
%%
%% Recently deregistered images appear in the returned results for a short
%% interval and then
%% return empty results. After all instances that reference a deregistered
%% AMI are terminated,
%% specifying the ID of the image will eventually return an error indicating
%% that the AMI ID
%% cannot be found.
%%
%% When Allowed AMIs is set to `enabled', only allowed images are
%% returned in the
%% results, with the `imageAllowed' field set to `true' for each
%% image. In
%% `audit-mode', the `imageAllowed' field is set to `true' for
%% images that meet the account's Allowed AMIs criteria, and `false'
%% for images that
%% don't meet the criteria. For more information, see Allowed AMIs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-allowed-amis.html.
%%
%% The Amazon EC2 API follows an eventual consistency model. This means that
%% the result of an API
%% command you run that creates or modifies resources might not be
%% immediately available to all
%% subsequent commands you run. For guidance on how to manage eventual
%% consistency, see Eventual
%% consistency in the Amazon EC2 API:
%% https://docs.aws.amazon.com/ec2/latest/devguide/eventual-consistency.html
%% in the Amazon EC2 Developer
%% Guide.
%%
%% We strongly recommend using only paginated requests. Unpaginated requests
%% are
%% susceptible to throttling and timeouts.
%%
%% The order of the elements in the response, including those within nested
%% structures,
%% might vary. Applications should not assume the elements appear in a
%% particular order.
-spec describe_images(aws_client:aws_client(), describe_images_request()) ->
    {ok, describe_images_result(), tuple()} |
    {error, any()}.
describe_images(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_images(Client, Input, []).

-spec describe_images(aws_client:aws_client(), describe_images_request(), proplists:proplist()) ->
    {ok, describe_images_result(), tuple()} |
    {error, any()}.
describe_images(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeImages">>, Input, Options).

%% @doc Displays details about an import virtual machine or import snapshot
%% tasks that are already created.
-spec describe_import_image_tasks(aws_client:aws_client(), describe_import_image_tasks_request()) ->
    {ok, describe_import_image_tasks_result(), tuple()} |
    {error, any()}.
describe_import_image_tasks(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_import_image_tasks(Client, Input, []).

-spec describe_import_image_tasks(aws_client:aws_client(), describe_import_image_tasks_request(), proplists:proplist()) ->
    {ok, describe_import_image_tasks_result(), tuple()} |
    {error, any()}.
describe_import_image_tasks(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeImportImageTasks">>, Input, Options).

%% @doc Describes your import snapshot tasks.
-spec describe_import_snapshot_tasks(aws_client:aws_client(), describe_import_snapshot_tasks_request()) ->
    {ok, describe_import_snapshot_tasks_result(), tuple()} |
    {error, any()}.
describe_import_snapshot_tasks(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_import_snapshot_tasks(Client, Input, []).

-spec describe_import_snapshot_tasks(aws_client:aws_client(), describe_import_snapshot_tasks_request(), proplists:proplist()) ->
    {ok, describe_import_snapshot_tasks_result(), tuple()} |
    {error, any()}.
describe_import_snapshot_tasks(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeImportSnapshotTasks">>, Input, Options).

%% @doc Describes the specified attribute of the specified instance.
%%
%% You can specify only one
%% attribute at a time.
-spec describe_instance_attribute(aws_client:aws_client(), describe_instance_attribute_request()) ->
    {ok, instance_attribute(), tuple()} |
    {error, any()}.
describe_instance_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_instance_attribute(Client, Input, []).

-spec describe_instance_attribute(aws_client:aws_client(), describe_instance_attribute_request(), proplists:proplist()) ->
    {ok, instance_attribute(), tuple()} |
    {error, any()}.
describe_instance_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInstanceAttribute">>, Input, Options).

%% @doc Describes the specified EC2 Instance Connect Endpoints or all EC2
%% Instance Connect Endpoints.
-spec describe_instance_connect_endpoints(aws_client:aws_client(), describe_instance_connect_endpoints_request()) ->
    {ok, describe_instance_connect_endpoints_result(), tuple()} |
    {error, any()}.
describe_instance_connect_endpoints(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_instance_connect_endpoints(Client, Input, []).

-spec describe_instance_connect_endpoints(aws_client:aws_client(), describe_instance_connect_endpoints_request(), proplists:proplist()) ->
    {ok, describe_instance_connect_endpoints_result(), tuple()} |
    {error, any()}.
describe_instance_connect_endpoints(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInstanceConnectEndpoints">>, Input, Options).

%% @doc Describes the credit option for CPU usage of the specified burstable
%% performance
%% instances.
%%
%% The credit options are `standard' and
%% `unlimited'.
%%
%% If you do not specify an instance ID, Amazon EC2 returns burstable
%% performance
%% instances with the `unlimited' credit option, as well as instances
%% that were
%% previously configured as T2, T3, and T3a with the `unlimited' credit
%% option.
%% For example, if you resize a T2 instance, while it is configured as
%% `unlimited', to an M4 instance, Amazon EC2 returns the M4
%% instance.
%%
%% If you specify one or more instance IDs, Amazon EC2 returns the credit
%% option
%% (`standard' or `unlimited') of those instances. If you specify
%% an instance ID that is not valid, such as an instance that is not a
%% burstable
%% performance instance, an error is returned.
%%
%% Recently terminated instances might appear in the returned results. This
%% interval is
%% usually less than one hour.
%%
%% If an Availability Zone is experiencing a service disruption and you
%% specify instance
%% IDs in the affected zone, or do not specify any instance IDs at all, the
%% call fails. If
%% you specify only instance IDs in an unaffected zone, the call works
%% normally.
%%
%% For more information, see Burstable
%% performance instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html
%% in the Amazon EC2 User Guide.
-spec describe_instance_credit_specifications(aws_client:aws_client(), describe_instance_credit_specifications_request()) ->
    {ok, describe_instance_credit_specifications_result(), tuple()} |
    {error, any()}.
describe_instance_credit_specifications(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_instance_credit_specifications(Client, Input, []).

-spec describe_instance_credit_specifications(aws_client:aws_client(), describe_instance_credit_specifications_request(), proplists:proplist()) ->
    {ok, describe_instance_credit_specifications_result(), tuple()} |
    {error, any()}.
describe_instance_credit_specifications(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInstanceCreditSpecifications">>, Input, Options).

%% @doc Describes the tag keys that are registered to appear in scheduled
%% event notifications
%% for resources in the current Region.
-spec describe_instance_event_notification_attributes(aws_client:aws_client(), describe_instance_event_notification_attributes_request()) ->
    {ok, describe_instance_event_notification_attributes_result(), tuple()} |
    {error, any()}.
describe_instance_event_notification_attributes(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_instance_event_notification_attributes(Client, Input, []).

-spec describe_instance_event_notification_attributes(aws_client:aws_client(), describe_instance_event_notification_attributes_request(), proplists:proplist()) ->
    {ok, describe_instance_event_notification_attributes_result(), tuple()} |
    {error, any()}.
describe_instance_event_notification_attributes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInstanceEventNotificationAttributes">>, Input, Options).

%% @doc Describes the specified event windows or all event windows.
%%
%% If you specify event window IDs, the output includes information for only
%% the specified
%% event windows. If you specify filters, the output includes information for
%% only those event
%% windows that meet the filter criteria. If you do not specify event windows
%% IDs or filters,
%% the output includes information for all event windows, which can affect
%% performance. We
%% recommend that you use pagination to ensure that the operation returns
%% quickly and
%% successfully.
%%
%% For more information, see Define event windows for scheduled
%% events:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html in
%% the Amazon EC2 User Guide.
-spec describe_instance_event_windows(aws_client:aws_client(), describe_instance_event_windows_request()) ->
    {ok, describe_instance_event_windows_result(), tuple()} |
    {error, any()}.
describe_instance_event_windows(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_instance_event_windows(Client, Input, []).

-spec describe_instance_event_windows(aws_client:aws_client(), describe_instance_event_windows_request(), proplists:proplist()) ->
    {ok, describe_instance_event_windows_result(), tuple()} |
    {error, any()}.
describe_instance_event_windows(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInstanceEventWindows">>, Input, Options).

%% @doc Describes the AMI that was used to launch an instance, even if the
%% AMI is deprecated,
%% deregistered, made private (no longer public or shared with your account),
%% or not
%% allowed.
%%
%% If you specify instance IDs, the output includes information for only the
%% specified
%% instances. If you specify filters, the output includes information for
%% only those instances
%% that meet the filter criteria. If you do not specify instance IDs or
%% filters, the output
%% includes information for all instances, which can affect performance.
%%
%% If you specify an instance ID that is not valid, an instance that
%% doesn't exist, or an
%% instance that you do not own, an error (`InvalidInstanceID.NotFound')
%% is
%% returned.
%%
%% Recently terminated instances might appear in the returned results. This
%% interval is
%% usually less than one hour.
%%
%% In the rare case where an Availability Zone is experiencing a service
%% disruption and you
%% specify instance IDs that are in the affected Availability Zone, or do not
%% specify any
%% instance IDs at all, the call fails. If you specify only instance IDs that
%% are in an
%% unaffected Availability Zone, the call works normally.
%%
%% The order of the elements in the response, including those within nested
%% structures,
%% might vary. Applications should not assume the elements appear in a
%% particular order.
-spec describe_instance_image_metadata(aws_client:aws_client(), describe_instance_image_metadata_request()) ->
    {ok, describe_instance_image_metadata_result(), tuple()} |
    {error, any()}.
describe_instance_image_metadata(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_instance_image_metadata(Client, Input, []).

-spec describe_instance_image_metadata(aws_client:aws_client(), describe_instance_image_metadata_request(), proplists:proplist()) ->
    {ok, describe_instance_image_metadata_result(), tuple()} |
    {error, any()}.
describe_instance_image_metadata(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInstanceImageMetadata">>, Input, Options).

%% @doc Describes the status of the specified instances or all of your
%% instances.
%%
%% By default,
%% only running instances are described, unless you specifically indicate to
%% return the
%% status of all instances.
%%
%% Instance status includes the following components:
%%
%% Status checks - Amazon EC2 performs status
%% checks on running EC2 instances to identify hardware and software issues.
%% For
%% more information, see Status checks for your instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-system-instance-status-check.html
%% and Troubleshoot
%% instances with failed status checks:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html
%% in the Amazon EC2 User
%% Guide.
%%
%% Scheduled events - Amazon EC2 can schedule
%% events (such as reboot, stop, or terminate) for your instances related to
%% hardware issues, software updates, or system maintenance. For more
%% information,
%% see Scheduled events for your instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html
%% in the Amazon EC2 User
%% Guide.
%%
%% Instance state - You can manage your instances
%% from the moment you launch them through their termination. For more
%% information,
%% see Instance
%% lifecycle:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html
%% in the Amazon EC2 User Guide.
%%
%% The Amazon EC2 API follows an eventual consistency model. This means that
%% the result of an
%% API command you run that creates or modifies resources might not be
%% immediately
%% available to all subsequent commands you run. For guidance on how to
%% manage eventual
%% consistency, see Eventual consistency in the
%% Amazon EC2 API:
%% https://docs.aws.amazon.com/ec2/latest/devguide/eventual-consistency.html
%% in the Amazon EC2 Developer
%% Guide.
%%
%% The order of the elements in the response, including those within nested
%% structures, might vary. Applications should not assume the elements appear
%% in a
%% particular order.
-spec describe_instance_status(aws_client:aws_client(), describe_instance_status_request()) ->
    {ok, describe_instance_status_result(), tuple()} |
    {error, any()}.
describe_instance_status(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_instance_status(Client, Input, []).

-spec describe_instance_status(aws_client:aws_client(), describe_instance_status_request(), proplists:proplist()) ->
    {ok, describe_instance_status_result(), tuple()} |
    {error, any()}.
describe_instance_status(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInstanceStatus">>, Input, Options).

%% @doc Describes a tree-based hierarchy that represents the physical host
%% placement of your
%% EC2 instances within an Availability Zone or Local Zone.
%%
%% You can use this information to
%% determine the relative proximity of your EC2 instances within the Amazon
%% Web Services network to
%% support your tightly coupled workloads.
%%
%% Instance topology is supported for specific instance types only. For more
%% information,
%% see
%% Prerequisites for Amazon EC2 instance topology:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-topology-prerequisites.html
%% in the Amazon EC2 User Guide.
%%
%% The Amazon EC2 API follows an eventual consistency model due to the
%% distributed nature of the system supporting it. As a result, when you call
%% the
%% DescribeInstanceTopology API command immediately after launching
%% instances, the
%% response might return a `null' value for `capacityBlockId'
%% because the data might not have fully propagated across all subsystems.
%% For more
%% information, see Eventual consistency in the
%% Amazon EC2 API:
%% https://docs.aws.amazon.com/ec2/latest/devguide/eventual-consistency.html
%% in the Amazon EC2 Developer
%% Guide.
%%
%% For more information, see Amazon EC2 instance
%% topology:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-topology.html
%% in the Amazon EC2 User Guide.
-spec describe_instance_topology(aws_client:aws_client(), describe_instance_topology_request()) ->
    {ok, describe_instance_topology_result(), tuple()} |
    {error, any()}.
describe_instance_topology(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_instance_topology(Client, Input, []).

-spec describe_instance_topology(aws_client:aws_client(), describe_instance_topology_request(), proplists:proplist()) ->
    {ok, describe_instance_topology_result(), tuple()} |
    {error, any()}.
describe_instance_topology(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInstanceTopology">>, Input, Options).

%% @doc Lists the instance types that are offered for the specified location.
%%
%% If no location is
%% specified, the default is to list the instance types that are offered in
%% the current
%% Region.
-spec describe_instance_type_offerings(aws_client:aws_client(), describe_instance_type_offerings_request()) ->
    {ok, describe_instance_type_offerings_result(), tuple()} |
    {error, any()}.
describe_instance_type_offerings(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_instance_type_offerings(Client, Input, []).

-spec describe_instance_type_offerings(aws_client:aws_client(), describe_instance_type_offerings_request(), proplists:proplist()) ->
    {ok, describe_instance_type_offerings_result(), tuple()} |
    {error, any()}.
describe_instance_type_offerings(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInstanceTypeOfferings">>, Input, Options).

%% @doc Describes the specified instance types.
%%
%% By default, all instance types for the current
%% Region are described. Alternatively, you can filter the results.
-spec describe_instance_types(aws_client:aws_client(), describe_instance_types_request()) ->
    {ok, describe_instance_types_result(), tuple()} |
    {error, any()}.
describe_instance_types(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_instance_types(Client, Input, []).

-spec describe_instance_types(aws_client:aws_client(), describe_instance_types_request(), proplists:proplist()) ->
    {ok, describe_instance_types_result(), tuple()} |
    {error, any()}.
describe_instance_types(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInstanceTypes">>, Input, Options).

%% @doc Describes the specified instances or all instances.
%%
%% If you specify instance IDs, the output includes information for only the
%% specified
%% instances. If you specify filters, the output includes information for
%% only those
%% instances that meet the filter criteria. If you do not specify instance
%% IDs or filters,
%% the output includes information for all instances, which can affect
%% performance. We
%% recommend that you use pagination to ensure that the operation returns
%% quickly and
%% successfully.
%%
%% If you specify an instance ID that is not valid, an error is returned. If
%% you specify
%% an instance that you do not own, it is not included in the output.
%%
%% Recently terminated instances might appear in the returned results. This
%% interval is
%% usually less than one hour.
%%
%% If you describe instances in the rare case where an Availability Zone is
%% experiencing
%% a service disruption and you specify instance IDs that are in the affected
%% zone, or do
%% not specify any instance IDs at all, the call fails. If you describe
%% instances and
%% specify only instance IDs that are in an unaffected zone, the call works
%% normally.
%%
%% The Amazon EC2 API follows an eventual consistency model. This means that
%% the result of an
%% API command you run that creates or modifies resources might not be
%% immediately
%% available to all subsequent commands you run. For guidance on how to
%% manage eventual
%% consistency, see Eventual consistency in the
%% Amazon EC2 API:
%% https://docs.aws.amazon.com/ec2/latest/devguide/eventual-consistency.html
%% in the Amazon EC2 Developer
%% Guide.
%%
%% We strongly recommend using only paginated requests. Unpaginated requests
%% are
%% susceptible to throttling and timeouts.
%%
%% The order of the elements in the response, including those within nested
%% structures, might vary. Applications should not assume the elements appear
%% in a
%% particular order.
-spec describe_instances(aws_client:aws_client(), describe_instances_request()) ->
    {ok, describe_instances_result(), tuple()} |
    {error, any()}.
describe_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_instances(Client, Input, []).

-spec describe_instances(aws_client:aws_client(), describe_instances_request(), proplists:proplist()) ->
    {ok, describe_instances_result(), tuple()} |
    {error, any()}.
describe_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInstances">>, Input, Options).

%% @doc Describes your internet gateways.
%%
%% The default is to describe all your internet gateways.
%% Alternatively, you can specify specific internet gateway IDs or filter the
%% results to
%% include only the internet gateways that match specific criteria.
-spec describe_internet_gateways(aws_client:aws_client(), describe_internet_gateways_request()) ->
    {ok, describe_internet_gateways_result(), tuple()} |
    {error, any()}.
describe_internet_gateways(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_internet_gateways(Client, Input, []).

-spec describe_internet_gateways(aws_client:aws_client(), describe_internet_gateways_request(), proplists:proplist()) ->
    {ok, describe_internet_gateways_result(), tuple()} |
    {error, any()}.
describe_internet_gateways(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeInternetGateways">>, Input, Options).

%% @doc Describes your Autonomous System Numbers (ASNs), their provisioning
%% statuses, and the BYOIP CIDRs with which they are associated.
%%
%% For more information, see Tutorial: Bring your ASN to IPAM:
%% https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoasn.html in the
%% Amazon VPC IPAM guide.
-spec describe_ipam_byoasn(aws_client:aws_client(), describe_ipam_byoasn_request()) ->
    {ok, describe_ipam_byoasn_result(), tuple()} |
    {error, any()}.
describe_ipam_byoasn(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_ipam_byoasn(Client, Input, []).

-spec describe_ipam_byoasn(aws_client:aws_client(), describe_ipam_byoasn_request(), proplists:proplist()) ->
    {ok, describe_ipam_byoasn_result(), tuple()} |
    {error, any()}.
describe_ipam_byoasn(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeIpamByoasn">>, Input, Options).

%% @doc Describe verification tokens.
%%
%% A verification token is an Amazon Web Services-generated random value that
%% you can use to prove ownership of an external resource. For example, you
%% can use a verification token to validate that you control a public IP
%% address range when you bring an IP address range to Amazon Web Services
%% (BYOIP).
-spec describe_ipam_external_resource_verification_tokens(aws_client:aws_client(), describe_ipam_external_resource_verification_tokens_request()) ->
    {ok, describe_ipam_external_resource_verification_tokens_result(), tuple()} |
    {error, any()}.
describe_ipam_external_resource_verification_tokens(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_ipam_external_resource_verification_tokens(Client, Input, []).

-spec describe_ipam_external_resource_verification_tokens(aws_client:aws_client(), describe_ipam_external_resource_verification_tokens_request(), proplists:proplist()) ->
    {ok, describe_ipam_external_resource_verification_tokens_result(), tuple()} |
    {error, any()}.
describe_ipam_external_resource_verification_tokens(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeIpamExternalResourceVerificationTokens">>, Input, Options).

%% @doc Get information about your IPAM pools.
-spec describe_ipam_pools(aws_client:aws_client(), describe_ipam_pools_request()) ->
    {ok, describe_ipam_pools_result(), tuple()} |
    {error, any()}.
describe_ipam_pools(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_ipam_pools(Client, Input, []).

-spec describe_ipam_pools(aws_client:aws_client(), describe_ipam_pools_request(), proplists:proplist()) ->
    {ok, describe_ipam_pools_result(), tuple()} |
    {error, any()}.
describe_ipam_pools(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeIpamPools">>, Input, Options).

%% @doc Describes IPAM resource discoveries.
%%
%% A resource discovery is an IPAM component that enables IPAM to manage and
%% monitor resources that belong to the owning account.
-spec describe_ipam_resource_discoveries(aws_client:aws_client(), describe_ipam_resource_discoveries_request()) ->
    {ok, describe_ipam_resource_discoveries_result(), tuple()} |
    {error, any()}.
describe_ipam_resource_discoveries(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_ipam_resource_discoveries(Client, Input, []).

-spec describe_ipam_resource_discoveries(aws_client:aws_client(), describe_ipam_resource_discoveries_request(), proplists:proplist()) ->
    {ok, describe_ipam_resource_discoveries_result(), tuple()} |
    {error, any()}.
describe_ipam_resource_discoveries(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeIpamResourceDiscoveries">>, Input, Options).

%% @doc Describes resource discovery association with an Amazon VPC IPAM.
%%
%% An associated resource discovery is a resource discovery that has been
%% associated with an IPAM..
-spec describe_ipam_resource_discovery_associations(aws_client:aws_client(), describe_ipam_resource_discovery_associations_request()) ->
    {ok, describe_ipam_resource_discovery_associations_result(), tuple()} |
    {error, any()}.
describe_ipam_resource_discovery_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_ipam_resource_discovery_associations(Client, Input, []).

-spec describe_ipam_resource_discovery_associations(aws_client:aws_client(), describe_ipam_resource_discovery_associations_request(), proplists:proplist()) ->
    {ok, describe_ipam_resource_discovery_associations_result(), tuple()} |
    {error, any()}.
describe_ipam_resource_discovery_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeIpamResourceDiscoveryAssociations">>, Input, Options).

%% @doc Get information about your IPAM scopes.
-spec describe_ipam_scopes(aws_client:aws_client(), describe_ipam_scopes_request()) ->
    {ok, describe_ipam_scopes_result(), tuple()} |
    {error, any()}.
describe_ipam_scopes(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_ipam_scopes(Client, Input, []).

-spec describe_ipam_scopes(aws_client:aws_client(), describe_ipam_scopes_request(), proplists:proplist()) ->
    {ok, describe_ipam_scopes_result(), tuple()} |
    {error, any()}.
describe_ipam_scopes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeIpamScopes">>, Input, Options).

%% @doc Get information about your IPAM pools.
%%
%% For more information, see What is IPAM?:
%% https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html in the
%% Amazon VPC IPAM User Guide.
-spec describe_ipams(aws_client:aws_client(), describe_ipams_request()) ->
    {ok, describe_ipams_result(), tuple()} |
    {error, any()}.
describe_ipams(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_ipams(Client, Input, []).

-spec describe_ipams(aws_client:aws_client(), describe_ipams_request(), proplists:proplist()) ->
    {ok, describe_ipams_result(), tuple()} |
    {error, any()}.
describe_ipams(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeIpams">>, Input, Options).

%% @doc Describes your IPv6 address pools.
-spec describe_ipv6_pools(aws_client:aws_client(), describe_ipv6_pools_request()) ->
    {ok, describe_ipv6_pools_result(), tuple()} |
    {error, any()}.
describe_ipv6_pools(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_ipv6_pools(Client, Input, []).

-spec describe_ipv6_pools(aws_client:aws_client(), describe_ipv6_pools_request(), proplists:proplist()) ->
    {ok, describe_ipv6_pools_result(), tuple()} |
    {error, any()}.
describe_ipv6_pools(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeIpv6Pools">>, Input, Options).

%% @doc Describes the specified key pairs or all of your key pairs.
%%
%% For more information about key pairs, see Amazon EC2 key pairs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html
%% in the Amazon EC2 User Guide.
-spec describe_key_pairs(aws_client:aws_client(), describe_key_pairs_request()) ->
    {ok, describe_key_pairs_result(), tuple()} |
    {error, any()}.
describe_key_pairs(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_key_pairs(Client, Input, []).

-spec describe_key_pairs(aws_client:aws_client(), describe_key_pairs_request(), proplists:proplist()) ->
    {ok, describe_key_pairs_result(), tuple()} |
    {error, any()}.
describe_key_pairs(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeKeyPairs">>, Input, Options).

%% @doc Describes one or more versions of a specified launch template.
%%
%% You can describe all
%% versions, individual versions, or a range of versions. You can also
%% describe all the
%% latest versions or all the default versions of all the launch templates in
%% your
%% account.
-spec describe_launch_template_versions(aws_client:aws_client(), describe_launch_template_versions_request()) ->
    {ok, describe_launch_template_versions_result(), tuple()} |
    {error, any()}.
describe_launch_template_versions(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_launch_template_versions(Client, Input, []).

-spec describe_launch_template_versions(aws_client:aws_client(), describe_launch_template_versions_request(), proplists:proplist()) ->
    {ok, describe_launch_template_versions_result(), tuple()} |
    {error, any()}.
describe_launch_template_versions(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeLaunchTemplateVersions">>, Input, Options).

%% @doc Describes one or more launch templates.
-spec describe_launch_templates(aws_client:aws_client(), describe_launch_templates_request()) ->
    {ok, describe_launch_templates_result(), tuple()} |
    {error, any()}.
describe_launch_templates(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_launch_templates(Client, Input, []).

-spec describe_launch_templates(aws_client:aws_client(), describe_launch_templates_request(), proplists:proplist()) ->
    {ok, describe_launch_templates_result(), tuple()} |
    {error, any()}.
describe_launch_templates(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeLaunchTemplates">>, Input, Options).

%% @doc Describes the associations between virtual interface groups and local
%% gateway route tables.
-spec describe_local_gateway_route_table_virtual_interface_group_associations(aws_client:aws_client(), describe_local_gateway_route_table_virtual_interface_group_associations_request()) ->
    {ok, describe_local_gateway_route_table_virtual_interface_group_associations_result(), tuple()} |
    {error, any()}.
describe_local_gateway_route_table_virtual_interface_group_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_local_gateway_route_table_virtual_interface_group_associations(Client, Input, []).

-spec describe_local_gateway_route_table_virtual_interface_group_associations(aws_client:aws_client(), describe_local_gateway_route_table_virtual_interface_group_associations_request(), proplists:proplist()) ->
    {ok, describe_local_gateway_route_table_virtual_interface_group_associations_result(), tuple()} |
    {error, any()}.
describe_local_gateway_route_table_virtual_interface_group_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations">>, Input, Options).

%% @doc Describes the specified associations between VPCs and local gateway
%% route tables.
-spec describe_local_gateway_route_table_vpc_associations(aws_client:aws_client(), describe_local_gateway_route_table_vpc_associations_request()) ->
    {ok, describe_local_gateway_route_table_vpc_associations_result(), tuple()} |
    {error, any()}.
describe_local_gateway_route_table_vpc_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_local_gateway_route_table_vpc_associations(Client, Input, []).

-spec describe_local_gateway_route_table_vpc_associations(aws_client:aws_client(), describe_local_gateway_route_table_vpc_associations_request(), proplists:proplist()) ->
    {ok, describe_local_gateway_route_table_vpc_associations_result(), tuple()} |
    {error, any()}.
describe_local_gateway_route_table_vpc_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeLocalGatewayRouteTableVpcAssociations">>, Input, Options).

%% @doc Describes one or more local gateway route tables.
%%
%% By default, all local gateway route tables are described.
%% Alternatively, you can filter the results.
-spec describe_local_gateway_route_tables(aws_client:aws_client(), describe_local_gateway_route_tables_request()) ->
    {ok, describe_local_gateway_route_tables_result(), tuple()} |
    {error, any()}.
describe_local_gateway_route_tables(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_local_gateway_route_tables(Client, Input, []).

-spec describe_local_gateway_route_tables(aws_client:aws_client(), describe_local_gateway_route_tables_request(), proplists:proplist()) ->
    {ok, describe_local_gateway_route_tables_result(), tuple()} |
    {error, any()}.
describe_local_gateway_route_tables(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeLocalGatewayRouteTables">>, Input, Options).

%% @doc Describes the specified local gateway virtual interface groups.
-spec describe_local_gateway_virtual_interface_groups(aws_client:aws_client(), describe_local_gateway_virtual_interface_groups_request()) ->
    {ok, describe_local_gateway_virtual_interface_groups_result(), tuple()} |
    {error, any()}.
describe_local_gateway_virtual_interface_groups(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_local_gateway_virtual_interface_groups(Client, Input, []).

-spec describe_local_gateway_virtual_interface_groups(aws_client:aws_client(), describe_local_gateway_virtual_interface_groups_request(), proplists:proplist()) ->
    {ok, describe_local_gateway_virtual_interface_groups_result(), tuple()} |
    {error, any()}.
describe_local_gateway_virtual_interface_groups(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeLocalGatewayVirtualInterfaceGroups">>, Input, Options).

%% @doc Describes the specified local gateway virtual interfaces.
-spec describe_local_gateway_virtual_interfaces(aws_client:aws_client(), describe_local_gateway_virtual_interfaces_request()) ->
    {ok, describe_local_gateway_virtual_interfaces_result(), tuple()} |
    {error, any()}.
describe_local_gateway_virtual_interfaces(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_local_gateway_virtual_interfaces(Client, Input, []).

-spec describe_local_gateway_virtual_interfaces(aws_client:aws_client(), describe_local_gateway_virtual_interfaces_request(), proplists:proplist()) ->
    {ok, describe_local_gateway_virtual_interfaces_result(), tuple()} |
    {error, any()}.
describe_local_gateway_virtual_interfaces(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeLocalGatewayVirtualInterfaces">>, Input, Options).

%% @doc Describes one or more local gateways.
%%
%% By default, all local gateways are described.
%% Alternatively, you can filter the results.
-spec describe_local_gateways(aws_client:aws_client(), describe_local_gateways_request()) ->
    {ok, describe_local_gateways_result(), tuple()} |
    {error, any()}.
describe_local_gateways(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_local_gateways(Client, Input, []).

-spec describe_local_gateways(aws_client:aws_client(), describe_local_gateways_request(), proplists:proplist()) ->
    {ok, describe_local_gateways_result(), tuple()} |
    {error, any()}.
describe_local_gateways(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeLocalGateways">>, Input, Options).

%% @doc Describes the lock status for a snapshot.
-spec describe_locked_snapshots(aws_client:aws_client(), describe_locked_snapshots_request()) ->
    {ok, describe_locked_snapshots_result(), tuple()} |
    {error, any()}.
describe_locked_snapshots(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_locked_snapshots(Client, Input, []).

-spec describe_locked_snapshots(aws_client:aws_client(), describe_locked_snapshots_request(), proplists:proplist()) ->
    {ok, describe_locked_snapshots_result(), tuple()} |
    {error, any()}.
describe_locked_snapshots(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeLockedSnapshots">>, Input, Options).

%% @doc Describes the specified EC2 Mac Dedicated Host or all of your EC2 Mac
%% Dedicated Hosts.
-spec describe_mac_hosts(aws_client:aws_client(), describe_mac_hosts_request()) ->
    {ok, describe_mac_hosts_result(), tuple()} |
    {error, any()}.
describe_mac_hosts(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_mac_hosts(Client, Input, []).

-spec describe_mac_hosts(aws_client:aws_client(), describe_mac_hosts_request(), proplists:proplist()) ->
    {ok, describe_mac_hosts_result(), tuple()} |
    {error, any()}.
describe_mac_hosts(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeMacHosts">>, Input, Options).

%% @doc Describes a System Integrity Protection (SIP) modification task or
%% volume ownership delegation
%% task for an Amazon EC2 Mac instance.
%%
%% For more information, see Configure
%% SIP for Amazon EC2 instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/mac-sip-settings.html#mac-sip-configure
%% in the Amazon EC2 User Guide.
-spec describe_mac_modification_tasks(aws_client:aws_client(), describe_mac_modification_tasks_request()) ->
    {ok, describe_mac_modification_tasks_result(), tuple()} |
    {error, any()}.
describe_mac_modification_tasks(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_mac_modification_tasks(Client, Input, []).

-spec describe_mac_modification_tasks(aws_client:aws_client(), describe_mac_modification_tasks_request(), proplists:proplist()) ->
    {ok, describe_mac_modification_tasks_result(), tuple()} |
    {error, any()}.
describe_mac_modification_tasks(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeMacModificationTasks">>, Input, Options).

%% @doc Describes your managed prefix lists and any Amazon Web
%% Services-managed prefix lists.
-spec describe_managed_prefix_lists(aws_client:aws_client(), describe_managed_prefix_lists_request()) ->
    {ok, describe_managed_prefix_lists_result(), tuple()} |
    {error, any()}.
describe_managed_prefix_lists(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_managed_prefix_lists(Client, Input, []).

-spec describe_managed_prefix_lists(aws_client:aws_client(), describe_managed_prefix_lists_request(), proplists:proplist()) ->
    {ok, describe_managed_prefix_lists_result(), tuple()} |
    {error, any()}.
describe_managed_prefix_lists(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeManagedPrefixLists">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Describes your Elastic IP addresses that are being moved from or being
%% restored to the EC2-Classic platform.
%% This request does not return information about any other Elastic IP
%% addresses in your account.
-spec describe_moving_addresses(aws_client:aws_client(), describe_moving_addresses_request()) ->
    {ok, describe_moving_addresses_result(), tuple()} |
    {error, any()}.
describe_moving_addresses(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_moving_addresses(Client, Input, []).

-spec describe_moving_addresses(aws_client:aws_client(), describe_moving_addresses_request(), proplists:proplist()) ->
    {ok, describe_moving_addresses_result(), tuple()} |
    {error, any()}.
describe_moving_addresses(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeMovingAddresses">>, Input, Options).

%% @doc Describes your NAT gateways.
%%
%% The default is to describe all your NAT gateways.
%% Alternatively, you can specify specific NAT gateway IDs or filter the
%% results to
%% include only the NAT gateways that match specific criteria.
-spec describe_nat_gateways(aws_client:aws_client(), describe_nat_gateways_request()) ->
    {ok, describe_nat_gateways_result(), tuple()} |
    {error, any()}.
describe_nat_gateways(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_nat_gateways(Client, Input, []).

-spec describe_nat_gateways(aws_client:aws_client(), describe_nat_gateways_request(), proplists:proplist()) ->
    {ok, describe_nat_gateways_result(), tuple()} |
    {error, any()}.
describe_nat_gateways(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeNatGateways">>, Input, Options).

%% @doc Describes your network ACLs.
%%
%% The default is to describe all your network ACLs.
%% Alternatively, you can specify specific network ACL IDs or filter the
%% results to
%% include only the network ACLs that match specific criteria.
%%
%% For more information, see Network ACLs:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html in
%% the
%% Amazon VPC User Guide.
-spec describe_network_acls(aws_client:aws_client(), describe_network_acls_request()) ->
    {ok, describe_network_acls_result(), tuple()} |
    {error, any()}.
describe_network_acls(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_network_acls(Client, Input, []).

-spec describe_network_acls(aws_client:aws_client(), describe_network_acls_request(), proplists:proplist()) ->
    {ok, describe_network_acls_result(), tuple()} |
    {error, any()}.
describe_network_acls(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeNetworkAcls">>, Input, Options).

%% @doc Describes the specified Network Access Scope analyses.
-spec describe_network_insights_access_scope_analyses(aws_client:aws_client(), describe_network_insights_access_scope_analyses_request()) ->
    {ok, describe_network_insights_access_scope_analyses_result(), tuple()} |
    {error, any()}.
describe_network_insights_access_scope_analyses(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_network_insights_access_scope_analyses(Client, Input, []).

-spec describe_network_insights_access_scope_analyses(aws_client:aws_client(), describe_network_insights_access_scope_analyses_request(), proplists:proplist()) ->
    {ok, describe_network_insights_access_scope_analyses_result(), tuple()} |
    {error, any()}.
describe_network_insights_access_scope_analyses(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeNetworkInsightsAccessScopeAnalyses">>, Input, Options).

%% @doc Describes the specified Network Access Scopes.
-spec describe_network_insights_access_scopes(aws_client:aws_client(), describe_network_insights_access_scopes_request()) ->
    {ok, describe_network_insights_access_scopes_result(), tuple()} |
    {error, any()}.
describe_network_insights_access_scopes(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_network_insights_access_scopes(Client, Input, []).

-spec describe_network_insights_access_scopes(aws_client:aws_client(), describe_network_insights_access_scopes_request(), proplists:proplist()) ->
    {ok, describe_network_insights_access_scopes_result(), tuple()} |
    {error, any()}.
describe_network_insights_access_scopes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeNetworkInsightsAccessScopes">>, Input, Options).

%% @doc Describes one or more of your network insights analyses.
-spec describe_network_insights_analyses(aws_client:aws_client(), describe_network_insights_analyses_request()) ->
    {ok, describe_network_insights_analyses_result(), tuple()} |
    {error, any()}.
describe_network_insights_analyses(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_network_insights_analyses(Client, Input, []).

-spec describe_network_insights_analyses(aws_client:aws_client(), describe_network_insights_analyses_request(), proplists:proplist()) ->
    {ok, describe_network_insights_analyses_result(), tuple()} |
    {error, any()}.
describe_network_insights_analyses(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeNetworkInsightsAnalyses">>, Input, Options).

%% @doc Describes one or more of your paths.
-spec describe_network_insights_paths(aws_client:aws_client(), describe_network_insights_paths_request()) ->
    {ok, describe_network_insights_paths_result(), tuple()} |
    {error, any()}.
describe_network_insights_paths(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_network_insights_paths(Client, Input, []).

-spec describe_network_insights_paths(aws_client:aws_client(), describe_network_insights_paths_request(), proplists:proplist()) ->
    {ok, describe_network_insights_paths_result(), tuple()} |
    {error, any()}.
describe_network_insights_paths(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeNetworkInsightsPaths">>, Input, Options).

%% @doc Describes a network interface attribute.
%%
%% You can specify only one attribute at a
%% time.
-spec describe_network_interface_attribute(aws_client:aws_client(), describe_network_interface_attribute_request()) ->
    {ok, describe_network_interface_attribute_result(), tuple()} |
    {error, any()}.
describe_network_interface_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_network_interface_attribute(Client, Input, []).

-spec describe_network_interface_attribute(aws_client:aws_client(), describe_network_interface_attribute_request(), proplists:proplist()) ->
    {ok, describe_network_interface_attribute_result(), tuple()} |
    {error, any()}.
describe_network_interface_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeNetworkInterfaceAttribute">>, Input, Options).

%% @doc Describes the permissions for your network interfaces.
-spec describe_network_interface_permissions(aws_client:aws_client(), describe_network_interface_permissions_request()) ->
    {ok, describe_network_interface_permissions_result(), tuple()} |
    {error, any()}.
describe_network_interface_permissions(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_network_interface_permissions(Client, Input, []).

-spec describe_network_interface_permissions(aws_client:aws_client(), describe_network_interface_permissions_request(), proplists:proplist()) ->
    {ok, describe_network_interface_permissions_result(), tuple()} |
    {error, any()}.
describe_network_interface_permissions(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeNetworkInterfacePermissions">>, Input, Options).

%% @doc Describes the specified network interfaces or all your network
%% interfaces.
%%
%% If you have a large number of network interfaces, the operation fails
%% unless you use
%% pagination or one of the following filters: `group-id',
%% `mac-address', `private-dns-name',
%% `private-ip-address', `subnet-id', or
%% `vpc-id'.
%%
%% We strongly recommend using only paginated requests. Unpaginated requests
%% are
%% susceptible to throttling and timeouts.
-spec describe_network_interfaces(aws_client:aws_client(), describe_network_interfaces_request()) ->
    {ok, describe_network_interfaces_result(), tuple()} |
    {error, any()}.
describe_network_interfaces(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_network_interfaces(Client, Input, []).

-spec describe_network_interfaces(aws_client:aws_client(), describe_network_interfaces_request(), proplists:proplist()) ->
    {ok, describe_network_interfaces_result(), tuple()} |
    {error, any()}.
describe_network_interfaces(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeNetworkInterfaces">>, Input, Options).

%% @doc Describes the Outposts link aggregation groups (LAGs).
%%
%% LAGs are only available for second-generation Outposts racks at this time.
-spec describe_outpost_lags(aws_client:aws_client(), describe_outpost_lags_request()) ->
    {ok, describe_outpost_lags_result(), tuple()} |
    {error, any()}.
describe_outpost_lags(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_outpost_lags(Client, Input, []).

-spec describe_outpost_lags(aws_client:aws_client(), describe_outpost_lags_request(), proplists:proplist()) ->
    {ok, describe_outpost_lags_result(), tuple()} |
    {error, any()}.
describe_outpost_lags(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeOutpostLags">>, Input, Options).

%% @doc Describes the specified placement groups or all of your placement
%% groups.
%%
%% To describe a specific placement group that is shared with
%% your account, you must specify the ID of the placement group using the
%% `GroupId' parameter. Specifying the name of a
%% shared placement group using the `GroupNames'
%% parameter will result in an error.
%%
%% For more information, see Placement groups:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html
%% in the
%% Amazon EC2 User Guide.
-spec describe_placement_groups(aws_client:aws_client(), describe_placement_groups_request()) ->
    {ok, describe_placement_groups_result(), tuple()} |
    {error, any()}.
describe_placement_groups(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_placement_groups(Client, Input, []).

-spec describe_placement_groups(aws_client:aws_client(), describe_placement_groups_request(), proplists:proplist()) ->
    {ok, describe_placement_groups_result(), tuple()} |
    {error, any()}.
describe_placement_groups(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribePlacementGroups">>, Input, Options).

%% @doc Describes available Amazon Web Services services in a prefix list
%% format, which includes the prefix list
%% name and prefix list ID of the service and the IP address range for the
%% service.
-spec describe_prefix_lists(aws_client:aws_client(), describe_prefix_lists_request()) ->
    {ok, describe_prefix_lists_result(), tuple()} |
    {error, any()}.
describe_prefix_lists(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_prefix_lists(Client, Input, []).

-spec describe_prefix_lists(aws_client:aws_client(), describe_prefix_lists_request(), proplists:proplist()) ->
    {ok, describe_prefix_lists_result(), tuple()} |
    {error, any()}.
describe_prefix_lists(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribePrefixLists">>, Input, Options).

%% @doc Describes the ID format settings for the root user and all IAM roles
%% and IAM users
%% that have explicitly specified a longer ID (17-character ID) preference.
%%
%% By default, all IAM roles and IAM users default to the same ID settings as
%% the root user, unless they
%% explicitly override the settings. This request is useful for identifying
%% those IAM users and IAM roles
%% that have overridden the default ID settings.
%%
%% The following resource types support longer IDs: `bundle' |
%% `conversion-task' | `customer-gateway' | `dhcp-options' |
%% `elastic-ip-allocation' | `elastic-ip-association' |
%% `export-task' | `flow-log' | `image' |
%% `import-task' | `instance' | `internet-gateway' |
%% `network-acl' | `network-acl-association' |
%% `network-interface' | `network-interface-attachment' |
%% `prefix-list' | `reservation' | `route-table' |
%% `route-table-association' | `security-group' |
%% `snapshot' | `subnet' |
%% `subnet-cidr-block-association' | `volume' | `vpc'
%% | `vpc-cidr-block-association' | `vpc-endpoint' |
%% `vpc-peering-connection' | `vpn-connection' | `vpn-gateway'.
-spec describe_principal_id_format(aws_client:aws_client(), describe_principal_id_format_request()) ->
    {ok, describe_principal_id_format_result(), tuple()} |
    {error, any()}.
describe_principal_id_format(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_principal_id_format(Client, Input, []).

-spec describe_principal_id_format(aws_client:aws_client(), describe_principal_id_format_request(), proplists:proplist()) ->
    {ok, describe_principal_id_format_result(), tuple()} |
    {error, any()}.
describe_principal_id_format(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribePrincipalIdFormat">>, Input, Options).

%% @doc Describes the specified IPv4 address pools.
-spec describe_public_ipv4_pools(aws_client:aws_client(), describe_public_ipv4_pools_request()) ->
    {ok, describe_public_ipv4_pools_result(), tuple()} |
    {error, any()}.
describe_public_ipv4_pools(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_public_ipv4_pools(Client, Input, []).

-spec describe_public_ipv4_pools(aws_client:aws_client(), describe_public_ipv4_pools_request(), proplists:proplist()) ->
    {ok, describe_public_ipv4_pools_result(), tuple()} |
    {error, any()}.
describe_public_ipv4_pools(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribePublicIpv4Pools">>, Input, Options).

%% @doc Describes the Regions that are enabled for your account, or all
%% Regions.
%%
%% For a list of the Regions supported by Amazon EC2, see Amazon EC2 service
%% endpoints:
%% https://docs.aws.amazon.com/ec2/latest/devguide/ec2-endpoints.html.
%%
%% For information about enabling and disabling Regions for your account, see
%% Specify which Amazon Web Services Regions
%% your account can use:
%% https://docs.aws.amazon.com/accounts/latest/reference/manage-acct-regions.html
%% in the Amazon Web Services Account Management Reference Guide.
%%
%% The order of the elements in the response, including those within nested
%% structures,
%% might vary. Applications should not assume the elements appear in a
%% particular order.
-spec describe_regions(aws_client:aws_client(), describe_regions_request()) ->
    {ok, describe_regions_result(), tuple()} |
    {error, any()}.
describe_regions(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_regions(Client, Input, []).

-spec describe_regions(aws_client:aws_client(), describe_regions_request(), proplists:proplist()) ->
    {ok, describe_regions_result(), tuple()} |
    {error, any()}.
describe_regions(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeRegions">>, Input, Options).

%% @doc Describes a root volume replacement task.
%%
%% For more information, see
%% Replace a root volume:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/replace-root.html in
%% the Amazon EC2 User Guide.
-spec describe_replace_root_volume_tasks(aws_client:aws_client(), describe_replace_root_volume_tasks_request()) ->
    {ok, describe_replace_root_volume_tasks_result(), tuple()} |
    {error, any()}.
describe_replace_root_volume_tasks(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_replace_root_volume_tasks(Client, Input, []).

-spec describe_replace_root_volume_tasks(aws_client:aws_client(), describe_replace_root_volume_tasks_request(), proplists:proplist()) ->
    {ok, describe_replace_root_volume_tasks_result(), tuple()} |
    {error, any()}.
describe_replace_root_volume_tasks(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeReplaceRootVolumeTasks">>, Input, Options).

%% @doc Describes one or more of the Reserved Instances that you purchased.
%%
%% For more information about Reserved Instances, see Reserved
%% Instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html
%% in the Amazon EC2 User Guide.
%%
%% The order of the elements in the response, including those within nested
%% structures,
%% might vary. Applications should not assume the elements appear in a
%% particular order.
-spec describe_reserved_instances(aws_client:aws_client(), describe_reserved_instances_request()) ->
    {ok, describe_reserved_instances_result(), tuple()} |
    {error, any()}.
describe_reserved_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_reserved_instances(Client, Input, []).

-spec describe_reserved_instances(aws_client:aws_client(), describe_reserved_instances_request(), proplists:proplist()) ->
    {ok, describe_reserved_instances_result(), tuple()} |
    {error, any()}.
describe_reserved_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeReservedInstances">>, Input, Options).

%% @doc Describes your account's Reserved Instance listings in the
%% Reserved Instance
%% Marketplace.
%%
%% The Reserved Instance Marketplace matches sellers who want to resell
%% Reserved Instance
%% capacity that they no longer need with buyers who want to purchase
%% additional capacity.
%% Reserved Instances bought and sold through the Reserved Instance
%% Marketplace work like any
%% other Reserved Instances.
%%
%% As a seller, you choose to list some or all of your Reserved Instances,
%% and you specify
%% the upfront price to receive for them. Your Reserved Instances are then
%% listed in the Reserved
%% Instance Marketplace and are available for purchase.
%%
%% As a buyer, you specify the configuration of the Reserved Instance to
%% purchase, and the
%% Marketplace matches what you're searching for with what's
%% available. The Marketplace first
%% sells the lowest priced Reserved Instances to you, and continues to sell
%% available Reserved
%% Instance listings to you until your demand is met. You are charged based
%% on the total price of
%% all of the listings that you purchase.
%%
%% For more information, see Sell in the Reserved Instance
%% Marketplace:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html
%% in the Amazon EC2 User Guide.
%%
%% The order of the elements in the response, including those within nested
%% structures,
%% might vary. Applications should not assume the elements appear in a
%% particular order.
-spec describe_reserved_instances_listings(aws_client:aws_client(), describe_reserved_instances_listings_request()) ->
    {ok, describe_reserved_instances_listings_result(), tuple()} |
    {error, any()}.
describe_reserved_instances_listings(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_reserved_instances_listings(Client, Input, []).

-spec describe_reserved_instances_listings(aws_client:aws_client(), describe_reserved_instances_listings_request(), proplists:proplist()) ->
    {ok, describe_reserved_instances_listings_result(), tuple()} |
    {error, any()}.
describe_reserved_instances_listings(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeReservedInstancesListings">>, Input, Options).

%% @doc Describes the modifications made to your Reserved Instances.
%%
%% If no parameter is specified,
%% information about all your Reserved Instances modification requests is
%% returned. If a
%% modification ID is specified, only information about the specific
%% modification is
%% returned.
%%
%% For more information, see Modify Reserved Instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html in
%% the
%% Amazon EC2 User Guide.
%%
%% The order of the elements in the response, including those within nested
%% structures,
%% might vary. Applications should not assume the elements appear in a
%% particular order.
-spec describe_reserved_instances_modifications(aws_client:aws_client(), describe_reserved_instances_modifications_request()) ->
    {ok, describe_reserved_instances_modifications_result(), tuple()} |
    {error, any()}.
describe_reserved_instances_modifications(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_reserved_instances_modifications(Client, Input, []).

-spec describe_reserved_instances_modifications(aws_client:aws_client(), describe_reserved_instances_modifications_request(), proplists:proplist()) ->
    {ok, describe_reserved_instances_modifications_result(), tuple()} |
    {error, any()}.
describe_reserved_instances_modifications(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeReservedInstancesModifications">>, Input, Options).

%% @doc Describes Reserved Instance offerings that are available for
%% purchase.
%%
%% With Reserved
%% Instances, you purchase the right to launch instances for a period of
%% time. During that time
%% period, you do not receive insufficient capacity errors, and you pay a
%% lower usage rate than
%% the rate charged for On-Demand instances for the actual time used.
%%
%% If you have listed your own Reserved Instances for sale in the Reserved
%% Instance
%% Marketplace, they will be excluded from these results. This is to ensure
%% that you do not
%% purchase your own Reserved Instances.
%%
%% For more information, see Sell in the Reserved Instance
%% Marketplace:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html
%% in the Amazon EC2 User Guide.
%%
%% The order of the elements in the response, including those within nested
%% structures,
%% might vary. Applications should not assume the elements appear in a
%% particular order.
-spec describe_reserved_instances_offerings(aws_client:aws_client(), describe_reserved_instances_offerings_request()) ->
    {ok, describe_reserved_instances_offerings_result(), tuple()} |
    {error, any()}.
describe_reserved_instances_offerings(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_reserved_instances_offerings(Client, Input, []).

-spec describe_reserved_instances_offerings(aws_client:aws_client(), describe_reserved_instances_offerings_request(), proplists:proplist()) ->
    {ok, describe_reserved_instances_offerings_result(), tuple()} |
    {error, any()}.
describe_reserved_instances_offerings(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeReservedInstancesOfferings">>, Input, Options).

%% @doc Describes one or more route server endpoints.
%%
%% A route server endpoint is an Amazon Web Services-managed component inside
%% a subnet that facilitates BGP (Border Gateway Protocol):
%% https://en.wikipedia.org/wiki/Border_Gateway_Protocol connections between
%% your route server and your BGP peers.
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec describe_route_server_endpoints(aws_client:aws_client(), describe_route_server_endpoints_request()) ->
    {ok, describe_route_server_endpoints_result(), tuple()} |
    {error, any()}.
describe_route_server_endpoints(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_route_server_endpoints(Client, Input, []).

-spec describe_route_server_endpoints(aws_client:aws_client(), describe_route_server_endpoints_request(), proplists:proplist()) ->
    {ok, describe_route_server_endpoints_result(), tuple()} |
    {error, any()}.
describe_route_server_endpoints(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeRouteServerEndpoints">>, Input, Options).

%% @doc Describes one or more route server peers.
%%
%% A route server peer is a session between a route server endpoint and the
%% device deployed in Amazon Web Services (such as a firewall appliance or
%% other network security function running on an EC2 instance). The device
%% must meet these requirements:
%%
%% Have an elastic network interface in the VPC
%%
%% Support BGP (Border Gateway Protocol)
%%
%% Can initiate BGP sessions
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec describe_route_server_peers(aws_client:aws_client(), describe_route_server_peers_request()) ->
    {ok, describe_route_server_peers_result(), tuple()} |
    {error, any()}.
describe_route_server_peers(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_route_server_peers(Client, Input, []).

-spec describe_route_server_peers(aws_client:aws_client(), describe_route_server_peers_request(), proplists:proplist()) ->
    {ok, describe_route_server_peers_result(), tuple()} |
    {error, any()}.
describe_route_server_peers(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeRouteServerPeers">>, Input, Options).

%% @doc Describes one or more route servers.
%%
%% Amazon VPC Route Server simplifies routing for traffic between workloads
%% that are deployed within a VPC and its internet gateways. With this
%% feature,
%% VPC Route Server dynamically updates VPC and internet gateway route tables
%% with your preferred IPv4 or IPv6 routes to achieve routing fault tolerance
%% for those workloads. This enables you to automatically reroute traffic
%% within a VPC, which increases the manageability of VPC routing and
%% interoperability with third-party workloads.
%%
%% Route server supports the follow route table types:
%%
%% VPC route tables not associated with subnets
%%
%% Subnet route tables
%%
%% Internet gateway route tables
%%
%% Route server does not support route tables associated with virtual private
%% gateways. To propagate routes into a transit gateway route table, use
%% Transit Gateway Connect:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-connect.html.
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec describe_route_servers(aws_client:aws_client(), describe_route_servers_request()) ->
    {ok, describe_route_servers_result(), tuple()} |
    {error, any()}.
describe_route_servers(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_route_servers(Client, Input, []).

-spec describe_route_servers(aws_client:aws_client(), describe_route_servers_request(), proplists:proplist()) ->
    {ok, describe_route_servers_result(), tuple()} |
    {error, any()}.
describe_route_servers(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeRouteServers">>, Input, Options).

%% @doc Describes your route tables.
%%
%% The default is to describe all your route tables.
%% Alternatively, you can specify specific route table IDs or filter the
%% results to
%% include only the route tables that match specific criteria.
%%
%% Each subnet in your VPC must be associated with a route table. If a subnet
%% is not explicitly associated with any route table, it is implicitly
%% associated with the main route table. This command does not return the
%% subnet ID for implicit associations.
%%
%% For more information, see Route tables:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html in
%% the
%% Amazon VPC User Guide.
-spec describe_route_tables(aws_client:aws_client(), describe_route_tables_request()) ->
    {ok, describe_route_tables_result(), tuple()} |
    {error, any()}.
describe_route_tables(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_route_tables(Client, Input, []).

-spec describe_route_tables(aws_client:aws_client(), describe_route_tables_request(), proplists:proplist()) ->
    {ok, describe_route_tables_result(), tuple()} |
    {error, any()}.
describe_route_tables(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeRouteTables">>, Input, Options).

%% @doc Finds available schedules that meet the specified criteria.
%%
%% You can search for an available schedule no more than 3 months in advance.
%% You must meet the minimum required duration of 1,200 hours per year. For
%% example, the minimum daily schedule is 4 hours, the minimum weekly
%% schedule is 24 hours, and the minimum monthly schedule is 100 hours.
%%
%% After you find a schedule that meets your needs, call
%% `PurchaseScheduledInstances'
%% to purchase Scheduled Instances with that schedule.
-spec describe_scheduled_instance_availability(aws_client:aws_client(), describe_scheduled_instance_availability_request()) ->
    {ok, describe_scheduled_instance_availability_result(), tuple()} |
    {error, any()}.
describe_scheduled_instance_availability(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_scheduled_instance_availability(Client, Input, []).

-spec describe_scheduled_instance_availability(aws_client:aws_client(), describe_scheduled_instance_availability_request(), proplists:proplist()) ->
    {ok, describe_scheduled_instance_availability_result(), tuple()} |
    {error, any()}.
describe_scheduled_instance_availability(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeScheduledInstanceAvailability">>, Input, Options).

%% @doc Describes the specified Scheduled Instances or all your Scheduled
%% Instances.
-spec describe_scheduled_instances(aws_client:aws_client(), describe_scheduled_instances_request()) ->
    {ok, describe_scheduled_instances_result(), tuple()} |
    {error, any()}.
describe_scheduled_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_scheduled_instances(Client, Input, []).

-spec describe_scheduled_instances(aws_client:aws_client(), describe_scheduled_instances_request(), proplists:proplist()) ->
    {ok, describe_scheduled_instances_result(), tuple()} |
    {error, any()}.
describe_scheduled_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeScheduledInstances">>, Input, Options).

%% @doc Describes the VPCs on the other side of a VPC peering or Transit
%% Gateway connection that are referencing the security groups you've
%% specified in this request.
-spec describe_security_group_references(aws_client:aws_client(), describe_security_group_references_request()) ->
    {ok, describe_security_group_references_result(), tuple()} |
    {error, any()}.
describe_security_group_references(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_security_group_references(Client, Input, []).

-spec describe_security_group_references(aws_client:aws_client(), describe_security_group_references_request(), proplists:proplist()) ->
    {ok, describe_security_group_references_result(), tuple()} |
    {error, any()}.
describe_security_group_references(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSecurityGroupReferences">>, Input, Options).

%% @doc Describes one or more of your security group rules.
-spec describe_security_group_rules(aws_client:aws_client(), describe_security_group_rules_request()) ->
    {ok, describe_security_group_rules_result(), tuple()} |
    {error, any()}.
describe_security_group_rules(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_security_group_rules(Client, Input, []).

-spec describe_security_group_rules(aws_client:aws_client(), describe_security_group_rules_request(), proplists:proplist()) ->
    {ok, describe_security_group_rules_result(), tuple()} |
    {error, any()}.
describe_security_group_rules(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSecurityGroupRules">>, Input, Options).

%% @doc Describes security group VPC associations made with
%% AssociateSecurityGroupVpc:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AssociateSecurityGroupVpc.html.
-spec describe_security_group_vpc_associations(aws_client:aws_client(), describe_security_group_vpc_associations_request()) ->
    {ok, describe_security_group_vpc_associations_result(), tuple()} |
    {error, any()}.
describe_security_group_vpc_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_security_group_vpc_associations(Client, Input, []).

-spec describe_security_group_vpc_associations(aws_client:aws_client(), describe_security_group_vpc_associations_request(), proplists:proplist()) ->
    {ok, describe_security_group_vpc_associations_result(), tuple()} |
    {error, any()}.
describe_security_group_vpc_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSecurityGroupVpcAssociations">>, Input, Options).

%% @doc Describes the specified security groups or all of your security
%% groups.
-spec describe_security_groups(aws_client:aws_client(), describe_security_groups_request()) ->
    {ok, describe_security_groups_result(), tuple()} |
    {error, any()}.
describe_security_groups(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_security_groups(Client, Input, []).

-spec describe_security_groups(aws_client:aws_client(), describe_security_groups_request(), proplists:proplist()) ->
    {ok, describe_security_groups_result(), tuple()} |
    {error, any()}.
describe_security_groups(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSecurityGroups">>, Input, Options).

%% @doc Describes the Outpost service link virtual interfaces.
-spec describe_service_link_virtual_interfaces(aws_client:aws_client(), describe_service_link_virtual_interfaces_request()) ->
    {ok, describe_service_link_virtual_interfaces_result(), tuple()} |
    {error, any()}.
describe_service_link_virtual_interfaces(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_service_link_virtual_interfaces(Client, Input, []).

-spec describe_service_link_virtual_interfaces(aws_client:aws_client(), describe_service_link_virtual_interfaces_request(), proplists:proplist()) ->
    {ok, describe_service_link_virtual_interfaces_result(), tuple()} |
    {error, any()}.
describe_service_link_virtual_interfaces(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeServiceLinkVirtualInterfaces">>, Input, Options).

%% @doc Describes the specified attribute of the specified snapshot.
%%
%% You can specify only one
%% attribute at a time.
%%
%% For more information about EBS snapshots, see Amazon EBS snapshots:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-snapshots.html in the
%% Amazon EBS User Guide.
-spec describe_snapshot_attribute(aws_client:aws_client(), describe_snapshot_attribute_request()) ->
    {ok, describe_snapshot_attribute_result(), tuple()} |
    {error, any()}.
describe_snapshot_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_snapshot_attribute(Client, Input, []).

-spec describe_snapshot_attribute(aws_client:aws_client(), describe_snapshot_attribute_request(), proplists:proplist()) ->
    {ok, describe_snapshot_attribute_result(), tuple()} |
    {error, any()}.
describe_snapshot_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSnapshotAttribute">>, Input, Options).

%% @doc Describes the storage tier status of one or more Amazon EBS
%% snapshots.
-spec describe_snapshot_tier_status(aws_client:aws_client(), describe_snapshot_tier_status_request()) ->
    {ok, describe_snapshot_tier_status_result(), tuple()} |
    {error, any()}.
describe_snapshot_tier_status(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_snapshot_tier_status(Client, Input, []).

-spec describe_snapshot_tier_status(aws_client:aws_client(), describe_snapshot_tier_status_request(), proplists:proplist()) ->
    {ok, describe_snapshot_tier_status_result(), tuple()} |
    {error, any()}.
describe_snapshot_tier_status(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSnapshotTierStatus">>, Input, Options).

%% @doc Describes the specified EBS snapshots available to you or all of the
%% EBS snapshots
%% available to you.
%%
%% The snapshots available to you include public snapshots, private snapshots
%% that you own,
%% and private snapshots owned by other Amazon Web Services accounts for
%% which you have explicit create volume
%% permissions.
%%
%% The create volume permissions fall into the following categories:
%%
%% public: The owner of the snapshot granted create volume
%% permissions for the snapshot to the `all' group. All Amazon Web
%% Services accounts have create
%% volume permissions for these snapshots.
%%
%% explicit: The owner of the snapshot granted create volume
%% permissions to a specific Amazon Web Services account.
%%
%% implicit: An Amazon Web Services account has implicit create volume
%% permissions
%% for all snapshots it owns.
%%
%% The list of snapshots returned can be filtered by specifying snapshot IDs,
%% snapshot
%% owners, or Amazon Web Services accounts with create volume permissions. If
%% no options are specified,
%% Amazon EC2 returns all snapshots for which you have create volume
%% permissions.
%%
%% If you specify one or more snapshot IDs, only snapshots that have the
%% specified IDs are
%% returned. If you specify an invalid snapshot ID, an error is returned. If
%% you specify a
%% snapshot ID for which you do not have access, it is not included in the
%% returned
%% results.
%%
%% If you specify one or more snapshot owners using the `OwnerIds'
%% option, only
%% snapshots from the specified owners and for which you have access are
%% returned. The results
%% can include the Amazon Web Services account IDs of the specified owners,
%% `amazon' for snapshots
%% owned by Amazon, or `self' for snapshots that you own.
%%
%% If you specify a list of restorable users, only snapshots with create
%% snapshot permissions
%% for those users are returned. You can specify Amazon Web Services account
%% IDs (if you own the snapshots),
%% `self' for snapshots for which you own or have explicit permissions,
%% or
%% `all' for public snapshots.
%%
%% If you are describing a long list of snapshots, we recommend that you
%% paginate the output to make the
%% list more manageable. For more information, see Pagination:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination.
%%
%% For more information about EBS snapshots, see Amazon EBS snapshots:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-snapshots.html in the
%% Amazon EBS User Guide.
%%
%% We strongly recommend using only paginated requests. Unpaginated requests
%% are
%% susceptible to throttling and timeouts.
-spec describe_snapshots(aws_client:aws_client(), describe_snapshots_request()) ->
    {ok, describe_snapshots_result(), tuple()} |
    {error, any()}.
describe_snapshots(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_snapshots(Client, Input, []).

-spec describe_snapshots(aws_client:aws_client(), describe_snapshots_request(), proplists:proplist()) ->
    {ok, describe_snapshots_result(), tuple()} |
    {error, any()}.
describe_snapshots(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSnapshots">>, Input, Options).

%% @doc Describes the data feed for Spot Instances.
%%
%% For more information, see Spot
%% Instance data feed:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-data-feeds.html
%% in the Amazon EC2 User Guide.
-spec describe_spot_datafeed_subscription(aws_client:aws_client(), describe_spot_datafeed_subscription_request()) ->
    {ok, describe_spot_datafeed_subscription_result(), tuple()} |
    {error, any()}.
describe_spot_datafeed_subscription(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_spot_datafeed_subscription(Client, Input, []).

-spec describe_spot_datafeed_subscription(aws_client:aws_client(), describe_spot_datafeed_subscription_request(), proplists:proplist()) ->
    {ok, describe_spot_datafeed_subscription_result(), tuple()} |
    {error, any()}.
describe_spot_datafeed_subscription(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSpotDatafeedSubscription">>, Input, Options).

%% @doc Describes the running instances for the specified Spot Fleet.
-spec describe_spot_fleet_instances(aws_client:aws_client(), describe_spot_fleet_instances_request()) ->
    {ok, describe_spot_fleet_instances_response(), tuple()} |
    {error, any()}.
describe_spot_fleet_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_spot_fleet_instances(Client, Input, []).

-spec describe_spot_fleet_instances(aws_client:aws_client(), describe_spot_fleet_instances_request(), proplists:proplist()) ->
    {ok, describe_spot_fleet_instances_response(), tuple()} |
    {error, any()}.
describe_spot_fleet_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSpotFleetInstances">>, Input, Options).

%% @doc Describes the events for the specified Spot Fleet request during the
%% specified
%% time.
%%
%% Spot Fleet events are delayed by up to 30 seconds before they can be
%% described. This
%% ensures that you can query by the last evaluated time and not miss a
%% recorded event.
%% Spot Fleet events are available for 48 hours.
%%
%% For more information, see Monitor fleet events using Amazon
%% EventBridge:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/fleet-monitor.html in
%% the Amazon EC2 User Guide.
-spec describe_spot_fleet_request_history(aws_client:aws_client(), describe_spot_fleet_request_history_request()) ->
    {ok, describe_spot_fleet_request_history_response(), tuple()} |
    {error, any()}.
describe_spot_fleet_request_history(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_spot_fleet_request_history(Client, Input, []).

-spec describe_spot_fleet_request_history(aws_client:aws_client(), describe_spot_fleet_request_history_request(), proplists:proplist()) ->
    {ok, describe_spot_fleet_request_history_response(), tuple()} |
    {error, any()}.
describe_spot_fleet_request_history(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSpotFleetRequestHistory">>, Input, Options).

%% @doc Describes your Spot Fleet requests.
%%
%% Spot Fleet requests are deleted 48 hours after they are canceled and their
%% instances
%% are terminated.
-spec describe_spot_fleet_requests(aws_client:aws_client(), describe_spot_fleet_requests_request()) ->
    {ok, describe_spot_fleet_requests_response(), tuple()} |
    {error, any()}.
describe_spot_fleet_requests(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_spot_fleet_requests(Client, Input, []).

-spec describe_spot_fleet_requests(aws_client:aws_client(), describe_spot_fleet_requests_request(), proplists:proplist()) ->
    {ok, describe_spot_fleet_requests_response(), tuple()} |
    {error, any()}.
describe_spot_fleet_requests(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSpotFleetRequests">>, Input, Options).

%% @doc Describes the specified Spot Instance requests.
%%
%% You can use `DescribeSpotInstanceRequests' to find a running Spot
%% Instance by
%% examining the response. If the status of the Spot Instance is
%% `fulfilled', the
%% instance ID appears in the response and contains the identifier of the
%% instance.
%% Alternatively, you can use DescribeInstances:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances
%% with a filter to look for instances where the instance lifecycle is
%% `spot'.
%%
%% We recommend that you set `MaxResults' to a value between 5 and 1000
%% to
%% limit the number of items returned. This paginates the output, which makes
%% the list
%% more manageable and returns the items faster. If the list of items exceeds
%% your
%% `MaxResults' value, then that number of items is returned along with a
%% `NextToken' value that can be passed to a subsequent
%% `DescribeSpotInstanceRequests' request to retrieve the remaining
%% items.
%%
%% Spot Instance requests are deleted four hours after they are canceled and
%% their instances are
%% terminated.
-spec describe_spot_instance_requests(aws_client:aws_client(), describe_spot_instance_requests_request()) ->
    {ok, describe_spot_instance_requests_result(), tuple()} |
    {error, any()}.
describe_spot_instance_requests(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_spot_instance_requests(Client, Input, []).

-spec describe_spot_instance_requests(aws_client:aws_client(), describe_spot_instance_requests_request(), proplists:proplist()) ->
    {ok, describe_spot_instance_requests_result(), tuple()} |
    {error, any()}.
describe_spot_instance_requests(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSpotInstanceRequests">>, Input, Options).

%% @doc Describes the Spot price history.
%%
%% For more information, see Spot Instance pricing history:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-history.html
%% in the
%% Amazon EC2 User Guide.
%%
%% When you specify a start and end time, the operation returns the prices of
%% the
%% instance types within that time range. It also returns the last price
%% change before the
%% start time, which is the effective price as of the start time.
-spec describe_spot_price_history(aws_client:aws_client(), describe_spot_price_history_request()) ->
    {ok, describe_spot_price_history_result(), tuple()} |
    {error, any()}.
describe_spot_price_history(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_spot_price_history(Client, Input, []).

-spec describe_spot_price_history(aws_client:aws_client(), describe_spot_price_history_request(), proplists:proplist()) ->
    {ok, describe_spot_price_history_result(), tuple()} |
    {error, any()}.
describe_spot_price_history(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSpotPriceHistory">>, Input, Options).

%% @doc Describes the stale security group rules for security groups
%% referenced across a VPC
%% peering connection, transit gateway connection, or with a security group
%% VPC
%% association.
%%
%% Rules are stale when they reference a deleted security group. Rules can
%% also be stale if they reference a security group in a peer VPC for which
%% the VPC peering
%% connection has been deleted, across a transit gateway where the transit
%% gateway has been
%% deleted (or the transit
%% gateway security group referencing feature:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-vpc-attachments.html#vpc-attachment-security
%% has been disabled), or if a
%% security group VPC association has been disassociated.
-spec describe_stale_security_groups(aws_client:aws_client(), describe_stale_security_groups_request()) ->
    {ok, describe_stale_security_groups_result(), tuple()} |
    {error, any()}.
describe_stale_security_groups(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_stale_security_groups(Client, Input, []).

-spec describe_stale_security_groups(aws_client:aws_client(), describe_stale_security_groups_request(), proplists:proplist()) ->
    {ok, describe_stale_security_groups_result(), tuple()} |
    {error, any()}.
describe_stale_security_groups(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeStaleSecurityGroups">>, Input, Options).

%% @doc Describes the progress of the AMI store tasks.
%%
%% You can describe the store tasks for
%% specified AMIs. If you don't specify the AMIs, you get a paginated
%% list of store tasks from
%% the last 31 days.
%%
%% For each AMI task, the response indicates if the task is `InProgress',
%% `Completed', or `Failed'. For tasks `InProgress', the
%% response shows the estimated progress as a percentage.
%%
%% Tasks are listed in reverse chronological order. Currently, only tasks
%% from the past 31
%% days can be viewed.
%%
%% To use this API, you must have the required permissions. For more
%% information, see Permissions for storing and restoring AMIs using S3:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/work-with-ami-store-restore.html#ami-s3-permissions
%% in the
%% Amazon EC2 User Guide.
%%
%% For more information, see Store and restore an AMI using
%% S3:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-store-restore.html
%% in the Amazon EC2 User Guide.
-spec describe_store_image_tasks(aws_client:aws_client(), describe_store_image_tasks_request()) ->
    {ok, describe_store_image_tasks_result(), tuple()} |
    {error, any()}.
describe_store_image_tasks(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_store_image_tasks(Client, Input, []).

-spec describe_store_image_tasks(aws_client:aws_client(), describe_store_image_tasks_request(), proplists:proplist()) ->
    {ok, describe_store_image_tasks_result(), tuple()} |
    {error, any()}.
describe_store_image_tasks(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeStoreImageTasks">>, Input, Options).

%% @doc Describes your subnets.
%%
%% The default is to describe all your subnets.
%% Alternatively, you can specify specific subnet IDs or filter the results
%% to
%% include only the subnets that match specific criteria.
%%
%% For more information, see Subnets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/configure-subnets.html in
%% the
%% Amazon VPC User Guide.
-spec describe_subnets(aws_client:aws_client(), describe_subnets_request()) ->
    {ok, describe_subnets_result(), tuple()} |
    {error, any()}.
describe_subnets(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_subnets(Client, Input, []).

-spec describe_subnets(aws_client:aws_client(), describe_subnets_request(), proplists:proplist()) ->
    {ok, describe_subnets_result(), tuple()} |
    {error, any()}.
describe_subnets(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeSubnets">>, Input, Options).

%% @doc Describes the specified tags for your EC2 resources.
%%
%% For more information about tags, see Tag your Amazon EC2 resources:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html in the
%% Amazon Elastic Compute Cloud User Guide.
%%
%% We strongly recommend using only paginated requests. Unpaginated requests
%% are
%% susceptible to throttling and timeouts.
%%
%% The order of the elements in the response, including those within nested
%% structures, might vary. Applications should not assume the elements appear
%% in a
%% particular order.
-spec describe_tags(aws_client:aws_client(), describe_tags_request()) ->
    {ok, describe_tags_result(), tuple()} |
    {error, any()}.
describe_tags(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_tags(Client, Input, []).

-spec describe_tags(aws_client:aws_client(), describe_tags_request(), proplists:proplist()) ->
    {ok, describe_tags_result(), tuple()} |
    {error, any()}.
describe_tags(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTags">>, Input, Options).

%% @doc Describe traffic mirror filters that determine the traffic that is
%% mirrored.
-spec describe_traffic_mirror_filter_rules(aws_client:aws_client(), describe_traffic_mirror_filter_rules_request()) ->
    {ok, describe_traffic_mirror_filter_rules_result(), tuple()} |
    {error, any()}.
describe_traffic_mirror_filter_rules(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_traffic_mirror_filter_rules(Client, Input, []).

-spec describe_traffic_mirror_filter_rules(aws_client:aws_client(), describe_traffic_mirror_filter_rules_request(), proplists:proplist()) ->
    {ok, describe_traffic_mirror_filter_rules_result(), tuple()} |
    {error, any()}.
describe_traffic_mirror_filter_rules(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTrafficMirrorFilterRules">>, Input, Options).

%% @doc Describes one or more Traffic Mirror filters.
-spec describe_traffic_mirror_filters(aws_client:aws_client(), describe_traffic_mirror_filters_request()) ->
    {ok, describe_traffic_mirror_filters_result(), tuple()} |
    {error, any()}.
describe_traffic_mirror_filters(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_traffic_mirror_filters(Client, Input, []).

-spec describe_traffic_mirror_filters(aws_client:aws_client(), describe_traffic_mirror_filters_request(), proplists:proplist()) ->
    {ok, describe_traffic_mirror_filters_result(), tuple()} |
    {error, any()}.
describe_traffic_mirror_filters(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTrafficMirrorFilters">>, Input, Options).

%% @doc Describes one or more Traffic Mirror sessions.
%%
%% By default, all Traffic Mirror sessions are described. Alternatively, you
%% can filter the results.
-spec describe_traffic_mirror_sessions(aws_client:aws_client(), describe_traffic_mirror_sessions_request()) ->
    {ok, describe_traffic_mirror_sessions_result(), tuple()} |
    {error, any()}.
describe_traffic_mirror_sessions(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_traffic_mirror_sessions(Client, Input, []).

-spec describe_traffic_mirror_sessions(aws_client:aws_client(), describe_traffic_mirror_sessions_request(), proplists:proplist()) ->
    {ok, describe_traffic_mirror_sessions_result(), tuple()} |
    {error, any()}.
describe_traffic_mirror_sessions(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTrafficMirrorSessions">>, Input, Options).

%% @doc Information about one or more Traffic Mirror targets.
-spec describe_traffic_mirror_targets(aws_client:aws_client(), describe_traffic_mirror_targets_request()) ->
    {ok, describe_traffic_mirror_targets_result(), tuple()} |
    {error, any()}.
describe_traffic_mirror_targets(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_traffic_mirror_targets(Client, Input, []).

-spec describe_traffic_mirror_targets(aws_client:aws_client(), describe_traffic_mirror_targets_request(), proplists:proplist()) ->
    {ok, describe_traffic_mirror_targets_result(), tuple()} |
    {error, any()}.
describe_traffic_mirror_targets(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTrafficMirrorTargets">>, Input, Options).

%% @doc Describes one or more attachments between resources and transit
%% gateways.
%%
%% By default, all attachments are described.
%% Alternatively, you can filter the results by attachment ID, attachment
%% state, resource ID, or resource owner.
-spec describe_transit_gateway_attachments(aws_client:aws_client(), describe_transit_gateway_attachments_request()) ->
    {ok, describe_transit_gateway_attachments_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_attachments(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_transit_gateway_attachments(Client, Input, []).

-spec describe_transit_gateway_attachments(aws_client:aws_client(), describe_transit_gateway_attachments_request(), proplists:proplist()) ->
    {ok, describe_transit_gateway_attachments_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_attachments(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTransitGatewayAttachments">>, Input, Options).

%% @doc Describes one or more Connect peers.
-spec describe_transit_gateway_connect_peers(aws_client:aws_client(), describe_transit_gateway_connect_peers_request()) ->
    {ok, describe_transit_gateway_connect_peers_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_connect_peers(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_transit_gateway_connect_peers(Client, Input, []).

-spec describe_transit_gateway_connect_peers(aws_client:aws_client(), describe_transit_gateway_connect_peers_request(), proplists:proplist()) ->
    {ok, describe_transit_gateway_connect_peers_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_connect_peers(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTransitGatewayConnectPeers">>, Input, Options).

%% @doc Describes one or more Connect attachments.
-spec describe_transit_gateway_connects(aws_client:aws_client(), describe_transit_gateway_connects_request()) ->
    {ok, describe_transit_gateway_connects_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_connects(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_transit_gateway_connects(Client, Input, []).

-spec describe_transit_gateway_connects(aws_client:aws_client(), describe_transit_gateway_connects_request(), proplists:proplist()) ->
    {ok, describe_transit_gateway_connects_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_connects(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTransitGatewayConnects">>, Input, Options).

%% @doc Describes one or more transit gateway multicast domains.
-spec describe_transit_gateway_multicast_domains(aws_client:aws_client(), describe_transit_gateway_multicast_domains_request()) ->
    {ok, describe_transit_gateway_multicast_domains_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_multicast_domains(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_transit_gateway_multicast_domains(Client, Input, []).

-spec describe_transit_gateway_multicast_domains(aws_client:aws_client(), describe_transit_gateway_multicast_domains_request(), proplists:proplist()) ->
    {ok, describe_transit_gateway_multicast_domains_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_multicast_domains(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTransitGatewayMulticastDomains">>, Input, Options).

%% @doc Describes your transit gateway peering attachments.
-spec describe_transit_gateway_peering_attachments(aws_client:aws_client(), describe_transit_gateway_peering_attachments_request()) ->
    {ok, describe_transit_gateway_peering_attachments_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_peering_attachments(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_transit_gateway_peering_attachments(Client, Input, []).

-spec describe_transit_gateway_peering_attachments(aws_client:aws_client(), describe_transit_gateway_peering_attachments_request(), proplists:proplist()) ->
    {ok, describe_transit_gateway_peering_attachments_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_peering_attachments(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTransitGatewayPeeringAttachments">>, Input, Options).

%% @doc Describes one or more transit gateway route policy tables.
-spec describe_transit_gateway_policy_tables(aws_client:aws_client(), describe_transit_gateway_policy_tables_request()) ->
    {ok, describe_transit_gateway_policy_tables_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_policy_tables(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_transit_gateway_policy_tables(Client, Input, []).

-spec describe_transit_gateway_policy_tables(aws_client:aws_client(), describe_transit_gateway_policy_tables_request(), proplists:proplist()) ->
    {ok, describe_transit_gateway_policy_tables_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_policy_tables(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTransitGatewayPolicyTables">>, Input, Options).

%% @doc Describes one or more transit gateway route table advertisements.
-spec describe_transit_gateway_route_table_announcements(aws_client:aws_client(), describe_transit_gateway_route_table_announcements_request()) ->
    {ok, describe_transit_gateway_route_table_announcements_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_route_table_announcements(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_transit_gateway_route_table_announcements(Client, Input, []).

-spec describe_transit_gateway_route_table_announcements(aws_client:aws_client(), describe_transit_gateway_route_table_announcements_request(), proplists:proplist()) ->
    {ok, describe_transit_gateway_route_table_announcements_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_route_table_announcements(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTransitGatewayRouteTableAnnouncements">>, Input, Options).

%% @doc Describes one or more transit gateway route tables.
%%
%% By default, all transit gateway route tables are described.
%% Alternatively, you can filter the results.
-spec describe_transit_gateway_route_tables(aws_client:aws_client(), describe_transit_gateway_route_tables_request()) ->
    {ok, describe_transit_gateway_route_tables_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_route_tables(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_transit_gateway_route_tables(Client, Input, []).

-spec describe_transit_gateway_route_tables(aws_client:aws_client(), describe_transit_gateway_route_tables_request(), proplists:proplist()) ->
    {ok, describe_transit_gateway_route_tables_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_route_tables(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTransitGatewayRouteTables">>, Input, Options).

%% @doc Describes one or more VPC attachments.
%%
%% By default, all VPC attachments are described.
%% Alternatively, you can filter the results.
-spec describe_transit_gateway_vpc_attachments(aws_client:aws_client(), describe_transit_gateway_vpc_attachments_request()) ->
    {ok, describe_transit_gateway_vpc_attachments_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_vpc_attachments(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_transit_gateway_vpc_attachments(Client, Input, []).

-spec describe_transit_gateway_vpc_attachments(aws_client:aws_client(), describe_transit_gateway_vpc_attachments_request(), proplists:proplist()) ->
    {ok, describe_transit_gateway_vpc_attachments_result(), tuple()} |
    {error, any()}.
describe_transit_gateway_vpc_attachments(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTransitGatewayVpcAttachments">>, Input, Options).

%% @doc Describes one or more transit gateways.
%%
%% By default, all transit gateways are described. Alternatively, you can
%% filter the results.
-spec describe_transit_gateways(aws_client:aws_client(), describe_transit_gateways_request()) ->
    {ok, describe_transit_gateways_result(), tuple()} |
    {error, any()}.
describe_transit_gateways(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_transit_gateways(Client, Input, []).

-spec describe_transit_gateways(aws_client:aws_client(), describe_transit_gateways_request(), proplists:proplist()) ->
    {ok, describe_transit_gateways_result(), tuple()} |
    {error, any()}.
describe_transit_gateways(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTransitGateways">>, Input, Options).

%% @doc Describes one or more network interface trunk associations.
-spec describe_trunk_interface_associations(aws_client:aws_client(), describe_trunk_interface_associations_request()) ->
    {ok, describe_trunk_interface_associations_result(), tuple()} |
    {error, any()}.
describe_trunk_interface_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_trunk_interface_associations(Client, Input, []).

-spec describe_trunk_interface_associations(aws_client:aws_client(), describe_trunk_interface_associations_request(), proplists:proplist()) ->
    {ok, describe_trunk_interface_associations_result(), tuple()} |
    {error, any()}.
describe_trunk_interface_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeTrunkInterfaceAssociations">>, Input, Options).

%% @doc Describes the specified Amazon Web Services Verified Access
%% endpoints.
-spec describe_verified_access_endpoints(aws_client:aws_client(), describe_verified_access_endpoints_request()) ->
    {ok, describe_verified_access_endpoints_result(), tuple()} |
    {error, any()}.
describe_verified_access_endpoints(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_verified_access_endpoints(Client, Input, []).

-spec describe_verified_access_endpoints(aws_client:aws_client(), describe_verified_access_endpoints_request(), proplists:proplist()) ->
    {ok, describe_verified_access_endpoints_result(), tuple()} |
    {error, any()}.
describe_verified_access_endpoints(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVerifiedAccessEndpoints">>, Input, Options).

%% @doc Describes the specified Verified Access groups.
-spec describe_verified_access_groups(aws_client:aws_client(), describe_verified_access_groups_request()) ->
    {ok, describe_verified_access_groups_result(), tuple()} |
    {error, any()}.
describe_verified_access_groups(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_verified_access_groups(Client, Input, []).

-spec describe_verified_access_groups(aws_client:aws_client(), describe_verified_access_groups_request(), proplists:proplist()) ->
    {ok, describe_verified_access_groups_result(), tuple()} |
    {error, any()}.
describe_verified_access_groups(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVerifiedAccessGroups">>, Input, Options).

%% @doc Describes the specified Amazon Web Services Verified Access
%% instances.
-spec describe_verified_access_instance_logging_configurations(aws_client:aws_client(), describe_verified_access_instance_logging_configurations_request()) ->
    {ok, describe_verified_access_instance_logging_configurations_result(), tuple()} |
    {error, any()}.
describe_verified_access_instance_logging_configurations(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_verified_access_instance_logging_configurations(Client, Input, []).

-spec describe_verified_access_instance_logging_configurations(aws_client:aws_client(), describe_verified_access_instance_logging_configurations_request(), proplists:proplist()) ->
    {ok, describe_verified_access_instance_logging_configurations_result(), tuple()} |
    {error, any()}.
describe_verified_access_instance_logging_configurations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVerifiedAccessInstanceLoggingConfigurations">>, Input, Options).

%% @doc Describes the specified Amazon Web Services Verified Access
%% instances.
-spec describe_verified_access_instances(aws_client:aws_client(), describe_verified_access_instances_request()) ->
    {ok, describe_verified_access_instances_result(), tuple()} |
    {error, any()}.
describe_verified_access_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_verified_access_instances(Client, Input, []).

-spec describe_verified_access_instances(aws_client:aws_client(), describe_verified_access_instances_request(), proplists:proplist()) ->
    {ok, describe_verified_access_instances_result(), tuple()} |
    {error, any()}.
describe_verified_access_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVerifiedAccessInstances">>, Input, Options).

%% @doc Describes the specified Amazon Web Services Verified Access trust
%% providers.
-spec describe_verified_access_trust_providers(aws_client:aws_client(), describe_verified_access_trust_providers_request()) ->
    {ok, describe_verified_access_trust_providers_result(), tuple()} |
    {error, any()}.
describe_verified_access_trust_providers(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_verified_access_trust_providers(Client, Input, []).

-spec describe_verified_access_trust_providers(aws_client:aws_client(), describe_verified_access_trust_providers_request(), proplists:proplist()) ->
    {ok, describe_verified_access_trust_providers_result(), tuple()} |
    {error, any()}.
describe_verified_access_trust_providers(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVerifiedAccessTrustProviders">>, Input, Options).

%% @doc Describes the specified attribute of the specified volume.
%%
%% You can specify only one
%% attribute at a time.
%%
%% For more information about EBS volumes, see Amazon EBS volumes:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-volumes.html in the
%% Amazon EBS User Guide.
-spec describe_volume_attribute(aws_client:aws_client(), describe_volume_attribute_request()) ->
    {ok, describe_volume_attribute_result(), tuple()} |
    {error, any()}.
describe_volume_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_volume_attribute(Client, Input, []).

-spec describe_volume_attribute(aws_client:aws_client(), describe_volume_attribute_request(), proplists:proplist()) ->
    {ok, describe_volume_attribute_result(), tuple()} |
    {error, any()}.
describe_volume_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVolumeAttribute">>, Input, Options).

%% @doc Describes the status of the specified volumes.
%%
%% Volume status provides the result of the
%% checks performed on your volumes to determine events that can impair the
%% performance of your
%% volumes. The performance of a volume can be affected if an issue occurs on
%% the volume's
%% underlying host. If the volume's underlying host experiences a power
%% outage or system issue,
%% after the system is restored, there could be data inconsistencies on the
%% volume. Volume events
%% notify you if this occurs. Volume actions notify you if any action needs
%% to be taken in
%% response to the event.
%%
%% The `DescribeVolumeStatus' operation provides the following
%% information about
%% the specified volumes:
%%
%% Status: Reflects the current status of the volume. The possible
%% values are `ok', `impaired' , `warning', or
%% `insufficient-data'. If all checks pass, the overall status of the
%% volume is
%% `ok'. If the check fails, the overall status is `impaired'. If the
%% status is `insufficient-data', then the checks might still be taking
%% place on your
%% volume at the time. We recommend that you retry the request. For more
%% information about volume
%% status, see Monitor the status of your volumes:
%% https://docs.aws.amazon.com/ebs/latest/userguide/monitoring-volume-status.html
%% in the Amazon EBS User Guide.
%%
%% Events: Reflect the cause of a volume status and might require you to
%% take action. For example, if your volume returns an `impaired' status,
%% then the
%% volume event might be `potential-data-inconsistency'. This means that
%% your volume
%% has been affected by an issue with the underlying host, has all I/O
%% operations disabled, and
%% might have inconsistent data.
%%
%% Actions: Reflect the actions you might have to take in response to an
%% event. For example, if the status of the volume is `impaired' and the
%% volume event
%% shows `potential-data-inconsistency', then the action shows
%% `enable-volume-io'. This means that you may want to enable the I/O
%% operations for
%% the volume and then check the volume for data consistency. For more
%% information, see
%% Work with an
%% impaired EBS volume:
%% https://docs.aws.amazon.com/ebs/latest/userguide/work_volumes_impaired.html.
%%
%% Volume status is based on the volume status checks, and does not reflect
%% the volume state.
%% Therefore, volume status does not indicate volumes in the `error'
%% state (for
%% example, when a volume is incapable of accepting I/O.)
%%
%% The order of the elements in the response, including those within nested
%% structures, might vary. Applications should not assume the elements appear
%% in a
%% particular order.
-spec describe_volume_status(aws_client:aws_client(), describe_volume_status_request()) ->
    {ok, describe_volume_status_result(), tuple()} |
    {error, any()}.
describe_volume_status(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_volume_status(Client, Input, []).

-spec describe_volume_status(aws_client:aws_client(), describe_volume_status_request(), proplists:proplist()) ->
    {ok, describe_volume_status_result(), tuple()} |
    {error, any()}.
describe_volume_status(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVolumeStatus">>, Input, Options).

%% @doc Describes the specified EBS volumes or all of your EBS volumes.
%%
%% If you are describing a long list of volumes, we recommend that you
%% paginate the output to make the list
%% more manageable. For more information, see Pagination:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination.
%%
%% For more information about EBS volumes, see Amazon EBS volumes:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-volumes.html in the
%% Amazon EBS User Guide.
%%
%% We strongly recommend using only paginated requests. Unpaginated requests
%% are
%% susceptible to throttling and timeouts.
%%
%% The order of the elements in the response, including those within nested
%% structures, might vary. Applications should not assume the elements appear
%% in a
%% particular order.
-spec describe_volumes(aws_client:aws_client(), describe_volumes_request()) ->
    {ok, describe_volumes_result(), tuple()} |
    {error, any()}.
describe_volumes(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_volumes(Client, Input, []).

-spec describe_volumes(aws_client:aws_client(), describe_volumes_request(), proplists:proplist()) ->
    {ok, describe_volumes_result(), tuple()} |
    {error, any()}.
describe_volumes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVolumes">>, Input, Options).

%% @doc Describes the most recent volume modification request for the
%% specified EBS volumes.
%%
%% For more information, see
%% Monitor the progress of volume modifications:
%% https://docs.aws.amazon.com/ebs/latest/userguide/monitoring-volume-modifications.html
%% in the Amazon EBS User Guide.
-spec describe_volumes_modifications(aws_client:aws_client(), describe_volumes_modifications_request()) ->
    {ok, describe_volumes_modifications_result(), tuple()} |
    {error, any()}.
describe_volumes_modifications(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_volumes_modifications(Client, Input, []).

-spec describe_volumes_modifications(aws_client:aws_client(), describe_volumes_modifications_request(), proplists:proplist()) ->
    {ok, describe_volumes_modifications_result(), tuple()} |
    {error, any()}.
describe_volumes_modifications(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVolumesModifications">>, Input, Options).

%% @doc Describes the specified attribute of the specified VPC.
%%
%% You can specify only one attribute at a time.
-spec describe_vpc_attribute(aws_client:aws_client(), describe_vpc_attribute_request()) ->
    {ok, describe_vpc_attribute_result(), tuple()} |
    {error, any()}.
describe_vpc_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_attribute(Client, Input, []).

-spec describe_vpc_attribute(aws_client:aws_client(), describe_vpc_attribute_request(), proplists:proplist()) ->
    {ok, describe_vpc_attribute_result(), tuple()} |
    {error, any()}.
describe_vpc_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcAttribute">>, Input, Options).

%% @doc Describe VPC Block Public Access (BPA) exclusions.
%%
%% A VPC BPA exclusion is a mode that can be applied to a single VPC or
%% subnet that exempts it from the account’s BPA mode and will allow
%% bidirectional or egress-only access. You can create BPA exclusions for
%% VPCs and subnets even when BPA is not enabled on the account to ensure
%% that there is no traffic disruption to the exclusions when VPC BPA is
%% turned on. To learn more about VPC BPA, see Block public access to VPCs
%% and subnets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/security-vpc-bpa.html in
%% the Amazon VPC User Guide.
-spec describe_vpc_block_public_access_exclusions(aws_client:aws_client(), describe_vpc_block_public_access_exclusions_request()) ->
    {ok, describe_vpc_block_public_access_exclusions_result(), tuple()} |
    {error, any()}.
describe_vpc_block_public_access_exclusions(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_block_public_access_exclusions(Client, Input, []).

-spec describe_vpc_block_public_access_exclusions(aws_client:aws_client(), describe_vpc_block_public_access_exclusions_request(), proplists:proplist()) ->
    {ok, describe_vpc_block_public_access_exclusions_result(), tuple()} |
    {error, any()}.
describe_vpc_block_public_access_exclusions(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcBlockPublicAccessExclusions">>, Input, Options).

%% @doc Describe VPC Block Public Access (BPA) options.
%%
%% VPC Block Public Access (BPA) enables you to block resources in VPCs and
%% subnets that you own in a Region from reaching or being reached from the
%% internet through internet gateways and egress-only internet gateways. To
%% learn more about VPC BPA, see Block public access to VPCs and subnets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/security-vpc-bpa.html in
%% the Amazon VPC User Guide.
-spec describe_vpc_block_public_access_options(aws_client:aws_client(), describe_vpc_block_public_access_options_request()) ->
    {ok, describe_vpc_block_public_access_options_result(), tuple()} |
    {error, any()}.
describe_vpc_block_public_access_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_block_public_access_options(Client, Input, []).

-spec describe_vpc_block_public_access_options(aws_client:aws_client(), describe_vpc_block_public_access_options_request(), proplists:proplist()) ->
    {ok, describe_vpc_block_public_access_options_result(), tuple()} |
    {error, any()}.
describe_vpc_block_public_access_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcBlockPublicAccessOptions">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Describes the ClassicLink status of the specified VPCs.
-spec describe_vpc_classic_link(aws_client:aws_client(), describe_vpc_classic_link_request()) ->
    {ok, describe_vpc_classic_link_result(), tuple()} |
    {error, any()}.
describe_vpc_classic_link(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_classic_link(Client, Input, []).

-spec describe_vpc_classic_link(aws_client:aws_client(), describe_vpc_classic_link_request(), proplists:proplist()) ->
    {ok, describe_vpc_classic_link_result(), tuple()} |
    {error, any()}.
describe_vpc_classic_link(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcClassicLink">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Describes the ClassicLink DNS support status of one or more VPCs. If
%% enabled, the DNS
%% hostname of a linked EC2-Classic instance resolves to its private IP
%% address when
%% addressed from an instance in the VPC to which it's linked. Similarly,
%% the DNS hostname
%% of an instance in a VPC resolves to its private IP address when addressed
%% from a linked
%% EC2-Classic instance.
-spec describe_vpc_classic_link_dns_support(aws_client:aws_client(), describe_vpc_classic_link_dns_support_request()) ->
    {ok, describe_vpc_classic_link_dns_support_result(), tuple()} |
    {error, any()}.
describe_vpc_classic_link_dns_support(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_classic_link_dns_support(Client, Input, []).

-spec describe_vpc_classic_link_dns_support(aws_client:aws_client(), describe_vpc_classic_link_dns_support_request(), proplists:proplist()) ->
    {ok, describe_vpc_classic_link_dns_support_result(), tuple()} |
    {error, any()}.
describe_vpc_classic_link_dns_support(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcClassicLinkDnsSupport">>, Input, Options).

%% @doc Describes the VPC resources, VPC endpoint services, Amazon Lattice
%% services, or service networks
%% associated with the VPC endpoint.
-spec describe_vpc_endpoint_associations(aws_client:aws_client(), describe_vpc_endpoint_associations_request()) ->
    {ok, describe_vpc_endpoint_associations_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_endpoint_associations(Client, Input, []).

-spec describe_vpc_endpoint_associations(aws_client:aws_client(), describe_vpc_endpoint_associations_request(), proplists:proplist()) ->
    {ok, describe_vpc_endpoint_associations_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcEndpointAssociations">>, Input, Options).

%% @doc Describes the connection notifications for VPC endpoints and VPC
%% endpoint
%% services.
-spec describe_vpc_endpoint_connection_notifications(aws_client:aws_client(), describe_vpc_endpoint_connection_notifications_request()) ->
    {ok, describe_vpc_endpoint_connection_notifications_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_connection_notifications(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_endpoint_connection_notifications(Client, Input, []).

-spec describe_vpc_endpoint_connection_notifications(aws_client:aws_client(), describe_vpc_endpoint_connection_notifications_request(), proplists:proplist()) ->
    {ok, describe_vpc_endpoint_connection_notifications_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_connection_notifications(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcEndpointConnectionNotifications">>, Input, Options).

%% @doc Describes the VPC endpoint connections to your VPC endpoint services,
%% including any
%% endpoints that are pending your acceptance.
-spec describe_vpc_endpoint_connections(aws_client:aws_client(), describe_vpc_endpoint_connections_request()) ->
    {ok, describe_vpc_endpoint_connections_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_connections(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_endpoint_connections(Client, Input, []).

-spec describe_vpc_endpoint_connections(aws_client:aws_client(), describe_vpc_endpoint_connections_request(), proplists:proplist()) ->
    {ok, describe_vpc_endpoint_connections_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_connections(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcEndpointConnections">>, Input, Options).

%% @doc Describes the VPC endpoint service configurations in your account
%% (your services).
-spec describe_vpc_endpoint_service_configurations(aws_client:aws_client(), describe_vpc_endpoint_service_configurations_request()) ->
    {ok, describe_vpc_endpoint_service_configurations_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_service_configurations(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_endpoint_service_configurations(Client, Input, []).

-spec describe_vpc_endpoint_service_configurations(aws_client:aws_client(), describe_vpc_endpoint_service_configurations_request(), proplists:proplist()) ->
    {ok, describe_vpc_endpoint_service_configurations_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_service_configurations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcEndpointServiceConfigurations">>, Input, Options).

%% @doc Describes the principals (service consumers) that are permitted to
%% discover your VPC
%% endpoint service.
%%
%% Principal ARNs with path components aren't supported.
-spec describe_vpc_endpoint_service_permissions(aws_client:aws_client(), describe_vpc_endpoint_service_permissions_request()) ->
    {ok, describe_vpc_endpoint_service_permissions_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_service_permissions(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_endpoint_service_permissions(Client, Input, []).

-spec describe_vpc_endpoint_service_permissions(aws_client:aws_client(), describe_vpc_endpoint_service_permissions_request(), proplists:proplist()) ->
    {ok, describe_vpc_endpoint_service_permissions_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_service_permissions(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcEndpointServicePermissions">>, Input, Options).

%% @doc Describes available services to which you can create a VPC endpoint.
%%
%% When the service provider and the consumer have different accounts in
%% multiple
%% Availability Zones, and the consumer views the VPC endpoint service
%% information, the
%% response only includes the common Availability Zones. For example, when
%% the service
%% provider account uses `us-east-1a' and `us-east-1c' and the
%% consumer uses `us-east-1a' and `us-east-1b', the response includes
%% the VPC endpoint services in the common Availability Zone,
%% `us-east-1a'.
-spec describe_vpc_endpoint_services(aws_client:aws_client(), describe_vpc_endpoint_services_request()) ->
    {ok, describe_vpc_endpoint_services_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_services(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_endpoint_services(Client, Input, []).

-spec describe_vpc_endpoint_services(aws_client:aws_client(), describe_vpc_endpoint_services_request(), proplists:proplist()) ->
    {ok, describe_vpc_endpoint_services_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoint_services(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcEndpointServices">>, Input, Options).

%% @doc Describes your VPC endpoints.
%%
%% The default is to describe all your VPC endpoints.
%% Alternatively, you can specify specific VPC endpoint IDs or filter the
%% results to
%% include only the VPC endpoints that match specific criteria.
-spec describe_vpc_endpoints(aws_client:aws_client(), describe_vpc_endpoints_request()) ->
    {ok, describe_vpc_endpoints_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoints(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_endpoints(Client, Input, []).

-spec describe_vpc_endpoints(aws_client:aws_client(), describe_vpc_endpoints_request(), proplists:proplist()) ->
    {ok, describe_vpc_endpoints_result(), tuple()} |
    {error, any()}.
describe_vpc_endpoints(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcEndpoints">>, Input, Options).

%% @doc Describes your VPC peering connections.
%%
%% The default is to describe all your VPC peering connections.
%% Alternatively, you can specify specific VPC peering connection IDs or
%% filter the results to
%% include only the VPC peering connections that match specific criteria.
-spec describe_vpc_peering_connections(aws_client:aws_client(), describe_vpc_peering_connections_request()) ->
    {ok, describe_vpc_peering_connections_result(), tuple()} |
    {error, any()}.
describe_vpc_peering_connections(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpc_peering_connections(Client, Input, []).

-spec describe_vpc_peering_connections(aws_client:aws_client(), describe_vpc_peering_connections_request(), proplists:proplist()) ->
    {ok, describe_vpc_peering_connections_result(), tuple()} |
    {error, any()}.
describe_vpc_peering_connections(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcPeeringConnections">>, Input, Options).

%% @doc Describes your VPCs.
%%
%% The default is to describe all your VPCs.
%% Alternatively, you can specify specific VPC IDs or filter the results to
%% include only the VPCs that match specific criteria.
-spec describe_vpcs(aws_client:aws_client(), describe_vpcs_request()) ->
    {ok, describe_vpcs_result(), tuple()} |
    {error, any()}.
describe_vpcs(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpcs(Client, Input, []).

-spec describe_vpcs(aws_client:aws_client(), describe_vpcs_request(), proplists:proplist()) ->
    {ok, describe_vpcs_result(), tuple()} |
    {error, any()}.
describe_vpcs(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpcs">>, Input, Options).

%% @doc Describes one or more of your VPN connections.
%%
%% For more information, see Amazon Web Services Site-to-Site VPN:
%% https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html in the Amazon
%% Web Services Site-to-Site VPN
%% User Guide.
-spec describe_vpn_connections(aws_client:aws_client(), describe_vpn_connections_request()) ->
    {ok, describe_vpn_connections_result(), tuple()} |
    {error, any()}.
describe_vpn_connections(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpn_connections(Client, Input, []).

-spec describe_vpn_connections(aws_client:aws_client(), describe_vpn_connections_request(), proplists:proplist()) ->
    {ok, describe_vpn_connections_result(), tuple()} |
    {error, any()}.
describe_vpn_connections(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpnConnections">>, Input, Options).

%% @doc Describes one or more of your virtual private gateways.
%%
%% For more information, see Amazon Web Services Site-to-Site VPN:
%% https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html in the Amazon
%% Web Services Site-to-Site VPN
%% User Guide.
-spec describe_vpn_gateways(aws_client:aws_client(), describe_vpn_gateways_request()) ->
    {ok, describe_vpn_gateways_result(), tuple()} |
    {error, any()}.
describe_vpn_gateways(Client, Input)
  when is_map(Client), is_map(Input) ->
    describe_vpn_gateways(Client, Input, []).

-spec describe_vpn_gateways(aws_client:aws_client(), describe_vpn_gateways_request(), proplists:proplist()) ->
    {ok, describe_vpn_gateways_result(), tuple()} |
    {error, any()}.
describe_vpn_gateways(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DescribeVpnGateways">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Unlinks (detaches) a linked EC2-Classic instance from a VPC. After the
%% instance has been unlinked,
%% the VPC security groups are no longer associated with it. An instance is
%% automatically unlinked from
%% a VPC when it's stopped.
-spec detach_classic_link_vpc(aws_client:aws_client(), detach_classic_link_vpc_request()) ->
    {ok, detach_classic_link_vpc_result(), tuple()} |
    {error, any()}.
detach_classic_link_vpc(Client, Input)
  when is_map(Client), is_map(Input) ->
    detach_classic_link_vpc(Client, Input, []).

-spec detach_classic_link_vpc(aws_client:aws_client(), detach_classic_link_vpc_request(), proplists:proplist()) ->
    {ok, detach_classic_link_vpc_result(), tuple()} |
    {error, any()}.
detach_classic_link_vpc(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DetachClassicLinkVpc">>, Input, Options).

%% @doc Detaches an internet gateway from a VPC, disabling connectivity
%% between the internet
%% and the VPC.
%%
%% The VPC must not contain any running instances with Elastic IP addresses
%% or
%% public IPv4 addresses.
-spec detach_internet_gateway(aws_client:aws_client(), detach_internet_gateway_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
detach_internet_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    detach_internet_gateway(Client, Input, []).

-spec detach_internet_gateway(aws_client:aws_client(), detach_internet_gateway_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
detach_internet_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DetachInternetGateway">>, Input, Options).

%% @doc Detaches a network interface from an instance.
-spec detach_network_interface(aws_client:aws_client(), detach_network_interface_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
detach_network_interface(Client, Input)
  when is_map(Client), is_map(Input) ->
    detach_network_interface(Client, Input, []).

-spec detach_network_interface(aws_client:aws_client(), detach_network_interface_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
detach_network_interface(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DetachNetworkInterface">>, Input, Options).

%% @doc Detaches the specified Amazon Web Services Verified Access trust
%% provider from the specified Amazon Web Services Verified Access instance.
-spec detach_verified_access_trust_provider(aws_client:aws_client(), detach_verified_access_trust_provider_request()) ->
    {ok, detach_verified_access_trust_provider_result(), tuple()} |
    {error, any()}.
detach_verified_access_trust_provider(Client, Input)
  when is_map(Client), is_map(Input) ->
    detach_verified_access_trust_provider(Client, Input, []).

-spec detach_verified_access_trust_provider(aws_client:aws_client(), detach_verified_access_trust_provider_request(), proplists:proplist()) ->
    {ok, detach_verified_access_trust_provider_result(), tuple()} |
    {error, any()}.
detach_verified_access_trust_provider(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DetachVerifiedAccessTrustProvider">>, Input, Options).

%% @doc Detaches an EBS volume from an instance.
%%
%% Make sure to unmount any file systems on the
%% device within your operating system before detaching the volume. Failure
%% to do so can result
%% in the volume becoming stuck in the `busy' state while detaching. If
%% this happens,
%% detachment can be delayed indefinitely until you unmount the volume, force
%% detachment, reboot
%% the instance, or all three. If an EBS volume is the root device of an
%% instance, it can't be
%% detached while the instance is running. To detach the root volume, stop
%% the instance
%% first.
%%
%% When a volume with an Amazon Web Services Marketplace product code is
%% detached from an instance, the
%% product code is no longer associated with the instance.
%%
%% You can't detach or force detach volumes that are attached to Amazon
%% Web Services-managed resources.
%% Attempting to do this results in the `UnsupportedOperationException'
%% exception.
%%
%% For more information, see Detach an Amazon EBS volume:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-detaching-volume.html
%% in the
%% Amazon EBS User Guide.
-spec detach_volume(aws_client:aws_client(), detach_volume_request()) ->
    {ok, volume_attachment(), tuple()} |
    {error, any()}.
detach_volume(Client, Input)
  when is_map(Client), is_map(Input) ->
    detach_volume(Client, Input, []).

-spec detach_volume(aws_client:aws_client(), detach_volume_request(), proplists:proplist()) ->
    {ok, volume_attachment(), tuple()} |
    {error, any()}.
detach_volume(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DetachVolume">>, Input, Options).

%% @doc Detaches a virtual private gateway from a VPC.
%%
%% You do this if you're planning to turn
%% off the VPC and not use it anymore. You can confirm a virtual private
%% gateway has been
%% completely detached from a VPC by describing the virtual private gateway
%% (any
%% attachments to the virtual private gateway are also described).
%%
%% You must wait for the attachment's state to switch to `detached'
%% before you
%% can delete the VPC or attach a different VPC to the virtual private
%% gateway.
-spec detach_vpn_gateway(aws_client:aws_client(), detach_vpn_gateway_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
detach_vpn_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    detach_vpn_gateway(Client, Input, []).

-spec detach_vpn_gateway(aws_client:aws_client(), detach_vpn_gateway_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
detach_vpn_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DetachVpnGateway">>, Input, Options).

%% @doc Disables Elastic IP address transfer.
%%
%% For more information, see Transfer Elastic IP addresses:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-eips.html#transfer-EIPs-intro
%% in the Amazon VPC User Guide.
-spec disable_address_transfer(aws_client:aws_client(), disable_address_transfer_request()) ->
    {ok, disable_address_transfer_result(), tuple()} |
    {error, any()}.
disable_address_transfer(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_address_transfer(Client, Input, []).

-spec disable_address_transfer(aws_client:aws_client(), disable_address_transfer_request(), proplists:proplist()) ->
    {ok, disable_address_transfer_result(), tuple()} |
    {error, any()}.
disable_address_transfer(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableAddressTransfer">>, Input, Options).

%% @doc Disables Allowed AMIs for your account in the specified Amazon Web
%% Services Region.
%%
%% When set to
%% `disabled', the image criteria in your Allowed AMIs settings do not
%% apply, and no
%% restrictions are placed on AMI discoverability or usage. Users in your
%% account can launch
%% instances using any public AMI or AMI shared with your account.
%%
%% The Allowed AMIs feature does not restrict the AMIs owned by your account.
%% Regardless of
%% the criteria you set, the AMIs created by your account will always be
%% discoverable and
%% usable by users in your account.
%%
%% For more information, see Control the discovery and use of AMIs in
%% Amazon EC2 with Allowed AMIs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-allowed-amis.html
%% in
%% Amazon EC2 User Guide.
-spec disable_allowed_images_settings(aws_client:aws_client(), disable_allowed_images_settings_request()) ->
    {ok, disable_allowed_images_settings_result(), tuple()} |
    {error, any()}.
disable_allowed_images_settings(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_allowed_images_settings(Client, Input, []).

-spec disable_allowed_images_settings(aws_client:aws_client(), disable_allowed_images_settings_request(), proplists:proplist()) ->
    {ok, disable_allowed_images_settings_result(), tuple()} |
    {error, any()}.
disable_allowed_images_settings(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableAllowedImagesSettings">>, Input, Options).

%% @doc Disables Infrastructure Performance metric subscriptions.
-spec disable_aws_network_performance_metric_subscription(aws_client:aws_client(), disable_aws_network_performance_metric_subscription_request()) ->
    {ok, disable_aws_network_performance_metric_subscription_result(), tuple()} |
    {error, any()}.
disable_aws_network_performance_metric_subscription(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_aws_network_performance_metric_subscription(Client, Input, []).

-spec disable_aws_network_performance_metric_subscription(aws_client:aws_client(), disable_aws_network_performance_metric_subscription_request(), proplists:proplist()) ->
    {ok, disable_aws_network_performance_metric_subscription_result(), tuple()} |
    {error, any()}.
disable_aws_network_performance_metric_subscription(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableAwsNetworkPerformanceMetricSubscription">>, Input, Options).

%% @doc Disables EBS encryption by default for your account in the current
%% Region.
%%
%% After you disable encryption by default, you can still create encrypted
%% volumes by
%% enabling encryption when you create each volume.
%%
%% Disabling encryption by default does not change the encryption status of
%% your
%% existing volumes.
%%
%% For more information, see Amazon EBS encryption:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html in
%% the
%% Amazon EBS User Guide.
-spec disable_ebs_encryption_by_default(aws_client:aws_client(), disable_ebs_encryption_by_default_request()) ->
    {ok, disable_ebs_encryption_by_default_result(), tuple()} |
    {error, any()}.
disable_ebs_encryption_by_default(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_ebs_encryption_by_default(Client, Input, []).

-spec disable_ebs_encryption_by_default(aws_client:aws_client(), disable_ebs_encryption_by_default_request(), proplists:proplist()) ->
    {ok, disable_ebs_encryption_by_default_result(), tuple()} |
    {error, any()}.
disable_ebs_encryption_by_default(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableEbsEncryptionByDefault">>, Input, Options).

%% @doc Discontinue Windows fast launch for a Windows AMI, and clean up
%% existing pre-provisioned
%% snapshots.
%%
%% After you disable Windows fast launch, the AMI uses the standard launch
%% process for
%% each new instance. Amazon EC2 must remove all pre-provisioned snapshots
%% before you can enable
%% Windows fast launch again.
%%
%% You can only change these settings for Windows AMIs that you own or that
%% have been
%% shared with you.
-spec disable_fast_launch(aws_client:aws_client(), disable_fast_launch_request()) ->
    {ok, disable_fast_launch_result(), tuple()} |
    {error, any()}.
disable_fast_launch(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_fast_launch(Client, Input, []).

-spec disable_fast_launch(aws_client:aws_client(), disable_fast_launch_request(), proplists:proplist()) ->
    {ok, disable_fast_launch_result(), tuple()} |
    {error, any()}.
disable_fast_launch(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableFastLaunch">>, Input, Options).

%% @doc Disables fast snapshot restores for the specified snapshots in the
%% specified Availability Zones.
-spec disable_fast_snapshot_restores(aws_client:aws_client(), disable_fast_snapshot_restores_request()) ->
    {ok, disable_fast_snapshot_restores_result(), tuple()} |
    {error, any()}.
disable_fast_snapshot_restores(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_fast_snapshot_restores(Client, Input, []).

-spec disable_fast_snapshot_restores(aws_client:aws_client(), disable_fast_snapshot_restores_request(), proplists:proplist()) ->
    {ok, disable_fast_snapshot_restores_result(), tuple()} |
    {error, any()}.
disable_fast_snapshot_restores(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableFastSnapshotRestores">>, Input, Options).

%% @doc Sets the AMI state to `disabled' and removes all launch
%% permissions from the
%% AMI.
%%
%% A disabled AMI can't be used for instance launches.
%%
%% A disabled AMI can't be shared. If an AMI was public or previously
%% shared, it is made
%% private. If an AMI was shared with an Amazon Web Services account,
%% organization, or Organizational Unit,
%% they lose access to the disabled AMI.
%%
%% A disabled AMI does not appear in DescribeImages:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeImages.html
%% API calls by
%% default.
%%
%% Only the AMI owner can disable an AMI.
%%
%% You can re-enable a disabled AMI using EnableImage:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_EnableImage.html.
%%
%% For more information, see Disable an AMI:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/disable-an-ami.html in
%% the
%% Amazon EC2 User Guide.
-spec disable_image(aws_client:aws_client(), disable_image_request()) ->
    {ok, disable_image_result(), tuple()} |
    {error, any()}.
disable_image(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_image(Client, Input, []).

-spec disable_image(aws_client:aws_client(), disable_image_request(), proplists:proplist()) ->
    {ok, disable_image_result(), tuple()} |
    {error, any()}.
disable_image(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableImage">>, Input, Options).

%% @doc Disables block public access for AMIs at the account level in the
%% specified Amazon Web Services Region.
%%
%% This removes the block public access restriction
%% from your account. With the restriction removed, you can publicly share
%% your AMIs in the
%% specified Amazon Web Services Region.
%%
%% The API can take up to 10 minutes to configure this setting. During this
%% time, if you run
%% GetImageBlockPublicAccessState:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetImageBlockPublicAccessState.html,
%% the response will be
%% `block-new-sharing'. When the API has completed the configuration, the
%% response
%% will be `unblocked'.
%%
%% For more information, see Block
%% public access to your AMIs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-public-access-to-amis.html
%% in the Amazon EC2 User Guide.
-spec disable_image_block_public_access(aws_client:aws_client(), disable_image_block_public_access_request()) ->
    {ok, disable_image_block_public_access_result(), tuple()} |
    {error, any()}.
disable_image_block_public_access(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_image_block_public_access(Client, Input, []).

-spec disable_image_block_public_access(aws_client:aws_client(), disable_image_block_public_access_request(), proplists:proplist()) ->
    {ok, disable_image_block_public_access_result(), tuple()} |
    {error, any()}.
disable_image_block_public_access(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableImageBlockPublicAccess">>, Input, Options).

%% @doc Cancels the deprecation of the specified AMI.
%%
%% For more information, see Deprecate an Amazon EC2 AMI:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-deprecate.html in
%% the
%% Amazon EC2 User Guide.
-spec disable_image_deprecation(aws_client:aws_client(), disable_image_deprecation_request()) ->
    {ok, disable_image_deprecation_result(), tuple()} |
    {error, any()}.
disable_image_deprecation(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_image_deprecation(Client, Input, []).

-spec disable_image_deprecation(aws_client:aws_client(), disable_image_deprecation_request(), proplists:proplist()) ->
    {ok, disable_image_deprecation_result(), tuple()} |
    {error, any()}.
disable_image_deprecation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableImageDeprecation">>, Input, Options).

%% @doc Disables deregistration protection for an AMI.
%%
%% When deregistration protection is disabled,
%% the AMI can be deregistered.
%%
%% If you chose to include a 24-hour cooldown period when you enabled
%% deregistration
%% protection for the AMI, then, when you disable deregistration protection,
%% you won’t
%% immediately be able to deregister the AMI.
%%
%% For more information, see Protect an Amazon EC2 AMI from
%% deregistration:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-deregistration-protection.html
%% in the Amazon EC2 User Guide.
-spec disable_image_deregistration_protection(aws_client:aws_client(), disable_image_deregistration_protection_request()) ->
    {ok, disable_image_deregistration_protection_result(), tuple()} |
    {error, any()}.
disable_image_deregistration_protection(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_image_deregistration_protection(Client, Input, []).

-spec disable_image_deregistration_protection(aws_client:aws_client(), disable_image_deregistration_protection_request(), proplists:proplist()) ->
    {ok, disable_image_deregistration_protection_result(), tuple()} |
    {error, any()}.
disable_image_deregistration_protection(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableImageDeregistrationProtection">>, Input, Options).

%% @doc Disable the IPAM account.
%%
%% For more information, see Enable integration with Organizations:
%% https://docs.aws.amazon.com/vpc/latest/ipam/enable-integ-ipam.html in the
%% Amazon VPC IPAM User Guide.
-spec disable_ipam_organization_admin_account(aws_client:aws_client(), disable_ipam_organization_admin_account_request()) ->
    {ok, disable_ipam_organization_admin_account_result(), tuple()} |
    {error, any()}.
disable_ipam_organization_admin_account(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_ipam_organization_admin_account(Client, Input, []).

-spec disable_ipam_organization_admin_account(aws_client:aws_client(), disable_ipam_organization_admin_account_request(), proplists:proplist()) ->
    {ok, disable_ipam_organization_admin_account_result(), tuple()} |
    {error, any()}.
disable_ipam_organization_admin_account(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableIpamOrganizationAdminAccount">>, Input, Options).

%% @doc Disables route propagation from a route server to a specified route
%% table.
%%
%% When enabled, route server propagation installs the routes in the FIB on
%% the route table you've specified. Route server supports IPv4 and IPv6
%% route propagation.
%%
%% Amazon VPC Route Server simplifies routing for traffic between workloads
%% that are deployed within a VPC and its internet gateways. With this
%% feature,
%% VPC Route Server dynamically updates VPC and internet gateway route tables
%% with your preferred IPv4 or IPv6 routes to achieve routing fault tolerance
%% for those workloads. This enables you to automatically reroute traffic
%% within a VPC, which increases the manageability of VPC routing and
%% interoperability with third-party workloads.
%%
%% Route server supports the follow route table types:
%%
%% VPC route tables not associated with subnets
%%
%% Subnet route tables
%%
%% Internet gateway route tables
%%
%% Route server does not support route tables associated with virtual private
%% gateways. To propagate routes into a transit gateway route table, use
%% Transit Gateway Connect:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-connect.html.
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec disable_route_server_propagation(aws_client:aws_client(), disable_route_server_propagation_request()) ->
    {ok, disable_route_server_propagation_result(), tuple()} |
    {error, any()}.
disable_route_server_propagation(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_route_server_propagation(Client, Input, []).

-spec disable_route_server_propagation(aws_client:aws_client(), disable_route_server_propagation_request(), proplists:proplist()) ->
    {ok, disable_route_server_propagation_result(), tuple()} |
    {error, any()}.
disable_route_server_propagation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableRouteServerPropagation">>, Input, Options).

%% @doc Disables access to the EC2 serial console of all instances for your
%% account.
%%
%% By default,
%% access to the EC2 serial console is disabled for your account. For more
%% information, see
%% Manage account access to the EC2 serial console:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-access-to-serial-console.html#serial-console-account-access
%% in the Amazon EC2
%% User Guide.
-spec disable_serial_console_access(aws_client:aws_client(), disable_serial_console_access_request()) ->
    {ok, disable_serial_console_access_result(), tuple()} |
    {error, any()}.
disable_serial_console_access(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_serial_console_access(Client, Input, []).

-spec disable_serial_console_access(aws_client:aws_client(), disable_serial_console_access_request(), proplists:proplist()) ->
    {ok, disable_serial_console_access_result(), tuple()} |
    {error, any()}.
disable_serial_console_access(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableSerialConsoleAccess">>, Input, Options).

%% @doc Disables the block public access for snapshots setting at
%% the account level for the specified Amazon Web Services Region.
%%
%% After you disable block public
%% access for snapshots in a Region, users can publicly share snapshots in
%% that Region.
%%
%% Enabling block public access for snapshots in block-all-sharing
%% mode does not change the permissions for snapshots that are already
%% publicly shared.
%% Instead, it prevents these snapshots from be publicly visible and publicly
%% accessible.
%% Therefore, the attributes for these snapshots still indicate that they are
%% publicly
%% shared, even though they are not publicly available.
%%
%% If you disable block public access , these snapshots will become publicly
%% available
%% again.
%%
%% For more information, see
%% Block public access for snapshots:
%% https://docs.aws.amazon.com/ebs/latest/userguide/block-public-access-snapshots.html
%% in the Amazon EBS User Guide .
-spec disable_snapshot_block_public_access(aws_client:aws_client(), disable_snapshot_block_public_access_request()) ->
    {ok, disable_snapshot_block_public_access_result(), tuple()} |
    {error, any()}.
disable_snapshot_block_public_access(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_snapshot_block_public_access(Client, Input, []).

-spec disable_snapshot_block_public_access(aws_client:aws_client(), disable_snapshot_block_public_access_request(), proplists:proplist()) ->
    {ok, disable_snapshot_block_public_access_result(), tuple()} |
    {error, any()}.
disable_snapshot_block_public_access(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableSnapshotBlockPublicAccess">>, Input, Options).

%% @doc Disables the specified resource attachment from propagating routes to
%% the specified
%% propagation route table.
-spec disable_transit_gateway_route_table_propagation(aws_client:aws_client(), disable_transit_gateway_route_table_propagation_request()) ->
    {ok, disable_transit_gateway_route_table_propagation_result(), tuple()} |
    {error, any()}.
disable_transit_gateway_route_table_propagation(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_transit_gateway_route_table_propagation(Client, Input, []).

-spec disable_transit_gateway_route_table_propagation(aws_client:aws_client(), disable_transit_gateway_route_table_propagation_request(), proplists:proplist()) ->
    {ok, disable_transit_gateway_route_table_propagation_result(), tuple()} |
    {error, any()}.
disable_transit_gateway_route_table_propagation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableTransitGatewayRouteTablePropagation">>, Input, Options).

%% @doc Disables a virtual private gateway (VGW) from propagating routes to a
%% specified route
%% table of a VPC.
-spec disable_vgw_route_propagation(aws_client:aws_client(), disable_vgw_route_propagation_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
disable_vgw_route_propagation(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_vgw_route_propagation(Client, Input, []).

-spec disable_vgw_route_propagation(aws_client:aws_client(), disable_vgw_route_propagation_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
disable_vgw_route_propagation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableVgwRoutePropagation">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Disables ClassicLink for a VPC. You cannot disable ClassicLink for a VPC
%% that has EC2-Classic instances
%% linked to it.
-spec disable_vpc_classic_link(aws_client:aws_client(), disable_vpc_classic_link_request()) ->
    {ok, disable_vpc_classic_link_result(), tuple()} |
    {error, any()}.
disable_vpc_classic_link(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_vpc_classic_link(Client, Input, []).

-spec disable_vpc_classic_link(aws_client:aws_client(), disable_vpc_classic_link_request(), proplists:proplist()) ->
    {ok, disable_vpc_classic_link_result(), tuple()} |
    {error, any()}.
disable_vpc_classic_link(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableVpcClassicLink">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Disables ClassicLink DNS support for a VPC. If disabled, DNS hostnames
%% resolve to
%% public IP addresses when addressed between a linked EC2-Classic instance
%% and instances
%% in the VPC to which it's linked.
%%
%% You must specify a VPC ID in the request.
-spec disable_vpc_classic_link_dns_support(aws_client:aws_client(), disable_vpc_classic_link_dns_support_request()) ->
    {ok, disable_vpc_classic_link_dns_support_result(), tuple()} |
    {error, any()}.
disable_vpc_classic_link_dns_support(Client, Input)
  when is_map(Client), is_map(Input) ->
    disable_vpc_classic_link_dns_support(Client, Input, []).

-spec disable_vpc_classic_link_dns_support(aws_client:aws_client(), disable_vpc_classic_link_dns_support_request(), proplists:proplist()) ->
    {ok, disable_vpc_classic_link_dns_support_result(), tuple()} |
    {error, any()}.
disable_vpc_classic_link_dns_support(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisableVpcClassicLinkDnsSupport">>, Input, Options).

%% @doc Disassociates an Elastic IP address from the instance or network
%% interface it's associated with.
%%
%% This is an idempotent operation. If you perform the operation more than
%% once, Amazon EC2 doesn't return an error.
%%
%% An address cannot be disassociated if the all of the following conditions
%% are met:
%%
%% Network interface has a `publicDualStackDnsName' publicDnsName
%%
%% Public IPv4 address is the primary public IPv4 address
%%
%% Network interface only has one remaining public IPv4 address
-spec disassociate_address(aws_client:aws_client(), disassociate_address_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
disassociate_address(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_address(Client, Input, []).

-spec disassociate_address(aws_client:aws_client(), disassociate_address_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
disassociate_address(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateAddress">>, Input, Options).

%% @doc Cancels a pending request to assign billing of the unused capacity of
%% a Capacity
%% Reservation to a consumer account, or revokes a request that has already
%% been accepted.
%%
%% For more information, see Billing assignment for shared
%% Amazon EC2 Capacity Reservations:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/assign-billing.html.
-spec disassociate_capacity_reservation_billing_owner(aws_client:aws_client(), disassociate_capacity_reservation_billing_owner_request()) ->
    {ok, disassociate_capacity_reservation_billing_owner_result(), tuple()} |
    {error, any()}.
disassociate_capacity_reservation_billing_owner(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_capacity_reservation_billing_owner(Client, Input, []).

-spec disassociate_capacity_reservation_billing_owner(aws_client:aws_client(), disassociate_capacity_reservation_billing_owner_request(), proplists:proplist()) ->
    {ok, disassociate_capacity_reservation_billing_owner_result(), tuple()} |
    {error, any()}.
disassociate_capacity_reservation_billing_owner(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateCapacityReservationBillingOwner">>, Input, Options).

%% @doc Disassociates a target network from the specified Client VPN
%% endpoint.
%%
%% When you disassociate the
%% last target network from a Client VPN, the following happens:
%%
%% The route that was automatically added for the VPC is deleted
%%
%% All active client connections are terminated
%%
%% New client connections are disallowed
%%
%% The Client VPN endpoint's status changes to `pending-associate'
-spec disassociate_client_vpn_target_network(aws_client:aws_client(), disassociate_client_vpn_target_network_request()) ->
    {ok, disassociate_client_vpn_target_network_result(), tuple()} |
    {error, any()}.
disassociate_client_vpn_target_network(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_client_vpn_target_network(Client, Input, []).

-spec disassociate_client_vpn_target_network(aws_client:aws_client(), disassociate_client_vpn_target_network_request(), proplists:proplist()) ->
    {ok, disassociate_client_vpn_target_network_result(), tuple()} |
    {error, any()}.
disassociate_client_vpn_target_network(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateClientVpnTargetNetwork">>, Input, Options).

%% @doc Disassociates an IAM role from an Certificate Manager (ACM)
%% certificate.
%%
%% Disassociating an IAM role
%% from an ACM certificate removes the Amazon S3 object that contains the
%% certificate, certificate chain, and
%% encrypted private key from the Amazon S3 bucket. It also revokes the IAM
%% role's permission to use the
%% KMS key used to encrypt the private key. This effectively revokes the
%% role's permission
%% to use the certificate.
-spec disassociate_enclave_certificate_iam_role(aws_client:aws_client(), disassociate_enclave_certificate_iam_role_request()) ->
    {ok, disassociate_enclave_certificate_iam_role_result(), tuple()} |
    {error, any()}.
disassociate_enclave_certificate_iam_role(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_enclave_certificate_iam_role(Client, Input, []).

-spec disassociate_enclave_certificate_iam_role(aws_client:aws_client(), disassociate_enclave_certificate_iam_role_request(), proplists:proplist()) ->
    {ok, disassociate_enclave_certificate_iam_role_result(), tuple()} |
    {error, any()}.
disassociate_enclave_certificate_iam_role(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateEnclaveCertificateIamRole">>, Input, Options).

%% @doc Disassociates an IAM instance profile from a running or stopped
%% instance.
%%
%% Use `DescribeIamInstanceProfileAssociations' to get the association
%% ID.
-spec disassociate_iam_instance_profile(aws_client:aws_client(), disassociate_iam_instance_profile_request()) ->
    {ok, disassociate_iam_instance_profile_result(), tuple()} |
    {error, any()}.
disassociate_iam_instance_profile(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_iam_instance_profile(Client, Input, []).

-spec disassociate_iam_instance_profile(aws_client:aws_client(), disassociate_iam_instance_profile_request(), proplists:proplist()) ->
    {ok, disassociate_iam_instance_profile_result(), tuple()} |
    {error, any()}.
disassociate_iam_instance_profile(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateIamInstanceProfile">>, Input, Options).

%% @doc Disassociates one or more targets from an event window.
%%
%% For more information, see Define event windows for scheduled
%% events:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html in
%% the Amazon EC2 User Guide.
-spec disassociate_instance_event_window(aws_client:aws_client(), disassociate_instance_event_window_request()) ->
    {ok, disassociate_instance_event_window_result(), tuple()} |
    {error, any()}.
disassociate_instance_event_window(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_instance_event_window(Client, Input, []).

-spec disassociate_instance_event_window(aws_client:aws_client(), disassociate_instance_event_window_request(), proplists:proplist()) ->
    {ok, disassociate_instance_event_window_result(), tuple()} |
    {error, any()}.
disassociate_instance_event_window(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateInstanceEventWindow">>, Input, Options).

%% @doc Remove the association between your Autonomous System Number (ASN)
%% and your BYOIP CIDR.
%%
%% You may want to use this action to disassociate an ASN from a CIDR or if
%% you want to swap ASNs.
%% For more information, see Tutorial: Bring your ASN to IPAM:
%% https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoasn.html in the
%% Amazon VPC IPAM guide.
-spec disassociate_ipam_byoasn(aws_client:aws_client(), disassociate_ipam_byoasn_request()) ->
    {ok, disassociate_ipam_byoasn_result(), tuple()} |
    {error, any()}.
disassociate_ipam_byoasn(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_ipam_byoasn(Client, Input, []).

-spec disassociate_ipam_byoasn(aws_client:aws_client(), disassociate_ipam_byoasn_request(), proplists:proplist()) ->
    {ok, disassociate_ipam_byoasn_result(), tuple()} |
    {error, any()}.
disassociate_ipam_byoasn(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateIpamByoasn">>, Input, Options).

%% @doc Disassociates a resource discovery from an Amazon VPC IPAM.
%%
%% A resource discovery is an IPAM component that enables IPAM to manage and
%% monitor resources that belong to the owning account.
-spec disassociate_ipam_resource_discovery(aws_client:aws_client(), disassociate_ipam_resource_discovery_request()) ->
    {ok, disassociate_ipam_resource_discovery_result(), tuple()} |
    {error, any()}.
disassociate_ipam_resource_discovery(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_ipam_resource_discovery(Client, Input, []).

-spec disassociate_ipam_resource_discovery(aws_client:aws_client(), disassociate_ipam_resource_discovery_request(), proplists:proplist()) ->
    {ok, disassociate_ipam_resource_discovery_result(), tuple()} |
    {error, any()}.
disassociate_ipam_resource_discovery(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateIpamResourceDiscovery">>, Input, Options).

%% @doc Disassociates secondary Elastic IP addresses (EIPs) from a public NAT
%% gateway.
%%
%% You cannot disassociate your primary EIP. For more information, see Edit
%% secondary IP address associations:
%% https://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-working-with.html#nat-gateway-edit-secondary
%% in the Amazon VPC User Guide.
%%
%% While disassociating is in progress, you cannot associate/disassociate
%% additional EIPs while the connections are being drained. You are, however,
%% allowed to delete the NAT gateway.
%%
%% An EIP is released only at the end of MaxDrainDurationSeconds. It stays
%% associated and supports the existing connections but does not support any
%% new connections
%% (new connections are distributed across the remaining associated EIPs). As
%% the existing
%% connections drain out, the EIPs (and the corresponding private IP
%% addresses mapped to them)
%% are released.
-spec disassociate_nat_gateway_address(aws_client:aws_client(), disassociate_nat_gateway_address_request()) ->
    {ok, disassociate_nat_gateway_address_result(), tuple()} |
    {error, any()}.
disassociate_nat_gateway_address(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_nat_gateway_address(Client, Input, []).

-spec disassociate_nat_gateway_address(aws_client:aws_client(), disassociate_nat_gateway_address_request(), proplists:proplist()) ->
    {ok, disassociate_nat_gateway_address_result(), tuple()} |
    {error, any()}.
disassociate_nat_gateway_address(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateNatGatewayAddress">>, Input, Options).

%% @doc Disassociates a route server from a VPC.
%%
%% A route server association is the connection established between a route
%% server and a VPC.
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec disassociate_route_server(aws_client:aws_client(), disassociate_route_server_request()) ->
    {ok, disassociate_route_server_result(), tuple()} |
    {error, any()}.
disassociate_route_server(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_route_server(Client, Input, []).

-spec disassociate_route_server(aws_client:aws_client(), disassociate_route_server_request(), proplists:proplist()) ->
    {ok, disassociate_route_server_result(), tuple()} |
    {error, any()}.
disassociate_route_server(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateRouteServer">>, Input, Options).

%% @doc Disassociates a subnet or gateway from a route table.
%%
%% After you perform this action, the subnet no longer uses the routes in the
%% route table.
%% Instead, it uses the routes in the VPC's main route table. For more
%% information
%% about route tables, see Route
%% tables:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html in
%% the Amazon VPC User Guide.
-spec disassociate_route_table(aws_client:aws_client(), disassociate_route_table_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
disassociate_route_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_route_table(Client, Input, []).

-spec disassociate_route_table(aws_client:aws_client(), disassociate_route_table_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
disassociate_route_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateRouteTable">>, Input, Options).

%% @doc Disassociates a security group from a VPC.
%%
%% You cannot disassociate the security group if any Elastic network
%% interfaces in the associated VPC are still associated with the security
%% group.
%%
%% Note that the disassociation is asynchronous and you can check the status
%% of the request with DescribeSecurityGroupVpcAssociations:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroupVpcAssociations.html.
-spec disassociate_security_group_vpc(aws_client:aws_client(), disassociate_security_group_vpc_request()) ->
    {ok, disassociate_security_group_vpc_result(), tuple()} |
    {error, any()}.
disassociate_security_group_vpc(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_security_group_vpc(Client, Input, []).

-spec disassociate_security_group_vpc(aws_client:aws_client(), disassociate_security_group_vpc_request(), proplists:proplist()) ->
    {ok, disassociate_security_group_vpc_result(), tuple()} |
    {error, any()}.
disassociate_security_group_vpc(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateSecurityGroupVpc">>, Input, Options).

%% @doc Disassociates a CIDR block from a subnet.
%%
%% Currently, you can disassociate an IPv6 CIDR block only. You must detach
%% or delete all gateways and resources that are associated with the CIDR
%% block before you can disassociate it.
-spec disassociate_subnet_cidr_block(aws_client:aws_client(), disassociate_subnet_cidr_block_request()) ->
    {ok, disassociate_subnet_cidr_block_result(), tuple()} |
    {error, any()}.
disassociate_subnet_cidr_block(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_subnet_cidr_block(Client, Input, []).

-spec disassociate_subnet_cidr_block(aws_client:aws_client(), disassociate_subnet_cidr_block_request(), proplists:proplist()) ->
    {ok, disassociate_subnet_cidr_block_result(), tuple()} |
    {error, any()}.
disassociate_subnet_cidr_block(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateSubnetCidrBlock">>, Input, Options).

%% @doc Disassociates the specified subnets from the transit gateway
%% multicast domain.
-spec disassociate_transit_gateway_multicast_domain(aws_client:aws_client(), disassociate_transit_gateway_multicast_domain_request()) ->
    {ok, disassociate_transit_gateway_multicast_domain_result(), tuple()} |
    {error, any()}.
disassociate_transit_gateway_multicast_domain(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_transit_gateway_multicast_domain(Client, Input, []).

-spec disassociate_transit_gateway_multicast_domain(aws_client:aws_client(), disassociate_transit_gateway_multicast_domain_request(), proplists:proplist()) ->
    {ok, disassociate_transit_gateway_multicast_domain_result(), tuple()} |
    {error, any()}.
disassociate_transit_gateway_multicast_domain(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateTransitGatewayMulticastDomain">>, Input, Options).

%% @doc Removes the association between an an attachment and a policy table.
-spec disassociate_transit_gateway_policy_table(aws_client:aws_client(), disassociate_transit_gateway_policy_table_request()) ->
    {ok, disassociate_transit_gateway_policy_table_result(), tuple()} |
    {error, any()}.
disassociate_transit_gateway_policy_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_transit_gateway_policy_table(Client, Input, []).

-spec disassociate_transit_gateway_policy_table(aws_client:aws_client(), disassociate_transit_gateway_policy_table_request(), proplists:proplist()) ->
    {ok, disassociate_transit_gateway_policy_table_result(), tuple()} |
    {error, any()}.
disassociate_transit_gateway_policy_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateTransitGatewayPolicyTable">>, Input, Options).

%% @doc Disassociates a resource attachment from a transit gateway route
%% table.
-spec disassociate_transit_gateway_route_table(aws_client:aws_client(), disassociate_transit_gateway_route_table_request()) ->
    {ok, disassociate_transit_gateway_route_table_result(), tuple()} |
    {error, any()}.
disassociate_transit_gateway_route_table(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_transit_gateway_route_table(Client, Input, []).

-spec disassociate_transit_gateway_route_table(aws_client:aws_client(), disassociate_transit_gateway_route_table_request(), proplists:proplist()) ->
    {ok, disassociate_transit_gateway_route_table_result(), tuple()} |
    {error, any()}.
disassociate_transit_gateway_route_table(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateTransitGatewayRouteTable">>, Input, Options).

%% @doc Removes an association between a branch network interface with a
%% trunk network interface.
-spec disassociate_trunk_interface(aws_client:aws_client(), disassociate_trunk_interface_request()) ->
    {ok, disassociate_trunk_interface_result(), tuple()} |
    {error, any()}.
disassociate_trunk_interface(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_trunk_interface(Client, Input, []).

-spec disassociate_trunk_interface(aws_client:aws_client(), disassociate_trunk_interface_request(), proplists:proplist()) ->
    {ok, disassociate_trunk_interface_result(), tuple()} |
    {error, any()}.
disassociate_trunk_interface(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateTrunkInterface">>, Input, Options).

%% @doc Disassociates a CIDR block from a VPC.
%%
%% To disassociate the CIDR block, you must
%% specify its association ID. You can get the association ID by using
%% `DescribeVpcs'. You must detach or delete all gateways and resources
%% that
%% are associated with the CIDR block before you can disassociate it.
%%
%% You cannot disassociate the CIDR block with which you originally created
%% the VPC (the
%% primary CIDR block).
-spec disassociate_vpc_cidr_block(aws_client:aws_client(), disassociate_vpc_cidr_block_request()) ->
    {ok, disassociate_vpc_cidr_block_result(), tuple()} |
    {error, any()}.
disassociate_vpc_cidr_block(Client, Input)
  when is_map(Client), is_map(Input) ->
    disassociate_vpc_cidr_block(Client, Input, []).

-spec disassociate_vpc_cidr_block(aws_client:aws_client(), disassociate_vpc_cidr_block_request(), proplists:proplist()) ->
    {ok, disassociate_vpc_cidr_block_result(), tuple()} |
    {error, any()}.
disassociate_vpc_cidr_block(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"DisassociateVpcCidrBlock">>, Input, Options).

%% @doc Enables Elastic IP address transfer.
%%
%% For more information, see Transfer Elastic IP addresses:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-eips.html#transfer-EIPs-intro
%% in the Amazon VPC User Guide.
-spec enable_address_transfer(aws_client:aws_client(), enable_address_transfer_request()) ->
    {ok, enable_address_transfer_result(), tuple()} |
    {error, any()}.
enable_address_transfer(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_address_transfer(Client, Input, []).

-spec enable_address_transfer(aws_client:aws_client(), enable_address_transfer_request(), proplists:proplist()) ->
    {ok, enable_address_transfer_result(), tuple()} |
    {error, any()}.
enable_address_transfer(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableAddressTransfer">>, Input, Options).

%% @doc Enables Allowed AMIs for your account in the specified Amazon Web
%% Services Region.
%%
%% Two values are
%% accepted:
%%
%% `enabled': The image criteria in your Allowed AMIs settings are
%% applied. As
%% a result, only AMIs matching these criteria are discoverable and can be
%% used by your
%% account to launch instances.
%%
%% `audit-mode': The image criteria in your Allowed AMIs settings are not
%% applied. No restrictions are placed on AMI discoverability or usage. Users
%% in your account
%% can launch instances using any public AMI or AMI shared with your account.
%%
%% The purpose of `audit-mode' is to indicate which AMIs will be affected
%% when
%% Allowed AMIs is `enabled'. In `audit-mode', each AMI displays
%% either
%% `&quot;ImageAllowed&quot;: true' or `&quot;ImageAllowed&quot;:
%% false' to indicate
%% whether the AMI will be discoverable and available to users in the account
%% when Allowed
%% AMIs is enabled.
%%
%% The Allowed AMIs feature does not restrict the AMIs owned by your account.
%% Regardless of
%% the criteria you set, the AMIs created by your account will always be
%% discoverable and
%% usable by users in your account.
%%
%% For more information, see Control the discovery and use of AMIs in
%% Amazon EC2 with Allowed AMIs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-allowed-amis.html
%% in
%% Amazon EC2 User Guide.
-spec enable_allowed_images_settings(aws_client:aws_client(), enable_allowed_images_settings_request()) ->
    {ok, enable_allowed_images_settings_result(), tuple()} |
    {error, any()}.
enable_allowed_images_settings(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_allowed_images_settings(Client, Input, []).

-spec enable_allowed_images_settings(aws_client:aws_client(), enable_allowed_images_settings_request(), proplists:proplist()) ->
    {ok, enable_allowed_images_settings_result(), tuple()} |
    {error, any()}.
enable_allowed_images_settings(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableAllowedImagesSettings">>, Input, Options).

%% @doc Enables Infrastructure Performance subscriptions.
-spec enable_aws_network_performance_metric_subscription(aws_client:aws_client(), enable_aws_network_performance_metric_subscription_request()) ->
    {ok, enable_aws_network_performance_metric_subscription_result(), tuple()} |
    {error, any()}.
enable_aws_network_performance_metric_subscription(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_aws_network_performance_metric_subscription(Client, Input, []).

-spec enable_aws_network_performance_metric_subscription(aws_client:aws_client(), enable_aws_network_performance_metric_subscription_request(), proplists:proplist()) ->
    {ok, enable_aws_network_performance_metric_subscription_result(), tuple()} |
    {error, any()}.
enable_aws_network_performance_metric_subscription(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableAwsNetworkPerformanceMetricSubscription">>, Input, Options).

%% @doc Enables EBS encryption by default for your account in the current
%% Region.
%%
%% After you enable encryption by default, the EBS volumes that you create
%% are
%% always encrypted, either using the default KMS key or the KMS key that you
%% specified
%% when you created each volume. For more information, see Amazon EBS
%% encryption:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html in
%% the
%% Amazon EBS User Guide.
%%
%% Enabling encryption by default has no effect on the encryption status of
%% your
%% existing volumes.
%%
%% After you enable encryption by default, you can no longer launch instances
%% using instance types that do not support encryption. For more information,
%% see Supported
%% instance types:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption-requirements.html#ebs-encryption_supported_instances.
-spec enable_ebs_encryption_by_default(aws_client:aws_client(), enable_ebs_encryption_by_default_request()) ->
    {ok, enable_ebs_encryption_by_default_result(), tuple()} |
    {error, any()}.
enable_ebs_encryption_by_default(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_ebs_encryption_by_default(Client, Input, []).

-spec enable_ebs_encryption_by_default(aws_client:aws_client(), enable_ebs_encryption_by_default_request(), proplists:proplist()) ->
    {ok, enable_ebs_encryption_by_default_result(), tuple()} |
    {error, any()}.
enable_ebs_encryption_by_default(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableEbsEncryptionByDefault">>, Input, Options).

%% @doc When you enable Windows fast launch for a Windows AMI, images are
%% pre-provisioned, using
%% snapshots to launch instances up to 65% faster.
%%
%% To create the optimized Windows image, Amazon EC2
%% launches an instance and runs through Sysprep steps, rebooting as
%% required. Then it creates a
%% set of reserved snapshots that are used for subsequent launches. The
%% reserved snapshots are
%% automatically replenished as they are used, depending on your settings for
%% launch
%% frequency.
%%
%% You can only change these settings for Windows AMIs that you own or that
%% have been
%% shared with you.
-spec enable_fast_launch(aws_client:aws_client(), enable_fast_launch_request()) ->
    {ok, enable_fast_launch_result(), tuple()} |
    {error, any()}.
enable_fast_launch(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_fast_launch(Client, Input, []).

-spec enable_fast_launch(aws_client:aws_client(), enable_fast_launch_request(), proplists:proplist()) ->
    {ok, enable_fast_launch_result(), tuple()} |
    {error, any()}.
enable_fast_launch(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableFastLaunch">>, Input, Options).

%% @doc Enables fast snapshot restores for the specified snapshots in the
%% specified Availability Zones.
%%
%% You get the full benefit of fast snapshot restores after they enter the
%% `enabled' state.
%%
%% For more information, see Amazon EBS fast snapshot
%% restore:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-fast-snapshot-restore.html
%% in the Amazon EBS User Guide.
-spec enable_fast_snapshot_restores(aws_client:aws_client(), enable_fast_snapshot_restores_request()) ->
    {ok, enable_fast_snapshot_restores_result(), tuple()} |
    {error, any()}.
enable_fast_snapshot_restores(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_fast_snapshot_restores(Client, Input, []).

-spec enable_fast_snapshot_restores(aws_client:aws_client(), enable_fast_snapshot_restores_request(), proplists:proplist()) ->
    {ok, enable_fast_snapshot_restores_result(), tuple()} |
    {error, any()}.
enable_fast_snapshot_restores(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableFastSnapshotRestores">>, Input, Options).

%% @doc Re-enables a disabled AMI.
%%
%% The re-enabled AMI is marked as `available' and can
%% be used for instance launches, appears in describe operations, and can be
%% shared. Amazon Web Services
%% accounts, organizations, and Organizational Units that lost access to the
%% AMI when it was
%% disabled do not regain access automatically. Once the AMI is available, it
%% can be shared with
%% them again.
%%
%% Only the AMI owner can re-enable a disabled AMI.
%%
%% For more information, see Disable an Amazon EC2 AMI:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/disable-an-ami.html
%% in the Amazon EC2 User Guide.
-spec enable_image(aws_client:aws_client(), enable_image_request()) ->
    {ok, enable_image_result(), tuple()} |
    {error, any()}.
enable_image(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_image(Client, Input, []).

-spec enable_image(aws_client:aws_client(), enable_image_request(), proplists:proplist()) ->
    {ok, enable_image_result(), tuple()} |
    {error, any()}.
enable_image(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableImage">>, Input, Options).

%% @doc Enables block public access for AMIs at the account level in the
%% specified Amazon Web Services Region.
%%
%% This prevents the public sharing of your AMIs. However, if you already
%% have public AMIs, they will remain publicly available.
%%
%% The API can take up to 10 minutes to configure this setting. During this
%% time, if you run
%% GetImageBlockPublicAccessState:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetImageBlockPublicAccessState.html,
%% the response will be `unblocked'. When
%% the API has completed the configuration, the response will be
%% `block-new-sharing'.
%%
%% For more information, see Block
%% public access to your AMIs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-public-access-to-amis.html
%% in the Amazon EC2 User Guide.
-spec enable_image_block_public_access(aws_client:aws_client(), enable_image_block_public_access_request()) ->
    {ok, enable_image_block_public_access_result(), tuple()} |
    {error, any()}.
enable_image_block_public_access(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_image_block_public_access(Client, Input, []).

-spec enable_image_block_public_access(aws_client:aws_client(), enable_image_block_public_access_request(), proplists:proplist()) ->
    {ok, enable_image_block_public_access_result(), tuple()} |
    {error, any()}.
enable_image_block_public_access(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableImageBlockPublicAccess">>, Input, Options).

%% @doc Enables deprecation of the specified AMI at the specified date and
%% time.
%%
%% For more information, see Deprecate an AMI:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-deprecate.html in
%% the
%% Amazon EC2 User Guide.
-spec enable_image_deprecation(aws_client:aws_client(), enable_image_deprecation_request()) ->
    {ok, enable_image_deprecation_result(), tuple()} |
    {error, any()}.
enable_image_deprecation(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_image_deprecation(Client, Input, []).

-spec enable_image_deprecation(aws_client:aws_client(), enable_image_deprecation_request(), proplists:proplist()) ->
    {ok, enable_image_deprecation_result(), tuple()} |
    {error, any()}.
enable_image_deprecation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableImageDeprecation">>, Input, Options).

%% @doc Enables deregistration protection for an AMI.
%%
%% When deregistration protection is enabled,
%% the AMI can't be deregistered.
%%
%% To allow the AMI to be deregistered, you must first disable deregistration
%% protection.
%%
%% For more information, see Protect an
%% Amazon EC2 AMI from deregistration:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-deregistration-protection.html
%% in the Amazon EC2 User Guide.
-spec enable_image_deregistration_protection(aws_client:aws_client(), enable_image_deregistration_protection_request()) ->
    {ok, enable_image_deregistration_protection_result(), tuple()} |
    {error, any()}.
enable_image_deregistration_protection(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_image_deregistration_protection(Client, Input, []).

-spec enable_image_deregistration_protection(aws_client:aws_client(), enable_image_deregistration_protection_request(), proplists:proplist()) ->
    {ok, enable_image_deregistration_protection_result(), tuple()} |
    {error, any()}.
enable_image_deregistration_protection(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableImageDeregistrationProtection">>, Input, Options).

%% @doc Enable an Organizations member account as the IPAM admin account.
%%
%% You cannot select the Organizations management account as the IPAM admin
%% account. For more information, see Enable integration with Organizations:
%% https://docs.aws.amazon.com/vpc/latest/ipam/enable-integ-ipam.html in the
%% Amazon VPC IPAM User Guide.
-spec enable_ipam_organization_admin_account(aws_client:aws_client(), enable_ipam_organization_admin_account_request()) ->
    {ok, enable_ipam_organization_admin_account_result(), tuple()} |
    {error, any()}.
enable_ipam_organization_admin_account(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_ipam_organization_admin_account(Client, Input, []).

-spec enable_ipam_organization_admin_account(aws_client:aws_client(), enable_ipam_organization_admin_account_request(), proplists:proplist()) ->
    {ok, enable_ipam_organization_admin_account_result(), tuple()} |
    {error, any()}.
enable_ipam_organization_admin_account(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableIpamOrganizationAdminAccount">>, Input, Options).

%% @doc Establishes a trust relationship between Reachability Analyzer and
%% Organizations.
%%
%% This operation must be performed by the management account for the
%% organization.
%%
%% After you establish a trust relationship, a user in the management account
%% or
%% a delegated administrator account can run a cross-account analysis using
%% resources
%% from the member accounts.
-spec enable_reachability_analyzer_organization_sharing(aws_client:aws_client(), enable_reachability_analyzer_organization_sharing_request()) ->
    {ok, enable_reachability_analyzer_organization_sharing_result(), tuple()} |
    {error, any()}.
enable_reachability_analyzer_organization_sharing(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_reachability_analyzer_organization_sharing(Client, Input, []).

-spec enable_reachability_analyzer_organization_sharing(aws_client:aws_client(), enable_reachability_analyzer_organization_sharing_request(), proplists:proplist()) ->
    {ok, enable_reachability_analyzer_organization_sharing_result(), tuple()} |
    {error, any()}.
enable_reachability_analyzer_organization_sharing(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableReachabilityAnalyzerOrganizationSharing">>, Input, Options).

%% @doc Defines which route tables the route server can update with routes.
%%
%% When enabled, route server propagation installs the routes in the FIB on
%% the route table you've specified. Route server supports IPv4 and IPv6
%% route propagation.
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec enable_route_server_propagation(aws_client:aws_client(), enable_route_server_propagation_request()) ->
    {ok, enable_route_server_propagation_result(), tuple()} |
    {error, any()}.
enable_route_server_propagation(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_route_server_propagation(Client, Input, []).

-spec enable_route_server_propagation(aws_client:aws_client(), enable_route_server_propagation_request(), proplists:proplist()) ->
    {ok, enable_route_server_propagation_result(), tuple()} |
    {error, any()}.
enable_route_server_propagation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableRouteServerPropagation">>, Input, Options).

%% @doc Enables access to the EC2 serial console of all instances for your
%% account.
%%
%% By default,
%% access to the EC2 serial console is disabled for your account. For more
%% information, see Manage account access to the EC2 serial console:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-access-to-serial-console.html#serial-console-account-access
%% in the Amazon EC2 User Guide.
-spec enable_serial_console_access(aws_client:aws_client(), enable_serial_console_access_request()) ->
    {ok, enable_serial_console_access_result(), tuple()} |
    {error, any()}.
enable_serial_console_access(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_serial_console_access(Client, Input, []).

-spec enable_serial_console_access(aws_client:aws_client(), enable_serial_console_access_request(), proplists:proplist()) ->
    {ok, enable_serial_console_access_result(), tuple()} |
    {error, any()}.
enable_serial_console_access(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableSerialConsoleAccess">>, Input, Options).

%% @doc Enables or modifies the block public access for snapshots
%% setting at the account level for the specified Amazon Web Services Region.
%%
%% After you enable block
%% public access for snapshots in a Region, users can no longer request
%% public sharing
%% for snapshots in that Region. Snapshots that are already publicly shared
%% are either
%% treated as private or they remain publicly shared, depending on the
%% State that you specify.
%%
%% Enabling block public access for snapshots in block all sharing
%% mode does not change the permissions for snapshots that are already
%% publicly shared.
%% Instead, it prevents these snapshots from be publicly visible and publicly
%% accessible.
%% Therefore, the attributes for these snapshots still indicate that they are
%% publicly
%% shared, even though they are not publicly available.
%%
%% If you later disable block public access or change the mode to block new
%% sharing, these snapshots will become publicly available again.
%%
%% For more information, see
%% Block public access for snapshots:
%% https://docs.aws.amazon.com/ebs/latest/userguide/block-public-access-snapshots.html
%% in the Amazon EBS User Guide.
-spec enable_snapshot_block_public_access(aws_client:aws_client(), enable_snapshot_block_public_access_request()) ->
    {ok, enable_snapshot_block_public_access_result(), tuple()} |
    {error, any()}.
enable_snapshot_block_public_access(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_snapshot_block_public_access(Client, Input, []).

-spec enable_snapshot_block_public_access(aws_client:aws_client(), enable_snapshot_block_public_access_request(), proplists:proplist()) ->
    {ok, enable_snapshot_block_public_access_result(), tuple()} |
    {error, any()}.
enable_snapshot_block_public_access(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableSnapshotBlockPublicAccess">>, Input, Options).

%% @doc Enables the specified attachment to propagate routes to the specified
%% propagation route table.
-spec enable_transit_gateway_route_table_propagation(aws_client:aws_client(), enable_transit_gateway_route_table_propagation_request()) ->
    {ok, enable_transit_gateway_route_table_propagation_result(), tuple()} |
    {error, any()}.
enable_transit_gateway_route_table_propagation(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_transit_gateway_route_table_propagation(Client, Input, []).

-spec enable_transit_gateway_route_table_propagation(aws_client:aws_client(), enable_transit_gateway_route_table_propagation_request(), proplists:proplist()) ->
    {ok, enable_transit_gateway_route_table_propagation_result(), tuple()} |
    {error, any()}.
enable_transit_gateway_route_table_propagation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableTransitGatewayRouteTablePropagation">>, Input, Options).

%% @doc Enables a virtual private gateway (VGW) to propagate routes to the
%% specified route
%% table of a VPC.
-spec enable_vgw_route_propagation(aws_client:aws_client(), enable_vgw_route_propagation_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
enable_vgw_route_propagation(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_vgw_route_propagation(Client, Input, []).

-spec enable_vgw_route_propagation(aws_client:aws_client(), enable_vgw_route_propagation_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
enable_vgw_route_propagation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableVgwRoutePropagation">>, Input, Options).

%% @doc Enables I/O operations for a volume that had I/O operations disabled
%% because the data on
%% the volume was potentially inconsistent.
-spec enable_volume_i_o(aws_client:aws_client(), enable_volume_i_o_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
enable_volume_i_o(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_volume_i_o(Client, Input, []).

-spec enable_volume_i_o(aws_client:aws_client(), enable_volume_i_o_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
enable_volume_i_o(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableVolumeIO">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Enables a VPC for ClassicLink. You can then link EC2-Classic instances to
%% your
%% ClassicLink-enabled VPC to allow communication over private IP addresses.
%% You cannot
%% enable your VPC for ClassicLink if any of your VPC route tables have
%% existing routes for
%% address ranges within the `10.0.0.0/8' IP address range, excluding
%% local
%% routes for VPCs in the `10.0.0.0/16' and `10.1.0.0/16' IP address
%% ranges.
-spec enable_vpc_classic_link(aws_client:aws_client(), enable_vpc_classic_link_request()) ->
    {ok, enable_vpc_classic_link_result(), tuple()} |
    {error, any()}.
enable_vpc_classic_link(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_vpc_classic_link(Client, Input, []).

-spec enable_vpc_classic_link(aws_client:aws_client(), enable_vpc_classic_link_request(), proplists:proplist()) ->
    {ok, enable_vpc_classic_link_result(), tuple()} |
    {error, any()}.
enable_vpc_classic_link(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableVpcClassicLink">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Enables a VPC to support DNS hostname resolution for ClassicLink. If
%% enabled, the DNS
%% hostname of a linked EC2-Classic instance resolves to its private IP
%% address when
%% addressed from an instance in the VPC to which it's linked. Similarly,
%% the DNS hostname
%% of an instance in a VPC resolves to its private IP address when addressed
%% from a linked
%% EC2-Classic instance.
%%
%% You must specify a VPC ID in the request.
-spec enable_vpc_classic_link_dns_support(aws_client:aws_client(), enable_vpc_classic_link_dns_support_request()) ->
    {ok, enable_vpc_classic_link_dns_support_result(), tuple()} |
    {error, any()}.
enable_vpc_classic_link_dns_support(Client, Input)
  when is_map(Client), is_map(Input) ->
    enable_vpc_classic_link_dns_support(Client, Input, []).

-spec enable_vpc_classic_link_dns_support(aws_client:aws_client(), enable_vpc_classic_link_dns_support_request(), proplists:proplist()) ->
    {ok, enable_vpc_classic_link_dns_support_result(), tuple()} |
    {error, any()}.
enable_vpc_classic_link_dns_support(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"EnableVpcClassicLinkDnsSupport">>, Input, Options).

%% @doc Downloads the client certificate revocation list for the specified
%% Client VPN endpoint.
-spec export_client_vpn_client_certificate_revocation_list(aws_client:aws_client(), export_client_vpn_client_certificate_revocation_list_request()) ->
    {ok, export_client_vpn_client_certificate_revocation_list_result(), tuple()} |
    {error, any()}.
export_client_vpn_client_certificate_revocation_list(Client, Input)
  when is_map(Client), is_map(Input) ->
    export_client_vpn_client_certificate_revocation_list(Client, Input, []).

-spec export_client_vpn_client_certificate_revocation_list(aws_client:aws_client(), export_client_vpn_client_certificate_revocation_list_request(), proplists:proplist()) ->
    {ok, export_client_vpn_client_certificate_revocation_list_result(), tuple()} |
    {error, any()}.
export_client_vpn_client_certificate_revocation_list(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ExportClientVpnClientCertificateRevocationList">>, Input, Options).

%% @doc Downloads the contents of the Client VPN endpoint configuration file
%% for the specified Client VPN endpoint.
%%
%% The Client VPN endpoint configuration
%% file includes the Client VPN endpoint and certificate information clients
%% need to establish a connection
%% with the Client VPN endpoint.
-spec export_client_vpn_client_configuration(aws_client:aws_client(), export_client_vpn_client_configuration_request()) ->
    {ok, export_client_vpn_client_configuration_result(), tuple()} |
    {error, any()}.
export_client_vpn_client_configuration(Client, Input)
  when is_map(Client), is_map(Input) ->
    export_client_vpn_client_configuration(Client, Input, []).

-spec export_client_vpn_client_configuration(aws_client:aws_client(), export_client_vpn_client_configuration_request(), proplists:proplist()) ->
    {ok, export_client_vpn_client_configuration_result(), tuple()} |
    {error, any()}.
export_client_vpn_client_configuration(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ExportClientVpnClientConfiguration">>, Input, Options).

%% @doc Exports an Amazon Machine Image (AMI) to a VM file.
%%
%% For more information, see Exporting a VM
%% directly from an Amazon Machine Image (AMI):
%% https://docs.aws.amazon.com/vm-import/latest/userguide/vmexport_image.html
%% in the
%% VM Import/Export User Guide.
-spec export_image(aws_client:aws_client(), export_image_request()) ->
    {ok, export_image_result(), tuple()} |
    {error, any()}.
export_image(Client, Input)
  when is_map(Client), is_map(Input) ->
    export_image(Client, Input, []).

-spec export_image(aws_client:aws_client(), export_image_request(), proplists:proplist()) ->
    {ok, export_image_result(), tuple()} |
    {error, any()}.
export_image(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ExportImage">>, Input, Options).

%% @doc Exports routes from the specified transit gateway route table to the
%% specified S3 bucket.
%%
%% By default, all routes are exported. Alternatively, you can filter by CIDR
%% range.
%%
%% The routes are saved to the specified bucket in a JSON file. For more
%% information, see
%% Export route tables
%% to Amazon S3:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-route-tables.html#tgw-export-route-tables
%% in the Amazon Web Services Transit Gateways Guide.
-spec export_transit_gateway_routes(aws_client:aws_client(), export_transit_gateway_routes_request()) ->
    {ok, export_transit_gateway_routes_result(), tuple()} |
    {error, any()}.
export_transit_gateway_routes(Client, Input)
  when is_map(Client), is_map(Input) ->
    export_transit_gateway_routes(Client, Input, []).

-spec export_transit_gateway_routes(aws_client:aws_client(), export_transit_gateway_routes_request(), proplists:proplist()) ->
    {ok, export_transit_gateway_routes_result(), tuple()} |
    {error, any()}.
export_transit_gateway_routes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ExportTransitGatewayRoutes">>, Input, Options).

%% @doc Exports the client configuration for a Verified Access instance.
-spec export_verified_access_instance_client_configuration(aws_client:aws_client(), export_verified_access_instance_client_configuration_request()) ->
    {ok, export_verified_access_instance_client_configuration_result(), tuple()} |
    {error, any()}.
export_verified_access_instance_client_configuration(Client, Input)
  when is_map(Client), is_map(Input) ->
    export_verified_access_instance_client_configuration(Client, Input, []).

-spec export_verified_access_instance_client_configuration(aws_client:aws_client(), export_verified_access_instance_client_configuration_request(), proplists:proplist()) ->
    {ok, export_verified_access_instance_client_configuration_result(), tuple()} |
    {error, any()}.
export_verified_access_instance_client_configuration(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ExportVerifiedAccessInstanceClientConfiguration">>, Input, Options).

%% @doc Returns the currently negotiated security parameters for an active
%% VPN tunnel, including IKE version, DH groups, encryption algorithms, and
%% integrity algorithms.
-spec get_active_vpn_tunnel_status(aws_client:aws_client(), get_active_vpn_tunnel_status_request()) ->
    {ok, get_active_vpn_tunnel_status_result(), tuple()} |
    {error, any()}.
get_active_vpn_tunnel_status(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_active_vpn_tunnel_status(Client, Input, []).

-spec get_active_vpn_tunnel_status(aws_client:aws_client(), get_active_vpn_tunnel_status_request(), proplists:proplist()) ->
    {ok, get_active_vpn_tunnel_status_result(), tuple()} |
    {error, any()}.
get_active_vpn_tunnel_status(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetActiveVpnTunnelStatus">>, Input, Options).

%% @doc Gets the current state of the Allowed AMIs setting and the list of
%% Allowed AMIs criteria
%% at the account level in the specified Region.
%%
%% The Allowed AMIs feature does not restrict the AMIs owned by your account.
%% Regardless of
%% the criteria you set, the AMIs created by your account will always be
%% discoverable and
%% usable by users in your account.
%%
%% For more information, see Control the discovery and use of AMIs in
%% Amazon EC2 with Allowed AMIs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-allowed-amis.html
%% in
%% Amazon EC2 User Guide.
-spec get_allowed_images_settings(aws_client:aws_client(), get_allowed_images_settings_request()) ->
    {ok, get_allowed_images_settings_result(), tuple()} |
    {error, any()}.
get_allowed_images_settings(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_allowed_images_settings(Client, Input, []).

-spec get_allowed_images_settings(aws_client:aws_client(), get_allowed_images_settings_request(), proplists:proplist()) ->
    {ok, get_allowed_images_settings_result(), tuple()} |
    {error, any()}.
get_allowed_images_settings(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetAllowedImagesSettings">>, Input, Options).

%% @doc Returns the IAM roles that are associated with the specified ACM
%% (ACM) certificate.
%%
%% It also returns the name of the Amazon S3 bucket and the Amazon S3 object
%% key where the certificate,
%% certificate chain, and encrypted private key bundle are stored, and the
%% ARN of the KMS key
%% that's used to encrypt the private key.
-spec get_associated_enclave_certificate_iam_roles(aws_client:aws_client(), get_associated_enclave_certificate_iam_roles_request()) ->
    {ok, get_associated_enclave_certificate_iam_roles_result(), tuple()} |
    {error, any()}.
get_associated_enclave_certificate_iam_roles(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_associated_enclave_certificate_iam_roles(Client, Input, []).

-spec get_associated_enclave_certificate_iam_roles(aws_client:aws_client(), get_associated_enclave_certificate_iam_roles_request(), proplists:proplist()) ->
    {ok, get_associated_enclave_certificate_iam_roles_result(), tuple()} |
    {error, any()}.
get_associated_enclave_certificate_iam_roles(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetAssociatedEnclaveCertificateIamRoles">>, Input, Options).

%% @doc Gets information about the IPv6 CIDR block associations for a
%% specified IPv6 address pool.
-spec get_associated_ipv6_pool_cidrs(aws_client:aws_client(), get_associated_ipv6_pool_cidrs_request()) ->
    {ok, get_associated_ipv6_pool_cidrs_result(), tuple()} |
    {error, any()}.
get_associated_ipv6_pool_cidrs(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_associated_ipv6_pool_cidrs(Client, Input, []).

-spec get_associated_ipv6_pool_cidrs(aws_client:aws_client(), get_associated_ipv6_pool_cidrs_request(), proplists:proplist()) ->
    {ok, get_associated_ipv6_pool_cidrs_result(), tuple()} |
    {error, any()}.
get_associated_ipv6_pool_cidrs(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetAssociatedIpv6PoolCidrs">>, Input, Options).

%% @doc Gets network performance data.
-spec get_aws_network_performance_data(aws_client:aws_client(), get_aws_network_performance_data_request()) ->
    {ok, get_aws_network_performance_data_result(), tuple()} |
    {error, any()}.
get_aws_network_performance_data(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_aws_network_performance_data(Client, Input, []).

-spec get_aws_network_performance_data(aws_client:aws_client(), get_aws_network_performance_data_request(), proplists:proplist()) ->
    {ok, get_aws_network_performance_data_result(), tuple()} |
    {error, any()}.
get_aws_network_performance_data(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetAwsNetworkPerformanceData">>, Input, Options).

%% @doc Gets usage information about a Capacity Reservation.
%%
%% If the Capacity Reservation is
%% shared, it shows usage information for the Capacity Reservation owner and
%% each Amazon Web Services account that is currently using the shared
%% capacity. If the Capacity
%% Reservation is not shared, it shows only the Capacity Reservation
%% owner's usage.
-spec get_capacity_reservation_usage(aws_client:aws_client(), get_capacity_reservation_usage_request()) ->
    {ok, get_capacity_reservation_usage_result(), tuple()} |
    {error, any()}.
get_capacity_reservation_usage(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_capacity_reservation_usage(Client, Input, []).

-spec get_capacity_reservation_usage(aws_client:aws_client(), get_capacity_reservation_usage_request(), proplists:proplist()) ->
    {ok, get_capacity_reservation_usage_result(), tuple()} |
    {error, any()}.
get_capacity_reservation_usage(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetCapacityReservationUsage">>, Input, Options).

%% @doc Describes the allocations from the specified customer-owned address
%% pool.
-spec get_coip_pool_usage(aws_client:aws_client(), get_coip_pool_usage_request()) ->
    {ok, get_coip_pool_usage_result(), tuple()} |
    {error, any()}.
get_coip_pool_usage(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_coip_pool_usage(Client, Input, []).

-spec get_coip_pool_usage(aws_client:aws_client(), get_coip_pool_usage_request(), proplists:proplist()) ->
    {ok, get_coip_pool_usage_result(), tuple()} |
    {error, any()}.
get_coip_pool_usage(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetCoipPoolUsage">>, Input, Options).

%% @doc Gets the console output for the specified instance.
%%
%% For Linux instances, the instance
%% console output displays the exact console output that would normally be
%% displayed on a
%% physical monitor attached to a computer. For Windows instances, the
%% instance console
%% output includes the last three system event log errors.
%%
%% For more information, see Instance
%% console output:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html#instance-console-console-output
%% in the Amazon EC2 User Guide.
-spec get_console_output(aws_client:aws_client(), get_console_output_request()) ->
    {ok, get_console_output_result(), tuple()} |
    {error, any()}.
get_console_output(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_console_output(Client, Input, []).

-spec get_console_output(aws_client:aws_client(), get_console_output_request(), proplists:proplist()) ->
    {ok, get_console_output_result(), tuple()} |
    {error, any()}.
get_console_output(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetConsoleOutput">>, Input, Options).

%% @doc Retrieve a JPG-format screenshot of a running instance to help with
%% troubleshooting.
%%
%% The returned content is Base64-encoded.
%%
%% For more information, see Instance console output:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/troubleshoot-unreachable-instance.html#instance-console-console-output
%% in the Amazon EC2 User Guide.
-spec get_console_screenshot(aws_client:aws_client(), get_console_screenshot_request()) ->
    {ok, get_console_screenshot_result(), tuple()} |
    {error, any()}.
get_console_screenshot(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_console_screenshot(Client, Input, []).

-spec get_console_screenshot(aws_client:aws_client(), get_console_screenshot_request(), proplists:proplist()) ->
    {ok, get_console_screenshot_result(), tuple()} |
    {error, any()}.
get_console_screenshot(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetConsoleScreenshot">>, Input, Options).

%% @doc Retrieves a summary of the account status report.
%%
%% To view the full report, download it from the Amazon S3 bucket where it
%% was saved.
%% Reports are accessible only when they have the `complete' status.
%% Reports
%% with other statuses (`running', `cancelled', or
%% `error') are not available in the S3 bucket. For more information
%% about
%% downloading objects from an S3 bucket, see Downloading objects:
%% https://docs.aws.amazon.com/AmazonS3/latest/userguide/download-objects.html
%% in
%% the Amazon Simple Storage Service User Guide.
%%
%% For more information, see Generating the account status report for
%% declarative policies:
%% https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_declarative_status-report.html
%% in the
%% Amazon Web Services Organizations User Guide.
-spec get_declarative_policies_report_summary(aws_client:aws_client(), get_declarative_policies_report_summary_request()) ->
    {ok, get_declarative_policies_report_summary_result(), tuple()} |
    {error, any()}.
get_declarative_policies_report_summary(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_declarative_policies_report_summary(Client, Input, []).

-spec get_declarative_policies_report_summary(aws_client:aws_client(), get_declarative_policies_report_summary_request(), proplists:proplist()) ->
    {ok, get_declarative_policies_report_summary_result(), tuple()} |
    {error, any()}.
get_declarative_policies_report_summary(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetDeclarativePoliciesReportSummary">>, Input, Options).

%% @doc Describes the default credit option for CPU usage of a burstable
%% performance instance
%% family.
%%
%% For more information, see Burstable
%% performance instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html
%% in the Amazon EC2 User Guide.
-spec get_default_credit_specification(aws_client:aws_client(), get_default_credit_specification_request()) ->
    {ok, get_default_credit_specification_result(), tuple()} |
    {error, any()}.
get_default_credit_specification(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_default_credit_specification(Client, Input, []).

-spec get_default_credit_specification(aws_client:aws_client(), get_default_credit_specification_request(), proplists:proplist()) ->
    {ok, get_default_credit_specification_result(), tuple()} |
    {error, any()}.
get_default_credit_specification(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetDefaultCreditSpecification">>, Input, Options).

%% @doc Describes the default KMS key for EBS encryption by default for your
%% account in this Region.
%%
%% For more information, see Amazon EBS encryption:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html
%% in the Amazon EBS User Guide.
-spec get_ebs_default_kms_key_id(aws_client:aws_client(), get_ebs_default_kms_key_id_request()) ->
    {ok, get_ebs_default_kms_key_id_result(), tuple()} |
    {error, any()}.
get_ebs_default_kms_key_id(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_ebs_default_kms_key_id(Client, Input, []).

-spec get_ebs_default_kms_key_id(aws_client:aws_client(), get_ebs_default_kms_key_id_request(), proplists:proplist()) ->
    {ok, get_ebs_default_kms_key_id_result(), tuple()} |
    {error, any()}.
get_ebs_default_kms_key_id(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetEbsDefaultKmsKeyId">>, Input, Options).

%% @doc Describes whether EBS encryption by default is enabled for your
%% account in the current
%% Region.
%%
%% For more information, see Amazon EBS encryption:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html
%% in the Amazon EBS User Guide.
-spec get_ebs_encryption_by_default(aws_client:aws_client(), get_ebs_encryption_by_default_request()) ->
    {ok, get_ebs_encryption_by_default_result(), tuple()} |
    {error, any()}.
get_ebs_encryption_by_default(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_ebs_encryption_by_default(Client, Input, []).

-spec get_ebs_encryption_by_default(aws_client:aws_client(), get_ebs_encryption_by_default_request(), proplists:proplist()) ->
    {ok, get_ebs_encryption_by_default_result(), tuple()} |
    {error, any()}.
get_ebs_encryption_by_default(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetEbsEncryptionByDefault">>, Input, Options).

%% @doc Generates a CloudFormation template that streamlines and automates
%% the integration of VPC flow logs
%% with Amazon Athena.
%%
%% This make it easier for you to query and gain insights from VPC flow logs
%% data.
%% Based on the information that you provide, we configure resources in the
%% template to do the following:
%%
%% Create a table in Athena that maps fields to a custom log format
%%
%% Create a Lambda function that updates the table with new partitions on a
%% daily, weekly, or
%% monthly basis
%%
%% Create a table partitioned between two timestamps in the past
%%
%% Create a set of named queries in Athena that you can use to get started
%% quickly
%%
%% `GetFlowLogsIntegrationTemplate' does not support integration between
%% Amazon Web Services Transit Gateway Flow Logs and Amazon Athena.
-spec get_flow_logs_integration_template(aws_client:aws_client(), get_flow_logs_integration_template_request()) ->
    {ok, get_flow_logs_integration_template_result(), tuple()} |
    {error, any()}.
get_flow_logs_integration_template(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_flow_logs_integration_template(Client, Input, []).

-spec get_flow_logs_integration_template(aws_client:aws_client(), get_flow_logs_integration_template_request(), proplists:proplist()) ->
    {ok, get_flow_logs_integration_template_result(), tuple()} |
    {error, any()}.
get_flow_logs_integration_template(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetFlowLogsIntegrationTemplate">>, Input, Options).

%% @doc Lists the resource groups to which a Capacity Reservation has been
%% added.
-spec get_groups_for_capacity_reservation(aws_client:aws_client(), get_groups_for_capacity_reservation_request()) ->
    {ok, get_groups_for_capacity_reservation_result(), tuple()} |
    {error, any()}.
get_groups_for_capacity_reservation(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_groups_for_capacity_reservation(Client, Input, []).

-spec get_groups_for_capacity_reservation(aws_client:aws_client(), get_groups_for_capacity_reservation_request(), proplists:proplist()) ->
    {ok, get_groups_for_capacity_reservation_result(), tuple()} |
    {error, any()}.
get_groups_for_capacity_reservation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetGroupsForCapacityReservation">>, Input, Options).

%% @doc Preview a reservation purchase with configurations that match those
%% of your Dedicated
%% Host.
%%
%% You must have active Dedicated Hosts in your account before you purchase a
%% reservation.
%%
%% This is a preview of the `PurchaseHostReservation' action and does not
%% result in the offering being purchased.
-spec get_host_reservation_purchase_preview(aws_client:aws_client(), get_host_reservation_purchase_preview_request()) ->
    {ok, get_host_reservation_purchase_preview_result(), tuple()} |
    {error, any()}.
get_host_reservation_purchase_preview(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_host_reservation_purchase_preview(Client, Input, []).

-spec get_host_reservation_purchase_preview(aws_client:aws_client(), get_host_reservation_purchase_preview_request(), proplists:proplist()) ->
    {ok, get_host_reservation_purchase_preview_result(), tuple()} |
    {error, any()}.
get_host_reservation_purchase_preview(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetHostReservationPurchasePreview">>, Input, Options).

%% @doc Gets the current state of block public access for AMIs at the account
%% level in the specified Amazon Web Services Region.
%%
%% For more information, see Block
%% public access to your AMIs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-public-access-to-amis.html
%% in the Amazon EC2 User Guide.
-spec get_image_block_public_access_state(aws_client:aws_client(), get_image_block_public_access_state_request()) ->
    {ok, get_image_block_public_access_state_result(), tuple()} |
    {error, any()}.
get_image_block_public_access_state(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_image_block_public_access_state(Client, Input, []).

-spec get_image_block_public_access_state(aws_client:aws_client(), get_image_block_public_access_state_request(), proplists:proplist()) ->
    {ok, get_image_block_public_access_state_result(), tuple()} |
    {error, any()}.
get_image_block_public_access_state(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetImageBlockPublicAccessState">>, Input, Options).

%% @doc Gets the default instance metadata service (IMDS) settings that are
%% set at the account
%% level in the specified Amazon Web Services Region.
%%
%% For more information, see Order of precedence for instance metadata
%% options:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-options.html#instance-metadata-options-order-of-precedence
%% in the
%% Amazon EC2 User Guide.
-spec get_instance_metadata_defaults(aws_client:aws_client(), get_instance_metadata_defaults_request()) ->
    {ok, get_instance_metadata_defaults_result(), tuple()} |
    {error, any()}.
get_instance_metadata_defaults(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_instance_metadata_defaults(Client, Input, []).

-spec get_instance_metadata_defaults(aws_client:aws_client(), get_instance_metadata_defaults_request(), proplists:proplist()) ->
    {ok, get_instance_metadata_defaults_result(), tuple()} |
    {error, any()}.
get_instance_metadata_defaults(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetInstanceMetadataDefaults">>, Input, Options).

%% @doc Gets the public endorsement key associated with the Nitro Trusted
%% Platform Module (NitroTPM) for the specified instance.
-spec get_instance_tpm_ek_pub(aws_client:aws_client(), get_instance_tpm_ek_pub_request()) ->
    {ok, get_instance_tpm_ek_pub_result(), tuple()} |
    {error, any()}.
get_instance_tpm_ek_pub(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_instance_tpm_ek_pub(Client, Input, []).

-spec get_instance_tpm_ek_pub(aws_client:aws_client(), get_instance_tpm_ek_pub_request(), proplists:proplist()) ->
    {ok, get_instance_tpm_ek_pub_result(), tuple()} |
    {error, any()}.
get_instance_tpm_ek_pub(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetInstanceTpmEkPub">>, Input, Options).

%% @doc Returns a list of instance types with the specified instance
%% attributes.
%%
%% You can
%% use the response to preview the instance types without launching
%% instances. Note
%% that the response does not consider capacity.
%%
%% When you specify multiple parameters, you get instance types that satisfy
%% all of the
%% specified parameters. If you specify multiple values for a parameter, you
%% get instance
%% types that satisfy any of the specified values.
%%
%% For more information, see Preview instance types with specified
%% attributes:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html#ec2fleet-get-instance-types-from-instance-requirements,
%% Specify attributes for instance type selection for EC2 Fleet or Spot
%% Fleet:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html,
%% and Spot
%% placement score:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html
%% in the Amazon EC2 User Guide, and Creating
%% mixed instance groups using attribute-based instance type selection:
%% https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-instance-type-requirements.html
%% in the
%% Amazon EC2 Auto Scaling User Guide.
-spec get_instance_types_from_instance_requirements(aws_client:aws_client(), get_instance_types_from_instance_requirements_request()) ->
    {ok, get_instance_types_from_instance_requirements_result(), tuple()} |
    {error, any()}.
get_instance_types_from_instance_requirements(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_instance_types_from_instance_requirements(Client, Input, []).

-spec get_instance_types_from_instance_requirements(aws_client:aws_client(), get_instance_types_from_instance_requirements_request(), proplists:proplist()) ->
    {ok, get_instance_types_from_instance_requirements_result(), tuple()} |
    {error, any()}.
get_instance_types_from_instance_requirements(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetInstanceTypesFromInstanceRequirements">>, Input, Options).

%% @doc A binary representation of the UEFI variable store.
%%
%% Only non-volatile variables are
%% stored. This is a base64 encoded and zlib compressed binary value that
%% must be properly
%% encoded.
%%
%% When you use register-image:
%% https://docs.aws.amazon.com/cli/latest/reference/ec2/register-image.html
%% to create
%% an AMI, you can create an exact copy of your variable store by passing the
%% UEFI data in
%% the `UefiData' parameter. You can modify the UEFI data by using the
%% python-uefivars tool: https://github.com/awslabs/python-uefivars on
%% GitHub. You can use the tool to convert the UEFI data into a
%% human-readable format
%% (JSON), which you can inspect and modify, and then convert back into the
%% binary format
%% to use with register-image.
%%
%% For more information, see UEFI Secure Boot:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/uefi-secure-boot.html
%% in the
%% Amazon EC2 User Guide.
-spec get_instance_uefi_data(aws_client:aws_client(), get_instance_uefi_data_request()) ->
    {ok, get_instance_uefi_data_result(), tuple()} |
    {error, any()}.
get_instance_uefi_data(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_instance_uefi_data(Client, Input, []).

-spec get_instance_uefi_data(aws_client:aws_client(), get_instance_uefi_data_request(), proplists:proplist()) ->
    {ok, get_instance_uefi_data_result(), tuple()} |
    {error, any()}.
get_instance_uefi_data(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetInstanceUefiData">>, Input, Options).

%% @doc Retrieve historical information about a CIDR within an IPAM scope.
%%
%% For more information, see View the history of IP addresses:
%% https://docs.aws.amazon.com/vpc/latest/ipam/view-history-cidr-ipam.html in
%% the Amazon VPC IPAM User Guide.
-spec get_ipam_address_history(aws_client:aws_client(), get_ipam_address_history_request()) ->
    {ok, get_ipam_address_history_result(), tuple()} |
    {error, any()}.
get_ipam_address_history(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_ipam_address_history(Client, Input, []).

-spec get_ipam_address_history(aws_client:aws_client(), get_ipam_address_history_request(), proplists:proplist()) ->
    {ok, get_ipam_address_history_result(), tuple()} |
    {error, any()}.
get_ipam_address_history(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetIpamAddressHistory">>, Input, Options).

%% @doc Gets IPAM discovered accounts.
%%
%% A discovered account is an Amazon Web Services account that is monitored
%% under a resource discovery. If you have integrated IPAM with Amazon Web
%% Services Organizations, all accounts in the organization are discovered
%% accounts. Only the IPAM account can get all discovered accounts in the
%% organization.
-spec get_ipam_discovered_accounts(aws_client:aws_client(), get_ipam_discovered_accounts_request()) ->
    {ok, get_ipam_discovered_accounts_result(), tuple()} |
    {error, any()}.
get_ipam_discovered_accounts(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_ipam_discovered_accounts(Client, Input, []).

-spec get_ipam_discovered_accounts(aws_client:aws_client(), get_ipam_discovered_accounts_request(), proplists:proplist()) ->
    {ok, get_ipam_discovered_accounts_result(), tuple()} |
    {error, any()}.
get_ipam_discovered_accounts(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetIpamDiscoveredAccounts">>, Input, Options).

%% @doc Gets the public IP addresses that have been discovered by IPAM.
-spec get_ipam_discovered_public_addresses(aws_client:aws_client(), get_ipam_discovered_public_addresses_request()) ->
    {ok, get_ipam_discovered_public_addresses_result(), tuple()} |
    {error, any()}.
get_ipam_discovered_public_addresses(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_ipam_discovered_public_addresses(Client, Input, []).

-spec get_ipam_discovered_public_addresses(aws_client:aws_client(), get_ipam_discovered_public_addresses_request(), proplists:proplist()) ->
    {ok, get_ipam_discovered_public_addresses_result(), tuple()} |
    {error, any()}.
get_ipam_discovered_public_addresses(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetIpamDiscoveredPublicAddresses">>, Input, Options).

%% @doc Returns the resource CIDRs that are monitored as part of a resource
%% discovery.
%%
%% A discovered resource is a resource CIDR monitored under a resource
%% discovery. The following resources can be discovered: VPCs, Public IPv4
%% pools, VPC subnets, and Elastic IP addresses.
-spec get_ipam_discovered_resource_cidrs(aws_client:aws_client(), get_ipam_discovered_resource_cidrs_request()) ->
    {ok, get_ipam_discovered_resource_cidrs_result(), tuple()} |
    {error, any()}.
get_ipam_discovered_resource_cidrs(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_ipam_discovered_resource_cidrs(Client, Input, []).

-spec get_ipam_discovered_resource_cidrs(aws_client:aws_client(), get_ipam_discovered_resource_cidrs_request(), proplists:proplist()) ->
    {ok, get_ipam_discovered_resource_cidrs_result(), tuple()} |
    {error, any()}.
get_ipam_discovered_resource_cidrs(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetIpamDiscoveredResourceCidrs">>, Input, Options).

%% @doc Get a list of all the CIDR allocations in an IPAM pool.
%%
%% The Region you use should be the IPAM pool locale. The locale is the
%% Amazon Web Services Region where this IPAM pool is available for
%% allocations.
%%
%% If you use this action after AllocateIpamPoolCidr:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AllocateIpamPoolCidr.html
%% or ReleaseIpamPoolAllocation:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReleaseIpamPoolAllocation.html,
%% note that all EC2 API actions follow an eventual consistency:
%% https://docs.aws.amazon.com/ec2/latest/devguide/eventual-consistency.html
%% model.
-spec get_ipam_pool_allocations(aws_client:aws_client(), get_ipam_pool_allocations_request()) ->
    {ok, get_ipam_pool_allocations_result(), tuple()} |
    {error, any()}.
get_ipam_pool_allocations(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_ipam_pool_allocations(Client, Input, []).

-spec get_ipam_pool_allocations(aws_client:aws_client(), get_ipam_pool_allocations_request(), proplists:proplist()) ->
    {ok, get_ipam_pool_allocations_result(), tuple()} |
    {error, any()}.
get_ipam_pool_allocations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetIpamPoolAllocations">>, Input, Options).

%% @doc Get the CIDRs provisioned to an IPAM pool.
-spec get_ipam_pool_cidrs(aws_client:aws_client(), get_ipam_pool_cidrs_request()) ->
    {ok, get_ipam_pool_cidrs_result(), tuple()} |
    {error, any()}.
get_ipam_pool_cidrs(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_ipam_pool_cidrs(Client, Input, []).

-spec get_ipam_pool_cidrs(aws_client:aws_client(), get_ipam_pool_cidrs_request(), proplists:proplist()) ->
    {ok, get_ipam_pool_cidrs_result(), tuple()} |
    {error, any()}.
get_ipam_pool_cidrs(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetIpamPoolCidrs">>, Input, Options).

%% @doc Returns resource CIDRs managed by IPAM in a given scope.
%%
%% If an IPAM is associated with more than one resource discovery, the
%% resource CIDRs across all of the resource discoveries is returned. A
%% resource discovery is an IPAM component that enables IPAM to manage and
%% monitor resources that belong to the owning account.
-spec get_ipam_resource_cidrs(aws_client:aws_client(), get_ipam_resource_cidrs_request()) ->
    {ok, get_ipam_resource_cidrs_result(), tuple()} |
    {error, any()}.
get_ipam_resource_cidrs(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_ipam_resource_cidrs(Client, Input, []).

-spec get_ipam_resource_cidrs(aws_client:aws_client(), get_ipam_resource_cidrs_request(), proplists:proplist()) ->
    {ok, get_ipam_resource_cidrs_result(), tuple()} |
    {error, any()}.
get_ipam_resource_cidrs(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetIpamResourceCidrs">>, Input, Options).

%% @doc Retrieves the configuration data of the specified instance.
%%
%% You can use this data to
%% create a launch template.
%%
%% This action calls on other describe actions to get instance information.
%% Depending on
%% your instance configuration, you may need to allow the following actions
%% in your IAM
%% policy: `DescribeSpotInstanceRequests',
%% `DescribeInstanceCreditSpecifications', `DescribeVolumes', and
%% `DescribeInstanceAttribute'.
%% Or, you can allow `describe*' depending on your instance requirements.
-spec get_launch_template_data(aws_client:aws_client(), get_launch_template_data_request()) ->
    {ok, get_launch_template_data_result(), tuple()} |
    {error, any()}.
get_launch_template_data(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_launch_template_data(Client, Input, []).

-spec get_launch_template_data(aws_client:aws_client(), get_launch_template_data_request(), proplists:proplist()) ->
    {ok, get_launch_template_data_result(), tuple()} |
    {error, any()}.
get_launch_template_data(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetLaunchTemplateData">>, Input, Options).

%% @doc Gets information about the resources that are associated with the
%% specified managed prefix list.
-spec get_managed_prefix_list_associations(aws_client:aws_client(), get_managed_prefix_list_associations_request()) ->
    {ok, get_managed_prefix_list_associations_result(), tuple()} |
    {error, any()}.
get_managed_prefix_list_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_managed_prefix_list_associations(Client, Input, []).

-spec get_managed_prefix_list_associations(aws_client:aws_client(), get_managed_prefix_list_associations_request(), proplists:proplist()) ->
    {ok, get_managed_prefix_list_associations_result(), tuple()} |
    {error, any()}.
get_managed_prefix_list_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetManagedPrefixListAssociations">>, Input, Options).

%% @doc Gets information about the entries for a specified managed prefix
%% list.
-spec get_managed_prefix_list_entries(aws_client:aws_client(), get_managed_prefix_list_entries_request()) ->
    {ok, get_managed_prefix_list_entries_result(), tuple()} |
    {error, any()}.
get_managed_prefix_list_entries(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_managed_prefix_list_entries(Client, Input, []).

-spec get_managed_prefix_list_entries(aws_client:aws_client(), get_managed_prefix_list_entries_request(), proplists:proplist()) ->
    {ok, get_managed_prefix_list_entries_result(), tuple()} |
    {error, any()}.
get_managed_prefix_list_entries(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetManagedPrefixListEntries">>, Input, Options).

%% @doc Gets the findings for the specified Network Access Scope analysis.
-spec get_network_insights_access_scope_analysis_findings(aws_client:aws_client(), get_network_insights_access_scope_analysis_findings_request()) ->
    {ok, get_network_insights_access_scope_analysis_findings_result(), tuple()} |
    {error, any()}.
get_network_insights_access_scope_analysis_findings(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_network_insights_access_scope_analysis_findings(Client, Input, []).

-spec get_network_insights_access_scope_analysis_findings(aws_client:aws_client(), get_network_insights_access_scope_analysis_findings_request(), proplists:proplist()) ->
    {ok, get_network_insights_access_scope_analysis_findings_result(), tuple()} |
    {error, any()}.
get_network_insights_access_scope_analysis_findings(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetNetworkInsightsAccessScopeAnalysisFindings">>, Input, Options).

%% @doc Gets the content for the specified Network Access Scope.
-spec get_network_insights_access_scope_content(aws_client:aws_client(), get_network_insights_access_scope_content_request()) ->
    {ok, get_network_insights_access_scope_content_result(), tuple()} |
    {error, any()}.
get_network_insights_access_scope_content(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_network_insights_access_scope_content(Client, Input, []).

-spec get_network_insights_access_scope_content(aws_client:aws_client(), get_network_insights_access_scope_content_request(), proplists:proplist()) ->
    {ok, get_network_insights_access_scope_content_result(), tuple()} |
    {error, any()}.
get_network_insights_access_scope_content(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetNetworkInsightsAccessScopeContent">>, Input, Options).

%% @doc Retrieves the encrypted administrator password for a running Windows
%% instance.
%%
%% The Windows password is generated at boot by the `EC2Config' service
%% or
%% `EC2Launch' scripts (Windows Server 2016 and later). This usually only
%% happens the first time an instance is launched. For more information, see
%% EC2Config:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UsingConfig_WinAMI.html
%% and EC2Launch:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2launch.html in the
%% Amazon EC2 User Guide.
%%
%% For the `EC2Config' service, the password is not generated for
%% rebundled
%% AMIs unless `Ec2SetPassword' is enabled before bundling.
%%
%% The password is encrypted using the key pair that you specified when you
%% launched the
%% instance. You must provide the corresponding key pair file.
%%
%% When you launch an instance, password generation and encryption may take a
%% few
%% minutes. If you try to retrieve the password before it's available,
%% the output returns
%% an empty string. We recommend that you wait up to 15 minutes after
%% launching an instance
%% before trying to retrieve the generated password.
-spec get_password_data(aws_client:aws_client(), get_password_data_request()) ->
    {ok, get_password_data_result(), tuple()} |
    {error, any()}.
get_password_data(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_password_data(Client, Input, []).

-spec get_password_data(aws_client:aws_client(), get_password_data_request(), proplists:proplist()) ->
    {ok, get_password_data_result(), tuple()} |
    {error, any()}.
get_password_data(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetPasswordData">>, Input, Options).

%% @doc Returns a quote and exchange information for exchanging one or more
%% specified Convertible
%% Reserved Instances for a new Convertible Reserved Instance.
%%
%% If the exchange cannot be
%% performed, the reason is returned in the response. Use
%% `AcceptReservedInstancesExchangeQuote' to perform the exchange.
-spec get_reserved_instances_exchange_quote(aws_client:aws_client(), get_reserved_instances_exchange_quote_request()) ->
    {ok, get_reserved_instances_exchange_quote_result(), tuple()} |
    {error, any()}.
get_reserved_instances_exchange_quote(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_reserved_instances_exchange_quote(Client, Input, []).

-spec get_reserved_instances_exchange_quote(aws_client:aws_client(), get_reserved_instances_exchange_quote_request(), proplists:proplist()) ->
    {ok, get_reserved_instances_exchange_quote_result(), tuple()} |
    {error, any()}.
get_reserved_instances_exchange_quote(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetReservedInstancesExchangeQuote">>, Input, Options).

%% @doc Gets information about the associations for the specified route
%% server.
%%
%% A route server association is the connection established between a route
%% server and a VPC.
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec get_route_server_associations(aws_client:aws_client(), get_route_server_associations_request()) ->
    {ok, get_route_server_associations_result(), tuple()} |
    {error, any()}.
get_route_server_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_route_server_associations(Client, Input, []).

-spec get_route_server_associations(aws_client:aws_client(), get_route_server_associations_request(), proplists:proplist()) ->
    {ok, get_route_server_associations_result(), tuple()} |
    {error, any()}.
get_route_server_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetRouteServerAssociations">>, Input, Options).

%% @doc Gets information about the route propagations for the specified route
%% server.
%%
%% When enabled, route server propagation installs the routes in the FIB on
%% the route table you've specified. Route server supports IPv4 and IPv6
%% route propagation.
%%
%% Amazon VPC Route Server simplifies routing for traffic between workloads
%% that are deployed within a VPC and its internet gateways. With this
%% feature,
%% VPC Route Server dynamically updates VPC and internet gateway route tables
%% with your preferred IPv4 or IPv6 routes to achieve routing fault tolerance
%% for those workloads. This enables you to automatically reroute traffic
%% within a VPC, which increases the manageability of VPC routing and
%% interoperability with third-party workloads.
%%
%% Route server supports the follow route table types:
%%
%% VPC route tables not associated with subnets
%%
%% Subnet route tables
%%
%% Internet gateway route tables
%%
%% Route server does not support route tables associated with virtual private
%% gateways. To propagate routes into a transit gateway route table, use
%% Transit Gateway Connect:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-connect.html.
-spec get_route_server_propagations(aws_client:aws_client(), get_route_server_propagations_request()) ->
    {ok, get_route_server_propagations_result(), tuple()} |
    {error, any()}.
get_route_server_propagations(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_route_server_propagations(Client, Input, []).

-spec get_route_server_propagations(aws_client:aws_client(), get_route_server_propagations_request(), proplists:proplist()) ->
    {ok, get_route_server_propagations_result(), tuple()} |
    {error, any()}.
get_route_server_propagations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetRouteServerPropagations">>, Input, Options).

%% @doc Gets the routing database for the specified route server.
%%
%% The Routing Information Base (RIB):
%% https://en.wikipedia.org/wiki/Routing_table serves as a database that
%% stores all the routing information and network topology data collected by
%% a router or routing system, such as routes learned from BGP peers. The RIB
%% is constantly updated as new routing information is received or existing
%% routes change. This ensures that the route server always has the most
%% current view of the network topology and can make optimal routing
%% decisions.
%%
%% Amazon VPC Route Server simplifies routing for traffic between workloads
%% that are deployed within a VPC and its internet gateways. With this
%% feature,
%% VPC Route Server dynamically updates VPC and internet gateway route tables
%% with your preferred IPv4 or IPv6 routes to achieve routing fault tolerance
%% for those workloads. This enables you to automatically reroute traffic
%% within a VPC, which increases the manageability of VPC routing and
%% interoperability with third-party workloads.
%%
%% Route server supports the follow route table types:
%%
%% VPC route tables not associated with subnets
%%
%% Subnet route tables
%%
%% Internet gateway route tables
%%
%% Route server does not support route tables associated with virtual private
%% gateways. To propagate routes into a transit gateway route table, use
%% Transit Gateway Connect:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-connect.html.
-spec get_route_server_routing_database(aws_client:aws_client(), get_route_server_routing_database_request()) ->
    {ok, get_route_server_routing_database_result(), tuple()} |
    {error, any()}.
get_route_server_routing_database(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_route_server_routing_database(Client, Input, []).

-spec get_route_server_routing_database(aws_client:aws_client(), get_route_server_routing_database_request(), proplists:proplist()) ->
    {ok, get_route_server_routing_database_result(), tuple()} |
    {error, any()}.
get_route_server_routing_database(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetRouteServerRoutingDatabase">>, Input, Options).

%% @doc Gets security groups that can be associated by the Amazon Web
%% Services account making the request with network interfaces in the
%% specified VPC.
-spec get_security_groups_for_vpc(aws_client:aws_client(), get_security_groups_for_vpc_request()) ->
    {ok, get_security_groups_for_vpc_result(), tuple()} |
    {error, any()}.
get_security_groups_for_vpc(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_security_groups_for_vpc(Client, Input, []).

-spec get_security_groups_for_vpc(aws_client:aws_client(), get_security_groups_for_vpc_request(), proplists:proplist()) ->
    {ok, get_security_groups_for_vpc_result(), tuple()} |
    {error, any()}.
get_security_groups_for_vpc(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetSecurityGroupsForVpc">>, Input, Options).

%% @doc Retrieves the access status of your account to the EC2 serial console
%% of all instances.
%%
%% By
%% default, access to the EC2 serial console is disabled for your account.
%% For more
%% information, see Manage account access to the EC2 serial console:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configure-access-to-serial-console.html#serial-console-account-access
%% in the Amazon EC2
%% User Guide.
-spec get_serial_console_access_status(aws_client:aws_client(), get_serial_console_access_status_request()) ->
    {ok, get_serial_console_access_status_result(), tuple()} |
    {error, any()}.
get_serial_console_access_status(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_serial_console_access_status(Client, Input, []).

-spec get_serial_console_access_status(aws_client:aws_client(), get_serial_console_access_status_request(), proplists:proplist()) ->
    {ok, get_serial_console_access_status_result(), tuple()} |
    {error, any()}.
get_serial_console_access_status(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetSerialConsoleAccessStatus">>, Input, Options).

%% @doc Gets the current state of block public access for snapshots setting
%% for the account and Region.
%%
%% For more information, see
%% Block public access for snapshots:
%% https://docs.aws.amazon.com/ebs/latest/userguide/block-public-access-snapshots.html
%% in the Amazon EBS User Guide.
-spec get_snapshot_block_public_access_state(aws_client:aws_client(), get_snapshot_block_public_access_state_request()) ->
    {ok, get_snapshot_block_public_access_state_result(), tuple()} |
    {error, any()}.
get_snapshot_block_public_access_state(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_snapshot_block_public_access_state(Client, Input, []).

-spec get_snapshot_block_public_access_state(aws_client:aws_client(), get_snapshot_block_public_access_state_request(), proplists:proplist()) ->
    {ok, get_snapshot_block_public_access_state_result(), tuple()} |
    {error, any()}.
get_snapshot_block_public_access_state(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetSnapshotBlockPublicAccessState">>, Input, Options).

%% @doc Calculates the Spot placement score for a Region or Availability Zone
%% based on the
%% specified target capacity and compute requirements.
%%
%% You can specify your compute requirements either by using
%% `InstanceRequirementsWithMetadata' and letting Amazon EC2 choose the
%% optimal
%% instance types to fulfill your Spot request, or you can specify the
%% instance types by using
%% `InstanceTypes'.
%%
%% For more information, see Spot placement score:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html
%% in
%% the Amazon EC2 User Guide.
-spec get_spot_placement_scores(aws_client:aws_client(), get_spot_placement_scores_request()) ->
    {ok, get_spot_placement_scores_result(), tuple()} |
    {error, any()}.
get_spot_placement_scores(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_spot_placement_scores(Client, Input, []).

-spec get_spot_placement_scores(aws_client:aws_client(), get_spot_placement_scores_request(), proplists:proplist()) ->
    {ok, get_spot_placement_scores_result(), tuple()} |
    {error, any()}.
get_spot_placement_scores(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetSpotPlacementScores">>, Input, Options).

%% @doc Gets information about the subnet CIDR reservations.
-spec get_subnet_cidr_reservations(aws_client:aws_client(), get_subnet_cidr_reservations_request()) ->
    {ok, get_subnet_cidr_reservations_result(), tuple()} |
    {error, any()}.
get_subnet_cidr_reservations(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_subnet_cidr_reservations(Client, Input, []).

-spec get_subnet_cidr_reservations(aws_client:aws_client(), get_subnet_cidr_reservations_request(), proplists:proplist()) ->
    {ok, get_subnet_cidr_reservations_result(), tuple()} |
    {error, any()}.
get_subnet_cidr_reservations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetSubnetCidrReservations">>, Input, Options).

%% @doc Lists the route tables to which the specified resource attachment
%% propagates routes.
-spec get_transit_gateway_attachment_propagations(aws_client:aws_client(), get_transit_gateway_attachment_propagations_request()) ->
    {ok, get_transit_gateway_attachment_propagations_result(), tuple()} |
    {error, any()}.
get_transit_gateway_attachment_propagations(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_transit_gateway_attachment_propagations(Client, Input, []).

-spec get_transit_gateway_attachment_propagations(aws_client:aws_client(), get_transit_gateway_attachment_propagations_request(), proplists:proplist()) ->
    {ok, get_transit_gateway_attachment_propagations_result(), tuple()} |
    {error, any()}.
get_transit_gateway_attachment_propagations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetTransitGatewayAttachmentPropagations">>, Input, Options).

%% @doc Gets information about the associations for the transit gateway
%% multicast domain.
-spec get_transit_gateway_multicast_domain_associations(aws_client:aws_client(), get_transit_gateway_multicast_domain_associations_request()) ->
    {ok, get_transit_gateway_multicast_domain_associations_result(), tuple()} |
    {error, any()}.
get_transit_gateway_multicast_domain_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_transit_gateway_multicast_domain_associations(Client, Input, []).

-spec get_transit_gateway_multicast_domain_associations(aws_client:aws_client(), get_transit_gateway_multicast_domain_associations_request(), proplists:proplist()) ->
    {ok, get_transit_gateway_multicast_domain_associations_result(), tuple()} |
    {error, any()}.
get_transit_gateway_multicast_domain_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetTransitGatewayMulticastDomainAssociations">>, Input, Options).

%% @doc Gets a list of the transit gateway policy table associations.
-spec get_transit_gateway_policy_table_associations(aws_client:aws_client(), get_transit_gateway_policy_table_associations_request()) ->
    {ok, get_transit_gateway_policy_table_associations_result(), tuple()} |
    {error, any()}.
get_transit_gateway_policy_table_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_transit_gateway_policy_table_associations(Client, Input, []).

-spec get_transit_gateway_policy_table_associations(aws_client:aws_client(), get_transit_gateway_policy_table_associations_request(), proplists:proplist()) ->
    {ok, get_transit_gateway_policy_table_associations_result(), tuple()} |
    {error, any()}.
get_transit_gateway_policy_table_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetTransitGatewayPolicyTableAssociations">>, Input, Options).

%% @doc Returns a list of transit gateway policy table entries.
-spec get_transit_gateway_policy_table_entries(aws_client:aws_client(), get_transit_gateway_policy_table_entries_request()) ->
    {ok, get_transit_gateway_policy_table_entries_result(), tuple()} |
    {error, any()}.
get_transit_gateway_policy_table_entries(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_transit_gateway_policy_table_entries(Client, Input, []).

-spec get_transit_gateway_policy_table_entries(aws_client:aws_client(), get_transit_gateway_policy_table_entries_request(), proplists:proplist()) ->
    {ok, get_transit_gateway_policy_table_entries_result(), tuple()} |
    {error, any()}.
get_transit_gateway_policy_table_entries(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetTransitGatewayPolicyTableEntries">>, Input, Options).

%% @doc Gets information about the prefix list references in a specified
%% transit gateway route table.
-spec get_transit_gateway_prefix_list_references(aws_client:aws_client(), get_transit_gateway_prefix_list_references_request()) ->
    {ok, get_transit_gateway_prefix_list_references_result(), tuple()} |
    {error, any()}.
get_transit_gateway_prefix_list_references(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_transit_gateway_prefix_list_references(Client, Input, []).

-spec get_transit_gateway_prefix_list_references(aws_client:aws_client(), get_transit_gateway_prefix_list_references_request(), proplists:proplist()) ->
    {ok, get_transit_gateway_prefix_list_references_result(), tuple()} |
    {error, any()}.
get_transit_gateway_prefix_list_references(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetTransitGatewayPrefixListReferences">>, Input, Options).

%% @doc Gets information about the associations for the specified transit
%% gateway route table.
-spec get_transit_gateway_route_table_associations(aws_client:aws_client(), get_transit_gateway_route_table_associations_request()) ->
    {ok, get_transit_gateway_route_table_associations_result(), tuple()} |
    {error, any()}.
get_transit_gateway_route_table_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_transit_gateway_route_table_associations(Client, Input, []).

-spec get_transit_gateway_route_table_associations(aws_client:aws_client(), get_transit_gateway_route_table_associations_request(), proplists:proplist()) ->
    {ok, get_transit_gateway_route_table_associations_result(), tuple()} |
    {error, any()}.
get_transit_gateway_route_table_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetTransitGatewayRouteTableAssociations">>, Input, Options).

%% @doc Gets information about the route table propagations for the specified
%% transit gateway route table.
-spec get_transit_gateway_route_table_propagations(aws_client:aws_client(), get_transit_gateway_route_table_propagations_request()) ->
    {ok, get_transit_gateway_route_table_propagations_result(), tuple()} |
    {error, any()}.
get_transit_gateway_route_table_propagations(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_transit_gateway_route_table_propagations(Client, Input, []).

-spec get_transit_gateway_route_table_propagations(aws_client:aws_client(), get_transit_gateway_route_table_propagations_request(), proplists:proplist()) ->
    {ok, get_transit_gateway_route_table_propagations_result(), tuple()} |
    {error, any()}.
get_transit_gateway_route_table_propagations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetTransitGatewayRouteTablePropagations">>, Input, Options).

%% @doc Get the Verified Access policy associated with the endpoint.
-spec get_verified_access_endpoint_policy(aws_client:aws_client(), get_verified_access_endpoint_policy_request()) ->
    {ok, get_verified_access_endpoint_policy_result(), tuple()} |
    {error, any()}.
get_verified_access_endpoint_policy(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_verified_access_endpoint_policy(Client, Input, []).

-spec get_verified_access_endpoint_policy(aws_client:aws_client(), get_verified_access_endpoint_policy_request(), proplists:proplist()) ->
    {ok, get_verified_access_endpoint_policy_result(), tuple()} |
    {error, any()}.
get_verified_access_endpoint_policy(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetVerifiedAccessEndpointPolicy">>, Input, Options).

%% @doc Gets the targets for the specified network CIDR endpoint for Verified
%% Access.
-spec get_verified_access_endpoint_targets(aws_client:aws_client(), get_verified_access_endpoint_targets_request()) ->
    {ok, get_verified_access_endpoint_targets_result(), tuple()} |
    {error, any()}.
get_verified_access_endpoint_targets(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_verified_access_endpoint_targets(Client, Input, []).

-spec get_verified_access_endpoint_targets(aws_client:aws_client(), get_verified_access_endpoint_targets_request(), proplists:proplist()) ->
    {ok, get_verified_access_endpoint_targets_result(), tuple()} |
    {error, any()}.
get_verified_access_endpoint_targets(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetVerifiedAccessEndpointTargets">>, Input, Options).

%% @doc Shows the contents of the Verified Access policy associated with the
%% group.
-spec get_verified_access_group_policy(aws_client:aws_client(), get_verified_access_group_policy_request()) ->
    {ok, get_verified_access_group_policy_result(), tuple()} |
    {error, any()}.
get_verified_access_group_policy(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_verified_access_group_policy(Client, Input, []).

-spec get_verified_access_group_policy(aws_client:aws_client(), get_verified_access_group_policy_request(), proplists:proplist()) ->
    {ok, get_verified_access_group_policy_result(), tuple()} |
    {error, any()}.
get_verified_access_group_policy(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetVerifiedAccessGroupPolicy">>, Input, Options).

%% @doc Download an Amazon Web Services-provided sample configuration file to
%% be used with the customer
%% gateway device specified for your Site-to-Site VPN connection.
-spec get_vpn_connection_device_sample_configuration(aws_client:aws_client(), get_vpn_connection_device_sample_configuration_request()) ->
    {ok, get_vpn_connection_device_sample_configuration_result(), tuple()} |
    {error, any()}.
get_vpn_connection_device_sample_configuration(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_vpn_connection_device_sample_configuration(Client, Input, []).

-spec get_vpn_connection_device_sample_configuration(aws_client:aws_client(), get_vpn_connection_device_sample_configuration_request(), proplists:proplist()) ->
    {ok, get_vpn_connection_device_sample_configuration_result(), tuple()} |
    {error, any()}.
get_vpn_connection_device_sample_configuration(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetVpnConnectionDeviceSampleConfiguration">>, Input, Options).

%% @doc Obtain a list of customer gateway devices for which sample
%% configuration
%% files can be provided.
%%
%% The request has no additional parameters. You can also see the
%% list of device types with sample configuration files available under Your
%% customer gateway
%% device: https://docs.aws.amazon.com/vpn/latest/s2svpn/your-cgw.html in the
%% Amazon Web Services Site-to-Site VPN User Guide.
-spec get_vpn_connection_device_types(aws_client:aws_client(), get_vpn_connection_device_types_request()) ->
    {ok, get_vpn_connection_device_types_result(), tuple()} |
    {error, any()}.
get_vpn_connection_device_types(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_vpn_connection_device_types(Client, Input, []).

-spec get_vpn_connection_device_types(aws_client:aws_client(), get_vpn_connection_device_types_request(), proplists:proplist()) ->
    {ok, get_vpn_connection_device_types_result(), tuple()} |
    {error, any()}.
get_vpn_connection_device_types(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetVpnConnectionDeviceTypes">>, Input, Options).

%% @doc Get details of available tunnel endpoint maintenance.
-spec get_vpn_tunnel_replacement_status(aws_client:aws_client(), get_vpn_tunnel_replacement_status_request()) ->
    {ok, get_vpn_tunnel_replacement_status_result(), tuple()} |
    {error, any()}.
get_vpn_tunnel_replacement_status(Client, Input)
  when is_map(Client), is_map(Input) ->
    get_vpn_tunnel_replacement_status(Client, Input, []).

-spec get_vpn_tunnel_replacement_status(aws_client:aws_client(), get_vpn_tunnel_replacement_status_request(), proplists:proplist()) ->
    {ok, get_vpn_tunnel_replacement_status_result(), tuple()} |
    {error, any()}.
get_vpn_tunnel_replacement_status(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"GetVpnTunnelReplacementStatus">>, Input, Options).

%% @doc Uploads a client certificate revocation list to the specified Client
%% VPN endpoint.
%%
%% Uploading a client certificate revocation list overwrites the existing
%% client certificate revocation list.
%%
%% Uploading a client certificate revocation list resets existing client
%% connections.
-spec import_client_vpn_client_certificate_revocation_list(aws_client:aws_client(), import_client_vpn_client_certificate_revocation_list_request()) ->
    {ok, import_client_vpn_client_certificate_revocation_list_result(), tuple()} |
    {error, any()}.
import_client_vpn_client_certificate_revocation_list(Client, Input)
  when is_map(Client), is_map(Input) ->
    import_client_vpn_client_certificate_revocation_list(Client, Input, []).

-spec import_client_vpn_client_certificate_revocation_list(aws_client:aws_client(), import_client_vpn_client_certificate_revocation_list_request(), proplists:proplist()) ->
    {ok, import_client_vpn_client_certificate_revocation_list_result(), tuple()} |
    {error, any()}.
import_client_vpn_client_certificate_revocation_list(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ImportClientVpnClientCertificateRevocationList">>, Input, Options).

%% @doc
%% To import your virtual machines (VMs) with a console-based experience, you
%% can use the
%% Import virtual machine images to Amazon Web Services template in the
%% Migration Hub Orchestrator console:
%% https://console.aws.amazon.com/migrationhub/orchestrator.
%%
%% For more
%% information, see the
%% Migration Hub Orchestrator User Guide
%% :
%% https://docs.aws.amazon.com/migrationhub-orchestrator/latest/userguide/import-vm-images.html.
%%
%% Import single or multi-volume disk images or EBS snapshots into an Amazon
%% Machine Image (AMI).
%%
%% Amazon Web Services VM Import/Export strongly recommends specifying a
%% value for either the
%% `--license-type' or `--usage-operation' parameter when you create
%% a new
%% VM Import task. This ensures your operating system is licensed
%% appropriately and your billing is
%% optimized.
%%
%% For more information, see Importing a
%% VM as an image using VM Import/Export:
%% https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html
%% in the VM Import/Export User Guide.
-spec import_image(aws_client:aws_client(), import_image_request()) ->
    {ok, import_image_result(), tuple()} |
    {error, any()}.
import_image(Client, Input)
  when is_map(Client), is_map(Input) ->
    import_image(Client, Input, []).

-spec import_image(aws_client:aws_client(), import_image_request(), proplists:proplist()) ->
    {ok, import_image_result(), tuple()} |
    {error, any()}.
import_image(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ImportImage">>, Input, Options).

%% @doc
%% We recommend that you use the
%% `ImportImage'
%% :
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportImage.html
%% API instead.
%%
%% For more information, see Importing a VM as an image using VM
%% Import/Export:
%% https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html
%% in the VM Import/Export User Guide.
%%
%% Creates an import instance task using metadata from the specified disk
%% image.
%%
%% This API action supports only single-volume VMs. To import multi-volume
%% VMs, use `ImportImage'
%% instead.
%%
%% For information about the import manifest referenced by this API action,
%% see VM Import Manifest:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html.
%%
%% This API action is not supported by the Command Line Interface (CLI).
-spec import_instance(aws_client:aws_client(), import_instance_request()) ->
    {ok, import_instance_result(), tuple()} |
    {error, any()}.
import_instance(Client, Input)
  when is_map(Client), is_map(Input) ->
    import_instance(Client, Input, []).

-spec import_instance(aws_client:aws_client(), import_instance_request(), proplists:proplist()) ->
    {ok, import_instance_result(), tuple()} |
    {error, any()}.
import_instance(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ImportInstance">>, Input, Options).

%% @doc Imports the public key from an RSA or ED25519 key pair that you
%% created using a third-party tool.
%%
%% You give Amazon Web Services only the public key. The private key is never
%% transferred between you and Amazon Web Services.
%%
%% For more information about the requirements for importing a key pair, see
%% Create a key pair and import the public key to Amazon EC2:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/create-key-pairs.html#how-to-generate-your-own-key-and-import-it-to-aws
%% in the Amazon EC2 User Guide.
-spec import_key_pair(aws_client:aws_client(), import_key_pair_request()) ->
    {ok, import_key_pair_result(), tuple()} |
    {error, any()}.
import_key_pair(Client, Input)
  when is_map(Client), is_map(Input) ->
    import_key_pair(Client, Input, []).

-spec import_key_pair(aws_client:aws_client(), import_key_pair_request(), proplists:proplist()) ->
    {ok, import_key_pair_result(), tuple()} |
    {error, any()}.
import_key_pair(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ImportKeyPair">>, Input, Options).

%% @doc Imports a disk into an EBS snapshot.
%%
%% For more information, see Importing a disk as a snapshot using VM
%% Import/Export:
%% https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-import-snapshot.html
%% in the
%% VM Import/Export User Guide.
-spec import_snapshot(aws_client:aws_client(), import_snapshot_request()) ->
    {ok, import_snapshot_result(), tuple()} |
    {error, any()}.
import_snapshot(Client, Input)
  when is_map(Client), is_map(Input) ->
    import_snapshot(Client, Input, []).

-spec import_snapshot(aws_client:aws_client(), import_snapshot_request(), proplists:proplist()) ->
    {ok, import_snapshot_result(), tuple()} |
    {error, any()}.
import_snapshot(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ImportSnapshot">>, Input, Options).

%% @doc
%% This API action supports only single-volume VMs.
%%
%% To import multi-volume VMs, use
%% `ImportImage' instead. To import a disk to a snapshot, use
%% `ImportSnapshot' instead.
%%
%% Creates an import volume task using metadata from the specified disk
%% image.
%%
%% For information about the import manifest referenced by this API action,
%% see VM Import Manifest:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html.
%%
%% This API action is not supported by the Command Line Interface (CLI).
-spec import_volume(aws_client:aws_client(), import_volume_request()) ->
    {ok, import_volume_result(), tuple()} |
    {error, any()}.
import_volume(Client, Input)
  when is_map(Client), is_map(Input) ->
    import_volume(Client, Input, []).

-spec import_volume(aws_client:aws_client(), import_volume_request(), proplists:proplist()) ->
    {ok, import_volume_result(), tuple()} |
    {error, any()}.
import_volume(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ImportVolume">>, Input, Options).

%% @doc Lists one or more AMIs that are currently in the Recycle Bin.
%%
%% For more information, see
%% Recycle
%% Bin: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin.html
%% in the Amazon EC2 User Guide.
-spec list_images_in_recycle_bin(aws_client:aws_client(), list_images_in_recycle_bin_request()) ->
    {ok, list_images_in_recycle_bin_result(), tuple()} |
    {error, any()}.
list_images_in_recycle_bin(Client, Input)
  when is_map(Client), is_map(Input) ->
    list_images_in_recycle_bin(Client, Input, []).

-spec list_images_in_recycle_bin(aws_client:aws_client(), list_images_in_recycle_bin_request(), proplists:proplist()) ->
    {ok, list_images_in_recycle_bin_result(), tuple()} |
    {error, any()}.
list_images_in_recycle_bin(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ListImagesInRecycleBin">>, Input, Options).

%% @doc Lists one or more snapshots that are currently in the Recycle Bin.
-spec list_snapshots_in_recycle_bin(aws_client:aws_client(), list_snapshots_in_recycle_bin_request()) ->
    {ok, list_snapshots_in_recycle_bin_result(), tuple()} |
    {error, any()}.
list_snapshots_in_recycle_bin(Client, Input)
  when is_map(Client), is_map(Input) ->
    list_snapshots_in_recycle_bin(Client, Input, []).

-spec list_snapshots_in_recycle_bin(aws_client:aws_client(), list_snapshots_in_recycle_bin_request(), proplists:proplist()) ->
    {ok, list_snapshots_in_recycle_bin_result(), tuple()} |
    {error, any()}.
list_snapshots_in_recycle_bin(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ListSnapshotsInRecycleBin">>, Input, Options).

%% @doc Locks an Amazon EBS snapshot in either governance or compliance
%% mode to protect it against accidental or malicious deletions for a
%% specific duration.
%%
%% A locked snapshot
%% can't be deleted.
%%
%% You can also use this action to modify the lock settings for a snapshot
%% that is already locked. The
%% allowed modifications depend on the lock mode and lock state:
%%
%% If the snapshot is locked in governance mode, you can modify the lock mode
%% and the lock duration
%% or lock expiration date.
%%
%% If the snapshot is locked in compliance mode and it is in the cooling-off
%% period, you can modify
%% the lock mode and the lock duration or lock expiration date.
%%
%% If the snapshot is locked in compliance mode and the cooling-off period
%% has lapsed, you can
%% only increase the lock duration or extend the lock expiration date.
-spec lock_snapshot(aws_client:aws_client(), lock_snapshot_request()) ->
    {ok, lock_snapshot_result(), tuple()} |
    {error, any()}.
lock_snapshot(Client, Input)
  when is_map(Client), is_map(Input) ->
    lock_snapshot(Client, Input, []).

-spec lock_snapshot(aws_client:aws_client(), lock_snapshot_request(), proplists:proplist()) ->
    {ok, lock_snapshot_result(), tuple()} |
    {error, any()}.
lock_snapshot(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"LockSnapshot">>, Input, Options).

%% @doc Modifies an attribute of the specified Elastic IP address.
%%
%% For requirements, see Using reverse DNS for email applications:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#Using_Elastic_Addressing_Reverse_DNS.
-spec modify_address_attribute(aws_client:aws_client(), modify_address_attribute_request()) ->
    {ok, modify_address_attribute_result(), tuple()} |
    {error, any()}.
modify_address_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_address_attribute(Client, Input, []).

-spec modify_address_attribute(aws_client:aws_client(), modify_address_attribute_request(), proplists:proplist()) ->
    {ok, modify_address_attribute_result(), tuple()} |
    {error, any()}.
modify_address_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyAddressAttribute">>, Input, Options).

%% @doc Changes the opt-in status of the specified zone group for your
%% account.
-spec modify_availability_zone_group(aws_client:aws_client(), modify_availability_zone_group_request()) ->
    {ok, modify_availability_zone_group_result(), tuple()} |
    {error, any()}.
modify_availability_zone_group(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_availability_zone_group(Client, Input, []).

-spec modify_availability_zone_group(aws_client:aws_client(), modify_availability_zone_group_request(), proplists:proplist()) ->
    {ok, modify_availability_zone_group_result(), tuple()} |
    {error, any()}.
modify_availability_zone_group(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyAvailabilityZoneGroup">>, Input, Options).

%% @doc Modifies a Capacity Reservation's capacity, instance eligibility,
%% and the conditions
%% under which it is to be released.
%%
%% You can't modify a Capacity Reservation's instance
%% type, EBS optimization, platform, instance store settings, Availability
%% Zone, or
%% tenancy. If you need to modify any of these attributes, we recommend that
%% you cancel the
%% Capacity Reservation, and then create a new one with the required
%% attributes. For more
%% information, see Modify an active
%% Capacity Reservation:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/capacity-reservations-modify.html.
%%
%% The allowed modifications depend on the state of the Capacity Reservation:
%%
%% `assessing' or `scheduled' state - You can modify the
%% tags only.
%%
%% `pending' state - You can't modify the Capacity Reservation in any
%% way.
%%
%% `active' state but still within the commitment duration - You
%% can't
%% decrease the instance count or set an end date that is within the
%% commitment
%% duration. All other modifications are allowed.
%%
%% `active' state with no commitment duration or elapsed commitment
%% duration - All modifications are allowed.
%%
%% `expired', `cancelled', `unsupported', or
%% `failed' state - You can't modify the Capacity Reservation in any
%% way.
-spec modify_capacity_reservation(aws_client:aws_client(), modify_capacity_reservation_request()) ->
    {ok, modify_capacity_reservation_result(), tuple()} |
    {error, any()}.
modify_capacity_reservation(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_capacity_reservation(Client, Input, []).

-spec modify_capacity_reservation(aws_client:aws_client(), modify_capacity_reservation_request(), proplists:proplist()) ->
    {ok, modify_capacity_reservation_result(), tuple()} |
    {error, any()}.
modify_capacity_reservation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyCapacityReservation">>, Input, Options).

%% @doc Modifies a Capacity Reservation Fleet.
%%
%% When you modify the total target capacity of a Capacity Reservation Fleet,
%% the Fleet
%% automatically creates new Capacity Reservations, or modifies or cancels
%% existing
%% Capacity Reservations in the Fleet to meet the new total target capacity.
%% When you
%% modify the end date for the Fleet, the end dates for all of the individual
%% Capacity
%% Reservations in the Fleet are updated accordingly.
-spec modify_capacity_reservation_fleet(aws_client:aws_client(), modify_capacity_reservation_fleet_request()) ->
    {ok, modify_capacity_reservation_fleet_result(), tuple()} |
    {error, any()}.
modify_capacity_reservation_fleet(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_capacity_reservation_fleet(Client, Input, []).

-spec modify_capacity_reservation_fleet(aws_client:aws_client(), modify_capacity_reservation_fleet_request(), proplists:proplist()) ->
    {ok, modify_capacity_reservation_fleet_result(), tuple()} |
    {error, any()}.
modify_capacity_reservation_fleet(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyCapacityReservationFleet">>, Input, Options).

%% @doc Modifies the specified Client VPN endpoint.
%%
%% Modifying the DNS server resets existing client connections.
-spec modify_client_vpn_endpoint(aws_client:aws_client(), modify_client_vpn_endpoint_request()) ->
    {ok, modify_client_vpn_endpoint_result(), tuple()} |
    {error, any()}.
modify_client_vpn_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_client_vpn_endpoint(Client, Input, []).

-spec modify_client_vpn_endpoint(aws_client:aws_client(), modify_client_vpn_endpoint_request(), proplists:proplist()) ->
    {ok, modify_client_vpn_endpoint_result(), tuple()} |
    {error, any()}.
modify_client_vpn_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyClientVpnEndpoint">>, Input, Options).

%% @doc Modifies the default credit option for CPU usage of burstable
%% performance instances.
%%
%% The default credit option is set at the account level per Amazon Web
%% Services Region, and
%% is specified per instance family. All new burstable performance instances
%% in the account
%% launch using the default credit option.
%%
%% `ModifyDefaultCreditSpecification' is an asynchronous operation, which
%% works at an Amazon Web Services Region level and modifies the credit
%% option for each
%% Availability Zone. All zones in a Region are updated within five minutes.
%% But if
%% instances are launched during this operation, they might not get the new
%% credit option
%% until the zone is updated. To verify whether the update has occurred, you
%% can call
%% `GetDefaultCreditSpecification' and check
%% `DefaultCreditSpecification' for updates.
%%
%% For more information, see Burstable
%% performance instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html
%% in the Amazon EC2 User Guide.
-spec modify_default_credit_specification(aws_client:aws_client(), modify_default_credit_specification_request()) ->
    {ok, modify_default_credit_specification_result(), tuple()} |
    {error, any()}.
modify_default_credit_specification(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_default_credit_specification(Client, Input, []).

-spec modify_default_credit_specification(aws_client:aws_client(), modify_default_credit_specification_request(), proplists:proplist()) ->
    {ok, modify_default_credit_specification_result(), tuple()} |
    {error, any()}.
modify_default_credit_specification(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyDefaultCreditSpecification">>, Input, Options).

%% @doc Changes the default KMS key for EBS encryption by default for your
%% account in this Region.
%%
%% Amazon Web Services creates a unique Amazon Web Services managed KMS key
%% in each Region for use with encryption by default. If
%% you change the default KMS key to a symmetric customer managed KMS key, it
%% is used instead of the Amazon Web Services
%% managed KMS key. Amazon EBS does not support asymmetric KMS keys.
%%
%% If you delete or disable the customer managed KMS key that you specified
%% for use with
%% encryption by default, your instances will fail to launch.
%%
%% For more information, see Amazon EBS encryption:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html
%% in the Amazon EBS User Guide.
-spec modify_ebs_default_kms_key_id(aws_client:aws_client(), modify_ebs_default_kms_key_id_request()) ->
    {ok, modify_ebs_default_kms_key_id_result(), tuple()} |
    {error, any()}.
modify_ebs_default_kms_key_id(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_ebs_default_kms_key_id(Client, Input, []).

-spec modify_ebs_default_kms_key_id(aws_client:aws_client(), modify_ebs_default_kms_key_id_request(), proplists:proplist()) ->
    {ok, modify_ebs_default_kms_key_id_result(), tuple()} |
    {error, any()}.
modify_ebs_default_kms_key_id(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyEbsDefaultKmsKeyId">>, Input, Options).

%% @doc Modifies the specified EC2 Fleet.
%%
%% You can only modify an EC2 Fleet request of type `maintain'.
%%
%% While the EC2 Fleet is being modified, it is in the `modifying' state.
%%
%% To scale up your EC2 Fleet, increase its target capacity. The EC2 Fleet
%% launches the additional
%% Spot Instances according to the allocation strategy for the EC2 Fleet
%% request. If the allocation
%% strategy is `lowest-price', the EC2 Fleet launches instances using the
%% Spot Instance
%% pool with the lowest price. If the allocation strategy is
%% `diversified', the
%% EC2 Fleet distributes the instances across the Spot Instance pools. If the
%% allocation strategy
%% is `capacity-optimized', EC2 Fleet launches instances from Spot
%% Instance pools with optimal
%% capacity for the number of instances that are launching.
%%
%% To scale down your EC2 Fleet, decrease its target capacity. First, the EC2
%% Fleet cancels any open
%% requests that exceed the new target capacity. You can request that the EC2
%% Fleet terminate Spot
%% Instances until the size of the fleet no longer exceeds the new target
%% capacity. If the
%% allocation strategy is `lowest-price', the EC2 Fleet terminates the
%% instances with
%% the highest price per unit. If the allocation strategy is
%% `capacity-optimized',
%% the EC2 Fleet terminates the instances in the Spot Instance pools that
%% have the least available
%% Spot Instance capacity. If the allocation strategy is `diversified',
%% the EC2 Fleet terminates
%% instances across the Spot Instance pools. Alternatively, you can request
%% that the EC2 Fleet keep
%% the fleet at its current size, but not replace any Spot Instances that are
%% interrupted or
%% that you terminate manually.
%%
%% If you are finished with your EC2 Fleet for now, but will use it again
%% later, you can set the
%% target capacity to 0.
-spec modify_fleet(aws_client:aws_client(), modify_fleet_request()) ->
    {ok, modify_fleet_result(), tuple()} |
    {error, any()}.
modify_fleet(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_fleet(Client, Input, []).

-spec modify_fleet(aws_client:aws_client(), modify_fleet_request(), proplists:proplist()) ->
    {ok, modify_fleet_result(), tuple()} |
    {error, any()}.
modify_fleet(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyFleet">>, Input, Options).

%% @doc Modifies the specified attribute of the specified Amazon FPGA Image
%% (AFI).
-spec modify_fpga_image_attribute(aws_client:aws_client(), modify_fpga_image_attribute_request()) ->
    {ok, modify_fpga_image_attribute_result(), tuple()} |
    {error, any()}.
modify_fpga_image_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_fpga_image_attribute(Client, Input, []).

-spec modify_fpga_image_attribute(aws_client:aws_client(), modify_fpga_image_attribute_request(), proplists:proplist()) ->
    {ok, modify_fpga_image_attribute_result(), tuple()} |
    {error, any()}.
modify_fpga_image_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyFpgaImageAttribute">>, Input, Options).

%% @doc Modify the auto-placement setting of a Dedicated Host.
%%
%% When auto-placement is enabled,
%% any instances that you launch with a tenancy of `host' but without a
%% specific
%% host ID are placed onto any available Dedicated Host in your account that
%% has
%% auto-placement enabled. When auto-placement is disabled, you need to
%% provide a host ID
%% to have the instance launch onto a specific host. If no host ID is
%% provided, the
%% instance is launched onto a suitable host with auto-placement enabled.
%%
%% You can also use this API action to modify a Dedicated Host to support
%% either multiple
%% instance types in an instance family, or to support a specific instance
%% type
%% only.
-spec modify_hosts(aws_client:aws_client(), modify_hosts_request()) ->
    {ok, modify_hosts_result(), tuple()} |
    {error, any()}.
modify_hosts(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_hosts(Client, Input, []).

-spec modify_hosts(aws_client:aws_client(), modify_hosts_request(), proplists:proplist()) ->
    {ok, modify_hosts_result(), tuple()} |
    {error, any()}.
modify_hosts(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyHosts">>, Input, Options).

%% @doc Modifies the ID format for the specified resource on a per-Region
%% basis.
%%
%% You can
%% specify that resources should receive longer IDs (17-character IDs) when
%% they are
%% created.
%%
%% This request can only be used to modify longer ID settings for resource
%% types that
%% are within the opt-in period. Resources currently in their opt-in period
%% include:
%% `bundle' | `conversion-task' | `customer-gateway' |
%% `dhcp-options' |
%% `elastic-ip-allocation' | `elastic-ip-association' |
%% `export-task' | `flow-log' | `image' |
%% `import-task' | `internet-gateway' | `network-acl'
%% | `network-acl-association' | `network-interface' |
%% `network-interface-attachment' | `prefix-list' |
%% `route-table' | `route-table-association' |
%% `security-group' | `subnet' |
%% `subnet-cidr-block-association' | `vpc' |
%% `vpc-cidr-block-association' | `vpc-endpoint' |
%% `vpc-peering-connection' | `vpn-connection' | `vpn-gateway'.
%%
%% This setting applies to the IAM user who makes the request; it does not
%% apply to the
%% entire Amazon Web Services account. By default, an IAM user defaults to
%% the same settings as the root user. If
%% you're using this action as the root user, then these settings apply
%% to the entire account,
%% unless an IAM user explicitly overrides these settings for themselves. For
%% more information,
%% see Resource IDs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html
%% in the Amazon Elastic Compute Cloud User Guide.
%%
%% Resources created with longer IDs are visible to all IAM roles and users,
%% regardless
%% of these settings and provided that they have permission to use the
%% relevant
%% `Describe' command for the resource type.
-spec modify_id_format(aws_client:aws_client(), modify_id_format_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_id_format(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_id_format(Client, Input, []).

-spec modify_id_format(aws_client:aws_client(), modify_id_format_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_id_format(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyIdFormat">>, Input, Options).

%% @doc Modifies the ID format of a resource for a specified IAM user, IAM
%% role, or the root
%% user for an account; or all IAM users, IAM roles, and the root user for an
%% account.
%%
%% You can
%% specify that resources should receive longer IDs (17-character IDs) when
%% they are created.
%%
%% This request can only be used to modify longer ID settings for resource
%% types that are
%% within the opt-in period. Resources currently in their opt-in period
%% include:
%% `bundle' | `conversion-task' | `customer-gateway' |
%% `dhcp-options' |
%% `elastic-ip-allocation' | `elastic-ip-association' |
%% `export-task' | `flow-log' | `image' |
%% `import-task' | `internet-gateway' | `network-acl'
%% | `network-acl-association' | `network-interface' |
%% `network-interface-attachment' | `prefix-list' |
%% `route-table' | `route-table-association' |
%% `security-group' | `subnet' |
%% `subnet-cidr-block-association' | `vpc' |
%% `vpc-cidr-block-association' | `vpc-endpoint' |
%% `vpc-peering-connection' | `vpn-connection' | `vpn-gateway'.
%%
%% For more information, see Resource IDs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/resource-ids.html in
%% the
%% Amazon Elastic Compute Cloud User Guide.
%%
%% This setting applies to the principal specified in the request; it does
%% not apply to the
%% principal that makes the request.
%%
%% Resources created with longer IDs are visible to all IAM roles and users,
%% regardless of these
%% settings and provided that they have permission to use the relevant
%% `Describe'
%% command for the resource type.
-spec modify_identity_id_format(aws_client:aws_client(), modify_identity_id_format_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_identity_id_format(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_identity_id_format(Client, Input, []).

-spec modify_identity_id_format(aws_client:aws_client(), modify_identity_id_format_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_identity_id_format(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyIdentityIdFormat">>, Input, Options).

%% @doc Modifies the specified attribute of the specified AMI.
%%
%% You can specify only one attribute
%% at a time.
%%
%% To specify the attribute, you can use the `Attribute' parameter, or
%% one of the
%% following parameters: `Description', `ImdsSupport', or
%% `LaunchPermission'.
%%
%% Images with an Amazon Web Services Marketplace product code cannot be made
%% public.
%%
%% To enable the SriovNetSupport enhanced networking attribute of an image,
%% enable
%% SriovNetSupport on an instance and create an AMI from the instance.
-spec modify_image_attribute(aws_client:aws_client(), modify_image_attribute_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_image_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_image_attribute(Client, Input, []).

-spec modify_image_attribute(aws_client:aws_client(), modify_image_attribute_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_image_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyImageAttribute">>, Input, Options).

%% @doc Modifies the specified attribute of the specified instance.
%%
%% You can specify only one
%% attribute at a time.
%%
%% Note: Using this action to change the security groups
%% associated with an elastic network interface (ENI) attached to an instance
%% can
%% result in an error if the instance has more than one ENI. To change the
%% security groups
%% associated with an ENI attached to an instance that has multiple ENIs, we
%% recommend that
%% you use the `ModifyNetworkInterfaceAttribute' action.
%%
%% To modify some attributes, the instance must be stopped. For more
%% information, see
%% Modify a stopped instance:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html
%% in the
%% Amazon EC2 User Guide.
-spec modify_instance_attribute(aws_client:aws_client(), modify_instance_attribute_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_instance_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_instance_attribute(Client, Input, []).

-spec modify_instance_attribute(aws_client:aws_client(), modify_instance_attribute_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_instance_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyInstanceAttribute">>, Input, Options).

%% @doc Modifies the Capacity Reservation settings for a stopped instance.
%%
%% Use this action to
%% configure an instance to target a specific Capacity Reservation, run in
%% any
%% `open' Capacity Reservation with matching attributes, run in On-Demand
%% Instance capacity, or only run in a Capacity Reservation.
-spec modify_instance_capacity_reservation_attributes(aws_client:aws_client(), modify_instance_capacity_reservation_attributes_request()) ->
    {ok, modify_instance_capacity_reservation_attributes_result(), tuple()} |
    {error, any()}.
modify_instance_capacity_reservation_attributes(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_instance_capacity_reservation_attributes(Client, Input, []).

-spec modify_instance_capacity_reservation_attributes(aws_client:aws_client(), modify_instance_capacity_reservation_attributes_request(), proplists:proplist()) ->
    {ok, modify_instance_capacity_reservation_attributes_result(), tuple()} |
    {error, any()}.
modify_instance_capacity_reservation_attributes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyInstanceCapacityReservationAttributes">>, Input, Options).

%% @doc By default, all vCPUs for the instance type are active when you
%% launch an instance.
%%
%% When you
%% configure the number of active vCPUs for the instance, it can help you
%% save on licensing costs and
%% optimize performance. The base cost of the instance remains unchanged.
%%
%% The number of active vCPUs equals the number of threads per CPU core
%% multiplied by the number
%% of cores. The instance must be in a `Stopped' state before you make
%% changes.
%%
%% Some instance type options do not support this capability. For more
%% information, see
%% Supported CPU
%% options:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/cpu-options-supported-instances-values.html
%% in the Amazon EC2 User Guide.
-spec modify_instance_cpu_options(aws_client:aws_client(), modify_instance_cpu_options_request()) ->
    {ok, modify_instance_cpu_options_result(), tuple()} |
    {error, any()}.
modify_instance_cpu_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_instance_cpu_options(Client, Input, []).

-spec modify_instance_cpu_options(aws_client:aws_client(), modify_instance_cpu_options_request(), proplists:proplist()) ->
    {ok, modify_instance_cpu_options_result(), tuple()} |
    {error, any()}.
modify_instance_cpu_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyInstanceCpuOptions">>, Input, Options).

%% @doc Modifies the credit option for CPU usage on a running or stopped
%% burstable performance
%% instance.
%%
%% The credit options are `standard' and
%% `unlimited'.
%%
%% For more information, see Burstable
%% performance instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html
%% in the Amazon EC2 User Guide.
-spec modify_instance_credit_specification(aws_client:aws_client(), modify_instance_credit_specification_request()) ->
    {ok, modify_instance_credit_specification_result(), tuple()} |
    {error, any()}.
modify_instance_credit_specification(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_instance_credit_specification(Client, Input, []).

-spec modify_instance_credit_specification(aws_client:aws_client(), modify_instance_credit_specification_request(), proplists:proplist()) ->
    {ok, modify_instance_credit_specification_result(), tuple()} |
    {error, any()}.
modify_instance_credit_specification(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyInstanceCreditSpecification">>, Input, Options).

%% @doc Modifies the start time for a scheduled Amazon EC2 instance event.
-spec modify_instance_event_start_time(aws_client:aws_client(), modify_instance_event_start_time_request()) ->
    {ok, modify_instance_event_start_time_result(), tuple()} |
    {error, any()}.
modify_instance_event_start_time(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_instance_event_start_time(Client, Input, []).

-spec modify_instance_event_start_time(aws_client:aws_client(), modify_instance_event_start_time_request(), proplists:proplist()) ->
    {ok, modify_instance_event_start_time_result(), tuple()} |
    {error, any()}.
modify_instance_event_start_time(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyInstanceEventStartTime">>, Input, Options).

%% @doc Modifies the specified event window.
%%
%% You can define either a set of time ranges or a cron expression when
%% modifying the event
%% window, but not both.
%%
%% To modify the targets associated with the event window, use the
%% `AssociateInstanceEventWindow' and
%% `DisassociateInstanceEventWindow' API.
%%
%% If Amazon Web Services has already scheduled an event, modifying an event
%% window won't change the time
%% of the scheduled event.
%%
%% For more information, see Define event windows for scheduled
%% events:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/event-windows.html in
%% the Amazon EC2 User Guide.
-spec modify_instance_event_window(aws_client:aws_client(), modify_instance_event_window_request()) ->
    {ok, modify_instance_event_window_result(), tuple()} |
    {error, any()}.
modify_instance_event_window(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_instance_event_window(Client, Input, []).

-spec modify_instance_event_window(aws_client:aws_client(), modify_instance_event_window_request(), proplists:proplist()) ->
    {ok, modify_instance_event_window_result(), tuple()} |
    {error, any()}.
modify_instance_event_window(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyInstanceEventWindow">>, Input, Options).

%% @doc Modifies the recovery behavior of your instance to disable simplified
%% automatic
%% recovery or set the recovery behavior to default.
%%
%% The default configuration will not
%% enable simplified automatic recovery for an unsupported instance type. For
%% more
%% information, see Simplified automatic recovery:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-recover.html#instance-configuration-recovery.
%%
%% Modifies the reboot migration behavior during a user-initiated reboot of
%% an instance
%% that has a pending `system-reboot' event. For more information, see
%% Enable or disable reboot migration:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/schedevents_actions_reboot.html#reboot-migration.
-spec modify_instance_maintenance_options(aws_client:aws_client(), modify_instance_maintenance_options_request()) ->
    {ok, modify_instance_maintenance_options_result(), tuple()} |
    {error, any()}.
modify_instance_maintenance_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_instance_maintenance_options(Client, Input, []).

-spec modify_instance_maintenance_options(aws_client:aws_client(), modify_instance_maintenance_options_request(), proplists:proplist()) ->
    {ok, modify_instance_maintenance_options_result(), tuple()} |
    {error, any()}.
modify_instance_maintenance_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyInstanceMaintenanceOptions">>, Input, Options).

%% @doc Modifies the default instance metadata service (IMDS) settings at the
%% account level in
%% the specified Amazon Web Services Region.
%%
%% To remove a parameter's account-level default setting, specify
%% `no-preference'. If an account-level setting is cleared with
%% `no-preference', then the instance launch considers the other
%% instance metadata settings. For more information, see Order of precedence
%% for instance metadata options:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-options.html#instance-metadata-options-order-of-precedence
%% in the
%% Amazon EC2 User Guide.
-spec modify_instance_metadata_defaults(aws_client:aws_client(), modify_instance_metadata_defaults_request()) ->
    {ok, modify_instance_metadata_defaults_result(), tuple()} |
    {error, any()}.
modify_instance_metadata_defaults(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_instance_metadata_defaults(Client, Input, []).

-spec modify_instance_metadata_defaults(aws_client:aws_client(), modify_instance_metadata_defaults_request(), proplists:proplist()) ->
    {ok, modify_instance_metadata_defaults_result(), tuple()} |
    {error, any()}.
modify_instance_metadata_defaults(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyInstanceMetadataDefaults">>, Input, Options).

%% @doc Modify the instance metadata parameters on a running or stopped
%% instance.
%%
%% When you
%% modify the parameters on a stopped instance, they are applied when the
%% instance is
%% started. When you modify the parameters on a running instance, the API
%% responds with a
%% state of “pending”. After the parameter modifications are successfully
%% applied to the
%% instance, the state of the modifications changes from “pending” to
%% “applied” in
%% subsequent describe-instances API calls. For more information, see
%% Instance metadata and user data:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html
%% in the
%% Amazon EC2 User Guide.
-spec modify_instance_metadata_options(aws_client:aws_client(), modify_instance_metadata_options_request()) ->
    {ok, modify_instance_metadata_options_result(), tuple()} |
    {error, any()}.
modify_instance_metadata_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_instance_metadata_options(Client, Input, []).

-spec modify_instance_metadata_options(aws_client:aws_client(), modify_instance_metadata_options_request(), proplists:proplist()) ->
    {ok, modify_instance_metadata_options_result(), tuple()} |
    {error, any()}.
modify_instance_metadata_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyInstanceMetadataOptions">>, Input, Options).

%% @doc Change the configuration of the network performance options for an
%% existing
%% instance.
-spec modify_instance_network_performance_options(aws_client:aws_client(), modify_instance_network_performance_request()) ->
    {ok, modify_instance_network_performance_result(), tuple()} |
    {error, any()}.
modify_instance_network_performance_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_instance_network_performance_options(Client, Input, []).

-spec modify_instance_network_performance_options(aws_client:aws_client(), modify_instance_network_performance_request(), proplists:proplist()) ->
    {ok, modify_instance_network_performance_result(), tuple()} |
    {error, any()}.
modify_instance_network_performance_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyInstanceNetworkPerformanceOptions">>, Input, Options).

%% @doc Modifies the placement attributes for a specified instance.
%%
%% You can do the
%% following:
%%
%% Modify the affinity between an instance and a Dedicated
%% Host:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-hosts-overview.html.
%% When affinity is set to `host' and the instance is
%% not associated with a specific Dedicated Host, the next time the instance
%% is
%% started, it is automatically associated with the host on which it lands.
%% If the
%% instance is restarted or rebooted, this relationship persists.
%%
%% Change the Dedicated Host with which an instance is associated.
%%
%% Change the instance tenancy of an instance.
%%
%% Move an instance to or from a placement
%% group:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html.
%%
%% At least one attribute for affinity, host ID, tenancy, or placement group
%% name must be
%% specified in the request. Affinity and tenancy can be modified in the same
%% request.
%%
%% To modify the host ID, tenancy, placement group, or partition for an
%% instance, the
%% instance must be in the `stopped' state.
-spec modify_instance_placement(aws_client:aws_client(), modify_instance_placement_request()) ->
    {ok, modify_instance_placement_result(), tuple()} |
    {error, any()}.
modify_instance_placement(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_instance_placement(Client, Input, []).

-spec modify_instance_placement(aws_client:aws_client(), modify_instance_placement_request(), proplists:proplist()) ->
    {ok, modify_instance_placement_result(), tuple()} |
    {error, any()}.
modify_instance_placement(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyInstancePlacement">>, Input, Options).

%% @doc Modify the configurations of an IPAM.
-spec modify_ipam(aws_client:aws_client(), modify_ipam_request()) ->
    {ok, modify_ipam_result(), tuple()} |
    {error, any()}.
modify_ipam(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_ipam(Client, Input, []).

-spec modify_ipam(aws_client:aws_client(), modify_ipam_request(), proplists:proplist()) ->
    {ok, modify_ipam_result(), tuple()} |
    {error, any()}.
modify_ipam(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyIpam">>, Input, Options).

%% @doc Modify the configurations of an IPAM pool.
%%
%% For more information, see Modify a pool:
%% https://docs.aws.amazon.com/vpc/latest/ipam/mod-pool-ipam.html in the
%% Amazon VPC IPAM User Guide.
-spec modify_ipam_pool(aws_client:aws_client(), modify_ipam_pool_request()) ->
    {ok, modify_ipam_pool_result(), tuple()} |
    {error, any()}.
modify_ipam_pool(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_ipam_pool(Client, Input, []).

-spec modify_ipam_pool(aws_client:aws_client(), modify_ipam_pool_request(), proplists:proplist()) ->
    {ok, modify_ipam_pool_result(), tuple()} |
    {error, any()}.
modify_ipam_pool(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyIpamPool">>, Input, Options).

%% @doc Modify a resource CIDR.
%%
%% You can use this action to transfer resource CIDRs between scopes and
%% ignore resource CIDRs that you do not want to manage. If set to false, the
%% resource will not be tracked for overlap, it cannot be auto-imported into
%% a pool, and it will be removed from any pool it has an allocation in.
%%
%% For more information, see Move resource CIDRs between scopes:
%% https://docs.aws.amazon.com/vpc/latest/ipam/move-resource-ipam.html and
%% Change the monitoring state of resource CIDRs:
%% https://docs.aws.amazon.com/vpc/latest/ipam/change-monitoring-state-ipam.html
%% in the Amazon VPC IPAM User Guide.
-spec modify_ipam_resource_cidr(aws_client:aws_client(), modify_ipam_resource_cidr_request()) ->
    {ok, modify_ipam_resource_cidr_result(), tuple()} |
    {error, any()}.
modify_ipam_resource_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_ipam_resource_cidr(Client, Input, []).

-spec modify_ipam_resource_cidr(aws_client:aws_client(), modify_ipam_resource_cidr_request(), proplists:proplist()) ->
    {ok, modify_ipam_resource_cidr_result(), tuple()} |
    {error, any()}.
modify_ipam_resource_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyIpamResourceCidr">>, Input, Options).

%% @doc Modifies a resource discovery.
%%
%% A resource discovery is an IPAM component that enables IPAM to manage and
%% monitor resources that belong to the owning account.
-spec modify_ipam_resource_discovery(aws_client:aws_client(), modify_ipam_resource_discovery_request()) ->
    {ok, modify_ipam_resource_discovery_result(), tuple()} |
    {error, any()}.
modify_ipam_resource_discovery(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_ipam_resource_discovery(Client, Input, []).

-spec modify_ipam_resource_discovery(aws_client:aws_client(), modify_ipam_resource_discovery_request(), proplists:proplist()) ->
    {ok, modify_ipam_resource_discovery_result(), tuple()} |
    {error, any()}.
modify_ipam_resource_discovery(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyIpamResourceDiscovery">>, Input, Options).

%% @doc Modify an IPAM scope.
-spec modify_ipam_scope(aws_client:aws_client(), modify_ipam_scope_request()) ->
    {ok, modify_ipam_scope_result(), tuple()} |
    {error, any()}.
modify_ipam_scope(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_ipam_scope(Client, Input, []).

-spec modify_ipam_scope(aws_client:aws_client(), modify_ipam_scope_request(), proplists:proplist()) ->
    {ok, modify_ipam_scope_result(), tuple()} |
    {error, any()}.
modify_ipam_scope(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyIpamScope">>, Input, Options).

%% @doc Modifies a launch template.
%%
%% You can specify which version of the launch template to
%% set as the default version. When launching an instance, the default
%% version applies when
%% a launch template version is not specified.
-spec modify_launch_template(aws_client:aws_client(), modify_launch_template_request()) ->
    {ok, modify_launch_template_result(), tuple()} |
    {error, any()}.
modify_launch_template(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_launch_template(Client, Input, []).

-spec modify_launch_template(aws_client:aws_client(), modify_launch_template_request(), proplists:proplist()) ->
    {ok, modify_launch_template_result(), tuple()} |
    {error, any()}.
modify_launch_template(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyLaunchTemplate">>, Input, Options).

%% @doc Modifies the specified local gateway route.
-spec modify_local_gateway_route(aws_client:aws_client(), modify_local_gateway_route_request()) ->
    {ok, modify_local_gateway_route_result(), tuple()} |
    {error, any()}.
modify_local_gateway_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_local_gateway_route(Client, Input, []).

-spec modify_local_gateway_route(aws_client:aws_client(), modify_local_gateway_route_request(), proplists:proplist()) ->
    {ok, modify_local_gateway_route_result(), tuple()} |
    {error, any()}.
modify_local_gateway_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyLocalGatewayRoute">>, Input, Options).

%% @doc Modifies the specified managed prefix list.
%%
%% Adding or removing entries in a prefix list creates a new version of the
%% prefix list.
%% Changing the name of the prefix list does not affect the version.
%%
%% If you specify a current version number that does not match the true
%% current version
%% number, the request fails.
-spec modify_managed_prefix_list(aws_client:aws_client(), modify_managed_prefix_list_request()) ->
    {ok, modify_managed_prefix_list_result(), tuple()} |
    {error, any()}.
modify_managed_prefix_list(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_managed_prefix_list(Client, Input, []).

-spec modify_managed_prefix_list(aws_client:aws_client(), modify_managed_prefix_list_request(), proplists:proplist()) ->
    {ok, modify_managed_prefix_list_result(), tuple()} |
    {error, any()}.
modify_managed_prefix_list(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyManagedPrefixList">>, Input, Options).

%% @doc Modifies the specified network interface attribute.
%%
%% You can specify only one attribute
%% at a time. You can use this action to attach and detach security groups
%% from an existing
%% EC2 instance.
-spec modify_network_interface_attribute(aws_client:aws_client(), modify_network_interface_attribute_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_network_interface_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_network_interface_attribute(Client, Input, []).

-spec modify_network_interface_attribute(aws_client:aws_client(), modify_network_interface_attribute_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_network_interface_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyNetworkInterfaceAttribute">>, Input, Options).

%% @doc Modifies the options for instance hostnames for the specified
%% instance.
-spec modify_private_dns_name_options(aws_client:aws_client(), modify_private_dns_name_options_request()) ->
    {ok, modify_private_dns_name_options_result(), tuple()} |
    {error, any()}.
modify_private_dns_name_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_private_dns_name_options(Client, Input, []).

-spec modify_private_dns_name_options(aws_client:aws_client(), modify_private_dns_name_options_request(), proplists:proplist()) ->
    {ok, modify_private_dns_name_options_result(), tuple()} |
    {error, any()}.
modify_private_dns_name_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyPrivateDnsNameOptions">>, Input, Options).

%% @doc Modify public hostname options for a network interface.
%%
%% For more information, see EC2 instance hostnames, DNS names, and domains:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-naming.html
%% in the Amazon EC2 User Guide.
-spec modify_public_ip_dns_name_options(aws_client:aws_client(), modify_public_ip_dns_name_options_request()) ->
    {ok, modify_public_ip_dns_name_options_result(), tuple()} |
    {error, any()}.
modify_public_ip_dns_name_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_public_ip_dns_name_options(Client, Input, []).

-spec modify_public_ip_dns_name_options(aws_client:aws_client(), modify_public_ip_dns_name_options_request(), proplists:proplist()) ->
    {ok, modify_public_ip_dns_name_options_result(), tuple()} |
    {error, any()}.
modify_public_ip_dns_name_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyPublicIpDnsNameOptions">>, Input, Options).

%% @doc Modifies the configuration of your Reserved Instances, such as the
%% Availability Zone,
%% instance count, or instance type.
%%
%% The Reserved Instances to be modified must be identical,
%% except for Availability Zone, network platform, and instance type.
%%
%% For more information, see Modify Reserved Instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html in
%% the
%% Amazon EC2 User Guide.
-spec modify_reserved_instances(aws_client:aws_client(), modify_reserved_instances_request()) ->
    {ok, modify_reserved_instances_result(), tuple()} |
    {error, any()}.
modify_reserved_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_reserved_instances(Client, Input, []).

-spec modify_reserved_instances(aws_client:aws_client(), modify_reserved_instances_request(), proplists:proplist()) ->
    {ok, modify_reserved_instances_result(), tuple()} |
    {error, any()}.
modify_reserved_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyReservedInstances">>, Input, Options).

%% @doc Modifies the configuration of an existing route server.
%%
%% Amazon VPC Route Server simplifies routing for traffic between workloads
%% that are deployed within a VPC and its internet gateways. With this
%% feature,
%% VPC Route Server dynamically updates VPC and internet gateway route tables
%% with your preferred IPv4 or IPv6 routes to achieve routing fault tolerance
%% for those workloads. This enables you to automatically reroute traffic
%% within a VPC, which increases the manageability of VPC routing and
%% interoperability with third-party workloads.
%%
%% Route server supports the follow route table types:
%%
%% VPC route tables not associated with subnets
%%
%% Subnet route tables
%%
%% Internet gateway route tables
%%
%% Route server does not support route tables associated with virtual private
%% gateways. To propagate routes into a transit gateway route table, use
%% Transit Gateway Connect:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-connect.html.
%%
%% For more information see Dynamic routing in your VPC with VPC Route
%% Server:
%% https://docs.aws.amazon.com/vpc/latest/userguide/dynamic-routing-route-server.html
%% in the Amazon VPC User Guide.
-spec modify_route_server(aws_client:aws_client(), modify_route_server_request()) ->
    {ok, modify_route_server_result(), tuple()} |
    {error, any()}.
modify_route_server(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_route_server(Client, Input, []).

-spec modify_route_server(aws_client:aws_client(), modify_route_server_request(), proplists:proplist()) ->
    {ok, modify_route_server_result(), tuple()} |
    {error, any()}.
modify_route_server(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyRouteServer">>, Input, Options).

%% @doc Modifies the rules of a security group.
-spec modify_security_group_rules(aws_client:aws_client(), modify_security_group_rules_request()) ->
    {ok, modify_security_group_rules_result(), tuple()} |
    {error, any()}.
modify_security_group_rules(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_security_group_rules(Client, Input, []).

-spec modify_security_group_rules(aws_client:aws_client(), modify_security_group_rules_request(), proplists:proplist()) ->
    {ok, modify_security_group_rules_result(), tuple()} |
    {error, any()}.
modify_security_group_rules(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifySecurityGroupRules">>, Input, Options).

%% @doc Adds or removes permission settings for the specified snapshot.
%%
%% You may add or remove
%% specified Amazon Web Services account IDs from a snapshot's list of
%% create volume permissions, but you cannot
%% do both in a single operation. If you need to both add and remove account
%% IDs for a snapshot,
%% you must use multiple operations. You can make up to 500 modifications to
%% a snapshot in a single operation.
%%
%% Encrypted snapshots and snapshots with Amazon Web Services Marketplace
%% product codes cannot be made
%% public. Snapshots encrypted with your default KMS key cannot be shared
%% with other accounts.
%%
%% For more information about modifying snapshot permissions, see Share a
%% snapshot:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-modifying-snapshot-permissions.html
%% in the
%% Amazon EBS User Guide.
-spec modify_snapshot_attribute(aws_client:aws_client(), modify_snapshot_attribute_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_snapshot_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_snapshot_attribute(Client, Input, []).

-spec modify_snapshot_attribute(aws_client:aws_client(), modify_snapshot_attribute_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_snapshot_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifySnapshotAttribute">>, Input, Options).

%% @doc Archives an Amazon EBS snapshot.
%%
%% When you archive a snapshot, it is converted to a full
%% snapshot that includes all of the blocks of data that were written to the
%% volume at the
%% time the snapshot was created, and moved from the standard tier to the
%% archive
%% tier. For more information, see Archive Amazon EBS snapshots:
%% https://docs.aws.amazon.com/ebs/latest/userguide/snapshot-archive.html
%% in the Amazon EBS User Guide.
-spec modify_snapshot_tier(aws_client:aws_client(), modify_snapshot_tier_request()) ->
    {ok, modify_snapshot_tier_result(), tuple()} |
    {error, any()}.
modify_snapshot_tier(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_snapshot_tier(Client, Input, []).

-spec modify_snapshot_tier(aws_client:aws_client(), modify_snapshot_tier_request(), proplists:proplist()) ->
    {ok, modify_snapshot_tier_result(), tuple()} |
    {error, any()}.
modify_snapshot_tier(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifySnapshotTier">>, Input, Options).

%% @doc Modifies the specified Spot Fleet request.
%%
%% You can only modify a Spot Fleet request of type `maintain'.
%%
%% While the Spot Fleet request is being modified, it is in the
%% `modifying'
%% state.
%%
%% To scale up your Spot Fleet, increase its target capacity. The Spot Fleet
%% launches the
%% additional Spot Instances according to the allocation strategy for the
%% Spot Fleet
%% request. If the allocation strategy is `lowestPrice', the Spot Fleet
%% launches
%% instances using the Spot Instance pool with the lowest price. If the
%% allocation strategy
%% is `diversified', the Spot Fleet distributes the instances across the
%% Spot
%% Instance pools. If the allocation strategy is `capacityOptimized',
%% Spot Fleet
%% launches instances from Spot Instance pools with optimal capacity for the
%% number of instances
%% that are launching.
%%
%% To scale down your Spot Fleet, decrease its target capacity. First, the
%% Spot Fleet
%% cancels any open requests that exceed the new target capacity. You can
%% request that the
%% Spot Fleet terminate Spot Instances until the size of the fleet no longer
%% exceeds the
%% new target capacity. If the allocation strategy is `lowestPrice', the
%% Spot
%% Fleet terminates the instances with the highest price per unit. If the
%% allocation
%% strategy is `capacityOptimized', the Spot Fleet terminates the
%% instances in
%% the Spot Instance pools that have the least available Spot Instance
%% capacity. If the allocation
%% strategy is `diversified', the Spot Fleet terminates instances across
%% the
%% Spot Instance pools. Alternatively, you can request that the Spot Fleet
%% keep the fleet
%% at its current size, but not replace any Spot Instances that are
%% interrupted or that you
%% terminate manually.
%%
%% If you are finished with your Spot Fleet for now, but will use it again
%% later, you can
%% set the target capacity to 0.
-spec modify_spot_fleet_request(aws_client:aws_client(), modify_spot_fleet_request_request()) ->
    {ok, modify_spot_fleet_request_response(), tuple()} |
    {error, any()}.
modify_spot_fleet_request(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_spot_fleet_request(Client, Input, []).

-spec modify_spot_fleet_request(aws_client:aws_client(), modify_spot_fleet_request_request(), proplists:proplist()) ->
    {ok, modify_spot_fleet_request_response(), tuple()} |
    {error, any()}.
modify_spot_fleet_request(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifySpotFleetRequest">>, Input, Options).

%% @doc Modifies a subnet attribute.
%%
%% You can only modify one attribute at a time.
%%
%% Use this action to modify subnets on Amazon Web Services Outposts.
%%
%% To modify a subnet on an Outpost rack, set both
%% `MapCustomerOwnedIpOnLaunch' and
%% `CustomerOwnedIpv4Pool'. These two parameters act as a single
%% attribute.
%%
%% To modify a subnet on an Outpost server, set either
%% `EnableLniAtDeviceIndex' or
%% `DisableLniAtDeviceIndex'.
%%
%% For more information about Amazon Web Services Outposts, see the
%% following:
%%
%% Outpost servers:
%% https://docs.aws.amazon.com/outposts/latest/userguide/how-servers-work.html
%%
%% Outpost racks:
%% https://docs.aws.amazon.com/outposts/latest/userguide/how-racks-work.html
-spec modify_subnet_attribute(aws_client:aws_client(), modify_subnet_attribute_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_subnet_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_subnet_attribute(Client, Input, []).

-spec modify_subnet_attribute(aws_client:aws_client(), modify_subnet_attribute_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_subnet_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifySubnetAttribute">>, Input, Options).

%% @doc Allows or restricts mirroring network services.
%%
%% By default, Amazon DNS network services are not eligible for Traffic
%% Mirror. Use `AddNetworkServices' to add network services to a Traffic
%% Mirror filter. When a network service is added to the Traffic Mirror
%% filter, all traffic related to that network service will be mirrored.
%% When you no longer want to mirror network services, use
%% `RemoveNetworkServices' to remove the network services from the
%% Traffic Mirror filter.
-spec modify_traffic_mirror_filter_network_services(aws_client:aws_client(), modify_traffic_mirror_filter_network_services_request()) ->
    {ok, modify_traffic_mirror_filter_network_services_result(), tuple()} |
    {error, any()}.
modify_traffic_mirror_filter_network_services(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_traffic_mirror_filter_network_services(Client, Input, []).

-spec modify_traffic_mirror_filter_network_services(aws_client:aws_client(), modify_traffic_mirror_filter_network_services_request(), proplists:proplist()) ->
    {ok, modify_traffic_mirror_filter_network_services_result(), tuple()} |
    {error, any()}.
modify_traffic_mirror_filter_network_services(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyTrafficMirrorFilterNetworkServices">>, Input, Options).

%% @doc Modifies the specified Traffic Mirror rule.
%%
%% `DestinationCidrBlock' and `SourceCidrBlock' must both be an IPv4
%% range or an IPv6 range.
-spec modify_traffic_mirror_filter_rule(aws_client:aws_client(), modify_traffic_mirror_filter_rule_request()) ->
    {ok, modify_traffic_mirror_filter_rule_result(), tuple()} |
    {error, any()}.
modify_traffic_mirror_filter_rule(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_traffic_mirror_filter_rule(Client, Input, []).

-spec modify_traffic_mirror_filter_rule(aws_client:aws_client(), modify_traffic_mirror_filter_rule_request(), proplists:proplist()) ->
    {ok, modify_traffic_mirror_filter_rule_result(), tuple()} |
    {error, any()}.
modify_traffic_mirror_filter_rule(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyTrafficMirrorFilterRule">>, Input, Options).

%% @doc Modifies a Traffic Mirror session.
-spec modify_traffic_mirror_session(aws_client:aws_client(), modify_traffic_mirror_session_request()) ->
    {ok, modify_traffic_mirror_session_result(), tuple()} |
    {error, any()}.
modify_traffic_mirror_session(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_traffic_mirror_session(Client, Input, []).

-spec modify_traffic_mirror_session(aws_client:aws_client(), modify_traffic_mirror_session_request(), proplists:proplist()) ->
    {ok, modify_traffic_mirror_session_result(), tuple()} |
    {error, any()}.
modify_traffic_mirror_session(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyTrafficMirrorSession">>, Input, Options).

%% @doc Modifies the specified transit gateway.
%%
%% When you modify a transit gateway, the modified options are applied to new
%% transit gateway attachments only. Your existing transit gateway
%% attachments are not modified.
-spec modify_transit_gateway(aws_client:aws_client(), modify_transit_gateway_request()) ->
    {ok, modify_transit_gateway_result(), tuple()} |
    {error, any()}.
modify_transit_gateway(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_transit_gateway(Client, Input, []).

-spec modify_transit_gateway(aws_client:aws_client(), modify_transit_gateway_request(), proplists:proplist()) ->
    {ok, modify_transit_gateway_result(), tuple()} |
    {error, any()}.
modify_transit_gateway(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyTransitGateway">>, Input, Options).

%% @doc Modifies a reference (route) to a prefix list in a specified transit
%% gateway route table.
-spec modify_transit_gateway_prefix_list_reference(aws_client:aws_client(), modify_transit_gateway_prefix_list_reference_request()) ->
    {ok, modify_transit_gateway_prefix_list_reference_result(), tuple()} |
    {error, any()}.
modify_transit_gateway_prefix_list_reference(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_transit_gateway_prefix_list_reference(Client, Input, []).

-spec modify_transit_gateway_prefix_list_reference(aws_client:aws_client(), modify_transit_gateway_prefix_list_reference_request(), proplists:proplist()) ->
    {ok, modify_transit_gateway_prefix_list_reference_result(), tuple()} |
    {error, any()}.
modify_transit_gateway_prefix_list_reference(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyTransitGatewayPrefixListReference">>, Input, Options).

%% @doc Modifies the specified VPC attachment.
-spec modify_transit_gateway_vpc_attachment(aws_client:aws_client(), modify_transit_gateway_vpc_attachment_request()) ->
    {ok, modify_transit_gateway_vpc_attachment_result(), tuple()} |
    {error, any()}.
modify_transit_gateway_vpc_attachment(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_transit_gateway_vpc_attachment(Client, Input, []).

-spec modify_transit_gateway_vpc_attachment(aws_client:aws_client(), modify_transit_gateway_vpc_attachment_request(), proplists:proplist()) ->
    {ok, modify_transit_gateway_vpc_attachment_result(), tuple()} |
    {error, any()}.
modify_transit_gateway_vpc_attachment(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyTransitGatewayVpcAttachment">>, Input, Options).

%% @doc Modifies the configuration of the specified Amazon Web Services
%% Verified Access endpoint.
-spec modify_verified_access_endpoint(aws_client:aws_client(), modify_verified_access_endpoint_request()) ->
    {ok, modify_verified_access_endpoint_result(), tuple()} |
    {error, any()}.
modify_verified_access_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_verified_access_endpoint(Client, Input, []).

-spec modify_verified_access_endpoint(aws_client:aws_client(), modify_verified_access_endpoint_request(), proplists:proplist()) ->
    {ok, modify_verified_access_endpoint_result(), tuple()} |
    {error, any()}.
modify_verified_access_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVerifiedAccessEndpoint">>, Input, Options).

%% @doc Modifies the specified Amazon Web Services Verified Access endpoint
%% policy.
-spec modify_verified_access_endpoint_policy(aws_client:aws_client(), modify_verified_access_endpoint_policy_request()) ->
    {ok, modify_verified_access_endpoint_policy_result(), tuple()} |
    {error, any()}.
modify_verified_access_endpoint_policy(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_verified_access_endpoint_policy(Client, Input, []).

-spec modify_verified_access_endpoint_policy(aws_client:aws_client(), modify_verified_access_endpoint_policy_request(), proplists:proplist()) ->
    {ok, modify_verified_access_endpoint_policy_result(), tuple()} |
    {error, any()}.
modify_verified_access_endpoint_policy(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVerifiedAccessEndpointPolicy">>, Input, Options).

%% @doc Modifies the specified Amazon Web Services Verified Access group
%% configuration.
-spec modify_verified_access_group(aws_client:aws_client(), modify_verified_access_group_request()) ->
    {ok, modify_verified_access_group_result(), tuple()} |
    {error, any()}.
modify_verified_access_group(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_verified_access_group(Client, Input, []).

-spec modify_verified_access_group(aws_client:aws_client(), modify_verified_access_group_request(), proplists:proplist()) ->
    {ok, modify_verified_access_group_result(), tuple()} |
    {error, any()}.
modify_verified_access_group(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVerifiedAccessGroup">>, Input, Options).

%% @doc Modifies the specified Amazon Web Services Verified Access group
%% policy.
-spec modify_verified_access_group_policy(aws_client:aws_client(), modify_verified_access_group_policy_request()) ->
    {ok, modify_verified_access_group_policy_result(), tuple()} |
    {error, any()}.
modify_verified_access_group_policy(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_verified_access_group_policy(Client, Input, []).

-spec modify_verified_access_group_policy(aws_client:aws_client(), modify_verified_access_group_policy_request(), proplists:proplist()) ->
    {ok, modify_verified_access_group_policy_result(), tuple()} |
    {error, any()}.
modify_verified_access_group_policy(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVerifiedAccessGroupPolicy">>, Input, Options).

%% @doc Modifies the configuration of the specified Amazon Web Services
%% Verified Access instance.
-spec modify_verified_access_instance(aws_client:aws_client(), modify_verified_access_instance_request()) ->
    {ok, modify_verified_access_instance_result(), tuple()} |
    {error, any()}.
modify_verified_access_instance(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_verified_access_instance(Client, Input, []).

-spec modify_verified_access_instance(aws_client:aws_client(), modify_verified_access_instance_request(), proplists:proplist()) ->
    {ok, modify_verified_access_instance_result(), tuple()} |
    {error, any()}.
modify_verified_access_instance(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVerifiedAccessInstance">>, Input, Options).

%% @doc Modifies the logging configuration for the specified Amazon Web
%% Services Verified Access instance.
-spec modify_verified_access_instance_logging_configuration(aws_client:aws_client(), modify_verified_access_instance_logging_configuration_request()) ->
    {ok, modify_verified_access_instance_logging_configuration_result(), tuple()} |
    {error, any()}.
modify_verified_access_instance_logging_configuration(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_verified_access_instance_logging_configuration(Client, Input, []).

-spec modify_verified_access_instance_logging_configuration(aws_client:aws_client(), modify_verified_access_instance_logging_configuration_request(), proplists:proplist()) ->
    {ok, modify_verified_access_instance_logging_configuration_result(), tuple()} |
    {error, any()}.
modify_verified_access_instance_logging_configuration(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVerifiedAccessInstanceLoggingConfiguration">>, Input, Options).

%% @doc Modifies the configuration of the specified Amazon Web Services
%% Verified Access trust provider.
-spec modify_verified_access_trust_provider(aws_client:aws_client(), modify_verified_access_trust_provider_request()) ->
    {ok, modify_verified_access_trust_provider_result(), tuple()} |
    {error, any()}.
modify_verified_access_trust_provider(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_verified_access_trust_provider(Client, Input, []).

-spec modify_verified_access_trust_provider(aws_client:aws_client(), modify_verified_access_trust_provider_request(), proplists:proplist()) ->
    {ok, modify_verified_access_trust_provider_result(), tuple()} |
    {error, any()}.
modify_verified_access_trust_provider(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVerifiedAccessTrustProvider">>, Input, Options).

%% @doc You can modify several parameters of an existing EBS volume,
%% including volume size, volume
%% type, and IOPS capacity.
%%
%% If your EBS volume is attached to a current-generation EC2 instance
%% type, you might be able to apply these changes without stopping the
%% instance or detaching the
%% volume from it. For more information about modifying EBS volumes, see
%% Amazon EBS Elastic Volumes:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-modify-volume.html
%% in the Amazon EBS User Guide.
%%
%% When you complete a resize operation on your volume, you need to extend
%% the volume's
%% file-system size to take advantage of the new storage capacity. For more
%% information, see Extend the file system:
%% https://docs.aws.amazon.com/ebs/latest/userguide/recognize-expanded-volume-linux.html.
%%
%% For more information, see Monitor the progress of volume modifications:
%% https://docs.aws.amazon.com/ebs/latest/userguide/monitoring-volume-modifications.html
%% in the Amazon EBS User Guide.
%%
%% With previous-generation instance types, resizing an EBS volume might
%% require detaching and
%% reattaching the volume or stopping and restarting the instance.
%%
%% After modifying a volume, you must wait at least six hours and ensure that
%% the volume
%% is in the `in-use' or `available' state before you can modify the
%% same
%% volume. This is sometimes referred to as a cooldown period.
-spec modify_volume(aws_client:aws_client(), modify_volume_request()) ->
    {ok, modify_volume_result(), tuple()} |
    {error, any()}.
modify_volume(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_volume(Client, Input, []).

-spec modify_volume(aws_client:aws_client(), modify_volume_request(), proplists:proplist()) ->
    {ok, modify_volume_result(), tuple()} |
    {error, any()}.
modify_volume(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVolume">>, Input, Options).

%% @doc Modifies a volume attribute.
%%
%% By default, all I/O operations for the volume are suspended when the data
%% on the volume is
%% determined to be potentially inconsistent, to prevent undetectable, latent
%% data corruption.
%% The I/O access to the volume can be resumed by first enabling I/O access
%% and then checking the
%% data consistency on your volume.
%%
%% You can change the default behavior to resume I/O operations. We recommend
%% that you change
%% this only for boot volumes or for volumes that are stateless or
%% disposable.
-spec modify_volume_attribute(aws_client:aws_client(), modify_volume_attribute_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_volume_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_volume_attribute(Client, Input, []).

-spec modify_volume_attribute(aws_client:aws_client(), modify_volume_attribute_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_volume_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVolumeAttribute">>, Input, Options).

%% @doc Modifies the specified attribute of the specified VPC.
-spec modify_vpc_attribute(aws_client:aws_client(), modify_vpc_attribute_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_vpc_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpc_attribute(Client, Input, []).

-spec modify_vpc_attribute(aws_client:aws_client(), modify_vpc_attribute_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
modify_vpc_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpcAttribute">>, Input, Options).

%% @doc Modify VPC Block Public Access (BPA) exclusions.
%%
%% A VPC BPA exclusion is a mode that can be applied to a single VPC or
%% subnet that exempts it from the account’s BPA mode and will allow
%% bidirectional or egress-only access. You can create BPA exclusions for
%% VPCs and subnets even when BPA is not enabled on the account to ensure
%% that there is no traffic disruption to the exclusions when VPC BPA is
%% turned on.
-spec modify_vpc_block_public_access_exclusion(aws_client:aws_client(), modify_vpc_block_public_access_exclusion_request()) ->
    {ok, modify_vpc_block_public_access_exclusion_result(), tuple()} |
    {error, any()}.
modify_vpc_block_public_access_exclusion(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpc_block_public_access_exclusion(Client, Input, []).

-spec modify_vpc_block_public_access_exclusion(aws_client:aws_client(), modify_vpc_block_public_access_exclusion_request(), proplists:proplist()) ->
    {ok, modify_vpc_block_public_access_exclusion_result(), tuple()} |
    {error, any()}.
modify_vpc_block_public_access_exclusion(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpcBlockPublicAccessExclusion">>, Input, Options).

%% @doc Modify VPC Block Public Access (BPA) options.
%%
%% VPC Block Public Access (BPA) enables you to block resources in VPCs and
%% subnets that you own in a Region from reaching or being reached from the
%% internet through internet gateways and egress-only internet gateways. To
%% learn more about VPC BPA, see Block public access to VPCs and subnets:
%% https://docs.aws.amazon.com/vpc/latest/userguide/security-vpc-bpa.html in
%% the Amazon VPC User Guide.
-spec modify_vpc_block_public_access_options(aws_client:aws_client(), modify_vpc_block_public_access_options_request()) ->
    {ok, modify_vpc_block_public_access_options_result(), tuple()} |
    {error, any()}.
modify_vpc_block_public_access_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpc_block_public_access_options(Client, Input, []).

-spec modify_vpc_block_public_access_options(aws_client:aws_client(), modify_vpc_block_public_access_options_request(), proplists:proplist()) ->
    {ok, modify_vpc_block_public_access_options_result(), tuple()} |
    {error, any()}.
modify_vpc_block_public_access_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpcBlockPublicAccessOptions">>, Input, Options).

%% @doc Modifies attributes of a specified VPC endpoint.
%%
%% The attributes that you can modify
%% depend on the type of VPC endpoint (interface, gateway, or Gateway Load
%% Balancer). For more information,
%% see the Amazon Web Services PrivateLink
%% Guide: https://docs.aws.amazon.com/vpc/latest/privatelink/.
-spec modify_vpc_endpoint(aws_client:aws_client(), modify_vpc_endpoint_request()) ->
    {ok, modify_vpc_endpoint_result(), tuple()} |
    {error, any()}.
modify_vpc_endpoint(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpc_endpoint(Client, Input, []).

-spec modify_vpc_endpoint(aws_client:aws_client(), modify_vpc_endpoint_request(), proplists:proplist()) ->
    {ok, modify_vpc_endpoint_result(), tuple()} |
    {error, any()}.
modify_vpc_endpoint(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpcEndpoint">>, Input, Options).

%% @doc Modifies a connection notification for VPC endpoint or VPC endpoint
%% service.
%%
%% You
%% can change the SNS topic for the notification, or the events for which to
%% be notified.
-spec modify_vpc_endpoint_connection_notification(aws_client:aws_client(), modify_vpc_endpoint_connection_notification_request()) ->
    {ok, modify_vpc_endpoint_connection_notification_result(), tuple()} |
    {error, any()}.
modify_vpc_endpoint_connection_notification(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpc_endpoint_connection_notification(Client, Input, []).

-spec modify_vpc_endpoint_connection_notification(aws_client:aws_client(), modify_vpc_endpoint_connection_notification_request(), proplists:proplist()) ->
    {ok, modify_vpc_endpoint_connection_notification_result(), tuple()} |
    {error, any()}.
modify_vpc_endpoint_connection_notification(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpcEndpointConnectionNotification">>, Input, Options).

%% @doc Modifies the attributes of the specified VPC endpoint service
%% configuration.
%%
%% If you set or modify the private DNS name, you must prove that you own the
%% private DNS
%% domain name.
-spec modify_vpc_endpoint_service_configuration(aws_client:aws_client(), modify_vpc_endpoint_service_configuration_request()) ->
    {ok, modify_vpc_endpoint_service_configuration_result(), tuple()} |
    {error, any()}.
modify_vpc_endpoint_service_configuration(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpc_endpoint_service_configuration(Client, Input, []).

-spec modify_vpc_endpoint_service_configuration(aws_client:aws_client(), modify_vpc_endpoint_service_configuration_request(), proplists:proplist()) ->
    {ok, modify_vpc_endpoint_service_configuration_result(), tuple()} |
    {error, any()}.
modify_vpc_endpoint_service_configuration(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpcEndpointServiceConfiguration">>, Input, Options).

%% @doc Modifies the payer responsibility for your VPC endpoint service.
-spec modify_vpc_endpoint_service_payer_responsibility(aws_client:aws_client(), modify_vpc_endpoint_service_payer_responsibility_request()) ->
    {ok, modify_vpc_endpoint_service_payer_responsibility_result(), tuple()} |
    {error, any()}.
modify_vpc_endpoint_service_payer_responsibility(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpc_endpoint_service_payer_responsibility(Client, Input, []).

-spec modify_vpc_endpoint_service_payer_responsibility(aws_client:aws_client(), modify_vpc_endpoint_service_payer_responsibility_request(), proplists:proplist()) ->
    {ok, modify_vpc_endpoint_service_payer_responsibility_result(), tuple()} |
    {error, any()}.
modify_vpc_endpoint_service_payer_responsibility(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpcEndpointServicePayerResponsibility">>, Input, Options).

%% @doc Modifies the permissions for your VPC endpoint service.
%%
%% You can add or remove permissions
%% for service consumers (Amazon Web Services accounts, users, and IAM roles)
%% to connect to
%% your endpoint service. Principal ARNs with path components aren't
%% supported.
%%
%% If you grant permissions to all principals, the service is public. Any
%% users who know the name of a
%% public service can send a request to attach an endpoint. If the service
%% does not require manual approval,
%% attachments are automatically approved.
-spec modify_vpc_endpoint_service_permissions(aws_client:aws_client(), modify_vpc_endpoint_service_permissions_request()) ->
    {ok, modify_vpc_endpoint_service_permissions_result(), tuple()} |
    {error, any()}.
modify_vpc_endpoint_service_permissions(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpc_endpoint_service_permissions(Client, Input, []).

-spec modify_vpc_endpoint_service_permissions(aws_client:aws_client(), modify_vpc_endpoint_service_permissions_request(), proplists:proplist()) ->
    {ok, modify_vpc_endpoint_service_permissions_result(), tuple()} |
    {error, any()}.
modify_vpc_endpoint_service_permissions(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpcEndpointServicePermissions">>, Input, Options).

%% @doc Modifies the VPC peering connection options on one side of a VPC
%% peering connection.
%%
%% If the peered VPCs are in the same Amazon Web Services account, you can
%% enable DNS
%% resolution for queries from the local VPC. This ensures that queries from
%% the local VPC
%% resolve to private IP addresses in the peer VPC. This option is not
%% available if the
%% peered VPCs are in different Amazon Web Services accounts or different
%% Regions. For
%% peered VPCs in different Amazon Web Services accounts, each Amazon Web
%% Services account
%% owner must initiate a separate request to modify the peering connection
%% options. For
%% inter-region peering connections, you must use the Region for the
%% requester VPC to
%% modify the requester VPC peering options and the Region for the accepter
%% VPC to modify
%% the accepter VPC peering options. To verify which VPCs are the accepter
%% and the
%% requester for a VPC peering connection, use the
%% `DescribeVpcPeeringConnections' command.
-spec modify_vpc_peering_connection_options(aws_client:aws_client(), modify_vpc_peering_connection_options_request()) ->
    {ok, modify_vpc_peering_connection_options_result(), tuple()} |
    {error, any()}.
modify_vpc_peering_connection_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpc_peering_connection_options(Client, Input, []).

-spec modify_vpc_peering_connection_options(aws_client:aws_client(), modify_vpc_peering_connection_options_request(), proplists:proplist()) ->
    {ok, modify_vpc_peering_connection_options_result(), tuple()} |
    {error, any()}.
modify_vpc_peering_connection_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpcPeeringConnectionOptions">>, Input, Options).

%% @doc Modifies the instance tenancy attribute of the specified VPC.
%%
%% You can change the
%% instance tenancy attribute of a VPC to `default' only. You cannot
%% change the
%% instance tenancy attribute to `dedicated'.
%%
%% After you modify the tenancy of the VPC, any new instances that you launch
%% into the
%% VPC have a tenancy of `default', unless you specify otherwise during
%% launch.
%% The tenancy of any existing instances in the VPC is not affected.
%%
%% For more information, see Dedicated Instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/dedicated-instance.html
%% in the
%% Amazon EC2 User Guide.
-spec modify_vpc_tenancy(aws_client:aws_client(), modify_vpc_tenancy_request()) ->
    {ok, modify_vpc_tenancy_result(), tuple()} |
    {error, any()}.
modify_vpc_tenancy(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpc_tenancy(Client, Input, []).

-spec modify_vpc_tenancy(aws_client:aws_client(), modify_vpc_tenancy_request(), proplists:proplist()) ->
    {ok, modify_vpc_tenancy_result(), tuple()} |
    {error, any()}.
modify_vpc_tenancy(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpcTenancy">>, Input, Options).

%% @doc Modifies the customer gateway or the target gateway of an Amazon Web
%% Services Site-to-Site VPN connection.
%%
%% To
%% modify the target gateway, the following migration options are available:
%%
%% An existing virtual private gateway to a new virtual private gateway
%%
%% An existing virtual private gateway to a transit gateway
%%
%% An existing transit gateway to a new transit gateway
%%
%% An existing transit gateway to a virtual private gateway
%%
%% Before you perform the migration to the new gateway, you must configure
%% the new
%% gateway. Use `CreateVpnGateway' to create a virtual private gateway,
%% or
%% `CreateTransitGateway' to create a transit gateway.
%%
%% This step is required when you migrate from a virtual private gateway with
%% static
%% routes to a transit gateway.
%%
%% You must delete the static routes before you migrate to the new gateway.
%%
%% Keep a copy of the static route before you delete it. You will need to add
%% back these
%% routes to the transit gateway after the VPN connection migration is
%% complete.
%%
%% After you migrate to the new gateway, you might need to modify your VPC
%% route table.
%% Use `CreateRoute' and `DeleteRoute' to make the changes
%% described in Update VPC route
%% tables:
%% https://docs.aws.amazon.com/vpn/latest/s2svpn/modify-vpn-target.html#step-update-routing
%% in the Amazon Web Services Site-to-Site VPN User Guide.
%%
%% When the new gateway is a transit gateway, modify the transit gateway
%% route table to
%% allow traffic between the VPC and the Amazon Web Services Site-to-Site VPN
%% connection.
%% Use `CreateTransitGatewayRoute' to add the routes.
%%
%% If you deleted VPN static routes, you must add the static routes to the
%% transit
%% gateway route table.
%%
%% After you perform this operation, the VPN endpoint's IP addresses on
%% the Amazon Web Services side and the tunnel options remain intact. Your
%% Amazon Web Services Site-to-Site VPN connection will
%% be temporarily unavailable for a brief period while we provision the new
%% endpoints.
-spec modify_vpn_connection(aws_client:aws_client(), modify_vpn_connection_request()) ->
    {ok, modify_vpn_connection_result(), tuple()} |
    {error, any()}.
modify_vpn_connection(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpn_connection(Client, Input, []).

-spec modify_vpn_connection(aws_client:aws_client(), modify_vpn_connection_request(), proplists:proplist()) ->
    {ok, modify_vpn_connection_result(), tuple()} |
    {error, any()}.
modify_vpn_connection(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpnConnection">>, Input, Options).

%% @doc Modifies the connection options for your Site-to-Site VPN connection.
%%
%% When you modify the VPN connection options, the VPN endpoint IP addresses
%% on the
%% Amazon Web Services side do not change, and the tunnel options do not
%% change. Your
%% VPN connection will be temporarily unavailable for a brief period while
%% the VPN
%% connection is updated.
-spec modify_vpn_connection_options(aws_client:aws_client(), modify_vpn_connection_options_request()) ->
    {ok, modify_vpn_connection_options_result(), tuple()} |
    {error, any()}.
modify_vpn_connection_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpn_connection_options(Client, Input, []).

-spec modify_vpn_connection_options(aws_client:aws_client(), modify_vpn_connection_options_request(), proplists:proplist()) ->
    {ok, modify_vpn_connection_options_result(), tuple()} |
    {error, any()}.
modify_vpn_connection_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpnConnectionOptions">>, Input, Options).

%% @doc Modifies the VPN tunnel endpoint certificate.
-spec modify_vpn_tunnel_certificate(aws_client:aws_client(), modify_vpn_tunnel_certificate_request()) ->
    {ok, modify_vpn_tunnel_certificate_result(), tuple()} |
    {error, any()}.
modify_vpn_tunnel_certificate(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpn_tunnel_certificate(Client, Input, []).

-spec modify_vpn_tunnel_certificate(aws_client:aws_client(), modify_vpn_tunnel_certificate_request(), proplists:proplist()) ->
    {ok, modify_vpn_tunnel_certificate_result(), tuple()} |
    {error, any()}.
modify_vpn_tunnel_certificate(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpnTunnelCertificate">>, Input, Options).

%% @doc Modifies the options for a VPN tunnel in an Amazon Web Services
%% Site-to-Site VPN connection.
%%
%% You can modify
%% multiple options for a tunnel in a single request, but you can only modify
%% one tunnel at
%% a time. For more information, see Site-to-Site VPN tunnel options for your
%% Site-to-Site VPN
%% connection: https://docs.aws.amazon.com/vpn/latest/s2svpn/VPNTunnels.html
%% in the Amazon Web Services Site-to-Site VPN User Guide.
-spec modify_vpn_tunnel_options(aws_client:aws_client(), modify_vpn_tunnel_options_request()) ->
    {ok, modify_vpn_tunnel_options_result(), tuple()} |
    {error, any()}.
modify_vpn_tunnel_options(Client, Input)
  when is_map(Client), is_map(Input) ->
    modify_vpn_tunnel_options(Client, Input, []).

-spec modify_vpn_tunnel_options(aws_client:aws_client(), modify_vpn_tunnel_options_request(), proplists:proplist()) ->
    {ok, modify_vpn_tunnel_options_result(), tuple()} |
    {error, any()}.
modify_vpn_tunnel_options(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ModifyVpnTunnelOptions">>, Input, Options).

%% @doc Enables detailed monitoring for a running instance.
%%
%% Otherwise, basic monitoring is
%% enabled. For more information, see Monitor your instances using
%% CloudWatch:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html
%% in the Amazon EC2 User Guide.
%%
%% To disable detailed monitoring, see UnmonitorInstances:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_UnmonitorInstances.html.
-spec monitor_instances(aws_client:aws_client(), monitor_instances_request()) ->
    {ok, monitor_instances_result(), tuple()} |
    {error, any()}.
monitor_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    monitor_instances(Client, Input, []).

-spec monitor_instances(aws_client:aws_client(), monitor_instances_request(), proplists:proplist()) ->
    {ok, monitor_instances_result(), tuple()} |
    {error, any()}.
monitor_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"MonitorInstances">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Moves an Elastic IP address from the EC2-Classic platform to the EC2-VPC
%% platform. The
%% Elastic IP address must be allocated to your account for more than 24
%% hours, and it must not
%% be associated with an instance. After the Elastic IP address is moved, it
%% is no longer
%% available for use in the EC2-Classic platform. You cannot move an Elastic
%% IP address that was
%% originally allocated for use in the EC2-VPC platform to the EC2-Classic
%% platform.
-spec move_address_to_vpc(aws_client:aws_client(), move_address_to_vpc_request()) ->
    {ok, move_address_to_vpc_result(), tuple()} |
    {error, any()}.
move_address_to_vpc(Client, Input)
  when is_map(Client), is_map(Input) ->
    move_address_to_vpc(Client, Input, []).

-spec move_address_to_vpc(aws_client:aws_client(), move_address_to_vpc_request(), proplists:proplist()) ->
    {ok, move_address_to_vpc_result(), tuple()} |
    {error, any()}.
move_address_to_vpc(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"MoveAddressToVpc">>, Input, Options).

%% @doc Move a BYOIPv4 CIDR to IPAM from a public IPv4 pool.
%%
%% If you already have a BYOIPv4 CIDR with Amazon Web Services, you can move
%% the CIDR to IPAM from a public IPv4 pool. You cannot move an IPv6 CIDR to
%% IPAM. If you are bringing a new IP address to Amazon Web Services for the
%% first time, complete the steps in Tutorial: BYOIP address CIDRs to IPAM:
%% https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoip-ipam.html.
-spec move_byoip_cidr_to_ipam(aws_client:aws_client(), move_byoip_cidr_to_ipam_request()) ->
    {ok, move_byoip_cidr_to_ipam_result(), tuple()} |
    {error, any()}.
move_byoip_cidr_to_ipam(Client, Input)
  when is_map(Client), is_map(Input) ->
    move_byoip_cidr_to_ipam(Client, Input, []).

-spec move_byoip_cidr_to_ipam(aws_client:aws_client(), move_byoip_cidr_to_ipam_request(), proplists:proplist()) ->
    {ok, move_byoip_cidr_to_ipam_result(), tuple()} |
    {error, any()}.
move_byoip_cidr_to_ipam(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"MoveByoipCidrToIpam">>, Input, Options).

%% @doc Move available capacity from a source Capacity Reservation to a
%% destination Capacity
%% Reservation.
%%
%% The source Capacity Reservation and the destination Capacity Reservation
%% must be `active', owned by your Amazon Web Services account, and share
%% the following:
%%
%% Instance type
%%
%% Platform
%%
%% Availability Zone
%%
%% Tenancy
%%
%% Placement group
%%
%% Capacity Reservation end time - `At specific time' or
%% `Manually'.
-spec move_capacity_reservation_instances(aws_client:aws_client(), move_capacity_reservation_instances_request()) ->
    {ok, move_capacity_reservation_instances_result(), tuple()} |
    {error, any()}.
move_capacity_reservation_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    move_capacity_reservation_instances(Client, Input, []).

-spec move_capacity_reservation_instances(aws_client:aws_client(), move_capacity_reservation_instances_request(), proplists:proplist()) ->
    {ok, move_capacity_reservation_instances_result(), tuple()} |
    {error, any()}.
move_capacity_reservation_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"MoveCapacityReservationInstances">>, Input, Options).

%% @doc Provisions an IPv4 or IPv6 address range for use with your Amazon Web
%% Services resources through bring your own IP
%% addresses (BYOIP) and creates a corresponding address pool.
%%
%% After the address range is
%% provisioned, it is ready to be advertised.
%%
%% Amazon Web Services verifies that you own the address range and are
%% authorized to advertise it.
%% You must ensure that the address range is registered to you and that you
%% created an
%% RPKI ROA to authorize Amazon ASNs 16509 and 14618 to advertise the address
%% range.
%% For more information, see Bring your own IP addresses (BYOIP):
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-byoip.html in the
%% Amazon EC2 User Guide.
%%
%% Provisioning an address range is an asynchronous operation, so the call
%% returns immediately,
%% but the address range is not ready to use until its status changes from
%% `pending-provision'
%% to `provisioned'. For more information, see Onboard your address
%% range:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/byoip-onboard.html.
-spec provision_byoip_cidr(aws_client:aws_client(), provision_byoip_cidr_request()) ->
    {ok, provision_byoip_cidr_result(), tuple()} |
    {error, any()}.
provision_byoip_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    provision_byoip_cidr(Client, Input, []).

-spec provision_byoip_cidr(aws_client:aws_client(), provision_byoip_cidr_request(), proplists:proplist()) ->
    {ok, provision_byoip_cidr_result(), tuple()} |
    {error, any()}.
provision_byoip_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ProvisionByoipCidr">>, Input, Options).

%% @doc Provisions your Autonomous System Number (ASN) for use in your Amazon
%% Web Services account.
%%
%% This action requires authorization context for Amazon to bring the ASN to
%% an Amazon Web Services account. For more information, see Tutorial: Bring
%% your ASN to IPAM:
%% https://docs.aws.amazon.com/vpc/latest/ipam/tutorials-byoasn.html in the
%% Amazon VPC IPAM guide.
-spec provision_ipam_byoasn(aws_client:aws_client(), provision_ipam_byoasn_request()) ->
    {ok, provision_ipam_byoasn_result(), tuple()} |
    {error, any()}.
provision_ipam_byoasn(Client, Input)
  when is_map(Client), is_map(Input) ->
    provision_ipam_byoasn(Client, Input, []).

-spec provision_ipam_byoasn(aws_client:aws_client(), provision_ipam_byoasn_request(), proplists:proplist()) ->
    {ok, provision_ipam_byoasn_result(), tuple()} |
    {error, any()}.
provision_ipam_byoasn(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ProvisionIpamByoasn">>, Input, Options).

%% @doc Provision a CIDR to an IPAM pool.
%%
%% You can use this action to provision new CIDRs to a top-level pool or to
%% transfer a CIDR from a top-level pool to a pool within it.
%%
%% For more information, see Provision CIDRs to pools:
%% https://docs.aws.amazon.com/vpc/latest/ipam/prov-cidr-ipam.html in the
%% Amazon VPC IPAM User Guide.
-spec provision_ipam_pool_cidr(aws_client:aws_client(), provision_ipam_pool_cidr_request()) ->
    {ok, provision_ipam_pool_cidr_result(), tuple()} |
    {error, any()}.
provision_ipam_pool_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    provision_ipam_pool_cidr(Client, Input, []).

-spec provision_ipam_pool_cidr(aws_client:aws_client(), provision_ipam_pool_cidr_request(), proplists:proplist()) ->
    {ok, provision_ipam_pool_cidr_result(), tuple()} |
    {error, any()}.
provision_ipam_pool_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ProvisionIpamPoolCidr">>, Input, Options).

%% @doc Provision a CIDR to a public IPv4 pool.
%%
%% For more information about IPAM, see What is IPAM?:
%% https://docs.aws.amazon.com/vpc/latest/ipam/what-is-it-ipam.html in the
%% Amazon VPC IPAM User Guide.
-spec provision_public_ipv4_pool_cidr(aws_client:aws_client(), provision_public_ipv4_pool_cidr_request()) ->
    {ok, provision_public_ipv4_pool_cidr_result(), tuple()} |
    {error, any()}.
provision_public_ipv4_pool_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    provision_public_ipv4_pool_cidr(Client, Input, []).

-spec provision_public_ipv4_pool_cidr(aws_client:aws_client(), provision_public_ipv4_pool_cidr_request(), proplists:proplist()) ->
    {ok, provision_public_ipv4_pool_cidr_result(), tuple()} |
    {error, any()}.
provision_public_ipv4_pool_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ProvisionPublicIpv4PoolCidr">>, Input, Options).

%% @doc Purchase the Capacity Block for use with your account.
%%
%% With Capacity Blocks you ensure
%% GPU capacity is available for machine learning (ML) workloads. You must
%% specify the ID
%% of the Capacity Block offering you are purchasing.
-spec purchase_capacity_block(aws_client:aws_client(), purchase_capacity_block_request()) ->
    {ok, purchase_capacity_block_result(), tuple()} |
    {error, any()}.
purchase_capacity_block(Client, Input)
  when is_map(Client), is_map(Input) ->
    purchase_capacity_block(Client, Input, []).

-spec purchase_capacity_block(aws_client:aws_client(), purchase_capacity_block_request(), proplists:proplist()) ->
    {ok, purchase_capacity_block_result(), tuple()} |
    {error, any()}.
purchase_capacity_block(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"PurchaseCapacityBlock">>, Input, Options).

%% @doc Purchase the Capacity Block extension for use with your account.
%%
%% You must specify the
%% ID of the Capacity Block extension offering you are purchasing.
-spec purchase_capacity_block_extension(aws_client:aws_client(), purchase_capacity_block_extension_request()) ->
    {ok, purchase_capacity_block_extension_result(), tuple()} |
    {error, any()}.
purchase_capacity_block_extension(Client, Input)
  when is_map(Client), is_map(Input) ->
    purchase_capacity_block_extension(Client, Input, []).

-spec purchase_capacity_block_extension(aws_client:aws_client(), purchase_capacity_block_extension_request(), proplists:proplist()) ->
    {ok, purchase_capacity_block_extension_result(), tuple()} |
    {error, any()}.
purchase_capacity_block_extension(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"PurchaseCapacityBlockExtension">>, Input, Options).

%% @doc Purchase a reservation with configurations that match those of your
%% Dedicated Host.
%%
%% You must have active Dedicated Hosts in your account before you purchase a
%% reservation.
%% This action results in the specified reservation being purchased and
%% charged to your
%% account.
-spec purchase_host_reservation(aws_client:aws_client(), purchase_host_reservation_request()) ->
    {ok, purchase_host_reservation_result(), tuple()} |
    {error, any()}.
purchase_host_reservation(Client, Input)
  when is_map(Client), is_map(Input) ->
    purchase_host_reservation(Client, Input, []).

-spec purchase_host_reservation(aws_client:aws_client(), purchase_host_reservation_request(), proplists:proplist()) ->
    {ok, purchase_host_reservation_result(), tuple()} |
    {error, any()}.
purchase_host_reservation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"PurchaseHostReservation">>, Input, Options).

%% @doc Purchases a Reserved Instance for use with your account.
%%
%% With Reserved Instances, you pay
%% a lower hourly rate compared to On-Demand instance pricing.
%%
%% Use `DescribeReservedInstancesOfferings' to get a list of Reserved
%% Instance offerings that match your specifications. After you've
%% purchased a Reserved Instance,
%% you can check for your new Reserved Instance with
%% `DescribeReservedInstances'.
%%
%% To queue a purchase for a future date and time, specify a purchase time.
%% If you do not
%% specify a purchase time, the default is the current time.
%%
%% For more information, see Reserved
%% Instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html
%% and Sell in the Reserved Instance
%% Marketplace:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html
%% in the Amazon EC2 User Guide.
-spec purchase_reserved_instances_offering(aws_client:aws_client(), purchase_reserved_instances_offering_request()) ->
    {ok, purchase_reserved_instances_offering_result(), tuple()} |
    {error, any()}.
purchase_reserved_instances_offering(Client, Input)
  when is_map(Client), is_map(Input) ->
    purchase_reserved_instances_offering(Client, Input, []).

-spec purchase_reserved_instances_offering(aws_client:aws_client(), purchase_reserved_instances_offering_request(), proplists:proplist()) ->
    {ok, purchase_reserved_instances_offering_result(), tuple()} |
    {error, any()}.
purchase_reserved_instances_offering(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"PurchaseReservedInstancesOffering">>, Input, Options).

%% @doc
%% You can no longer purchase Scheduled Instances.
%%
%% Purchases the Scheduled Instances with the specified schedule.
%%
%% Scheduled Instances enable you to purchase Amazon EC2 compute capacity by
%% the hour for a one-year term.
%% Before you can purchase a Scheduled Instance, you must call
%% `DescribeScheduledInstanceAvailability'
%% to check for available schedules and obtain a purchase token. After you
%% purchase a Scheduled Instance,
%% you must call `RunScheduledInstances' during each scheduled time
%% period.
%%
%% After you purchase a Scheduled Instance, you can't cancel, modify, or
%% resell your purchase.
-spec purchase_scheduled_instances(aws_client:aws_client(), purchase_scheduled_instances_request()) ->
    {ok, purchase_scheduled_instances_result(), tuple()} |
    {error, any()}.
purchase_scheduled_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    purchase_scheduled_instances(Client, Input, []).

-spec purchase_scheduled_instances(aws_client:aws_client(), purchase_scheduled_instances_request(), proplists:proplist()) ->
    {ok, purchase_scheduled_instances_result(), tuple()} |
    {error, any()}.
purchase_scheduled_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"PurchaseScheduledInstances">>, Input, Options).

%% @doc Requests a reboot of the specified instances.
%%
%% This operation is asynchronous; it only
%% queues a request to reboot the specified instances. The operation succeeds
%% if the
%% instances are valid and belong to you. Requests to reboot terminated
%% instances are
%% ignored.
%%
%% If an instance does not cleanly shut down within a few minutes, Amazon EC2
%% performs a
%% hard reboot.
%%
%% For more information about troubleshooting, see Troubleshoot an
%% unreachable
%% instance:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html
%% in the Amazon EC2 User Guide.
-spec reboot_instances(aws_client:aws_client(), reboot_instances_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
reboot_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    reboot_instances(Client, Input, []).

-spec reboot_instances(aws_client:aws_client(), reboot_instances_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
reboot_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RebootInstances">>, Input, Options).

%% @doc Registers an AMI.
%%
%% When you're creating an instance-store backed AMI, registering the AMI
%% is the final step in the creation process. For more information about
%% creating AMIs, see
%% Create an AMI from a snapshot:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html#creating-launching-ami-from-snapshot
%% and Create an instance-store
%% backed AMI:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-instance-store.html
%% in the Amazon EC2 User Guide.
%%
%% If needed, you can deregister an AMI at any time. Any modifications you
%% make to an AMI
%% backed by an instance store volume invalidates its registration. If you
%% make changes to an
%% image, deregister the previous image and register the new image.
%%
%% Register a snapshot of a root device volume
%%
%% You can use `RegisterImage' to create an Amazon EBS-backed Linux AMI
%% from a snapshot
%% of a root device volume. You specify the snapshot using a block device
%% mapping. You can't set
%% the encryption state of the volume using the block device mapping. If the
%% snapshot is
%% encrypted, or encryption by default is enabled, the root volume of an
%% instance launched from
%% the AMI is encrypted.
%%
%% For more information, see Create an AMI from a snapshot:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html#creating-launching-ami-from-snapshot
%% and Use encryption with EBS-backed AMIs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIEncryption.html
%% in the Amazon EC2 User Guide.
%%
%% Amazon Web Services Marketplace product codes
%%
%% If any snapshots have Amazon Web Services Marketplace product codes, they
%% are copied to the new AMI.
%%
%% In most cases, AMIs for Windows, RedHat, SUSE, and SQL Server require
%% correct licensing
%% information to be present on the AMI. For more information, see Understand
%% AMI billing
%% information:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html
%% in the Amazon EC2 User Guide. When creating an AMI from
%% a snapshot, the `RegisterImage' operation derives the correct billing
%% information
%% from the snapshot's metadata, but this requires the appropriate
%% metadata to be present. To
%% verify if the correct billing information was applied, check the
%% `PlatformDetails'
%% field on the new AMI. If the field is empty or doesn't match the
%% expected operating system
%% code (for example, Windows, RedHat, SUSE, or SQL), the AMI creation was
%% unsuccessful, and you
%% should discard the AMI and instead create the AMI from an instance.
%% For more information, see Create an AMI
%% from an instance :
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html#how-to-create-ebs-ami
%% in the Amazon EC2 User Guide.
%%
%% If you purchase a Reserved Instance to apply to an On-Demand Instance that
%% was launched
%% from an AMI with a billing product code, make sure that the Reserved
%% Instance has the matching
%% billing product code. If you purchase a Reserved Instance without the
%% matching billing product
%% code, the Reserved Instance is not applied to the On-Demand Instance. For
%% information
%% about how to obtain the platform details and billing information of an
%% AMI, see Understand AMI
%% billing information:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ami-billing-info.html
%% in the Amazon EC2 User Guide.
-spec register_image(aws_client:aws_client(), register_image_request()) ->
    {ok, register_image_result(), tuple()} |
    {error, any()}.
register_image(Client, Input)
  when is_map(Client), is_map(Input) ->
    register_image(Client, Input, []).

-spec register_image(aws_client:aws_client(), register_image_request(), proplists:proplist()) ->
    {ok, register_image_result(), tuple()} |
    {error, any()}.
register_image(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RegisterImage">>, Input, Options).

%% @doc Registers a set of tag keys to include in scheduled event
%% notifications for your
%% resources.
%%
%% To remove tags, use DeregisterInstanceEventNotificationAttributes:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeregisterInstanceEventNotificationAttributes.html.
-spec register_instance_event_notification_attributes(aws_client:aws_client(), register_instance_event_notification_attributes_request()) ->
    {ok, register_instance_event_notification_attributes_result(), tuple()} |
    {error, any()}.
register_instance_event_notification_attributes(Client, Input)
  when is_map(Client), is_map(Input) ->
    register_instance_event_notification_attributes(Client, Input, []).

-spec register_instance_event_notification_attributes(aws_client:aws_client(), register_instance_event_notification_attributes_request(), proplists:proplist()) ->
    {ok, register_instance_event_notification_attributes_result(), tuple()} |
    {error, any()}.
register_instance_event_notification_attributes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RegisterInstanceEventNotificationAttributes">>, Input, Options).

%% @doc Registers members (network interfaces) with the transit gateway
%% multicast group.
%%
%% A member is a network interface associated
%% with a supported EC2 instance that receives multicast traffic. For more
%% information, see
%% Multicast
%% on transit gateways:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-multicast-overview.html in
%% the Amazon Web Services Transit Gateways Guide.
%%
%% After you add the members, use SearchTransitGatewayMulticastGroups:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayMulticastGroups.html
%% to verify that the members were added
%% to the transit gateway multicast group.
-spec register_transit_gateway_multicast_group_members(aws_client:aws_client(), register_transit_gateway_multicast_group_members_request()) ->
    {ok, register_transit_gateway_multicast_group_members_result(), tuple()} |
    {error, any()}.
register_transit_gateway_multicast_group_members(Client, Input)
  when is_map(Client), is_map(Input) ->
    register_transit_gateway_multicast_group_members(Client, Input, []).

-spec register_transit_gateway_multicast_group_members(aws_client:aws_client(), register_transit_gateway_multicast_group_members_request(), proplists:proplist()) ->
    {ok, register_transit_gateway_multicast_group_members_result(), tuple()} |
    {error, any()}.
register_transit_gateway_multicast_group_members(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RegisterTransitGatewayMulticastGroupMembers">>, Input, Options).

%% @doc Registers sources (network interfaces) with the specified transit
%% gateway multicast group.
%%
%% A multicast source is a network interface attached to a supported instance
%% that sends
%% multicast traffic. For more information about supported instances, see
%% Multicast
%% on transit gateways:
%% https://docs.aws.amazon.com/vpc/latest/tgw/tgw-multicast-overview.html in
%% the Amazon Web Services Transit Gateways Guide.
%%
%% After you add the source, use SearchTransitGatewayMulticastGroups:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SearchTransitGatewayMulticastGroups.html
%% to verify that the source was added to the multicast
%% group.
-spec register_transit_gateway_multicast_group_sources(aws_client:aws_client(), register_transit_gateway_multicast_group_sources_request()) ->
    {ok, register_transit_gateway_multicast_group_sources_result(), tuple()} |
    {error, any()}.
register_transit_gateway_multicast_group_sources(Client, Input)
  when is_map(Client), is_map(Input) ->
    register_transit_gateway_multicast_group_sources(Client, Input, []).

-spec register_transit_gateway_multicast_group_sources(aws_client:aws_client(), register_transit_gateway_multicast_group_sources_request(), proplists:proplist()) ->
    {ok, register_transit_gateway_multicast_group_sources_result(), tuple()} |
    {error, any()}.
register_transit_gateway_multicast_group_sources(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RegisterTransitGatewayMulticastGroupSources">>, Input, Options).

%% @doc Rejects a request to assign billing of the available capacity of a
%% shared Capacity
%% Reservation to your account.
%%
%% For more information, see Billing assignment for shared
%% Amazon EC2 Capacity Reservations:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/assign-billing.html.
-spec reject_capacity_reservation_billing_ownership(aws_client:aws_client(), reject_capacity_reservation_billing_ownership_request()) ->
    {ok, reject_capacity_reservation_billing_ownership_result(), tuple()} |
    {error, any()}.
reject_capacity_reservation_billing_ownership(Client, Input)
  when is_map(Client), is_map(Input) ->
    reject_capacity_reservation_billing_ownership(Client, Input, []).

-spec reject_capacity_reservation_billing_ownership(aws_client:aws_client(), reject_capacity_reservation_billing_ownership_request(), proplists:proplist()) ->
    {ok, reject_capacity_reservation_billing_ownership_result(), tuple()} |
    {error, any()}.
reject_capacity_reservation_billing_ownership(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RejectCapacityReservationBillingOwnership">>, Input, Options).

%% @doc Rejects a request to associate cross-account subnets with a transit
%% gateway multicast domain.
-spec reject_transit_gateway_multicast_domain_associations(aws_client:aws_client(), reject_transit_gateway_multicast_domain_associations_request()) ->
    {ok, reject_transit_gateway_multicast_domain_associations_result(), tuple()} |
    {error, any()}.
reject_transit_gateway_multicast_domain_associations(Client, Input)
  when is_map(Client), is_map(Input) ->
    reject_transit_gateway_multicast_domain_associations(Client, Input, []).

-spec reject_transit_gateway_multicast_domain_associations(aws_client:aws_client(), reject_transit_gateway_multicast_domain_associations_request(), proplists:proplist()) ->
    {ok, reject_transit_gateway_multicast_domain_associations_result(), tuple()} |
    {error, any()}.
reject_transit_gateway_multicast_domain_associations(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RejectTransitGatewayMulticastDomainAssociations">>, Input, Options).

%% @doc Rejects a transit gateway peering attachment request.
-spec reject_transit_gateway_peering_attachment(aws_client:aws_client(), reject_transit_gateway_peering_attachment_request()) ->
    {ok, reject_transit_gateway_peering_attachment_result(), tuple()} |
    {error, any()}.
reject_transit_gateway_peering_attachment(Client, Input)
  when is_map(Client), is_map(Input) ->
    reject_transit_gateway_peering_attachment(Client, Input, []).

-spec reject_transit_gateway_peering_attachment(aws_client:aws_client(), reject_transit_gateway_peering_attachment_request(), proplists:proplist()) ->
    {ok, reject_transit_gateway_peering_attachment_result(), tuple()} |
    {error, any()}.
reject_transit_gateway_peering_attachment(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RejectTransitGatewayPeeringAttachment">>, Input, Options).

%% @doc Rejects a request to attach a VPC to a transit gateway.
%%
%% The VPC attachment must be in the `pendingAcceptance' state.
%% Use `DescribeTransitGatewayVpcAttachments' to view your pending VPC
%% attachment requests.
%% Use `AcceptTransitGatewayVpcAttachment' to accept a VPC attachment
%% request.
-spec reject_transit_gateway_vpc_attachment(aws_client:aws_client(), reject_transit_gateway_vpc_attachment_request()) ->
    {ok, reject_transit_gateway_vpc_attachment_result(), tuple()} |
    {error, any()}.
reject_transit_gateway_vpc_attachment(Client, Input)
  when is_map(Client), is_map(Input) ->
    reject_transit_gateway_vpc_attachment(Client, Input, []).

-spec reject_transit_gateway_vpc_attachment(aws_client:aws_client(), reject_transit_gateway_vpc_attachment_request(), proplists:proplist()) ->
    {ok, reject_transit_gateway_vpc_attachment_result(), tuple()} |
    {error, any()}.
reject_transit_gateway_vpc_attachment(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RejectTransitGatewayVpcAttachment">>, Input, Options).

%% @doc Rejects VPC endpoint connection requests to your VPC endpoint
%% service.
-spec reject_vpc_endpoint_connections(aws_client:aws_client(), reject_vpc_endpoint_connections_request()) ->
    {ok, reject_vpc_endpoint_connections_result(), tuple()} |
    {error, any()}.
reject_vpc_endpoint_connections(Client, Input)
  when is_map(Client), is_map(Input) ->
    reject_vpc_endpoint_connections(Client, Input, []).

-spec reject_vpc_endpoint_connections(aws_client:aws_client(), reject_vpc_endpoint_connections_request(), proplists:proplist()) ->
    {ok, reject_vpc_endpoint_connections_result(), tuple()} |
    {error, any()}.
reject_vpc_endpoint_connections(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RejectVpcEndpointConnections">>, Input, Options).

%% @doc Rejects a VPC peering connection request.
%%
%% The VPC peering connection must be in the
%% `pending-acceptance' state. Use the
%% `DescribeVpcPeeringConnections' request
%% to view your outstanding VPC peering connection requests. To delete an
%% active VPC peering
%% connection, or to delete a VPC peering connection request that you
%% initiated, use `DeleteVpcPeeringConnection'.
-spec reject_vpc_peering_connection(aws_client:aws_client(), reject_vpc_peering_connection_request()) ->
    {ok, reject_vpc_peering_connection_result(), tuple()} |
    {error, any()}.
reject_vpc_peering_connection(Client, Input)
  when is_map(Client), is_map(Input) ->
    reject_vpc_peering_connection(Client, Input, []).

-spec reject_vpc_peering_connection(aws_client:aws_client(), reject_vpc_peering_connection_request(), proplists:proplist()) ->
    {ok, reject_vpc_peering_connection_result(), tuple()} |
    {error, any()}.
reject_vpc_peering_connection(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RejectVpcPeeringConnection">>, Input, Options).

%% @doc Releases the specified Elastic IP address.
%%
%% [Default VPC] Releasing an Elastic IP address automatically disassociates
%% it
%% from any instance that it's associated with. Alternatively, you can
%% disassociate an Elastic IP address without
%% releasing it.
%%
%% [Nondefault VPC] You must disassociate the Elastic IP address
%% before you can release it. Otherwise, Amazon EC2 returns an error
%% (`InvalidIPAddress.InUse').
%%
%% After releasing an Elastic IP address, it is released to the IP address
%% pool.
%% Be sure to update your DNS records and any servers or devices that
%% communicate with the address.
%% If you attempt to release an Elastic IP address that you already released,
%% you'll get an
%% `AuthFailure' error if the address is already allocated to another
%% Amazon Web Services account.
%%
%% After you release an Elastic IP address, you might be able to recover it.
%% For more information, see Release an Elastic IP address:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing-eips-releasing.html.
-spec release_address(aws_client:aws_client(), release_address_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
release_address(Client, Input)
  when is_map(Client), is_map(Input) ->
    release_address(Client, Input, []).

-spec release_address(aws_client:aws_client(), release_address_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
release_address(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReleaseAddress">>, Input, Options).

%% @doc When you no longer want to use an On-Demand Dedicated Host it can be
%% released.
%%
%% On-Demand billing is stopped and the host goes into `released' state.
%% The
%% host ID of Dedicated Hosts that have been released can no longer be
%% specified in another
%% request, for example, to modify the host. You must stop or terminate all
%% instances on a
%% host before it can be released.
%%
%% When Dedicated Hosts are released, it may take some time for them to stop
%% counting
%% toward your limit and you may receive capacity errors when trying to
%% allocate new
%% Dedicated Hosts. Wait a few minutes and then try again.
%%
%% Released hosts still appear in a `DescribeHosts' response.
-spec release_hosts(aws_client:aws_client(), release_hosts_request()) ->
    {ok, release_hosts_result(), tuple()} |
    {error, any()}.
release_hosts(Client, Input)
  when is_map(Client), is_map(Input) ->
    release_hosts(Client, Input, []).

-spec release_hosts(aws_client:aws_client(), release_hosts_request(), proplists:proplist()) ->
    {ok, release_hosts_result(), tuple()} |
    {error, any()}.
release_hosts(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReleaseHosts">>, Input, Options).

%% @doc Release an allocation within an IPAM pool.
%%
%% The Region you use should be the IPAM pool locale. The locale is the
%% Amazon Web Services Region where this IPAM pool is available for
%% allocations. You can only use this action to release manual allocations.
%% To remove an allocation for a resource without deleting the resource, set
%% its monitored state to false using ModifyIpamResourceCidr:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyIpamResourceCidr.html.
%% For more information, see Release an allocation:
%% https://docs.aws.amazon.com/vpc/latest/ipam/release-alloc-ipam.html in the
%% Amazon VPC IPAM User Guide.
%%
%% All EC2 API actions follow an eventual consistency:
%% https://docs.aws.amazon.com/ec2/latest/devguide/eventual-consistency.html
%% model.
-spec release_ipam_pool_allocation(aws_client:aws_client(), release_ipam_pool_allocation_request()) ->
    {ok, release_ipam_pool_allocation_result(), tuple()} |
    {error, any()}.
release_ipam_pool_allocation(Client, Input)
  when is_map(Client), is_map(Input) ->
    release_ipam_pool_allocation(Client, Input, []).

-spec release_ipam_pool_allocation(aws_client:aws_client(), release_ipam_pool_allocation_request(), proplists:proplist()) ->
    {ok, release_ipam_pool_allocation_result(), tuple()} |
    {error, any()}.
release_ipam_pool_allocation(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReleaseIpamPoolAllocation">>, Input, Options).

%% @doc Replaces an IAM instance profile for the specified running instance.
%%
%% You can use
%% this action to change the IAM instance profile that's associated with
%% an instance
%% without having to disassociate the existing IAM instance profile first.
%%
%% Use `DescribeIamInstanceProfileAssociations' to get the association
%% ID.
-spec replace_iam_instance_profile_association(aws_client:aws_client(), replace_iam_instance_profile_association_request()) ->
    {ok, replace_iam_instance_profile_association_result(), tuple()} |
    {error, any()}.
replace_iam_instance_profile_association(Client, Input)
  when is_map(Client), is_map(Input) ->
    replace_iam_instance_profile_association(Client, Input, []).

-spec replace_iam_instance_profile_association(aws_client:aws_client(), replace_iam_instance_profile_association_request(), proplists:proplist()) ->
    {ok, replace_iam_instance_profile_association_result(), tuple()} |
    {error, any()}.
replace_iam_instance_profile_association(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReplaceIamInstanceProfileAssociation">>, Input, Options).

%% @doc Sets or replaces the criteria for Allowed AMIs.
%%
%% The Allowed AMIs feature does not restrict the AMIs owned by your account.
%% Regardless of
%% the criteria you set, the AMIs created by your account will always be
%% discoverable and
%% usable by users in your account.
%%
%% For more information, see Control the discovery and use of AMIs in
%% Amazon EC2 with Allowed AMIs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-allowed-amis.html
%% in
%% Amazon EC2 User Guide.
-spec replace_image_criteria_in_allowed_images_settings(aws_client:aws_client(), replace_image_criteria_in_allowed_images_settings_request()) ->
    {ok, replace_image_criteria_in_allowed_images_settings_result(), tuple()} |
    {error, any()}.
replace_image_criteria_in_allowed_images_settings(Client, Input)
  when is_map(Client), is_map(Input) ->
    replace_image_criteria_in_allowed_images_settings(Client, Input, []).

-spec replace_image_criteria_in_allowed_images_settings(aws_client:aws_client(), replace_image_criteria_in_allowed_images_settings_request(), proplists:proplist()) ->
    {ok, replace_image_criteria_in_allowed_images_settings_result(), tuple()} |
    {error, any()}.
replace_image_criteria_in_allowed_images_settings(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReplaceImageCriteriaInAllowedImagesSettings">>, Input, Options).

%% @doc Changes which network ACL a subnet is associated with.
%%
%% By default when you create a
%% subnet, it's automatically associated with the default network ACL.
%% For more
%% information, see Network ACLs:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html in
%% the Amazon VPC User Guide.
%%
%% This is an idempotent operation.
-spec replace_network_acl_association(aws_client:aws_client(), replace_network_acl_association_request()) ->
    {ok, replace_network_acl_association_result(), tuple()} |
    {error, any()}.
replace_network_acl_association(Client, Input)
  when is_map(Client), is_map(Input) ->
    replace_network_acl_association(Client, Input, []).

-spec replace_network_acl_association(aws_client:aws_client(), replace_network_acl_association_request(), proplists:proplist()) ->
    {ok, replace_network_acl_association_result(), tuple()} |
    {error, any()}.
replace_network_acl_association(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReplaceNetworkAclAssociation">>, Input, Options).

%% @doc Replaces an entry (rule) in a network ACL.
%%
%% For more information, see Network ACLs:
%% https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html in
%% the
%% Amazon VPC User Guide.
-spec replace_network_acl_entry(aws_client:aws_client(), replace_network_acl_entry_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
replace_network_acl_entry(Client, Input)
  when is_map(Client), is_map(Input) ->
    replace_network_acl_entry(Client, Input, []).

-spec replace_network_acl_entry(aws_client:aws_client(), replace_network_acl_entry_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
replace_network_acl_entry(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReplaceNetworkAclEntry">>, Input, Options).

%% @doc Replaces an existing route within a route table in a VPC.
%%
%% You must specify either a destination CIDR block or a prefix list ID. You
%% must also specify
%% exactly one of the resources from the parameter list, or reset the local
%% route to its default
%% target.
%%
%% For more information, see Route tables:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html in
%% the
%% Amazon VPC User Guide.
-spec replace_route(aws_client:aws_client(), replace_route_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
replace_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    replace_route(Client, Input, []).

-spec replace_route(aws_client:aws_client(), replace_route_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
replace_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReplaceRoute">>, Input, Options).

%% @doc Changes the route table associated with a given subnet, internet
%% gateway, or virtual private gateway in a VPC.
%%
%% After the operation
%% completes, the subnet or gateway uses the routes in the new route table.
%% For more
%% information about route tables, see Route
%% tables:
%% https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html in
%% the Amazon VPC User Guide.
%%
%% You can also use this operation to change which table is the main route
%% table in the VPC. Specify the main route table's association ID and
%% the route table ID of the new main route table.
-spec replace_route_table_association(aws_client:aws_client(), replace_route_table_association_request()) ->
    {ok, replace_route_table_association_result(), tuple()} |
    {error, any()}.
replace_route_table_association(Client, Input)
  when is_map(Client), is_map(Input) ->
    replace_route_table_association(Client, Input, []).

-spec replace_route_table_association(aws_client:aws_client(), replace_route_table_association_request(), proplists:proplist()) ->
    {ok, replace_route_table_association_result(), tuple()} |
    {error, any()}.
replace_route_table_association(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReplaceRouteTableAssociation">>, Input, Options).

%% @doc Replaces the specified route in the specified transit gateway route
%% table.
-spec replace_transit_gateway_route(aws_client:aws_client(), replace_transit_gateway_route_request()) ->
    {ok, replace_transit_gateway_route_result(), tuple()} |
    {error, any()}.
replace_transit_gateway_route(Client, Input)
  when is_map(Client), is_map(Input) ->
    replace_transit_gateway_route(Client, Input, []).

-spec replace_transit_gateway_route(aws_client:aws_client(), replace_transit_gateway_route_request(), proplists:proplist()) ->
    {ok, replace_transit_gateway_route_result(), tuple()} |
    {error, any()}.
replace_transit_gateway_route(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReplaceTransitGatewayRoute">>, Input, Options).

%% @doc Trigger replacement of specified VPN tunnel.
-spec replace_vpn_tunnel(aws_client:aws_client(), replace_vpn_tunnel_request()) ->
    {ok, replace_vpn_tunnel_result(), tuple()} |
    {error, any()}.
replace_vpn_tunnel(Client, Input)
  when is_map(Client), is_map(Input) ->
    replace_vpn_tunnel(Client, Input, []).

-spec replace_vpn_tunnel(aws_client:aws_client(), replace_vpn_tunnel_request(), proplists:proplist()) ->
    {ok, replace_vpn_tunnel_result(), tuple()} |
    {error, any()}.
replace_vpn_tunnel(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReplaceVpnTunnel">>, Input, Options).

%% @doc Submits feedback about the status of an instance.
%%
%% The instance must be in the
%% `running' state. If your experience with the instance differs from the
%% instance status returned by `DescribeInstanceStatus', use
%% `ReportInstanceStatus' to report your experience with the instance.
%% Amazon
%% EC2 collects this information to improve the accuracy of status checks.
%%
%% Use of this action does not change the value returned by
%% `DescribeInstanceStatus'.
-spec report_instance_status(aws_client:aws_client(), report_instance_status_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
report_instance_status(Client, Input)
  when is_map(Client), is_map(Input) ->
    report_instance_status(Client, Input, []).

-spec report_instance_status(aws_client:aws_client(), report_instance_status_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
report_instance_status(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ReportInstanceStatus">>, Input, Options).

%% @doc Creates a Spot Fleet request.
%%
%% The Spot Fleet request specifies the total target capacity and the
%% On-Demand target
%% capacity. Amazon EC2 calculates the difference between the total capacity
%% and On-Demand
%% capacity, and launches the difference as Spot capacity.
%%
%% You can submit a single request that includes multiple launch
%% specifications that vary
%% by instance type, AMI, Availability Zone, or subnet.
%%
%% By default, the Spot Fleet requests Spot Instances in the Spot Instance
%% pool where the
%% price per unit is the lowest. Each launch specification can include its
%% own instance
%% weighting that reflects the value of the instance type to your application
%% workload.
%%
%% Alternatively, you can specify that the Spot Fleet distribute the target
%% capacity
%% across the Spot pools included in its launch specifications. By ensuring
%% that the Spot
%% Instances in your Spot Fleet are in different Spot pools, you can improve
%% the
%% availability of your fleet.
%%
%% You can specify tags for the Spot Fleet request and instances launched by
%% the fleet.
%% You cannot tag other resource types in a Spot Fleet request because only
%% the
%% `spot-fleet-request' and `instance' resource types are
%% supported.
%%
%% For more information, see Spot Fleet requests:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-requests.html
%% in the Amazon EC2 User Guide.
%%
%% We strongly discourage using the RequestSpotFleet API because it is a
%% legacy
%% API with no planned investment. For options for requesting Spot Instances,
%% see
%% Which
%% is the best Spot request method to use?:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-best-practices.html#which-spot-request-method-to-use
%% in the
%% Amazon EC2 User Guide.
-spec request_spot_fleet(aws_client:aws_client(), request_spot_fleet_request()) ->
    {ok, request_spot_fleet_response(), tuple()} |
    {error, any()}.
request_spot_fleet(Client, Input)
  when is_map(Client), is_map(Input) ->
    request_spot_fleet(Client, Input, []).

-spec request_spot_fleet(aws_client:aws_client(), request_spot_fleet_request(), proplists:proplist()) ->
    {ok, request_spot_fleet_response(), tuple()} |
    {error, any()}.
request_spot_fleet(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RequestSpotFleet">>, Input, Options).

%% @doc Creates a Spot Instance request.
%%
%% For more information, see Work with Spot Instance:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html in
%% the Amazon EC2 User Guide.
%%
%% We strongly discourage using the RequestSpotInstances API because it is a
%% legacy
%% API with no planned investment. For options for requesting Spot Instances,
%% see
%% Which
%% is the best Spot request method to use?:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-best-practices.html#which-spot-request-method-to-use
%% in the
%% Amazon EC2 User Guide.
-spec request_spot_instances(aws_client:aws_client(), request_spot_instances_request()) ->
    {ok, request_spot_instances_result(), tuple()} |
    {error, any()}.
request_spot_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    request_spot_instances(Client, Input, []).

-spec request_spot_instances(aws_client:aws_client(), request_spot_instances_request(), proplists:proplist()) ->
    {ok, request_spot_instances_result(), tuple()} |
    {error, any()}.
request_spot_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RequestSpotInstances">>, Input, Options).

%% @doc Resets the attribute of the specified IP address.
%%
%% For requirements, see Using reverse DNS for email applications:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html#Using_Elastic_Addressing_Reverse_DNS.
-spec reset_address_attribute(aws_client:aws_client(), reset_address_attribute_request()) ->
    {ok, reset_address_attribute_result(), tuple()} |
    {error, any()}.
reset_address_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    reset_address_attribute(Client, Input, []).

-spec reset_address_attribute(aws_client:aws_client(), reset_address_attribute_request(), proplists:proplist()) ->
    {ok, reset_address_attribute_result(), tuple()} |
    {error, any()}.
reset_address_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ResetAddressAttribute">>, Input, Options).

%% @doc Resets the default KMS key for EBS encryption for your account in
%% this Region
%% to the Amazon Web Services managed KMS key for EBS.
%%
%% After resetting the default KMS key to the Amazon Web Services managed KMS
%% key, you can continue to encrypt by a
%% customer managed KMS key by specifying it when you create the volume. For
%% more information, see
%% Amazon EBS encryption:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-encryption.html
%% in the Amazon EBS User Guide.
-spec reset_ebs_default_kms_key_id(aws_client:aws_client(), reset_ebs_default_kms_key_id_request()) ->
    {ok, reset_ebs_default_kms_key_id_result(), tuple()} |
    {error, any()}.
reset_ebs_default_kms_key_id(Client, Input)
  when is_map(Client), is_map(Input) ->
    reset_ebs_default_kms_key_id(Client, Input, []).

-spec reset_ebs_default_kms_key_id(aws_client:aws_client(), reset_ebs_default_kms_key_id_request(), proplists:proplist()) ->
    {ok, reset_ebs_default_kms_key_id_result(), tuple()} |
    {error, any()}.
reset_ebs_default_kms_key_id(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ResetEbsDefaultKmsKeyId">>, Input, Options).

%% @doc Resets the specified attribute of the specified Amazon FPGA Image
%% (AFI) to its default value.
%%
%% You can only reset the load permission attribute.
-spec reset_fpga_image_attribute(aws_client:aws_client(), reset_fpga_image_attribute_request()) ->
    {ok, reset_fpga_image_attribute_result(), tuple()} |
    {error, any()}.
reset_fpga_image_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    reset_fpga_image_attribute(Client, Input, []).

-spec reset_fpga_image_attribute(aws_client:aws_client(), reset_fpga_image_attribute_request(), proplists:proplist()) ->
    {ok, reset_fpga_image_attribute_result(), tuple()} |
    {error, any()}.
reset_fpga_image_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ResetFpgaImageAttribute">>, Input, Options).

%% @doc Resets an attribute of an AMI to its default value.
-spec reset_image_attribute(aws_client:aws_client(), reset_image_attribute_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
reset_image_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    reset_image_attribute(Client, Input, []).

-spec reset_image_attribute(aws_client:aws_client(), reset_image_attribute_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
reset_image_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ResetImageAttribute">>, Input, Options).

%% @doc Resets an attribute of an instance to its default value.
%%
%% To reset the
%% `kernel' or `ramdisk', the instance must be in a stopped
%% state. To reset the `sourceDestCheck', the instance can be either
%% running or
%% stopped.
%%
%% The `sourceDestCheck' attribute controls whether source/destination
%% checking is enabled. The default value is `true', which means checking
%% is
%% enabled. This value must be `false' for a NAT instance to perform NAT.
%% For
%% more information, see NAT instances:
%% https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html
%% in the
%% Amazon VPC User Guide.
-spec reset_instance_attribute(aws_client:aws_client(), reset_instance_attribute_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
reset_instance_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    reset_instance_attribute(Client, Input, []).

-spec reset_instance_attribute(aws_client:aws_client(), reset_instance_attribute_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
reset_instance_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ResetInstanceAttribute">>, Input, Options).

%% @doc Resets a network interface attribute.
%%
%% You can specify only one attribute at a
%% time.
-spec reset_network_interface_attribute(aws_client:aws_client(), reset_network_interface_attribute_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
reset_network_interface_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    reset_network_interface_attribute(Client, Input, []).

-spec reset_network_interface_attribute(aws_client:aws_client(), reset_network_interface_attribute_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
reset_network_interface_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ResetNetworkInterfaceAttribute">>, Input, Options).

%% @doc Resets permission settings for the specified snapshot.
%%
%% For more information about modifying snapshot permissions, see Share a
%% snapshot:
%% https://docs.aws.amazon.com/ebs/latest/userguide/ebs-modifying-snapshot-permissions.html
%% in the
%% Amazon EBS User Guide.
-spec reset_snapshot_attribute(aws_client:aws_client(), reset_snapshot_attribute_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
reset_snapshot_attribute(Client, Input)
  when is_map(Client), is_map(Input) ->
    reset_snapshot_attribute(Client, Input, []).

-spec reset_snapshot_attribute(aws_client:aws_client(), reset_snapshot_attribute_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
reset_snapshot_attribute(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"ResetSnapshotAttribute">>, Input, Options).

%% @doc
%% This action is deprecated.
%%
%% Restores an Elastic IP address that was previously moved to the EC2-VPC
%% platform back to the EC2-Classic platform. You cannot move an Elastic IP
%% address that was originally allocated for use in EC2-VPC. The Elastic IP
%% address must not be associated with an instance or network interface.
-spec restore_address_to_classic(aws_client:aws_client(), restore_address_to_classic_request()) ->
    {ok, restore_address_to_classic_result(), tuple()} |
    {error, any()}.
restore_address_to_classic(Client, Input)
  when is_map(Client), is_map(Input) ->
    restore_address_to_classic(Client, Input, []).

-spec restore_address_to_classic(aws_client:aws_client(), restore_address_to_classic_request(), proplists:proplist()) ->
    {ok, restore_address_to_classic_result(), tuple()} |
    {error, any()}.
restore_address_to_classic(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RestoreAddressToClassic">>, Input, Options).

%% @doc Restores an AMI from the Recycle Bin.
%%
%% For more information, see Recover deleted Amazon EBS
%% snapshots and EBS-back AMIs with Recycle Bin:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/recycle-bin.html in
%% the
%% Amazon EC2 User Guide.
-spec restore_image_from_recycle_bin(aws_client:aws_client(), restore_image_from_recycle_bin_request()) ->
    {ok, restore_image_from_recycle_bin_result(), tuple()} |
    {error, any()}.
restore_image_from_recycle_bin(Client, Input)
  when is_map(Client), is_map(Input) ->
    restore_image_from_recycle_bin(Client, Input, []).

-spec restore_image_from_recycle_bin(aws_client:aws_client(), restore_image_from_recycle_bin_request(), proplists:proplist()) ->
    {ok, restore_image_from_recycle_bin_result(), tuple()} |
    {error, any()}.
restore_image_from_recycle_bin(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RestoreImageFromRecycleBin">>, Input, Options).

%% @doc Restores the entries from a previous version of a managed prefix list
%% to a new version of the prefix list.
-spec restore_managed_prefix_list_version(aws_client:aws_client(), restore_managed_prefix_list_version_request()) ->
    {ok, restore_managed_prefix_list_version_result(), tuple()} |
    {error, any()}.
restore_managed_prefix_list_version(Client, Input)
  when is_map(Client), is_map(Input) ->
    restore_managed_prefix_list_version(Client, Input, []).

-spec restore_managed_prefix_list_version(aws_client:aws_client(), restore_managed_prefix_list_version_request(), proplists:proplist()) ->
    {ok, restore_managed_prefix_list_version_result(), tuple()} |
    {error, any()}.
restore_managed_prefix_list_version(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RestoreManagedPrefixListVersion">>, Input, Options).

%% @doc Restores a snapshot from the Recycle Bin.
%%
%% For more information, see Restore
%% snapshots from the Recycle Bin:
%% https://docs.aws.amazon.com/ebs/latest/userguide/recycle-bin-working-with-snaps.html#recycle-bin-restore-snaps
%% in the Amazon EBS User Guide.
-spec restore_snapshot_from_recycle_bin(aws_client:aws_client(), restore_snapshot_from_recycle_bin_request()) ->
    {ok, restore_snapshot_from_recycle_bin_result(), tuple()} |
    {error, any()}.
restore_snapshot_from_recycle_bin(Client, Input)
  when is_map(Client), is_map(Input) ->
    restore_snapshot_from_recycle_bin(Client, Input, []).

-spec restore_snapshot_from_recycle_bin(aws_client:aws_client(), restore_snapshot_from_recycle_bin_request(), proplists:proplist()) ->
    {ok, restore_snapshot_from_recycle_bin_result(), tuple()} |
    {error, any()}.
restore_snapshot_from_recycle_bin(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RestoreSnapshotFromRecycleBin">>, Input, Options).

%% @doc Restores an archived Amazon EBS snapshot for use temporarily or
%% permanently, or modifies the restore
%% period or restore type for a snapshot that was previously temporarily
%% restored.
%%
%% For more information see
%% Restore an archived snapshot:
%% https://docs.aws.amazon.com/ebs/latest/userguide/working-with-snapshot-archiving.html#restore-archived-snapshot
%% and
%% modify the restore period or restore type for a temporarily restored
%% snapshot:
%% https://docs.aws.amazon.com/ebs/latest/userguide/working-with-snapshot-archiving.html#modify-temp-restore-period
%% in the Amazon EBS User Guide.
-spec restore_snapshot_tier(aws_client:aws_client(), restore_snapshot_tier_request()) ->
    {ok, restore_snapshot_tier_result(), tuple()} |
    {error, any()}.
restore_snapshot_tier(Client, Input)
  when is_map(Client), is_map(Input) ->
    restore_snapshot_tier(Client, Input, []).

-spec restore_snapshot_tier(aws_client:aws_client(), restore_snapshot_tier_request(), proplists:proplist()) ->
    {ok, restore_snapshot_tier_result(), tuple()} |
    {error, any()}.
restore_snapshot_tier(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RestoreSnapshotTier">>, Input, Options).

%% @doc Removes an ingress authorization rule from a Client VPN endpoint.
-spec revoke_client_vpn_ingress(aws_client:aws_client(), revoke_client_vpn_ingress_request()) ->
    {ok, revoke_client_vpn_ingress_result(), tuple()} |
    {error, any()}.
revoke_client_vpn_ingress(Client, Input)
  when is_map(Client), is_map(Input) ->
    revoke_client_vpn_ingress(Client, Input, []).

-spec revoke_client_vpn_ingress(aws_client:aws_client(), revoke_client_vpn_ingress_request(), proplists:proplist()) ->
    {ok, revoke_client_vpn_ingress_result(), tuple()} |
    {error, any()}.
revoke_client_vpn_ingress(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RevokeClientVpnIngress">>, Input, Options).

%% @doc Removes the specified outbound (egress) rules from the specified
%% security group.
%%
%% You can specify rules using either rule IDs or security group rule
%% properties. If you use
%% rule properties, the values that you specify (for example, ports) must
%% match the existing rule's
%% values exactly. Each rule has a protocol, from and to ports, and
%% destination (CIDR range,
%% security group, or prefix list). For the TCP and UDP protocols, you must
%% also specify the
%% destination port or range of ports. For the ICMP protocol, you must also
%% specify the ICMP type
%% and code. If the security group rule has a description, you do not need to
%% specify the description
%% to revoke the rule.
%%
%% For a default VPC, if the values you specify do not match the existing
%% rule's values, no error is
%% returned, and the output describes the security group rules that were not
%% revoked.
%%
%% Amazon Web Services recommends that you describe the security group to
%% verify that the rules were removed.
%%
%% Rule changes are propagated to instances within the security group as
%% quickly as possible. However,
%% a small delay might occur.
-spec revoke_security_group_egress(aws_client:aws_client(), revoke_security_group_egress_request()) ->
    {ok, revoke_security_group_egress_result(), tuple()} |
    {error, any()}.
revoke_security_group_egress(Client, Input)
  when is_map(Client), is_map(Input) ->
    revoke_security_group_egress(Client, Input, []).

-spec revoke_security_group_egress(aws_client:aws_client(), revoke_security_group_egress_request(), proplists:proplist()) ->
    {ok, revoke_security_group_egress_result(), tuple()} |
    {error, any()}.
revoke_security_group_egress(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RevokeSecurityGroupEgress">>, Input, Options).

%% @doc Removes the specified inbound (ingress) rules from a security group.
%%
%% You can specify rules using either rule IDs or security group rule
%% properties. If you use
%% rule properties, the values that you specify (for example, ports) must
%% match the existing rule's
%% values exactly. Each rule has a protocol, from and to ports, and source
%% (CIDR range,
%% security group, or prefix list). For the TCP and UDP protocols, you must
%% also specify the
%% destination port or range of ports. For the ICMP protocol, you must also
%% specify the ICMP type
%% and code. If the security group rule has a description, you do not need to
%% specify the description
%% to revoke the rule.
%%
%% For a default VPC, if the values you specify do not match the existing
%% rule's values,
%% no error is returned, and the output describes the security group rules
%% that were not
%% revoked.
%%
%% For a non-default VPC, if the values you specify do not match the existing
%% rule's
%% values, an `InvalidPermission.NotFound' client error is returned, and
%% no
%% rules are revoked.
%%
%% Amazon Web Services recommends that you describe the security group to
%% verify that the rules were removed.
%%
%% Rule changes are propagated to instances within the security group as
%% quickly as possible.
%% However, a small delay might occur.
-spec revoke_security_group_ingress(aws_client:aws_client(), revoke_security_group_ingress_request()) ->
    {ok, revoke_security_group_ingress_result(), tuple()} |
    {error, any()}.
revoke_security_group_ingress(Client, Input)
  when is_map(Client), is_map(Input) ->
    revoke_security_group_ingress(Client, Input, []).

-spec revoke_security_group_ingress(aws_client:aws_client(), revoke_security_group_ingress_request(), proplists:proplist()) ->
    {ok, revoke_security_group_ingress_result(), tuple()} |
    {error, any()}.
revoke_security_group_ingress(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RevokeSecurityGroupIngress">>, Input, Options).

%% @doc Launches the specified number of instances using an AMI for which you
%% have
%% permissions.
%%
%% You can specify a number of options, or leave the default options. The
%% following rules
%% apply:
%%
%% If you don't specify a subnet ID, we choose a default subnet from
%% your default VPC for you. If you don't have a default VPC, you must
%% specify a
%% subnet ID in the request.
%%
%% All instances have a network interface with a primary private IPv4
%% address. If you don't specify this address, we choose one from the
%% IPv4 range of
%% your subnet.
%%
%% Not all instance types support IPv6 addresses. For more information, see
%% Instance
%% types:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html.
%%
%% If you don't specify a security group ID, we use the default security
%% group
%% for the VPC. For more information, see Security
%% groups:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html.
%%
%% If any of the AMIs have a product code attached for which the user has not
%% subscribed, the request fails.
%%
%% You can create a launch template:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html,
%% which is a resource that contains the parameters to launch an instance.
%% When you launch
%% an instance using `RunInstances', you can specify the launch template
%% instead of specifying the launch parameters.
%%
%% To ensure faster instance launches, break up large requests into smaller
%% batches. For
%% example, create five separate launch requests for 100 instances each
%% instead of one
%% launch request for 500 instances.
%%
%% `RunInstances' is subject to both request rate limiting and resource
%% rate
%% limiting. For more information, see Request throttling:
%% https://docs.aws.amazon.com/ec2/latest/devguide/ec2-api-throttling.html.
%%
%% An instance is ready for you to use when it's in the `running'
%% state. You
%% can check the state of your instance using `DescribeInstances'. You
%% can
%% tag instances and EBS volumes during launch, after launch, or both. For
%% more
%% information, see `CreateTags' and Tagging your Amazon EC2
%% resources:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html.
%%
%% Linux instances have access to the public key of the key pair at boot. You
%% can use
%% this key to provide secure access to the instance. Amazon EC2 public
%% images use this
%% feature to provide secure access without passwords. For more information,
%% see Key
%% pairs:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html.
%%
%% For troubleshooting, see What to do if
%% an instance immediately terminates:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html,
%% and Troubleshooting connecting to your instance:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html.
-spec run_instances(aws_client:aws_client(), run_instances_request()) ->
    {ok, reservation(), tuple()} |
    {error, any()}.
run_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    run_instances(Client, Input, []).

-spec run_instances(aws_client:aws_client(), run_instances_request(), proplists:proplist()) ->
    {ok, reservation(), tuple()} |
    {error, any()}.
run_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RunInstances">>, Input, Options).

%% @doc Launches the specified Scheduled Instances.
%%
%% Before you can launch a Scheduled Instance, you must purchase it and
%% obtain an identifier using `PurchaseScheduledInstances'.
%%
%% You must launch a Scheduled Instance during its scheduled time period. You
%% can't stop or
%% reboot a Scheduled Instance, but you can terminate it as needed. If you
%% terminate a
%% Scheduled Instance before the current scheduled time period ends, you can
%% launch it again
%% after a few minutes.
-spec run_scheduled_instances(aws_client:aws_client(), run_scheduled_instances_request()) ->
    {ok, run_scheduled_instances_result(), tuple()} |
    {error, any()}.
run_scheduled_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    run_scheduled_instances(Client, Input, []).

-spec run_scheduled_instances(aws_client:aws_client(), run_scheduled_instances_request(), proplists:proplist()) ->
    {ok, run_scheduled_instances_result(), tuple()} |
    {error, any()}.
run_scheduled_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"RunScheduledInstances">>, Input, Options).

%% @doc Searches for routes in the specified local gateway route table.
-spec search_local_gateway_routes(aws_client:aws_client(), search_local_gateway_routes_request()) ->
    {ok, search_local_gateway_routes_result(), tuple()} |
    {error, any()}.
search_local_gateway_routes(Client, Input)
  when is_map(Client), is_map(Input) ->
    search_local_gateway_routes(Client, Input, []).

-spec search_local_gateway_routes(aws_client:aws_client(), search_local_gateway_routes_request(), proplists:proplist()) ->
    {ok, search_local_gateway_routes_result(), tuple()} |
    {error, any()}.
search_local_gateway_routes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"SearchLocalGatewayRoutes">>, Input, Options).

%% @doc Searches one or more transit gateway multicast groups and returns the
%% group membership information.
-spec search_transit_gateway_multicast_groups(aws_client:aws_client(), search_transit_gateway_multicast_groups_request()) ->
    {ok, search_transit_gateway_multicast_groups_result(), tuple()} |
    {error, any()}.
search_transit_gateway_multicast_groups(Client, Input)
  when is_map(Client), is_map(Input) ->
    search_transit_gateway_multicast_groups(Client, Input, []).

-spec search_transit_gateway_multicast_groups(aws_client:aws_client(), search_transit_gateway_multicast_groups_request(), proplists:proplist()) ->
    {ok, search_transit_gateway_multicast_groups_result(), tuple()} |
    {error, any()}.
search_transit_gateway_multicast_groups(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"SearchTransitGatewayMulticastGroups">>, Input, Options).

%% @doc Searches for routes in the specified transit gateway route table.
-spec search_transit_gateway_routes(aws_client:aws_client(), search_transit_gateway_routes_request()) ->
    {ok, search_transit_gateway_routes_result(), tuple()} |
    {error, any()}.
search_transit_gateway_routes(Client, Input)
  when is_map(Client), is_map(Input) ->
    search_transit_gateway_routes(Client, Input, []).

-spec search_transit_gateway_routes(aws_client:aws_client(), search_transit_gateway_routes_request(), proplists:proplist()) ->
    {ok, search_transit_gateway_routes_result(), tuple()} |
    {error, any()}.
search_transit_gateway_routes(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"SearchTransitGatewayRoutes">>, Input, Options).

%% @doc Sends a diagnostic interrupt to the specified Amazon EC2 instance to
%% trigger a
%% kernel panic (on Linux instances), or a blue
%% screen/stop error (on Windows instances).
%%
%% For
%% instances based on Intel and AMD processors, the interrupt is received as
%% a
%% non-maskable interrupt (NMI).
%%
%% In general, the operating system crashes and reboots when a kernel panic
%% or stop error
%% is triggered. The operating system can also be configured to perform
%% diagnostic tasks,
%% such as generating a memory dump file, loading a secondary kernel, or
%% obtaining a call
%% trace.
%%
%% Before sending a diagnostic interrupt to your instance, ensure that its
%% operating
%% system is configured to perform the required diagnostic tasks.
%%
%% For more information about configuring your operating system to generate a
%% crash dump
%% when a kernel panic or stop error occurs, see Send a diagnostic interrupt
%% (for advanced users):
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/diagnostic-interrupt.html
%% in the Amazon EC2 User Guide.
-spec send_diagnostic_interrupt(aws_client:aws_client(), send_diagnostic_interrupt_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
send_diagnostic_interrupt(Client, Input)
  when is_map(Client), is_map(Input) ->
    send_diagnostic_interrupt(Client, Input, []).

-spec send_diagnostic_interrupt(aws_client:aws_client(), send_diagnostic_interrupt_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
send_diagnostic_interrupt(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"SendDiagnosticInterrupt">>, Input, Options).

%% @doc Generates an account status report.
%%
%% The report is generated asynchronously, and can
%% take several hours to complete.
%%
%% The report provides the current status of all attributes supported by
%% declarative
%% policies for the accounts within the specified scope. The scope is
%% determined by the
%% specified `TargetId', which can represent an individual account, or
%% all the
%% accounts that fall under the specified organizational unit (OU) or root
%% (the entire
%% Amazon Web Services Organization).
%%
%% The report is saved to your specified S3 bucket, using the following path
%% structure
%% (with the capitalized placeholders representing your specific values):
%%
%% `s3://AMZN-S3-DEMO-BUCKET/YOUR-OPTIONAL-S3-PREFIX/ec2_TARGETID_REPORTID_YYYYMMDDTHHMMZ.csv'
%%
%% == Prerequisites for generating a report ==
%%
%% The `StartDeclarativePoliciesReport' API can only be called by the
%% management account or delegated administrators for the organization.
%%
%% An S3 bucket must be available before generating the report (you can
%% create a
%% new one or use an existing one), it must be in the same Region where the
%% report
%% generation request is made, and it must have an appropriate bucket policy.
%% For a
%% sample S3 policy, see Sample Amazon S3 policy under Examples:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartDeclarativePoliciesReport.html#API_StartDeclarativePoliciesReport_Examples.
%%
%% Trusted access must be enabled for the service for which the declarative
%% policy will enforce a baseline configuration. If you use the Amazon Web
%% Services Organizations
%% console, this is done automatically when you enable declarative policies.
%% The
%% API uses the following service principal to identify the EC2 service:
%% `ec2.amazonaws.com'. For more information on how to enable
%% trusted access with the Amazon Web Services CLI and Amazon Web Services
%% SDKs, see Using
%% Organizations with other Amazon Web Services services:
%% https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html
%% in the
%% Amazon Web Services Organizations User Guide.
%%
%% Only one report per organization can be generated at a time. Attempting to
%% generate a report while another is in progress will result in an error.
%%
%% For more information, including the required IAM permissions to run this
%% API, see
%% Generating the account status report for declarative policies:
%% https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_declarative_status-report.html
%% in the
%% Amazon Web Services Organizations User Guide.
-spec start_declarative_policies_report(aws_client:aws_client(), start_declarative_policies_report_request()) ->
    {ok, start_declarative_policies_report_result(), tuple()} |
    {error, any()}.
start_declarative_policies_report(Client, Input)
  when is_map(Client), is_map(Input) ->
    start_declarative_policies_report(Client, Input, []).

-spec start_declarative_policies_report(aws_client:aws_client(), start_declarative_policies_report_request(), proplists:proplist()) ->
    {ok, start_declarative_policies_report_result(), tuple()} |
    {error, any()}.
start_declarative_policies_report(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"StartDeclarativePoliciesReport">>, Input, Options).

%% @doc Starts an Amazon EBS-backed instance that you've previously
%% stopped.
%%
%% Instances that use Amazon EBS volumes as their root devices can be quickly
%% stopped and
%% started. When an instance is stopped, the compute resources are released
%% and you are not
%% billed for instance usage. However, your root partition Amazon EBS volume
%% remains and
%% continues to persist your data, and you are charged for Amazon EBS volume
%% usage. You can
%% restart your instance at any time. Every time you start your instance,
%% Amazon EC2
%% charges a one-minute minimum for instance usage, and thereafter charges
%% per second for
%% instance usage.
%%
%% Before stopping an instance, make sure it is in a state from which it can
%% be
%% restarted. Stopping an instance does not preserve data stored in RAM.
%%
%% Performing this operation on an instance that uses an instance store as
%% its root
%% device returns an error.
%%
%% If you attempt to start a T3 instance with `host' tenancy and the
%% `unlimited' CPU credit option, the request fails. The
%% `unlimited' CPU credit option is not supported on Dedicated Hosts.
%% Before
%% you start the instance, either change its CPU credit option to
%% `standard', or
%% change its tenancy to `default' or `dedicated'.
%%
%% For more information, see Stop and start Amazon EC2
%% instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html in the
%% Amazon EC2 User Guide.
-spec start_instances(aws_client:aws_client(), start_instances_request()) ->
    {ok, start_instances_result(), tuple()} |
    {error, any()}.
start_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    start_instances(Client, Input, []).

-spec start_instances(aws_client:aws_client(), start_instances_request(), proplists:proplist()) ->
    {ok, start_instances_result(), tuple()} |
    {error, any()}.
start_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"StartInstances">>, Input, Options).

%% @doc Starts analyzing the specified Network Access Scope.
-spec start_network_insights_access_scope_analysis(aws_client:aws_client(), start_network_insights_access_scope_analysis_request()) ->
    {ok, start_network_insights_access_scope_analysis_result(), tuple()} |
    {error, any()}.
start_network_insights_access_scope_analysis(Client, Input)
  when is_map(Client), is_map(Input) ->
    start_network_insights_access_scope_analysis(Client, Input, []).

-spec start_network_insights_access_scope_analysis(aws_client:aws_client(), start_network_insights_access_scope_analysis_request(), proplists:proplist()) ->
    {ok, start_network_insights_access_scope_analysis_result(), tuple()} |
    {error, any()}.
start_network_insights_access_scope_analysis(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"StartNetworkInsightsAccessScopeAnalysis">>, Input, Options).

%% @doc Starts analyzing the specified path.
%%
%% If the path is reachable, the
%% operation returns the shortest feasible path.
-spec start_network_insights_analysis(aws_client:aws_client(), start_network_insights_analysis_request()) ->
    {ok, start_network_insights_analysis_result(), tuple()} |
    {error, any()}.
start_network_insights_analysis(Client, Input)
  when is_map(Client), is_map(Input) ->
    start_network_insights_analysis(Client, Input, []).

-spec start_network_insights_analysis(aws_client:aws_client(), start_network_insights_analysis_request(), proplists:proplist()) ->
    {ok, start_network_insights_analysis_result(), tuple()} |
    {error, any()}.
start_network_insights_analysis(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"StartNetworkInsightsAnalysis">>, Input, Options).

%% @doc Initiates the verification process to prove that the service provider
%% owns the private
%% DNS name domain for the endpoint service.
%%
%% The service provider must successfully perform the verification before the
%% consumer can use the name to access the service.
%%
%% Before the service provider runs this command, they must add a record to
%% the DNS server.
-spec start_vpc_endpoint_service_private_dns_verification(aws_client:aws_client(), start_vpc_endpoint_service_private_dns_verification_request()) ->
    {ok, start_vpc_endpoint_service_private_dns_verification_result(), tuple()} |
    {error, any()}.
start_vpc_endpoint_service_private_dns_verification(Client, Input)
  when is_map(Client), is_map(Input) ->
    start_vpc_endpoint_service_private_dns_verification(Client, Input, []).

-spec start_vpc_endpoint_service_private_dns_verification(aws_client:aws_client(), start_vpc_endpoint_service_private_dns_verification_request(), proplists:proplist()) ->
    {ok, start_vpc_endpoint_service_private_dns_verification_result(), tuple()} |
    {error, any()}.
start_vpc_endpoint_service_private_dns_verification(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"StartVpcEndpointServicePrivateDnsVerification">>, Input, Options).

%% @doc Stops an Amazon EBS-backed instance.
%%
%% You can restart your instance at any time using
%% the StartInstances:
%% https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartInstances.html
%% API. For more information, see Stop and start Amazon EC2
%% instances:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html in the
%% Amazon EC2 User Guide.
%%
%% When you stop or hibernate an instance, we shut it down. By default, this
%% includes a
%% graceful operating system (OS) shutdown. To bypass the graceful shutdown,
%% use the
%% `skipOsShutdown' parameter; however, this might risk data
%% integrity.
%%
%% You can use the StopInstances operation together with the `Hibernate'
%% parameter to hibernate an instance if the instance is enabled for
%% hibernation:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/enabling-hibernation.html
%% and meets the hibernation
%% prerequisites:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/hibernating-prerequisites.html.
%% Stopping an instance doesn't preserve data stored in RAM,
%% while hibernation does. If hibernation fails, a normal shutdown occurs.
%% For more
%% information, see Hibernate your Amazon EC2
%% instance:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html in the
%% Amazon EC2 User Guide.
%%
%% If your instance appears stuck in the `stopping' state, there might be
%% an
%% issue with the underlying host computer. You can use the StopInstances
%% operation
%% together with the Force parameter to force stop your instance. For more
%% information, see
%% Troubleshoot
%% Amazon EC2 instance stop issues:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html
%% in the
%% Amazon EC2 User Guide.
%%
%% Stopping and hibernating an instance differs from rebooting or terminating
%% it. For
%% example, a stopped or hibernated instance retains its root volume and any
%% data volumes,
%% unlike terminated instances where these volumes are automatically deleted.
%% For more
%% information about the differences between stopping, hibernating,
%% rebooting, and
%% terminating instances, see Amazon EC2
%% instance state changes:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html
%% in the Amazon EC2 User Guide.
%%
%% We don't charge for instance usage or data transfer fees when an
%% instance is stopped.
%% However, the root volume and any data volumes remain and continue to
%% persist your data,
%% and you're charged for volume usage. Every time you start your
%% instance, Amazon EC2 charges a one-minute minimum for instance usage,
%% followed by per-second
%% billing.
%%
%% You can't stop or hibernate instance store-backed instances.
-spec stop_instances(aws_client:aws_client(), stop_instances_request()) ->
    {ok, stop_instances_result(), tuple()} |
    {error, any()}.
stop_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    stop_instances(Client, Input, []).

-spec stop_instances(aws_client:aws_client(), stop_instances_request(), proplists:proplist()) ->
    {ok, stop_instances_result(), tuple()} |
    {error, any()}.
stop_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"StopInstances">>, Input, Options).

%% @doc Terminates active Client VPN endpoint connections.
%%
%% This action can be used to terminate a specific client connection, or up
%% to five connections established by a specific user.
-spec terminate_client_vpn_connections(aws_client:aws_client(), terminate_client_vpn_connections_request()) ->
    {ok, terminate_client_vpn_connections_result(), tuple()} |
    {error, any()}.
terminate_client_vpn_connections(Client, Input)
  when is_map(Client), is_map(Input) ->
    terminate_client_vpn_connections(Client, Input, []).

-spec terminate_client_vpn_connections(aws_client:aws_client(), terminate_client_vpn_connections_request(), proplists:proplist()) ->
    {ok, terminate_client_vpn_connections_result(), tuple()} |
    {error, any()}.
terminate_client_vpn_connections(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"TerminateClientVpnConnections">>, Input, Options).

%% @doc Shuts down the specified instances.
%%
%% This operation is idempotent:
%% https://docs.aws.amazon.com/ec2/latest/devguide/ec2-api-idempotency.html;
%% if you
%% terminate an instance more than once, each call succeeds.
%%
%% If you specify multiple instances and the request fails (for example,
%% because of a
%% single incorrect instance ID), none of the instances are terminated.
%%
%% If you terminate multiple instances across multiple Availability Zones,
%% and one or
%% more of the specified instances are enabled for termination protection,
%% the request
%% fails with the following results:
%%
%% The specified instances that are in the same Availability Zone as the
%% protected instance are not terminated.
%%
%% The specified instances that are in different Availability Zones, where no
%% other specified instances are protected, are successfully terminated.
%%
%% For example, say you have the following instances:
%%
%% Instance A: `us-east-1a'; Not protected
%%
%% Instance B: `us-east-1a'; Not protected
%%
%% Instance C: `us-east-1b'; Protected
%%
%% Instance D: `us-east-1b'; not protected
%%
%% If you attempt to terminate all of these instances in the same request,
%% the request
%% reports failure with the following results:
%%
%% Instance A and Instance B are successfully terminated because none of the
%% specified instances in `us-east-1a' are enabled for termination
%% protection.
%%
%% Instance C and Instance D fail to terminate because at least one of the
%% specified instances in `us-east-1b' (Instance C) is enabled for
%% termination protection.
%%
%% Terminated instances remain visible after termination (for approximately
%% one
%% hour).
%%
%% By default, Amazon EC2 deletes all EBS volumes that were attached when the
%% instance
%% launched. Volumes attached after instance launch continue running.
%%
%% By default, the TerminateInstances operation includes a graceful operating
%% system (OS)
%% shutdown. To bypass the graceful shutdown, use the `skipOsShutdown'
%% parameter; however, this might risk data integrity.
%%
%% You can stop, start, and terminate EBS-backed instances. You can only
%% terminate
%% instance store-backed instances. What happens to an instance differs if
%% you stop or
%% terminate it. For example, when you stop an instance, the root device and
%% any other
%% devices attached to the instance persist. When you terminate an instance,
%% any attached
%% EBS volumes with the `DeleteOnTermination' block device mapping
%% parameter set
%% to `true' are automatically deleted. For more information about the
%% differences between stopping and terminating instances, see Amazon EC2
%% instance state changes:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html
%% in the Amazon EC2 User Guide.
%%
%% When you terminate an instance, we attempt to terminate it forcibly after
%% a short
%% while. If your instance appears stuck in the shutting-down state after a
%% period of time,
%% there might be an issue with the underlying host computer. For more
%% information about
%% terminating and troubleshooting terminating your instances, see Terminate
%% Amazon EC2 instances: https://docs.aws.amazon.com/ and
%% Troubleshooting terminating your instance:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html
%% in the
%% Amazon EC2 User Guide.
-spec terminate_instances(aws_client:aws_client(), terminate_instances_request()) ->
    {ok, terminate_instances_result(), tuple()} |
    {error, any()}.
terminate_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    terminate_instances(Client, Input, []).

-spec terminate_instances(aws_client:aws_client(), terminate_instances_request(), proplists:proplist()) ->
    {ok, terminate_instances_result(), tuple()} |
    {error, any()}.
terminate_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"TerminateInstances">>, Input, Options).

%% @doc Unassigns the specified IPv6 addresses or Prefix Delegation prefixes
%% from a network
%% interface.
-spec unassign_ipv6_addresses(aws_client:aws_client(), unassign_ipv6_addresses_request()) ->
    {ok, unassign_ipv6_addresses_result(), tuple()} |
    {error, any()}.
unassign_ipv6_addresses(Client, Input)
  when is_map(Client), is_map(Input) ->
    unassign_ipv6_addresses(Client, Input, []).

-spec unassign_ipv6_addresses(aws_client:aws_client(), unassign_ipv6_addresses_request(), proplists:proplist()) ->
    {ok, unassign_ipv6_addresses_result(), tuple()} |
    {error, any()}.
unassign_ipv6_addresses(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"UnassignIpv6Addresses">>, Input, Options).

%% @doc Unassigns the specified secondary private IP addresses or IPv4 Prefix
%% Delegation
%% prefixes from a network interface.
-spec unassign_private_ip_addresses(aws_client:aws_client(), unassign_private_ip_addresses_request()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
unassign_private_ip_addresses(Client, Input)
  when is_map(Client), is_map(Input) ->
    unassign_private_ip_addresses(Client, Input, []).

-spec unassign_private_ip_addresses(aws_client:aws_client(), unassign_private_ip_addresses_request(), proplists:proplist()) ->
    {ok, undefined, tuple()} |
    {error, any()}.
unassign_private_ip_addresses(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"UnassignPrivateIpAddresses">>, Input, Options).

%% @doc Unassigns secondary private IPv4 addresses from a private NAT
%% gateway.
%%
%% You cannot unassign your primary private IP. For more information,
%% see Edit secondary IP address associations:
%% https://docs.aws.amazon.com/vpc/latest/userguide/nat-gateway-working-with.html#nat-gateway-edit-secondary
%% in the Amazon VPC User Guide.
%%
%% While unassigning is in progress, you cannot assign/unassign additional IP
%% addresses while the connections are being drained. You are, however,
%% allowed to delete the NAT gateway.
%%
%% A private IP address will only be released at the end of
%% MaxDrainDurationSeconds. The
%% private IP addresses stay associated and support the existing connections,
%% but do not
%% support any new connections (new connections are distributed across the
%% remaining
%% assigned private IP address). After the existing connections drain out,
%% the private IP
%% addresses are released.
-spec unassign_private_nat_gateway_address(aws_client:aws_client(), unassign_private_nat_gateway_address_request()) ->
    {ok, unassign_private_nat_gateway_address_result(), tuple()} |
    {error, any()}.
unassign_private_nat_gateway_address(Client, Input)
  when is_map(Client), is_map(Input) ->
    unassign_private_nat_gateway_address(Client, Input, []).

-spec unassign_private_nat_gateway_address(aws_client:aws_client(), unassign_private_nat_gateway_address_request(), proplists:proplist()) ->
    {ok, unassign_private_nat_gateway_address_result(), tuple()} |
    {error, any()}.
unassign_private_nat_gateway_address(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"UnassignPrivateNatGatewayAddress">>, Input, Options).

%% @doc Unlocks a snapshot that is locked in governance mode or that is
%% locked in compliance mode
%% but still in the cooling-off period.
%%
%% You can't unlock a snapshot that is locked in compliance
%% mode after the cooling-off period has expired.
-spec unlock_snapshot(aws_client:aws_client(), unlock_snapshot_request()) ->
    {ok, unlock_snapshot_result(), tuple()} |
    {error, any()}.
unlock_snapshot(Client, Input)
  when is_map(Client), is_map(Input) ->
    unlock_snapshot(Client, Input, []).

-spec unlock_snapshot(aws_client:aws_client(), unlock_snapshot_request(), proplists:proplist()) ->
    {ok, unlock_snapshot_result(), tuple()} |
    {error, any()}.
unlock_snapshot(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"UnlockSnapshot">>, Input, Options).

%% @doc Disables detailed monitoring for a running instance.
%%
%% For more information, see Monitoring
%% your instances and volumes:
%% https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html
%% in the
%% Amazon EC2 User Guide.
-spec unmonitor_instances(aws_client:aws_client(), unmonitor_instances_request()) ->
    {ok, unmonitor_instances_result(), tuple()} |
    {error, any()}.
unmonitor_instances(Client, Input)
  when is_map(Client), is_map(Input) ->
    unmonitor_instances(Client, Input, []).

-spec unmonitor_instances(aws_client:aws_client(), unmonitor_instances_request(), proplists:proplist()) ->
    {ok, unmonitor_instances_result(), tuple()} |
    {error, any()}.
unmonitor_instances(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"UnmonitorInstances">>, Input, Options).

%% @doc Updates the description of an egress (outbound) security group rule.
%%
%% You
%% can replace an existing description, or add a description to a rule that
%% did not have one
%% previously. You can remove a description for a security group rule by
%% omitting the
%% description parameter in the request.
-spec update_security_group_rule_descriptions_egress(aws_client:aws_client(), update_security_group_rule_descriptions_egress_request()) ->
    {ok, update_security_group_rule_descriptions_egress_result(), tuple()} |
    {error, any()}.
update_security_group_rule_descriptions_egress(Client, Input)
  when is_map(Client), is_map(Input) ->
    update_security_group_rule_descriptions_egress(Client, Input, []).

-spec update_security_group_rule_descriptions_egress(aws_client:aws_client(), update_security_group_rule_descriptions_egress_request(), proplists:proplist()) ->
    {ok, update_security_group_rule_descriptions_egress_result(), tuple()} |
    {error, any()}.
update_security_group_rule_descriptions_egress(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"UpdateSecurityGroupRuleDescriptionsEgress">>, Input, Options).

%% @doc Updates the description of an ingress (inbound) security group rule.
%%
%% You can replace an
%% existing description, or add a description to a rule that did not have one
%% previously.
%% You can remove a description for a security group rule by omitting the
%% description
%% parameter in the request.
-spec update_security_group_rule_descriptions_ingress(aws_client:aws_client(), update_security_group_rule_descriptions_ingress_request()) ->
    {ok, update_security_group_rule_descriptions_ingress_result(), tuple()} |
    {error, any()}.
update_security_group_rule_descriptions_ingress(Client, Input)
  when is_map(Client), is_map(Input) ->
    update_security_group_rule_descriptions_ingress(Client, Input, []).

-spec update_security_group_rule_descriptions_ingress(aws_client:aws_client(), update_security_group_rule_descriptions_ingress_request(), proplists:proplist()) ->
    {ok, update_security_group_rule_descriptions_ingress_result(), tuple()} |
    {error, any()}.
update_security_group_rule_descriptions_ingress(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"UpdateSecurityGroupRuleDescriptionsIngress">>, Input, Options).

%% @doc Stops advertising an address range that is provisioned as an address
%% pool.
%%
%% You can perform this operation at most once every 10 seconds, even if you
%% specify different
%% address ranges each time.
%%
%% It can take a few minutes before traffic to the specified addresses stops
%% routing to Amazon Web Services
%% because of BGP propagation delays.
-spec withdraw_byoip_cidr(aws_client:aws_client(), withdraw_byoip_cidr_request()) ->
    {ok, withdraw_byoip_cidr_result(), tuple()} |
    {error, any()}.
withdraw_byoip_cidr(Client, Input)
  when is_map(Client), is_map(Input) ->
    withdraw_byoip_cidr(Client, Input, []).

-spec withdraw_byoip_cidr(aws_client:aws_client(), withdraw_byoip_cidr_request(), proplists:proplist()) ->
    {ok, withdraw_byoip_cidr_result(), tuple()} |
    {error, any()}.
withdraw_byoip_cidr(Client, Input, Options)
  when is_map(Client), is_map(Input), is_list(Options) ->
    request(Client, <<"WithdrawByoipCidr">>, Input, Options).

%%====================================================================
%% Internal functions
%%====================================================================

-spec request(aws_client:aws_client(), binary(), map(), list()) ->
    {ok, Result, {integer(), list(), hackney:client()}} |
    {error, Error, {integer(), list(), hackney:client()}} |
    {error, term()} when
    Result :: map() | undefined,
    Error :: map().
request(Client, Action, Input, Options) ->
    RequestFun = fun() -> do_request(Client, Action, Input, Options) end,
    aws_request:request(RequestFun, Options).

do_request(Client, _Action, Input0, Options) ->
    Client1 = Client#{service => <<"ec2">>},
    Host = build_host(<<"ec2">>, Client1),
    URL = build_url(Host, Client1),
    Headers = [
        {<<"Host">>, Host},
        {<<"Content-Type">>, <<"application/x-www-form-urlencoded">>}
    ],

    Input = Input0,

    Payload = aws_util:encode_query(Input),
    SignedHeaders = aws_request:sign_request(Client1, <<"POST">>, URL, Headers, Payload),
    Response = hackney:request(post, URL, SignedHeaders, Payload, Options),
    handle_response(Response).

handle_response({ok, 200, ResponseHeaders, Client}) ->
    case hackney:body(Client) of
        {ok, <<>>} ->
            {ok, undefined, {200, ResponseHeaders, Client}};
        {ok, Body} ->
            Result = aws_util:decode_xml(Body),
            {ok, Result, {200, ResponseHeaders, Client}}
    end;
handle_response({ok, StatusCode, ResponseHeaders, Client}) ->
    {ok, Body} = hackney:body(Client),
    Error = aws_util:decode_xml(Body),
    {error, Error, {StatusCode, ResponseHeaders, Client}};
handle_response({error, Reason}) ->
    {error, Reason}.

build_host(_EndpointPrefix, #{region := <<"local">>, endpoint := Endpoint}) ->
    Endpoint;
build_host(_EndpointPrefix, #{region := <<"local">>}) ->
    <<"localhost">>;
build_host(EndpointPrefix, #{region := Region, endpoint := Endpoint}) ->
    aws_util:binary_join([EndpointPrefix, Region, Endpoint], <<".">>).

build_url(Host, Client) ->
    Proto = aws_client:proto(Client),
    Port = aws_client:port(Client),
    aws_util:binary_join([Proto, <<"://">>, Host, <<":">>, Port, <<"/">>], <<"">>).
